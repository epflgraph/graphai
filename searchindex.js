Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.summarization", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.summarization", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.summarization", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.summarization.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.summarization.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.summarization.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.summarization module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.summarization module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.summarization module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 37, 38, 40, 47, 51, 57, 70], "contain": [0, 3, 31, 37, 40, 42, 48, 62, 70], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 11, 22, 31, 36, 47, 62, 70, 80], "project": 0, "ai": 0, "base": [0, 7, 22, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 50, 51, 53, 54, 57, 70, 75], "util": [0, 35], "api": [0, 40, 45], "core": 0, "pipelin": 0, "definit": [0, 43, 70], "modul": [0, 1, 2, 11, 18, 26, 36, 41, 46, 49, 52, 55, 60, 63, 76, 80], "celery_task": 1, "common": [1, 2, 26, 35], "router": 1, "schema": [1, 43, 62], "main": [1, 63, 65], "imag": [2, 3, 18, 26, 40], "ontologi": [2, 11, 18, 22, 26, 27, 36, 47], "summar": [2, 18, 26, 40], "text": [2, 3, 18, 21, 23, 26, 28, 30, 32, 35, 40, 44, 45, 49], "translat": [2, 3, 18, 26, 40, 48], "video": [2, 3, 11, 18, 26, 36], "voic": [2, 18, 26], "format_api_result": 3, "id": [3, 31, 37, 38, 42], "name": [3, 37, 40, 42, 54, 62], "statu": [3, 42], "result": [3, 7, 22, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 44, 45, 47, 70], "format": [3, 40, 44, 56, 62], "come": [3, 62], "from": [3, 22, 37, 38, 39, 40, 47, 48, 53, 62, 70], "celeri": [3, 42, 47], "output": [3, 27, 29, 40], "param": [3, 37, 40, 42, 64, 66, 67, 68, 69, 71, 72], "task": [3, 42, 47, 51, 57], "return": [3, 7, 22, 37, 38, 39, 40, 42, 44, 45, 47, 48, 53, 54, 56, 57, 70], "appropri": 3, "dictionari": [3, 37, 40, 44, 54], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 19, 21, 23, 24, 25, 27, 28, 33, 34, 37, 40, 48], "forc": [3, 19, 21, 23, 24, 25, 28, 30, 32, 33, 34, 37], "fals": [3, 14, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 37, 40, 43, 48, 54, 57, 70], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": [3, 37], "none": [3, 14, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 37, 40, 42, 43, 44, 50, 51, 54, 70, 71], "retriev": [3, 22, 37, 40, 44, 57], "number": [3, 7, 37, 38, 40, 44, 45, 51, 54, 70], "cach": [3, 36, 40], "row": [3, 37, 70], "relev": [3, 22, 31], "fingerprint": [3, 40], "lookup": 3, "dict": [3, 30, 33, 37, 38, 40, 44, 47, 54], "comput": [3, 7, 38, 39, 40, 70], "dbcachingmanagerbas": [3, 37], "object": [3, 27, 29, 31, 37, 38, 39, 40, 42, 43, 44, 45, 47, 50, 51, 54, 56, 57], "equal": [3, 37], "condit": [3, 37, 43], "count": [3, 37, 40], "onli": [3, 22, 37, 40, 54, 62, 70], "us": [3, 7, 37, 40, 44, 48, 53, 57, 62, 70], "unexpect": [3, 40, 70], "indent": [3, 40, 50, 54], "where": [3, 37, 40, 70], "need": [3, 37, 57], "done": [3, 22], "among": [3, 22], "same": [3, 40, 70], "sourc": [3, 32, 38, 40], "target": [3, 32, 38, 40], "lang": [3, 40], "origin": [3, 37, 38, 39, 40], "plu": [3, 38, 39, 40], "fingerprint_lookup_parallel": 3, "input_dict": 3, "i": [3, 7, 22, 37, 38, 40, 47, 48, 51, 53, 57, 70], "n_total": 3, "min_similar": [3, 19, 21, 23, 24, 25, 40], "data_typ": 3, "audio": [3, 40], "perform": [3, 40, 44, 45, 70], "parallel": 3, "previou": [3, 51, 57], "step": [3, 40], "index": [3, 40, 44, 62, 70], "thi": [3, 7, 22, 40, 51, 62, 70], "total": [3, 14, 51, 57], "minimum": [3, 40], "similar": [3, 37, 40, 70], "threshold": [3, 7, 25, 34, 40, 47, 48], "two": [3, 7, 37, 38, 40], "consid": [3, 40], "match": [3, 37, 40, 44], "type": [3, 7, 37, 38, 39, 40, 44, 45, 47, 48, 53, 54], "data": [3, 19, 21, 22, 23, 24, 25, 54, 62], "can": [3, 22, 37, 40, 57, 62], "mode": 3, "detail": [3, 37, 40], "closest": [3, 37, 40], "which": [3, 31, 37, 40, 47, 48, 70], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 7, 22], "databas": [3, 43], "insert": [3, 37], "list": [3, 22, 28, 29, 31, 37, 38, 40, 47, 48, 70], "aggregate_result": 7, "coef": 7, "0": [7, 22, 31, 34, 37, 38, 39, 40, 47, 54, 56, 57, 64, 70], "5": [7, 22, 31, 39, 40, 57], "panda": [7, 38, 39, 44, 45, 47, 56], "datafram": [7, 38, 39, 44, 45, 47, 70], "intermedi": [7, 38, 39], "wikifi": [7, 22, 31, 38, 39, 47], "uniqu": [7, 44, 45, 70], "keyword": [7, 21, 22, 31, 38, 39, 44, 45, 46], "pageid": [7, 31, 38, 39, 44, 45, 47, 70], "final": [7, 37, 57, 70], "Then": [7, 48], "mixedscor": [7, 31, 47], "everi": [7, 40, 54, 70], "page": [7, 22, 31, 38], "convex": 7, "combin": [7, 70], "other": [7, 22, 57], "score": [7, 22, 31, 38, 39, 40, 47, 48, 70], "paramet": [7, 38, 39, 40, 44, 45, 47, 48, 51, 53, 54, 57, 63, 70], "pd": [7, 38, 39, 44, 45, 70], "A": [7, 37, 38, 39, 40, 44, 45, 47, 48], "column": [7, 37, 38, 39, 43, 44, 45, 47, 70], "pagetitl": [7, 31, 38, 39, 44, 45, 47], "searchscor": [7, 31, 38, 39, 44, 45, 47], "levenshteinscor": [7, 31, 38, 39, 47], "graphscor": [7, 31, 38, 47], "ontologylocalscor": [7, 31, 39, 47], "ontologyglobalscor": [7, 31, 39, 47], "keywordsscor": [7, 31, 47], "float": [7, 22, 31, 33, 34, 38, 47, 48, 57, 70], "1": [7, 22, 31, 37, 38, 40, 56, 57, 70], "control": [7, 70], "how": [7, 40, 47, 48], "ar": [7, 22, 40, 47, 48, 56, 70], "valu": [7, 37, 40, 43, 70], "take": [7, 22, 70], "sum": 7, "over": [7, 70], "normalis": [7, 70], "max": [7, 38], "default": [7, 38, 39, 40, 42, 47, 48, 57], "ani": [7, 48, 62, 70], "between": [7, 37, 40, 56, 57, 70], "linearli": [7, 56], "interpol": 7, "those": [7, 40], "approach": 7, "filter_result": 7, "epsilon": [7, 64], "min_vot": 7, "filter": [7, 22, 44, 47, 48], "depend": 7, "some": [7, 22, 51, 57, 70], "criteria": 7, "specifi": [7, 70], "all": [7, 37, 38, 40, 44, 48, 57, 62, 70], "decid": 7, "whether": [7, 37, 38, 39, 40, 47, 48, 57, 70], "good": 7, "enough": 7, "least": 7, "amount": 7, "int": [7, 22, 29, 31, 33, 38, 44, 45, 47, 51, 54], "exclud": [7, 37], "kept": [7, 70], "iff": 7, "celery_tool": 11, "log": [11, 50, 54], "get_n_celery_work": 12, "msg": [14, 50, 54, 57], "second": [14, 37, 40, 57], "length": [14, 40], "64": 14, "async": [17, 19, 20, 21, 22, 23, 24, 25], "init": 17, "redirect_doc": 17, "get_slide_fingerprint_chain_list": 19, "n_job": [19, 21, 23, 24, 25], "8": [19, 21, 23, 24, 25, 40], "ignore_fp_result": [19, 21, 23, 24, 25], "results_to_return": [19, 21, 23, 24, 25], "calculate_fingerprint": [19, 21, 23, 24], "imagefingerprintrequest": [19, 28], "calculate_fingerprint_statu": [19, 21, 23, 24], "task_id": [19, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 42], "extract_text": 19, "extracttextrequest": [19, 28], "extract_text_statu": 19, "detect_ocr_language_statu": 19, "ontology_tree_response_handl": 20, "id_and_result": 20, "tree": [20, 27, 29, 40], "parent": 20, "category_id": [20, 39], "children": 20, "get_summary_text_fingerprint_chain_list": 21, "text_typ": [21, 30, 40], "summary_typ": [21, 30, 40], "len_class": [21, 30, 40], "tone": [21, 30, 40], "get_summary_task_chain": 21, "true": [21, 22, 33, 37, 38, 39, 40, 48, 50, 54, 57, 70], "skip_token": 21, "summaryfingerprintrequest": [21, 30], "summarizationrequest": [21, 30], "create_titl": 21, "translate_statu": [21, 23], "keywordsrequest": [22, 31], "use_nltk": [22, 48], "bool": [22, 28, 30, 32, 33, 34, 38, 39, 44, 47, 48, 54, 70], "process": 22, "raw": [22, 31, 48, 53], "e": [22, 40, 41], "g": [22, 40], "an": [22, 37, 40, 54, 62], "abstract": [22, 37], "public": [22, 30], "cours": [22, 30, 40], "descript": 22, "lectur": [22, 30, 40], "slide": [22, 40], "wikifyrequest": [22, 31], "method": [22, 28, 40, 70], "str": [22, 27, 28, 29, 30, 31, 32, 33, 34, 38, 44, 45, 48, 53, 54, 57, 70], "restrict_to_ontologi": 22, "graph_score_smooth": 22, "ontology_score_smooth": 22, "keywords_score_smooth": 22, "normalisation_coef": 22, "filtering_threshold": 22, "filtering_min_vot": 22, "refresh_scor": 22, "concept": [22, 30, 47, 62, 65, 70], "wikipedia": [22, 31, 45], "each": [22, 31, 38, 40, 51, 57, 70], "set": [22, 31, 40, 42, 44, 45, 47, 70], "quantifi": 22, "follow": [22, 40, 44, 51, 53, 57, 70], "extract": [22, 31, 40, 48], "automat": [22, 37, 40], "omit": 22, "keyword_list": 22, "provid": [22, 38, 39, 40, 42], "input": [22, 40], "instead": [22, 37], "raw_text": [22, 31], "wikisearch": [22, 44, 45], "For": [22, 70], "10": [22, 44, 45, 48, 70], "through": [22, 40], "request": [22, 37], "elasticsearch": [22, 44, 59], "pair": [22, 38, 48, 57, 70], "sever": [22, 31, 57], "deriv": 22, "account": 22, "accord": [22, 70], "rule": 22, "keep": [22, 51], "most": [22, 37, 40], "wikify_ontology_svg": 22, "wikifyresponseelem": [22, 31], "level": [22, 47], "2": [22, 40, 57, 70, 80], "svg": [22, 47], "file": [22, 37, 40, 47, 54], "repres": [22, 27, 29, 31, 48, 51, 57], "subgraph": 22, "induc": [22, 47], "wikify_graph_svg": 22, "concept_score_threshold": [22, 47], "3": [22, 47, 53, 57, 80], "edge_threshold": [22, 47], "min_component_s": [22, 47], "priority_test_text": 22, "get_translation_text_fingerprint_chain_list": 23, "src": [23, 40], "tgt": [23, 40], "textfingerprintrequest": [23, 32], "translationrequest": [23, 32], "text_detect_languag": 23, "textdetectlanguagerequest": [23, 32], "text_detect_language_statu": 23, "get_video_fingerprint_chain_list": 24, "retrieve_fil": 24, "retrieveurlrequest": [24, 33], "get_retrieve_file_statu": 24, "videofingerprintrequest": [24, 33], "get_fil": 24, "filerequest": [24, 27], "extract_audio": 24, "extractaudiorequest": [24, 33], "extract_audio_statu": 24, "detect_slid": 24, "detectslidesrequest": [24, 33], "detect_slides_statu": 24, "get_audio_fingerprint_chain_list": 25, "remove_sil": [25, 34], "calculate_audio_fingerprint": 25, "audiofingerprintrequest": [25, 34], "calculate_audio_fingerprint_statu": 25, "transcrib": [25, 40], "audiotranscriptionrequest": [25, 34], "transcribe_statu": 25, "detect_languag": 25, "audiodetectlanguagerequest": [25, 34], "priority_test": 25, "detect_language_statu": 25, "class": [27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 50, 51, 53, 54, 57], "taskidrespons": 27, "basemodel": [27, 28, 29, 30, 31, 32, 33, 34], "endpoint": [27, 29], "taskstatusrespons": [27, 28, 29, 30, 32, 33, 34], "task_nam": [27, 28, 29, 30, 32, 33, 34], "task_statu": [27, 28, 29, 30, 32, 33, 34], "task_result": [27, 28, 29, 30, 32, 33, 34, 42], "jsonwrappervalu": 27, "abc": [27, 37], "imagefingerprinttaskrespons": 28, "fresh": [28, 30, 32, 33, 34], "closest_token": [28, 30, 32, 33, 34], "closest_token_origin": [28, 34], "success": [28, 30, 32, 33, 34, 40], "imagefingerprintrespons": 28, "liter": [28, 30, 32, 33], "googl": [28, 40], "tesseract": [28, 40], "individualocrresult": 28, "extracttexttaskrespons": 28, "languag": [28, 32, 33, 34, 40], "extracttextrespons": 28, "detectocrlanguagetaskrespons": 28, "detectocrlanguagerespons": 28, "treeresponseelem": 29, "childcategoryid": 29, "parentcategoryid": 29, "treerespons": 29, "titl": [30, 40, 44], "summari": [30, 40, 57], "person": 30, "unit": 30, "mooc": 30, "vshort": [30, 40], "short": [30, 40], "normal": [30, 40, 48, 53], "info": [30, 40, 42], "promo": [30, 40], "summaryfingerprinttaskrespons": 30, "summaryfingerprintrespons": 30, "use_keyword": 30, "summarizationtaskrespons": 30, "text_too_larg": [30, 32], "summarizationrespons": 30, "inform": [31, 40, 44], "anchor": 31, "defin": [31, 70, 74], "search": [31, 40, 44, 45], "space": [31, 48, 54], "It": [31, 48, 53, 70], "consist": [31, 40], "measur": 31, "degre": 31, "respect": [31, 56, 70], "config": 31, "schema_extra": 31, "exampl": [31, 38, 48, 53, 70], "1196": [31, 38], "angl": 31, "8055555555555556": 31, "44735199351890065": 31, "9058463104630012": 31, "152547": 31, "bisect": 31, "3333333333333333": 31, "16661245633224378": 31, "22717425120724127": 31, "6666666666666667": 31, "609271523178808": 31, "44715741719086977": 31, "23972889": 31, "distance_from_a_point_to_a_lin": 31, "16666666666666669": 31, "2134432477817427": 31, "003590346636521923": 31, "21885521885521886": 31, "19791666666666666": 31, "19828593689131283": 31, "17781458572659029": 31, "946975": [31, 38], "line_": 31, "geometri": 31, "33567080901262164": 31, "8232323232323234": 31, "7916666666666666": 31, "7855473315153876": 31, "7886663359580247": 31, "22634860": 31, "line_seg": 31, "5555555555555556": 31, "3582111602475977": 31, "42461810549112244": 31, "43097643097643096": 31, "75": [31, 51], "6026490066225165": 31, "5277457623305826": 31, "2175469": 31, "non": [31, 37, 44], "line": [31, 40, 54, 70], "sight_propag": 31, "19444444444444448": 31, "39019342923035233": 31, "01572170017309725": 31, "21212121212121213": 31, "11647727272727273": 31, "5087650954421504": 31, "2950855110143057": 31, "133496": 31, "parallelogram": 31, "3055555555555556": 31, "13627674782665528": 31, "14484503981375635": 31, "4288185842201275": 31, "76944": 31, "perpendicular": 31, "19444444444444445": 31, "039652736888335365": 31, "15017752515904018": 31, "25": [31, 51], "2584729255940787": 31, "19421461143444865": 31, "25278": 31, "quadrilater": 31, "02777777777777779": 31, "15367913840285474": 31, "12360559235107477": 31, "36363636363636365": 31, "3307362680171406": 31, "21973432050168798": 31, "76956": 31, "right_angl": 31, "4166666666666667": 31, "4451948682556247": 31, "12678424818870415": 31, "42424242424242425": 31, "4107908063887807": 31, "3996645939435453": 31, "94102": 31, "solid_angl": 31, "3888888888888889": 31, "6912823774628103": 31, "08695255651117278": 31, "196969696969697": 31, "15909090909090912": 31, "7415270744059212": 31, "4580780578246384": 31, "31482": 31, "tangent": 31, "4722222222222222": 31, "29631455223594527": 31, "3573397570845174": 31, "6414141414141414": 31, "59375": 31, "48284225283305426": 31, "30654": 31, "triangl": 31, "5717479784842091": 31, "2535403349997643": 31, "47723102055958355": 31, "en": [32, 33, 40], "fr": [32, 33, 40], "de": 32, "textfingerprinttaskrespons": 32, "textfingerprintrespons": 32, "translationtaskrespons": 32, "translationrespons": 32, "textdetectlanguagetaskrespons": 32, "textdetectlanguagerespons": 32, "url": [33, 40, 53], "playlist": [33, 40], "retrieveurlresponseinn": 33, "retrieveurlrespons": 33, "videofingerprinttaskrespons": 33, "videofingerprintrespons": 33, "force_non_self": 33, "extractaudiotaskrespons": 33, "durat": [33, 34, 40], "extractaudiorespons": 33, "slidetokenandtimestamp": 33, "timestamp": [33, 40, 56], "detectslidestaskrespons": 33, "slide_token": 33, "detectslidesrespons": 33, "audiofingerprinttaskrespons": 34, "fp_nosil": 34, "audiofingerprintrespons": 34, "audiodetectlanguagetaskrespons": 34, "audiodetectlanguagerespons": 34, "force_lang": [34, 40], "audiotranscriptiontaskrespons": 34, "transcript_result": 34, "subtitle_result": 34, "json": [34, 40, 54], "audiotranscriptionrespons": 34, "interfac": 35, "make_sure_path_exist": 37, "path": [37, 38, 40, 75], "file_at_the_end": 37, "full_perm": 37, "recurs": [37, 40], "creat": [37, 40, 42, 44, 54, 57], "folder": [37, 40], "exist": [37, 40, 54], "thu": 37, "doesn": [37, 40], "t": [37, 38, 40, 48, 54], "filenam": [37, 40, 54], "end": [37, 40, 62, 70], "file_exist": 37, "file_path": 37, "check": 37, "given": [37, 40, 42, 44, 45, 47, 48, 53, 54, 56, 70], "otherwis": [37, 40, 48, 70], "delete_fil": 37, "delet": [37, 44, 53], "full": [37, 40], "create_symlink_between_path": 37, "old_path": 37, "new_path": 37, "symlink": 37, "old": 37, "real": 37, "new": [37, 40, 57], "surround_with_charact": 37, "": [37, 38, 40, 53], "c": [37, 51, 53, 70], "surround": 37, "string": [37, 40, 48], "charact": 37, "escape_single_quot": 37, "escap": 37, "singl": [37, 40], "quot": [37, 40], "sql": 37, "queri": [37, 43, 44, 45], "add_where_or_and": 37, "prepar": 37, "ad": 37, "alreadi": [37, 40], "have": [37, 70], "one": [37, 40, 48, 51, 57, 70], "AND": 37, "doe": [37, 40, 54], "add_equality_condit": 37, "gener": [37, 40, 48], "would": 37, "form": 37, "kei": [37, 38, 40, 70], "add_non_null_condit": 37, "col": 37, "null": 37, "cannot": 37, "turn": 37, "NOT": 37, "cache_t": 37, "most_similar_t": 37, "init_db": 37, "delete_cache_row": 37, "id_token": 37, "tabl": [37, 74], "insert_or_update_detail": 37, "values_to_insert": 37, "updat": [37, 51], "identifi": [37, 40], "map": [37, 44, 56], "update_details_if_exist": 37, "get_detail": 37, "using_most_similar": 37, "get": [37, 53], "resolv": 37, "chain": 37, "own": 37, "If": [37, 40, 48, 54, 70], "itself": [37, 40], "get_origin": 37, "applic": 37, "get_details_using_origin": 37, "origin_token": 37, "get_all_detail": 37, "start": [37, 40], "limit": [37, 44, 45], "exclude_token": 37, "allow_nul": 37, "earliest_d": 37, "latest_d": 37, "possibli": 37, "constraint": [37, 40], "offset": 37, "claus": [37, 44], "allow": 37, "earliest": 37, "date": [37, 55, 62], "latest": 37, "colnam": 37, "get_cache_count": 37, "non_null_col": 37, "enforc": 37, "satisfi": [37, 40], "insert_or_update_closest_match": 37, "get_closest_match": 37, "get_all_closest_match": 37, "videodbcachingmanag": 37, "audiodbcachingmanag": 37, "slidedbcachingmanag": 37, "textdbcachingmanag": 37, "summarydbcachingmanag": 37, "videoconfig": 37, "get_root_dir": 37, "get_image_dir": 37, "get_audio_dir": 37, "get_video_dir": 37, "get_transcript_dir": 37, "concat_file_path": 37, "subfold": 37, "concaten": 37, "root": [37, 40], "dir": 37, "should": [37, 44, 54, 62], "generate_filepath": 37, "force_dir": 37, "its": [37, 40, 70], "particular": 37, "create_symlink": 37, "new_filenam": 37, "conceptsgraph": [38, 47], "fetch_from_db": [38, 39], "old_compute_scor": 38, "source_page_id": 38, "target_page_id": 38, "possibl": [38, 48], "displaystyl": 38, "frac": 38, "ln": 38, "rebound": 38, "out": [38, 47, 48], "min": 38, "element": 38, "ha": [38, 70], "cg": 38, "compute_scor": 38, "6220": 38, "18973446": 38, "9417": 38, "5193576613841849": 38, "4740698357575134": 38, "3591100561928845": 38, "5343247664351338": 38, "530184349205493": 38, "40043881227279876": 38, "add_graph_scor": 38, "smooth": [38, 39], "includ": [38, 39, 57], "appli": [38, 39], "transform": [38, 39], "bump": 38, "avoid": [38, 54], "neg": 38, "exponenti": 38, "shape": [38, 70], "get_concept_categori": 39, "page_id": 39, "get_predefined_tre": 39, "get_category_par": 39, "get_category_children": 39, "add_concepts_categori": 39, "add_categories_categori": 39, "filter_concept": 39, "add_ontology_scor": 39, "push": 39, "awai": 39, "write_text_fil": 40, "filename_with_path": 40, "content": [40, 54], "write": 40, "textual": 40, "write_json_fil": 40, "d": [40, 51, 53], "read_text_fil": 40, "open": 40, "read": [40, 54], "read_json_fil": 40, "md5_text": 40, "md5": 40, "hash": 40, "generate_random_token": 40, "random": [40, 75], "current": [40, 56], "time": [40, 49, 51], "format_datetime_for_mysql": 40, "dt": 40, "get_current_datetim": 40, "datetim": [40, 56], "mysql": 40, "generate_src_tgt_dict": 40, "generate_translation_text_token": 40, "retrieve_file_from_url": 40, "output_filename_with_path": 40, "output_token": 40, "wget": 40, "store": [40, 47], "local": 40, "retrieve_file_from_kaltura": 40, "m3u8": 40, "kaltura": 40, "perform_prob": 40, "input_filename_with_path": 40, "probe": 40, "ffprobe": 40, "see": 40, "document": [40, 44], "generate_symbolic_token": 40, "symbol": 40, "md5_video_or_audio": 40, "stream": 40, "detect_audio_format_and_dur": 40, "input_token": 40, "detect": [40, 62], "track": [40, 51, 57], "ogg": 40, "extract_audio_from_video": 40, "extract_media_seg": 40, "segment": 40, "indic": [40, 44], "find_beginning_and_ending_sil": 40, "distance_from_end_tol": 40, "01": [40, 64], "noise_thresh": 40, "0001": 40, "silenc": 40, "begin": [40, 57], "toler": 40, "distanc": [40, 70], "nois": 40, "remov": 40, "remove_silence_doublesid": 40, "without": [40, 57, 70], "unsuccess": 40, "perceptual_hash_audio": 40, "max_length": 40, "7200": 40, "perceptu": 40, "maximum": [40, 44, 45, 48, 70], "represent": 40, "decod": 40, "both": [40, 70], "perceptual_hash_imag": 40, "hash_siz": 40, "16": 40, "size": [40, 47], "perceptual_hash_text": 40, "min_window_length": 40, "max_window_length": 40, "50": [40, 51], "hash_len": 40, "32": 40, "strong": [40, 53], "window": 40, "k": [40, 70], "gram": 40, "compare_decoded_fingerprint": 40, "decoded_1": 40, "decoded_2": 40, "compar": [40, 70], "fuzzi": 40, "ratio": [40, 70], "compare_encoded_fingerprint": 40, "f1": 40, "f2": 40, "decoder_func": 40, "function": [40, 57, 70], "decode_fingerprint": 40, "encod": [40, 53], "them": 40, "exact": 40, "so": [40, 62], "find_closest_fingerprint_from_list": 40, "target_fp": 40, "fp_list": 40, "token_list": 40, "date_list": 40, "candid": 40, "find": [40, 43], "highest": 40, "whose": [40, 70], "abov": [40, 56, 70], "correspond": 40, "lower": 40, "than": [40, 48, 70], "block": [40, 54, 57], "blank": [40, 70], "unind": [40, 70], "differ": [40, 57, 70], "v": [40, 43, 70], "three": 40, "criterion": 40, "find_closest_audio_fingerprint_from_list": 40, "find_closest_image_fingerprint_from_list": 40, "extract_fram": 40, "output_folder_with_path": 40, "output_fold": 40, "frame": 40, "generate_frame_sample_indic": 40, "input_folder_with_path": 40, "12": 40, "we": 40, "don": [40, 48], "our": 40, "calcul": 40, "read_txt_gz_fil": 40, "fp": 40, "txt": 40, "gz": 40, "write_txt_gz_fil": 40, "read_json_gz_fil": 40, "perform_tesseract_ocr": 40, "image_path": 40, "ocr": 40, "tesseract_ocr_or_get_cach": 40, "ocr_path": 40, "langaug": 40, "frame_ocr_dist": 40, "k1": 40, "k2": 40, "nlp_model": 40, "nlp": 40, "model": 40, "frame_hash_similar": 40, "compute_ocr_noise_level": 40, "frame_sample_indic": 40, "sequenc": 40, "sampl": 40, "below": [40, 47, 48, 56], "compute_ocr_threshold": 40, "distance_list": 40, "default_threshold": 40, "subsequ": 40, "empti": 40, "frame_ocr_transit": 40, "k_l": 40, "k_r": 40, "ocr_dist_threshold": 40, "hash_similarity_threshold": 40, "transit": 40, "binari": 40, "thei": [40, 48], "frame_format": 40, "leftmost": 40, "rightmost": 40, "distinct": 40, "found": 40, "compute_video_ocr_transit": 40, "hash_dist_threshold": 40, "pars": [40, 53], "transitori": 40, "detect_text_languag": 40, "count_tokens_for_openai": 40, "cl100k_base": 40, "openai": 40, "force_dict_to_text": 40, "generate_summary_text_token": 40, "generate_summary_type_dict": 40, "whispertranscriptionmodel": 40, "load_model_whisp": 40, "lazi": 40, "load": 40, "whisper": 40, "memori": 40, "model_typ": 40, "doc": [40, 44, 62], "detect_audio_segment_lang_whisp": 40, "30": 40, "code": [40, 54], "transcribe_audio_whisp": 40, "verbos": 40, "explicitli": 40, "feed": [40, 53], "transcript": 40, "like": 40, "subtitl": 40, "nlpmodel": 40, "get_nlp_model": 40, "googleocrmodel": 40, "establish_connect": 40, "lazili": 40, "connect": [40, 47], "successfulli": 40, "establish": 40, "perform_ocr": 40, "text_detect": 40, "document_text_detect": 40, "wait_for_ocr_result": 40, "image_object": 40, "dtd": 40, "retri": 40, "6": [40, 57], "make": 40, "call": [40, 48], "wait": 40, "td": 40, "case": [40, 54], "failur": 40, "translationmodel": 40, "load_model": 40, "huggingfac": 40, "pysbd": 40, "unpunctu": 40, "too": [40, 57], "long": 40, "flag": 40, "fingerprintparamet": 40, "load_valu": 40, "fail": 40, "get_min_sim_text": 40, "get_min_sim_imag": 40, "get_min_sim_audio": 40, "get_min_sim_video": 40, "chatgptsummar": 40, "ensur": 40, "boolean": [40, 57], "wa": 40, "generate_summari": 40, "text_or_dict": 40, "max_normal_len": 40, "100": [40, 51], "max_short_len": 40, "40": 40, "synthes": 40, "produc": 40, "either": 40, "sentenc": [40, 48], "market": 40, "approxim": 40, "word": [40, 48], "were": 40, "mani": [40, 47], "celery_config": 41, "db": [41, 71], "wp": 41, "route_task": 42, "arg": 42, "kwarg": 42, "option": 42, "kw": 42, "baseconfig": 42, "developmentconfig": 42, "get_set": 42, "create_celeri": 42, "app": 42, "get_celery_task": 42, "asyncresult": 42, "get_task_info": 42, "quote_valu": 43, "commun": [43, 44, 45], "epflgraph": [43, 44], "execute_queri": 43, "execut": [43, 51, 57], "custom": 43, "build_conditions_list": 43, "table_nam": 43, "field": [43, 44], "print_queri": 43, "find_or_split": 43, "filter_field": 43, "filter_id": 43, "drop_tabl": 43, "create_t": 43, "insert_datafram": 43, "df": [43, 64, 71], "drop_create_insert_t": 43, "check_if_table_exist": 43, "es_bool": 44, "must": 44, "must_not": 44, "build": 44, "argument": 44, "es_match": 44, "boost": 44, "oper": 44, "es_multi_match": 44, "minimum_should_match": 44, "multi_match": 44, "es_dis_max": 44, "dis_max": 44, "instanc": 44, "searchrank": [44, 45], "search_mediawiki": 44, "mediawiki": [44, 62], "structur": 44, "search_mediawiki_no_rescor": 44, "skip": [44, 54], "rescor": 44, "part": 44, "search_mediawiki_no_plain": 44, "restrict": 44, "plain": 44, "search_mediawiki_restrict_4": 44, "head": 44, "opening_text": 44, "search_mediawiki_restrict_2": 44, "about": [44, 48], "respons": 44, "index_doc": [44, 62], "create_index": [44, 60], "delete_index": 44, "refresh": 44, "draw": 46, "draw_ontologi": 47, "neighbourhood": 47, "tmp": 47, "serialis": 47, "orient": 47, "record": 47, "go": 47, "up": 47, "succeed": 47, "draw_graph": 47, "edg": [47, 70], "compon": 47, "word_token": 48, "separ": 48, "you": [48, 53], "rake_extract": 48, "split_word": 48, "return_scor": 48, "auto": 48, "filter_past_tenses_and_adverb": 48, "unconstrain": 48, "python": 48, "rake": 48, "nltk": 48, "more": [48, 51, 57], "split": 48, "retur": 48, "tupl": [48, 70], "minim": 48, "ignor": 48, "past": 48, "tens": 48, "participl": 48, "adverb": 48, "join": [48, 53], "crowd": 48, "young": 48, "boi": 48, "re": 48, "foolin": 48, "around": 48, "corner": 48, "drunk": 48, "dress": 48, "best": 48, "brown": 48, "baggi": 48, "platform": 48, "sole": 48, "give": 48, "damn": 48, "trumpet": 48, "playin": 48, "band": 48, "ain": 48, "what": 48, "rock": 48, "roll": 48, "get_keyword": 48, "p": [48, 53], "breadcrumb": 49, "progress_bar": 49, "debug": [50, 54], "color": [50, 54], "time_color": 50, "grai": 50, "report": [50, 57], "outdent": 50, "progressbar": 51, "n_iter": 51, "bar_length": 51, "progress": 51, "bar": 51, "usag": [51, 57], "letter": 51, "b": 51, "pb": 51, "len": 51, "run": [51, 57, 62], "consum": [51, 57], "00": 51, "print": [51, 53, 54, 56, 57], "iter": 51, "percentag": 51, "complet": [51, 57, 75], "overwrit": 51, "state": 51, "ban": 51, "reset": [51, 54, 57], "increment": 51, "counter": 51, "reus": [51, 57], "clean": 52, "io": 52, "htmlcleaner": 53, "htmlparser": 53, "html": 53, "tag": 53, "shiver": 53, "dark": 53, "br": 53, "rain": 53, "park": 53, "meantim": 53, "get_data": 53, "handle_starttag": 53, "attr": 53, "handle_endtag": 53, "handle_data": 53, "solv": 53, "problem": 53, "email": 53, "convert": 53, "lowercas": 53, "u2018rain": 53, "u2019": 53, "lt": 53, "evalu": 54, "pref": 54, "x1b": 54, "0m": 54, "black": 54, "30m": 54, "blue": 54, "34m": 54, "cyan": 54, "36m": 54, "green": 54, "32m": 54, "magenta": 54, "35m": 54, "red": 54, "31m": 54, "white": 54, "37m": 54, "yellow": 54, "33m": 54, "cprint": 54, "is_bold": 54, "bold": 54, "pprint": 54, "inlin": 54, "only_first": 54, "pretti": 54, "preced": 54, "first": [54, 57], "ellipsi": 54, "big": 54, "read_json": 54, "save_json": 54, "save": 54, "mkdir": 54, "dirnam": 54, "directori": 54, "stopwatch": 55, "now": 56, "2022": 56, "06": 56, "28": 56, "09": 56, "46": 56, "21": 56, "677968": 56, "rescal": 56, "min_dat": 56, "max_dat": 56, "seri": 56, "rang": [56, 70], "assum": [56, 70], "yyyi": 56, "mm": 56, "dd": 56, "add_year": 56, "n_year": 56, "sw": 57, "delta": 57, "4": [57, 80], "284306764602661": 57, "variabl": 57, "consecut": 57, "well": 57, "t1": 57, "t2": 57, "yet": 57, "t3": 57, "609307289123535": 57, "849977970123291": 57, "660188913345337": 57, "also": 57, "preprocess": 57, "pre_tim": 57, "task_tim": 57, "postprocess": 57, "post_tim": 57, "total_tim": 57, "f": 57, "proport": 57, "5176954220125477": 57, "tick": 57, "replac": [57, 70], "partial": 57, "furthermor": 57, "19": 57, "86": 57, "lap": 57, "74": 57, "11": 57, "66": 57, "45": 57, "checkpoint": 57, "finish": 57, "last": 57, "befor": [57, 70], "messag": 57, "invest": 59, "valid": 59, "visualis": 59, "populate_index": 60, "script": 62, "popul": 62, "aitor_concepts_": 62, "directli": 62, "campus_analyt": 62, "point": 62, "after": 62, "creation": [62, 74], "said": 62, "could": 62, "veri": 62, "aggregate_recent_past": 63, "check_unit": 63, "compute_fundraisers_unit": 63, "compute_investors_unit": 63, "compute_investors_units_2": 63, "compute_jaccard_index": 63, "concept_configur": 63, "create_investments_graph": 63, "detect_fundraisers_concept": 63, "toy_exampl": 63, "compute_year_coeffici": 64, "recent_past": 64, "rescale_scor": 64, "year": 64, "aggregate_year": 64, "groupby_column": [64, 71], "normalize_scor": 64, "score_column": 64, "show_trend": 65, "unit_id": 65, "unit_concept": 65, "show_matchmaking_list_view": 65, "investors_concepts_jaccard": 65, "investors_concept": 65, "unit_concept_id": 65, "show_matchmaking_chart_view": 65, "unit_investor": 65, "time_window": 65, "norm": 70, "x": 70, "configur": 70, "investorid": 70, "sqrt": 70, "sum_": 70, "o": 70, "divid": 70, "henc": 70, "mix": 70, "min_ratio": 70, "05": 70, "sourcepageid": 70, "targetpageid": 70, "weight": 70, "arithmet": 70, "mean": 70, "product": 70, "ball": 70, "loop": 70, "normalise_graph": 70, "add": 70, "miss": 70, "revers": 70, "averag": 70, "vertex": 70, "direct": 70, "y": 70, "associ": 70, "key_x": 70, "key_i": 70, "geometr": 70, "compute_affin": 70, "mix_x": 70, "mix_i": 70, "normalise_befor": 70, "cosin": 70, "affin": 70, "requir": 70, "recommend": 70, "low": 70, "euclidean": 70, "notic": 70, "faster": 70, "coeffici": 70, "inf": 70, "typic": 70, "higher": 70, "assign": 70, "unus": 70, "u": 70, "squar": 70, "equival": 70, "scalar": 70, "tanh": 70, "denot": 70, "get_fr": 71, "get_investors_fr": 71, "fr_id": 71, "get_frs_fundrais": 71, "get_fundraisers_concept": 71, "fundraiser_id": 71, "derive_yearly_data": 71, "date_column": 71, "amount_column": 71, "build_prefix": 74, "n": 75, "1_old": 76, "2_new": 76, "3_slide": 76, "startup": 80}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [35, 0, 0, "-", "core"], [58, 0, 0, "-", "definitions"], [59, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [11, 0, 0, "-", "common"], [17, 0, 0, "-", "main"], [18, 0, 0, "-", "routers"], [26, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "summarization"], [7, 0, 0, "-", "text"], [8, 0, 0, "-", "translation"], [9, 0, 0, "-", "video"], [10, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[7, 1, 1, "", "aggregate_results"], [7, 1, 1, "", "filter_results"]], "graphai.api.common": [[12, 0, 0, "-", "celery_tools"], [13, 0, 0, "-", "graph"], [14, 0, 0, "-", "log"], [15, 0, 0, "-", "ontology"], [16, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[12, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[14, 1, 1, "", "log"]], "graphai.api.main": [[17, 1, 1, "", "init"], [17, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[19, 0, 0, "-", "image"], [20, 0, 0, "-", "ontology"], [21, 0, 0, "-", "summarization"], [22, 0, 0, "-", "text"], [23, 0, 0, "-", "translation"], [24, 0, 0, "-", "video"], [25, 0, 0, "-", "voice"]], "graphai.api.routers.image": [[19, 1, 1, "", "calculate_fingerprint"], [19, 1, 1, "", "calculate_fingerprint_status"], [19, 1, 1, "", "detect_ocr_language_status"], [19, 1, 1, "", "extract_text"], [19, 1, 1, "", "extract_text_status"], [19, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[20, 1, 1, "", "children"], [20, 1, 1, "", "ontology_tree_response_handler"], [20, 1, 1, "", "parent"], [20, 1, 1, "", "tree"]], "graphai.api.routers.summarization": [[21, 1, 1, "", "calculate_fingerprint"], [21, 1, 1, "", "calculate_fingerprint_status"], [21, 1, 1, "", "create_title"], [21, 1, 1, "", "get_summary_task_chain"], [21, 1, 1, "", "get_summary_text_fingerprint_chain_list"], [21, 1, 1, "", "summarize"], [21, 1, 1, "", "translate_status"]], "graphai.api.routers.text": [[22, 1, 1, "", "keywords"], [22, 1, 1, "", "priority_test_text"], [22, 1, 1, "", "wikify"], [22, 1, 1, "", "wikify_graph_svg"], [22, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[23, 1, 1, "", "calculate_fingerprint"], [23, 1, 1, "", "calculate_fingerprint_status"], [23, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [23, 1, 1, "", "text_detect_language"], [23, 1, 1, "", "text_detect_language_status"], [23, 1, 1, "", "translate"], [23, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[24, 1, 1, "", "calculate_fingerprint"], [24, 1, 1, "", "calculate_fingerprint_status"], [24, 1, 1, "", "detect_slides"], [24, 1, 1, "", "detect_slides_status"], [24, 1, 1, "", "extract_audio"], [24, 1, 1, "", "extract_audio_status"], [24, 1, 1, "", "get_file"], [24, 1, 1, "", "get_retrieve_file_status"], [24, 1, 1, "", "get_video_fingerprint_chain_list"], [24, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[25, 1, 1, "", "calculate_audio_fingerprint"], [25, 1, 1, "", "calculate_audio_fingerprint_status"], [25, 1, 1, "", "detect_language"], [25, 1, 1, "", "detect_language_status"], [25, 1, 1, "", "get_audio_fingerprint_chain_list"], [25, 1, 1, "", "priority_test"], [25, 1, 1, "", "transcribe"], [25, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[27, 0, 0, "-", "common"], [28, 0, 0, "-", "image"], [29, 0, 0, "-", "ontology"], [30, 0, 0, "-", "summarization"], [31, 0, 0, "-", "text"], [32, 0, 0, "-", "translation"], [33, 0, 0, "-", "video"], [34, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[27, 2, 1, "", "FileRequest"], [27, 2, 1, "", "TaskIDResponse"], [27, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[27, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[27, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[27, 3, 1, "", "task_id"], [27, 3, 1, "", "task_name"], [27, 3, 1, "", "task_result"], [27, 3, 1, "", "task_status"]], "graphai.api.schemas.image": [[28, 2, 1, "", "DetectOCRLanguageResponse"], [28, 2, 1, "", "DetectOCRLanguageTaskResponse"], [28, 2, 1, "", "ExtractTextRequest"], [28, 2, 1, "", "ExtractTextResponse"], [28, 2, 1, "", "ExtractTextTaskResponse"], [28, 2, 1, "", "ImageFingerprintRequest"], [28, 2, 1, "", "ImageFingerprintResponse"], [28, 2, 1, "", "ImageFingerprintTaskResponse"], [28, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[28, 3, 1, "", "fresh"], [28, 3, 1, "", "language"], [28, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[28, 3, 1, "", "force"], [28, 3, 1, "", "method"], [28, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[28, 3, 1, "", "fresh"], [28, 3, 1, "", "language"], [28, 3, 1, "", "result"], [28, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[28, 3, 1, "", "force"], [28, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[28, 3, 1, "", "closest_token"], [28, 3, 1, "", "closest_token_origin"], [28, 3, 1, "", "fresh"], [28, 3, 1, "", "result"], [28, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[28, 3, 1, "", "method"], [28, 3, 1, "", "text"], [28, 3, 1, "", "token"]], "graphai.api.schemas.ontology": [[29, 2, 1, "", "TreeResponse"], [29, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[29, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[29, 3, 1, "", "ChildCategoryID"], [29, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.summarization": [[30, 2, 1, "", "SummarizationRequest"], [30, 2, 1, "", "SummarizationResponse"], [30, 2, 1, "", "SummarizationTaskResponse"], [30, 2, 1, "", "SummaryFingerprintRequest"], [30, 2, 1, "", "SummaryFingerprintResponse"], [30, 2, 1, "", "SummaryFingerprintTaskResponse"]], "graphai.api.schemas.summarization.SummarizationRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "len_class"], [30, 3, 1, "", "text"], [30, 3, 1, "", "text_type"], [30, 3, 1, "", "tone"], [30, 3, 1, "", "use_keywords"]], "graphai.api.schemas.summarization.SummarizationResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.SummarizationTaskResponse": [[30, 3, 1, "", "fresh"], [30, 3, 1, "", "successful"], [30, 3, 1, "", "summary"], [30, 3, 1, "", "summary_type"], [30, 3, 1, "", "text_too_large"]], "graphai.api.schemas.summarization.SummaryFingerprintRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "len_class"], [30, 3, 1, "", "summary_type"], [30, 3, 1, "", "text"], [30, 3, 1, "", "text_type"], [30, 3, 1, "", "tone"]], "graphai.api.schemas.summarization.SummaryFingerprintResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse": [[30, 3, 1, "", "closest_token"], [30, 3, 1, "", "fresh"], [30, 3, 1, "", "result"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.text": [[31, 2, 1, "", "KeywordsRequest"], [31, 2, 1, "", "WikifyRequest"], [31, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[31, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[31, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[31, 2, 1, "", "Config"], [31, 3, 1, "", "GraphScore"], [31, 3, 1, "", "KeywordsScore"], [31, 3, 1, "", "LevenshteinScore"], [31, 3, 1, "", "MixedScore"], [31, 3, 1, "", "OntologyGlobalScore"], [31, 3, 1, "", "OntologyLocalScore"], [31, 3, 1, "", "PageID"], [31, 3, 1, "", "PageTitle"], [31, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[31, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[32, 2, 1, "", "TextDetectLanguageRequest"], [32, 2, 1, "", "TextDetectLanguageResponse"], [32, 2, 1, "", "TextDetectLanguageTaskResponse"], [32, 2, 1, "", "TextFingerprintRequest"], [32, 2, 1, "", "TextFingerprintResponse"], [32, 2, 1, "", "TextFingerprintTaskResponse"], [32, 2, 1, "", "TranslationRequest"], [32, 2, 1, "", "TranslationResponse"], [32, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[32, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[32, 3, 1, "", "language"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "source"], [32, 3, 1, "", "target"], [32, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[32, 3, 1, "", "closest_token"], [32, 3, 1, "", "fresh"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "source"], [32, 3, 1, "", "target"], [32, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"], [32, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[33, 2, 1, "", "DetectSlidesRequest"], [33, 2, 1, "", "DetectSlidesResponse"], [33, 2, 1, "", "DetectSlidesTaskResponse"], [33, 2, 1, "", "ExtractAudioRequest"], [33, 2, 1, "", "ExtractAudioResponse"], [33, 2, 1, "", "ExtractAudioTaskResponse"], [33, 2, 1, "", "RetrieveURLRequest"], [33, 2, 1, "", "RetrieveURLResponse"], [33, 2, 1, "", "RetrieveURLResponseInner"], [33, 2, 1, "", "SlideTokenAndTimeStamp"], [33, 2, 1, "", "VideoFingerprintRequest"], [33, 2, 1, "", "VideoFingerprintResponse"], [33, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "force_non_self"], [33, 3, 1, "", "language"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "slide_tokens"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "force_non_self"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[33, 3, 1, "", "duration"], [33, 3, 1, "", "fresh"], [33, 3, 1, "", "successful"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[33, 3, 1, "", "playlist"], [33, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "successful"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[33, 3, 1, "", "timestamp"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[33, 3, 1, "", "closest_token"], [33, 3, 1, "", "fresh"], [33, 3, 1, "", "result"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[34, 2, 1, "", "AudioDetectLanguageRequest"], [34, 2, 1, "", "AudioDetectLanguageResponse"], [34, 2, 1, "", "AudioDetectLanguageTaskResponse"], [34, 2, 1, "", "AudioFingerprintRequest"], [34, 2, 1, "", "AudioFingerprintResponse"], [34, 2, 1, "", "AudioFingerprintTaskResponse"], [34, 2, 1, "", "AudioTranscriptionRequest"], [34, 2, 1, "", "AudioTranscriptionResponse"], [34, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[34, 3, 1, "", "fresh"], [34, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "remove_silence"], [34, 3, 1, "", "threshold"], [34, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[34, 3, 1, "", "closest_token"], [34, 3, 1, "", "closest_token_origin"], [34, 3, 1, "", "duration"], [34, 3, 1, "", "fp_nosilence"], [34, 3, 1, "", "fresh"], [34, 3, 1, "", "result"], [34, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "force_lang"], [34, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[34, 3, 1, "", "fresh"], [34, 3, 1, "", "language"], [34, 3, 1, "", "subtitle_result"], [34, 3, 1, "", "transcript_result"]], "graphai.core": [[36, 0, 0, "-", "common"], [41, 0, 0, "-", "interfaces"], [46, 0, 0, "-", "text"], [49, 0, 0, "-", "utils"]], "graphai.core.common": [[37, 0, 0, "-", "caching"], [38, 0, 0, "-", "graph"], [39, 0, 0, "-", "ontology"], [40, 0, 0, "-", "video"]], "graphai.core.common.caching": [[37, 2, 1, "", "AudioDBCachingManager"], [37, 2, 1, "", "DBCachingManagerBase"], [37, 2, 1, "", "SlideDBCachingManager"], [37, 2, 1, "", "SummaryDBCachingManager"], [37, 2, 1, "", "TextDBCachingManager"], [37, 2, 1, "", "VideoConfig"], [37, 2, 1, "", "VideoDBCachingManager"], [37, 1, 1, "", "add_equality_conditions"], [37, 1, 1, "", "add_non_null_conditions"], [37, 1, 1, "", "add_where_or_and"], [37, 1, 1, "", "create_symlink_between_paths"], [37, 1, 1, "", "delete_file"], [37, 1, 1, "", "escape_single_quotes"], [37, 1, 1, "", "file_exists"], [37, 1, 1, "", "make_sure_path_exists"], [37, 1, 1, "", "surround_with_character"]], "graphai.core.common.caching.AudioDBCachingManager": [[37, 4, 1, "", "init_db"]], "graphai.core.common.caching.DBCachingManagerBase": [[37, 4, 1, "", "delete_cache_rows"], [37, 4, 1, "", "get_all_closest_matches"], [37, 4, 1, "", "get_all_details"], [37, 4, 1, "", "get_cache_count"], [37, 4, 1, "", "get_closest_match"], [37, 4, 1, "", "get_details"], [37, 4, 1, "", "get_details_using_origin"], [37, 4, 1, "", "get_origin"], [37, 4, 1, "", "init_db"], [37, 4, 1, "", "insert_or_update_closest_match"], [37, 4, 1, "", "insert_or_update_details"], [37, 4, 1, "", "update_details_if_exists"]], "graphai.core.common.caching.SlideDBCachingManager": [[37, 4, 1, "", "init_db"]], "graphai.core.common.caching.SummaryDBCachingManager": [[37, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[37, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[37, 4, 1, "", "concat_file_path"], [37, 4, 1, "", "create_symlink"], [37, 4, 1, "", "generate_filepath"], [37, 4, 1, "", "get_audio_dir"], [37, 4, 1, "", "get_image_dir"], [37, 4, 1, "", "get_root_dir"], [37, 4, 1, "", "get_transcript_dir"], [37, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[37, 4, 1, "", "init_db"]], "graphai.core.common.graph": [[38, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[38, 4, 1, "", "add_graph_score"], [38, 4, 1, "", "fetch_from_db"], [38, 4, 1, "", "old_compute_scores"]], "graphai.core.common.ontology": [[39, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[39, 4, 1, "", "add_categories_category"], [39, 4, 1, "", "add_concepts_category"], [39, 4, 1, "", "add_ontology_scores"], [39, 4, 1, "", "fetch_from_db"], [39, 4, 1, "", "filter_concepts"], [39, 4, 1, "", "get_category_children"], [39, 4, 1, "", "get_category_parent"], [39, 4, 1, "", "get_concept_category"], [39, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.video": [[40, 2, 1, "", "ChatGPTSummarizer"], [40, 2, 1, "", "FingerprintParameters"], [40, 2, 1, "", "GoogleOCRModel"], [40, 2, 1, "", "NLPModels"], [40, 2, 1, "", "TranslationModels"], [40, 2, 1, "", "WhisperTranscriptionModel"], [40, 1, 1, "", "compare_decoded_fingerprints"], [40, 1, 1, "", "compare_encoded_fingerprints"], [40, 1, 1, "", "compute_ocr_noise_level"], [40, 1, 1, "", "compute_ocr_threshold"], [40, 1, 1, "", "compute_video_ocr_transitions"], [40, 1, 1, "", "count_tokens_for_openai"], [40, 1, 1, "", "detect_audio_format_and_duration"], [40, 1, 1, "", "detect_text_language"], [40, 1, 1, "", "extract_audio_from_video"], [40, 1, 1, "", "extract_frames"], [40, 1, 1, "", "extract_media_segment"], [40, 1, 1, "", "find_beginning_and_ending_silences"], [40, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [40, 1, 1, "", "find_closest_fingerprint_from_list"], [40, 1, 1, "", "find_closest_image_fingerprint_from_list"], [40, 1, 1, "", "force_dict_to_text"], [40, 1, 1, "", "format_datetime_for_mysql"], [40, 1, 1, "", "frame_hash_similarity"], [40, 1, 1, "", "frame_ocr_distance"], [40, 1, 1, "", "frame_ocr_transition"], [40, 1, 1, "", "generate_frame_sample_indices"], [40, 1, 1, "", "generate_random_token"], [40, 1, 1, "", "generate_src_tgt_dict"], [40, 1, 1, "", "generate_summary_text_token"], [40, 1, 1, "", "generate_summary_type_dict"], [40, 1, 1, "", "generate_symbolic_token"], [40, 1, 1, "", "generate_translation_text_token"], [40, 1, 1, "", "get_current_datetime"], [40, 1, 1, "", "md5_text"], [40, 1, 1, "", "md5_video_or_audio"], [40, 1, 1, "", "perceptual_hash_audio"], [40, 1, 1, "", "perceptual_hash_image"], [40, 1, 1, "", "perceptual_hash_text"], [40, 1, 1, "", "perform_probe"], [40, 1, 1, "", "perform_tesseract_ocr"], [40, 1, 1, "", "read_json_file"], [40, 1, 1, "", "read_json_gz_file"], [40, 1, 1, "", "read_text_file"], [40, 1, 1, "", "read_txt_gz_file"], [40, 1, 1, "", "remove_silence_doublesided"], [40, 1, 1, "", "retrieve_file_from_kaltura"], [40, 1, 1, "", "retrieve_file_from_url"], [40, 1, 1, "", "tesseract_ocr_or_get_cached"], [40, 1, 1, "", "write_json_file"], [40, 1, 1, "", "write_text_file"], [40, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.ChatGPTSummarizer": [[40, 4, 1, "", "establish_connection"], [40, 4, 1, "", "generate_summary"]], "graphai.core.common.video.FingerprintParameters": [[40, 4, 1, "", "get_min_sim_audio"], [40, 4, 1, "", "get_min_sim_image"], [40, 4, 1, "", "get_min_sim_text"], [40, 4, 1, "", "get_min_sim_video"], [40, 4, 1, "", "load_values"]], "graphai.core.common.video.GoogleOCRModel": [[40, 4, 1, "", "establish_connection"], [40, 4, 1, "", "perform_ocr"], [40, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[40, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.TranslationModels": [[40, 4, 1, "", "load_models"], [40, 4, 1, "", "translate"]], "graphai.core.common.video.WhisperTranscriptionModel": [[40, 4, 1, "", "detect_audio_segment_lang_whisper"], [40, 4, 1, "", "load_model_whisper"], [40, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[42, 0, 0, "-", "celery_config"], [43, 0, 0, "-", "db"], [44, 0, 0, "-", "es"], [45, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[42, 2, 1, "", "BaseConfig"], [42, 2, 1, "", "DevelopmentConfig"], [42, 1, 1, "", "create_celery"], [42, 1, 1, "", "get_celery_task"], [42, 1, 1, "", "get_settings"], [42, 1, 1, "", "get_task_info"], [42, 1, 1, "", "route_task"]], "graphai.core.interfaces.db": [[43, 2, 1, "", "DB"], [43, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[43, 4, 1, "", "build_conditions_list"], [43, 4, 1, "", "check_if_table_exists"], [43, 4, 1, "", "create_table"], [43, 4, 1, "", "drop_create_insert_table"], [43, 4, 1, "", "drop_table"], [43, 4, 1, "", "execute_query"], [43, 4, 1, "", "find"], [43, 4, 1, "", "find_or_split"], [43, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[44, 2, 1, "", "ES"], [44, 1, 1, "", "es_bool"], [44, 1, 1, "", "es_dis_max"], [44, 1, 1, "", "es_match"], [44, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[44, 4, 1, "", "create_index"], [44, 4, 1, "", "delete_index"], [44, 4, 1, "", "index_doc"], [44, 4, 1, "", "indices"], [44, 4, 1, "", "refresh"], [44, 4, 1, "", "search"], [44, 4, 1, "", "search_mediawiki"], [44, 4, 1, "", "search_mediawiki_no_plain"], [44, 4, 1, "", "search_mediawiki_no_rescore"], [44, 4, 1, "", "search_mediawiki_restrict_2"], [44, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[45, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[45, 4, 1, "", "search"]], "graphai.core.text": [[47, 0, 0, "-", "draw"], [48, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[47, 1, 1, "", "draw_graph"], [47, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[48, 1, 1, "", "get_keywords"], [48, 1, 1, "", "rake_extract"], [48, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[50, 0, 0, "-", "breadcrumb"], [51, 0, 0, "-", "progress_bar"], [52, 0, 0, "-", "text"], [55, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[50, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[50, 4, 1, "", "indent"], [50, 4, 1, "", "log"], [50, 4, 1, "", "outdent"], [50, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[51, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[51, 4, 1, "", "reset"], [51, 4, 1, "", "update"]], "graphai.core.utils.text": [[53, 0, 0, "-", "clean"], [54, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[53, 2, 1, "", "HTMLCleaner"], [53, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[53, 4, 1, "", "get_data"], [53, 4, 1, "", "handle_data"], [53, 4, 1, "", "handle_endtag"], [53, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[54, 2, 1, "", "Colors"], [54, 1, 1, "", "cprint"], [54, 1, 1, "", "log"], [54, 1, 1, "", "mkdir"], [54, 1, 1, "", "pprint"], [54, 1, 1, "", "read_json"], [54, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[54, 3, 1, "", "codes"], [54, 3, 1, "", "pref"], [54, 3, 1, "", "reset"]], "graphai.core.utils.time": [[56, 0, 0, "-", "date"], [57, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[56, 1, 1, "", "add_years"], [56, 1, 1, "", "now"], [56, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[57, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[57, 4, 1, "", "delta"], [57, 4, 1, "", "report"], [57, 4, 1, "", "reset"], [57, 4, 1, "", "tick"], [57, 4, 1, "", "total"]], "graphai.pipelines": [[60, 0, 0, "-", "elasticsearch"], [63, 0, 0, "-", "investment"], [76, 0, 0, "-", "validation"], [80, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[62, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[62, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[64, 0, 0, "-", "aggregate_recent_past"], [65, 0, 0, "-", "check_unit"], [66, 0, 0, "-", "compute_fundraisers_units"], [67, 0, 0, "-", "compute_investors_units"], [68, 0, 0, "-", "compute_investors_units_2"], [69, 0, 0, "-", "compute_jaccard_index"], [70, 0, 0, "-", "concept_configuration"], [71, 0, 0, "-", "create_investments_graph"], [72, 0, 0, "-", "detect_fundraisers_concepts"], [73, 0, 0, "-", "main"], [74, 0, 0, "-", "parameters"], [75, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[64, 1, 1, "", "aggregate_recent_past"], [64, 1, 1, "", "aggregate_years"], [64, 1, 1, "", "compute_year_coefficients"], [64, 1, 1, "", "normalize_scores"], [64, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[65, 1, 1, "", "main"], [65, 1, 1, "", "show_matchmaking_chart_view"], [65, 1, 1, "", "show_matchmaking_list_view"], [65, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[66, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[67, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[68, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[69, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[70, 1, 1, "", "combine"], [70, 1, 1, "", "compute_affinities"], [70, 1, 1, "", "mix"], [70, 1, 1, "", "norm"], [70, 1, 1, "", "normalise"], [70, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[71, 1, 1, "", "create_investments_graph"], [71, 1, 1, "", "derive_yearly_data"], [71, 1, 1, "", "get_frs"], [71, 1, 1, "", "get_frs_fundraisers"], [71, 1, 1, "", "get_fundraisers_concepts"], [71, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[72, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[73, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[74, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[75, 1, 1, "", "base"], [75, 1, 1, "", "complete"], [75, 1, 1, "", "path"], [75, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "packag": [0, 1, 2, 11, 18, 26, 35, 36, 41, 46, 49, 52, 55, 59, 60, 63, 76, 80], "subpackag": [0, 1, 35, 49, 59], "submodul": [0, 1, 2, 11, 18, 26, 36, 41, 46, 49, 52, 55, 60, 63, 76, 80], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10], "common": [3, 11, 12, 13, 14, 15, 16, 27, 36, 37, 38, 39, 40], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84], "imag": [4, 19, 28], "ontologi": [5, 15, 20, 29, 39], "summar": [6, 21, 30], "text": [7, 22, 31, 46, 47, 48, 52, 53, 54], "translat": [8, 23, 32], "video": [9, 16, 24, 33, 40], "voic": [10, 25, 34], "celery_tool": 12, "graph": [13, 38, 81, 82, 83, 84], "log": 14, "main": [17, 73], "router": [18, 19, 20, 21, 22, 23, 24, 25], "schema": [26, 27, 28, 29, 30, 31, 32, 33, 34], "core": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "cach": 37, "interfac": [41, 42, 43, 44, 45], "celery_config": 42, "db": 43, "e": 44, "wp": 45, "draw": 47, "keyword": 48, "util": [49, 50, 51, 52, 53, 54, 55, 56, 57], "breadcrumb": 50, "progress_bar": 51, "clean": 53, "io": 54, "time": [55, 56, 57], "date": 56, "stopwatch": 57, "definit": 58, "pipelin": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "elasticsearch": [60, 61, 62], "create_index": 61, "populate_index": 62, "invest": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "aggregate_recent_past": 64, "check_unit": 65, "compute_fundraisers_unit": 66, "compute_investors_unit": 67, "compute_investors_units_2": 68, "compute_jaccard_index": 69, "concept_configur": 70, "create_investments_graph": 71, "detect_fundraisers_concept": 72, "paramet": 74, "toy_exampl": 75, "valid": [76, 77, 78, 79], "1_old": 77, "2_new": 78, "3_slide": 79, "visualis": [80, 81, 82, 83, 84], "startup": [81, 82, 83, 84], "2": 82, "3": 83, "4": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [35, "subpackages"], [49, "subpackages"], [59, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [11, "submodules"], [18, "submodules"], [26, "submodules"], [36, "submodules"], [41, "submodules"], [46, "submodules"], [49, "submodules"], [52, "submodules"], [55, "submodules"], [60, "submodules"], [63, "submodules"], [76, "submodules"], [80, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image module": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.summarization module": [[6, "module-graphai.api.celery_tasks.summarization"]], "graphai.api.celery_tasks.text module": [[7, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[8, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[9, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[10, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[11, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[12, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[13, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[14, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[15, "module-graphai.api.common.ontology"]], "graphai.api.common.video module": [[16, "module-graphai.api.common.video"]], "graphai.api.main module": [[17, "module-graphai.api.main"]], "graphai.api.routers package": [[18, "module-graphai.api.routers"]], "graphai.api.routers.image module": [[19, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[20, "module-graphai.api.routers.ontology"]], "graphai.api.routers.summarization module": [[21, "module-graphai.api.routers.summarization"]], "graphai.api.routers.text module": [[22, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[23, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[24, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[25, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[26, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[27, "module-graphai.api.schemas.common"]], "graphai.api.schemas.image module": [[28, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[29, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.summarization module": [[30, "module-graphai.api.schemas.summarization"]], "graphai.api.schemas.text module": [[31, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[32, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[33, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[34, "module-graphai.api.schemas.voice"]], "graphai.core package": [[35, "module-graphai.core"]], "graphai.core.common package": [[36, "module-graphai.core.common"]], "graphai.core.common.caching module": [[37, "module-graphai.core.common.caching"]], "graphai.core.common.graph module": [[38, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[39, "module-graphai.core.common.ontology"]], "graphai.core.common.video module": [[40, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[41, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[42, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.db module": [[43, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[44, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[45, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[46, "module-graphai.core.text"]], "graphai.core.text.draw module": [[47, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[48, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[49, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[50, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[51, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[52, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[53, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[54, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[55, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[56, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[57, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[58, "module-graphai.definitions"]], "graphai.pipelines package": [[59, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[60, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[61, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[62, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[63, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[64, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[65, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[66, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[67, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[68, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[69, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[70, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[71, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[72, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[73, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[74, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[75, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[76, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[77, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[78, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[79, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[80, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[81, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[82, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[83, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[84, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.image"], [5, "module-graphai.api.celery_tasks.ontology"], [6, "module-graphai.api.celery_tasks.summarization"], [7, "module-graphai.api.celery_tasks.text"], [8, "module-graphai.api.celery_tasks.translation"], [9, "module-graphai.api.celery_tasks.video"], [10, "module-graphai.api.celery_tasks.voice"], [11, "module-graphai.api.common"], [12, "module-graphai.api.common.celery_tools"], [13, "module-graphai.api.common.graph"], [14, "module-graphai.api.common.log"], [15, "module-graphai.api.common.ontology"], [16, "module-graphai.api.common.video"], [17, "module-graphai.api.main"], [18, "module-graphai.api.routers"], [19, "module-graphai.api.routers.image"], [20, "module-graphai.api.routers.ontology"], [21, "module-graphai.api.routers.summarization"], [22, "module-graphai.api.routers.text"], [23, "module-graphai.api.routers.translation"], [24, "module-graphai.api.routers.video"], [25, "module-graphai.api.routers.voice"], [26, "module-graphai.api.schemas"], [27, "module-graphai.api.schemas.common"], [28, "module-graphai.api.schemas.image"], [29, "module-graphai.api.schemas.ontology"], [30, "module-graphai.api.schemas.summarization"], [31, "module-graphai.api.schemas.text"], [32, "module-graphai.api.schemas.translation"], [33, "module-graphai.api.schemas.video"], [34, "module-graphai.api.schemas.voice"], [35, "module-graphai.core"], [36, "module-graphai.core.common"], [37, "module-graphai.core.common.caching"], [38, "module-graphai.core.common.graph"], [39, "module-graphai.core.common.ontology"], [40, "module-graphai.core.common.video"], [41, "module-graphai.core.interfaces"], [42, "module-graphai.core.interfaces.celery_config"], [43, "module-graphai.core.interfaces.db"], [44, "module-graphai.core.interfaces.es"], [45, "module-graphai.core.interfaces.wp"], [46, "module-graphai.core.text"], [47, "module-graphai.core.text.draw"], [48, "module-graphai.core.text.keywords"], [49, "module-graphai.core.utils"], [50, "module-graphai.core.utils.breadcrumb"], [51, "module-graphai.core.utils.progress_bar"], [52, "module-graphai.core.utils.text"], [53, "module-graphai.core.utils.text.clean"], [54, "module-graphai.core.utils.text.io"], [55, "module-graphai.core.utils.time"], [56, "module-graphai.core.utils.time.date"], [57, "module-graphai.core.utils.time.stopwatch"], [58, "module-graphai.definitions"], [59, "module-graphai.pipelines"], [60, "module-graphai.pipelines.elasticsearch"], [62, "module-graphai.pipelines.elasticsearch.populate_index"], [63, "module-graphai.pipelines.investment"], [64, "module-graphai.pipelines.investment.aggregate_recent_past"], [65, "module-graphai.pipelines.investment.check_unit"], [66, "module-graphai.pipelines.investment.compute_fundraisers_units"], [67, "module-graphai.pipelines.investment.compute_investors_units"], [68, "module-graphai.pipelines.investment.compute_investors_units_2"], [69, "module-graphai.pipelines.investment.compute_jaccard_index"], [70, "module-graphai.pipelines.investment.concept_configuration"], [71, "module-graphai.pipelines.investment.create_investments_graph"], [72, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [73, "module-graphai.pipelines.investment.main"], [74, "module-graphai.pipelines.investment.parameters"], [75, "module-graphai.pipelines.investment.toy_example"], [76, "module-graphai.pipelines.validation"], [80, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.summarization": [[6, "module-graphai.api.celery_tasks.summarization"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[7, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[7, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[7, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[8, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[9, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[10, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[11, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[12, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[12, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[13, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[14, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[14, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[15, "module-graphai.api.common.ontology"]], "graphai.api.common.video": [[16, "module-graphai.api.common.video"]], "graphai.api.main": [[17, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[17, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[17, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[18, "module-graphai.api.routers"]], "calculate_fingerprint() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.calculate_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[19, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[19, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[20, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[20, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[20, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[20, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[20, "graphai.api.routers.ontology.tree"]], "calculate_fingerprint() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.calculate_fingerprint_status"]], "create_title() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.create_title"]], "get_summary_task_chain() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.get_summary_task_chain"]], "get_summary_text_fingerprint_chain_list() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.get_summary_text_fingerprint_chain_list"]], "graphai.api.routers.summarization": [[21, "module-graphai.api.routers.summarization"]], "summarize() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.summarize"]], "translate_status() (in module graphai.api.routers.summarization)": [[21, "graphai.api.routers.summarization.translate_status"]], "graphai.api.routers.text": [[22, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[22, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[22, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[22, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[22, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[22, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_fingerprint() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.calculate_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[23, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[23, "graphai.api.routers.translation.translate_status"]], "calculate_fingerprint() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.calculate_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[24, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[24, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[25, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[25, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[26, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[27, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[27, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[27, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[27, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[27, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[27, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[27, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[27, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[27, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[27, "graphai.api.schemas.common.FileRequest.token"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[28, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[28, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[28, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[28, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[28, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[28, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[28, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[28, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[28, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[28, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[28, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[28, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[28, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[28, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[28, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[28, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[28, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "token (graphai.api.schemas.image.individualocrresult attribute)": [[28, "graphai.api.schemas.image.IndividualOCRResult.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[29, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[29, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[29, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[29, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[29, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[29, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "summarizationrequest (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummarizationRequest"]], "summarizationresponse (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummarizationResponse"]], "summarizationtaskresponse (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse"]], "summaryfingerprintrequest (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.summarization)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.force"]], "force (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse.fresh"]], "fresh (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.summarization": [[30, "module-graphai.api.schemas.summarization"]], "len_class (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.len_class"]], "len_class (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.len_class"]], "result (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse.successful"]], "successful (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.successful"]], "summary (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse.summary"]], "summary_type (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse.summary_type"]], "summary_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.summary_type"]], "task_result (graphai.api.schemas.summarization.summarizationresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationResponse.task_result"]], "task_result (graphai.api.schemas.summarization.summaryfingerprintresponse attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintResponse.task_result"]], "text (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.text"]], "text (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[30, "graphai.api.schemas.summarization.SummarizationTaskResponse.text_too_large"]], "text_type (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.text_type"]], "text_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text_type"]], "tone (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.tone"]], "tone (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[30, "graphai.api.schemas.summarization.SummaryFingerprintRequest.tone"]], "use_keywords (graphai.api.schemas.summarization.summarizationrequest attribute)": [[30, "graphai.api.schemas.summarization.SummarizationRequest.use_keywords"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[31, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[31, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[31, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[31, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[31, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[31, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[31, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[31, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[32, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[32, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[32, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[32, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[32, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[32, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[32, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[32, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[32, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[32, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[32, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[32, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[32, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[32, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[33, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[33, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[33, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[33, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[33, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[33, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[33, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[33, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[33, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[33, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[33, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[33, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[33, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[33, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[33, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[33, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[33, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[33, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[33, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[33, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[33, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[33, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[33, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[33, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[33, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[33, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[33, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[34, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[34, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_result"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[34, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[34, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[34, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_result"]], "graphai.core": [[35, "module-graphai.core"]], "graphai.core.common": [[36, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.AudioDBCachingManager"]], "dbcachingmanagerbase (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.DBCachingManagerBase"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.SlideDBCachingManager"]], "summarydbcachingmanager (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.SummaryDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[37, "graphai.core.common.caching.VideoDBCachingManager"]], "add_equality_conditions() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.add_equality_conditions"]], "add_non_null_conditions() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.add_non_null_conditions"]], "add_where_or_and() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.add_where_or_and"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_cache_rows() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.delete_cache_rows"]], "delete_file() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.delete_file"]], "escape_single_quotes() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.escape_single_quotes"]], "file_exists() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.file_exists"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_all_closest_matches() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_all_closest_matches"]], "get_all_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_all_details"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_cache_count() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_cache_count"]], "get_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_closest_match"]], "get_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_details"]], "get_details_using_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.get_origin"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[37, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[37, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[37, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[37, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.summarydbcachingmanager method)": [[37, "graphai.core.common.caching.SummaryDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[37, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[37, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "insert_or_update_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_closest_match"]], "insert_or_update_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_details"]], "make_sure_path_exists() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.make_sure_path_exists"]], "surround_with_character() (in module graphai.core.common.caching)": [[37, "graphai.core.common.caching.surround_with_character"]], "update_details_if_exists() (graphai.core.common.caching.dbcachingmanagerbase method)": [[37, "graphai.core.common.caching.DBCachingManagerBase.update_details_if_exists"]], "conceptsgraph (class in graphai.core.common.graph)": [[38, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[38, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[38, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[38, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[38, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "ontology (class in graphai.core.common.ontology)": [[39, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[39, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[39, "module-graphai.core.common.ontology"]], "chatgptsummarizer (class in graphai.core.common.video)": [[40, "graphai.core.common.video.ChatGPTSummarizer"]], "fingerprintparameters (class in graphai.core.common.video)": [[40, "graphai.core.common.video.FingerprintParameters"]], "googleocrmodel (class in graphai.core.common.video)": [[40, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[40, "graphai.core.common.video.NLPModels"]], "translationmodels (class in graphai.core.common.video)": [[40, "graphai.core.common.video.TranslationModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[40, "graphai.core.common.video.WhisperTranscriptionModel"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.compute_video_ocr_transitions"]], "count_tokens_for_openai() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.count_tokens_for_openai"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[40, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_text_language() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.detect_text_language"]], "establish_connection() (graphai.core.common.video.chatgptsummarizer method)": [[40, "graphai.core.common.video.ChatGPTSummarizer.establish_connection"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[40, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "force_dict_to_text() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.force_dict_to_text"]], "format_datetime_for_mysql() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.format_datetime_for_mysql"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_random_token"]], "generate_src_tgt_dict() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_src_tgt_dict"]], "generate_summary() (graphai.core.common.video.chatgptsummarizer method)": [[40, "graphai.core.common.video.ChatGPTSummarizer.generate_summary"]], "generate_summary_text_token() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_summary_text_token"]], "generate_summary_type_dict() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_summary_type_dict"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_symbolic_token"]], "generate_translation_text_token() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.generate_translation_text_token"]], "get_current_datetime() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.get_current_datetime"]], "get_min_sim_audio() (graphai.core.common.video.fingerprintparameters method)": [[40, "graphai.core.common.video.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.video.fingerprintparameters method)": [[40, "graphai.core.common.video.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.video.fingerprintparameters method)": [[40, "graphai.core.common.video.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.video.fingerprintparameters method)": [[40, "graphai.core.common.video.FingerprintParameters.get_min_sim_video"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[40, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[40, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[40, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "load_models() (graphai.core.common.video.translationmodels method)": [[40, "graphai.core.common.video.TranslationModels.load_models"]], "load_values() (graphai.core.common.video.fingerprintparameters method)": [[40, "graphai.core.common.video.FingerprintParameters.load_values"]], "md5_text() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.perceptual_hash_text"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[40, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.read_json_file"]], "read_json_gz_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.read_json_gz_file"]], "read_text_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.read_text_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[40, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "translate() (graphai.core.common.video.translationmodels method)": [[40, "graphai.core.common.video.TranslationModels.translate"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[40, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_json_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.write_json_file"]], "write_text_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.write_text_file"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[40, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[41, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[42, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[42, "graphai.core.interfaces.celery_config.route_task"]], "db (class in graphai.core.interfaces.db)": [[43, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.build_conditions_list"]], "check_if_table_exists() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.check_if_table_exists"]], "create_table() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.find"]], "find_or_split() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.find_or_split"]], "graphai.core.interfaces.db": [[43, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[43, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[43, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[44, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[44, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[44, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[44, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[44, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[44, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[44, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[45, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[45, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[45, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[46, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[47, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[47, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[47, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[48, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[48, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[48, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[48, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[49, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[50, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[50, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[50, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[50, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[50, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[50, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[51, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[51, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[51, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[51, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[52, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[53, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[53, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[53, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[53, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[53, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[53, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[53, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[54, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[54, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[54, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[54, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[54, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[55, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[56, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[56, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[56, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[56, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[57, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[57, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[58, "module-graphai.definitions"]], "graphai.pipelines": [[59, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[60, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[62, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[62, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[63, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[64, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[65, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[66, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[66, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[67, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[67, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[68, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[68, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[69, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[69, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[70, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[71, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[72, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[72, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[73, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[73, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[74, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[74, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[75, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[76, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[80, "module-graphai.pipelines.visualisation"]]}})