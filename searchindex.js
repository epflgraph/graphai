Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.completion", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.auth", "graphai.api.routers.completion", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.completion", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.auth_utils", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.config", "graphai.core.common.gpt_message_presets", "graphai.core.common.graph", "graphai.core.common.json_repair", "graphai.core.common.json_repair.json_repair", "graphai.core.common.json_repair.json_repair_error", "graphai.core.common.json_repair.string_utils", "graphai.core.common.ontology", "graphai.core.common.ontology_utils", "graphai.core.common.ontology_utils.clustering", "graphai.core.common.ontology_utils.data", "graphai.core.common.scraping", "graphai.core.common.text_utils", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.completion.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.auth.rst", "graphai.api.routers.completion.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.completion.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.auth_utils.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.config.rst", "graphai.core.common.gpt_message_presets.rst", "graphai.core.common.graph.rst", "graphai.core.common.json_repair.rst", "graphai.core.common.json_repair.json_repair.rst", "graphai.core.common.json_repair.json_repair_error.rst", "graphai.core.common.json_repair.string_utils.rst", "graphai.core.common.ontology.rst", "graphai.core.common.ontology_utils.rst", "graphai.core.common.ontology_utils.clustering.rst", "graphai.core.common.ontology_utils.data.rst", "graphai.core.common.scraping.rst", "graphai.core.common.text_utils.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.completion module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.auth module", "graphai.api.routers.completion module", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.completion module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.auth_utils module", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.config module", "graphai.core.common.gpt_message_presets module", "graphai.core.common.graph module", "graphai.core.common.json_repair package", "graphai.core.common.json_repair.json_repair module", "graphai.core.common.json_repair.json_repair_error module", "graphai.core.common.json_repair.string_utils module", "graphai.core.common.ontology module", "graphai.core.common.ontology_utils package", "graphai.core.common.ontology_utils.clustering module", "graphai.core.common.ontology_utils.data module", "graphai.core.common.scraping module", "graphai.core.common.text_utils module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 43, 44, 47, 54, 55, 56, 57, 58, 63, 67, 73, 86], "contain": [0, 3, 36, 44, 54, 55, 56, 57, 58, 60, 64, 78, 86], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 12, 26, 41, 54, 55, 63, 78, 86, 96], "project": 0, "ai": 0, "base": [0, 8, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 47, 50, 52, 54, 55, 56, 57, 58, 60, 61, 66, 67, 69, 70, 73, 86, 91], "util": [0, 40], "api": [0, 57, 58, 61], "core": 0, "pipelin": 0, "definit": [0, 86], "modul": [0, 1, 2, 12, 20, 30, 41, 48, 53, 59, 62, 65, 68, 71, 76, 79, 92, 96], "celery_task": 1, "common": [1, 2, 30, 40], "router": 1, "schema": [1, 78], "main": [1, 55, 79, 81], "complet": [2, 20, 30, 67, 73, 91], "imag": [2, 3, 20, 30, 58], "ontologi": [2, 12, 20, 26, 30, 31, 41, 63], "scrape": [2, 20, 30, 41], "text": [2, 3, 20, 22, 27, 30, 32, 33, 37, 40, 44, 49, 51, 56, 57, 58, 61, 65], "translat": [2, 3, 12, 20, 30, 57, 58, 64], "video": [2, 3, 12, 20, 30, 41], "voic": [2, 20, 30], "format_api_result": 3, "id": [3, 34, 43, 47, 54, 55, 56, 60], "name": [3, 32, 34, 43, 54, 58, 60, 70, 78], "statu": [3, 56, 60], "result": [3, 8, 26, 32, 33, 34, 36, 37, 38, 39, 47, 52, 54, 55, 57, 58, 60, 61, 63, 86], "format": [3, 44, 58, 72, 78], "come": [3, 57, 78], "from": [3, 26, 43, 47, 52, 54, 56, 57, 58, 63, 64, 69, 78, 86], "celeri": [3, 60, 63], "output": [3, 31, 34, 58], "param": [3, 43, 44, 54, 55, 56, 57, 58, 60, 80, 82, 83, 84, 85, 87, 88], "task": [3, 60, 63, 67, 73], "return": [3, 8, 26, 43, 44, 47, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 69, 70, 72, 73, 86], "appropri": 3, "dictionari": [3, 44, 54, 55, 56, 57, 58, 70], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 21, 22, 23, 27, 28, 29, 31, 32, 33, 35, 38, 39, 42, 43, 56, 57, 58, 64], "forc": [3, 22, 23, 27, 28, 29, 32, 33, 35, 37, 38, 39, 43], "fals": [3, 15, 22, 23, 26, 27, 28, 29, 32, 33, 34, 35, 37, 38, 39, 44, 51, 54, 55, 56, 57, 58, 64, 70, 73, 86], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": 3, "none": [3, 15, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 54, 55, 56, 57, 58, 60, 66, 67, 70, 86, 87], "retriev": [3, 26, 43, 56, 58, 73], "number": [3, 8, 32, 47, 54, 55, 56, 57, 58, 61, 67, 70, 86], "cach": [3, 41, 58], "row": [3, 43, 54, 55, 86], "relev": [3, 26, 36], "fingerprint": [3, 43, 58], "lookup": 3, "dict": [3, 21, 32, 34, 35, 38, 43, 47, 54, 56, 57, 58, 63, 70], "comput": [3, 8, 47, 52, 54, 57, 58, 86], "dbcachingmanagerbas": [3, 43], "object": [3, 31, 34, 36, 43, 47, 52, 55, 57, 58, 60, 61, 63, 66, 67, 70, 72, 73], "equal": [3, 56], "condit": 3, "count": [3, 51, 57], "onli": [3, 26, 55, 58, 70, 78, 86], "us": [3, 8, 43, 54, 55, 56, 57, 58, 64, 69, 73, 78, 86], "unexpect": [3, 54, 55, 58, 86], "indent": [3, 54, 55, 58, 66, 70], "where": [3, 58, 86], "need": [3, 44, 73], "done": [3, 26], "among": [3, 26], "same": [3, 56, 58, 86], "sourc": [3, 37, 47, 54, 55, 57], "target": [3, 37, 47, 55, 57, 58], "lang": [3, 57, 58], "origin": [3, 43, 47, 52, 54, 55, 56, 58], "plu": [3, 47, 52, 55, 57, 58], "fingerprint_lookup_parallel": 3, "input_dict": [3, 57], "i": [3, 8, 26, 43, 44, 47, 49, 54, 55, 56, 58, 63, 64, 67, 69, 73, 86], "n_total": 3, "min_similar": [3, 22, 23, 27, 28, 29, 58], "data_typ": 3, "audio": [3, 58], "perform": [3, 54, 56, 58, 61, 86], "parallel": 3, "previou": [3, 67, 73], "step": [3, 58], "index": [3, 54, 55, 56, 58, 78, 86], "thi": [3, 8, 26, 54, 58, 67, 78, 86], "total": [3, 15, 67, 73], "minimum": [3, 54, 56, 57, 58], "similar": [3, 43, 55, 58, 86], "threshold": [3, 8, 29, 39, 43, 58, 63, 64], "two": [3, 8, 47, 55, 56, 58], "consid": [3, 54, 57, 58], "match": [3, 56, 58], "type": [3, 8, 47, 52, 56, 58, 61, 63, 64, 69, 70], "data": [3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 53, 54, 56, 70, 78], "can": [3, 26, 57, 58, 73, 78], "mode": [3, 54], "detail": [3, 43, 58], "closest": [3, 34, 55, 58], "which": [3, 36, 43, 55, 56, 57, 58, 63, 64, 86], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 8, 26, 54], "databas": 3, "insert": 3, "list": [3, 26, 32, 33, 34, 35, 36, 37, 42, 43, 47, 54, 55, 56, 58, 63, 64, 86], "aggregate_result": 8, "coef": 8, "0": [8, 26, 32, 34, 36, 39, 44, 47, 52, 55, 56, 57, 58, 63, 70, 72, 73, 80, 86], "5": [8, 26, 36, 52, 55, 73], "panda": [8, 47, 52, 61, 63, 72], "datafram": [8, 47, 52, 54, 55, 61, 63, 86], "intermedi": [8, 47, 52], "wikifi": [8, 26, 36, 47, 52, 63], "uniqu": [8, 61, 86], "keyword": [8, 22, 26, 32, 36, 47, 52, 61, 62], "pageid": [8, 36, 47, 52, 61, 63, 86], "final": [8, 73, 86], "Then": [8, 64], "mixedscor": [8, 36, 63], "everi": [8, 56, 58, 70, 86], "page": [8, 26, 36, 47, 55, 56], "convex": 8, "combin": [8, 54, 86], "other": [8, 26, 55, 73], "score": [8, 26, 34, 36, 47, 52, 54, 55, 57, 58, 63, 64, 86], "paramet": [8, 47, 52, 54, 58, 61, 63, 64, 67, 69, 70, 73, 79, 86], "pd": [8, 47, 52, 61, 86], "A": [8, 47, 52, 55, 58, 61, 63, 64], "column": [8, 43, 47, 52, 54, 55, 61, 63, 86], "pagetitl": [8, 36, 47, 52, 61, 63], "searchscor": [8, 36, 47, 52, 61, 63], "levenshteinscor": [8, 36, 47, 52, 63], "graphscor": [8, 36, 47, 63], "ontologylocalscor": [8, 36, 52, 63], "ontologyglobalscor": [8, 36, 52, 63], "keywordsscor": [8, 36, 63], "float": [8, 26, 32, 34, 36, 38, 39, 47, 63, 64, 73, 86], "1": [8, 26, 32, 34, 36, 44, 47, 55, 56, 57, 58, 72, 73, 86], "control": [8, 86], "how": [8, 54, 56, 57, 63, 64], "ar": [8, 26, 44, 55, 56, 57, 58, 63, 64, 72, 86], "valu": [8, 43, 44, 55, 56, 58, 86], "take": [8, 26, 55, 86], "sum": [8, 54], "over": [8, 86], "normalis": [8, 86], "max": [8, 47], "default": [8, 43, 47, 51, 52, 54, 56, 57, 58, 60, 63, 64, 73], "ani": [8, 64, 78, 86], "between": [8, 43, 54, 55, 58, 72, 73, 86], "linearli": [8, 72], "interpol": 8, "those": [8, 55, 58], "approach": 8, "filter_result": 8, "epsilon": [8, 80], "min_vot": 8, "filter": [8, 26, 63, 64], "depend": 8, "some": [8, 26, 67, 73, 86], "criteria": 8, "specifi": [8, 86], "all": [8, 47, 54, 56, 58, 64, 73, 78, 86], "decid": 8, "whether": [8, 43, 44, 47, 52, 54, 55, 56, 57, 58, 63, 64, 73, 86], "good": 8, "enough": 8, "least": 8, "amount": 8, "int": [8, 26, 32, 34, 36, 38, 47, 61, 63, 67, 70], "exclud": 8, "kept": [8, 86], "iff": 8, "celery_tool": 12, "log": [12, 34, 55, 58, 66, 70], "get_n_celery_work": 13, "msg": [15, 66, 70, 73], "second": [15, 56, 58, 73], "length": [15, 42, 56, 57, 58], "64": 15, "async": [19, 21, 22, 23, 24, 25, 26, 27, 28, 29], "init": 19, "redirect_doc": 19, "auth": 20, "create_access_token": 21, "expires_delta": 21, "timedelta": 21, "get_current_us": 21, "security_scop": 21, "securityscop": 21, "str": [21, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 47, 61, 64, 69, 70, 73, 86], "get_current_active_us": 21, "current_us": 21, "user": [21, 42], "get_active_user_dummi": 21, "login_for_access_token": 21, "form_data": 21, "oauth2passwordrequestform": 21, "read_users_m": 21, "populate_academic_entity_dict": 22, "populate_slide_concepts_dict": 22, "slide": [22, 26, 32, 57, 58], "get_completion_text_fingerprint_chain_list": 22, "text_typ": [22, 32, 57], "completion_typ": [22, 32, 57], "n_job": [22, 23, 27, 28, 29], "8": [22, 23, 27, 28, 29, 58], "ignore_fp_result": [22, 23, 27, 28, 29], "results_to_return": [22, 23, 27, 28, 29], "get_completion_task_chain": 22, "result_typ": [22, 32], "true": [22, 26, 38, 44, 47, 52, 54, 55, 56, 57, 58, 64, 66, 70, 73, 86], "skip_token": 22, "debug": [22, 32, 66, 70], "get_cleanup_task_chain": 22, "cleanup": [22, 32], "calculate_summary_text_fingerprint": 22, "summaryfingerprintrequest": [22, 32], "calculate_summary_text_fingerprint_statu": 22, "task_id": [22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 60], "summarize_lectur": [22, 57], "lecturesummarizationrequest": [22, 32], "summarize_academic_ent": [22, 57], "academicentitysummarizationrequest": [22, 32], "summarize_text": 22, "genericsummarizationrequest": [22, 32], "clean_up": 22, "cleanuprequest": [22, 32], "summarize_statu": 22, "choose_best_subset": 22, "slidesubsetrequest": [22, 32], "get_slide_fingerprint_chain_list": 23, "calculate_slide_fingerprint": 23, "imagefingerprintrequest": [23, 33], "calculate_slide_fingerprint_statu": 23, "extract_text": 23, "extracttextrequest": [23, 33], "extract_text_statu": 23, "detect_ocr_language_statu": 23, "tree": [24, 31, 34, 54, 58], "cat_info": 24, "categoryinforequest": [24, 34], "cat_par": 24, "cat_children": 24, "categorychildrenrequest": [24, 34], "cluster_par": 24, "clusterinforequest": [24, 34], "cluster_children": 24, "recompute_clust": 24, "recomputeclustersrequest": [24, 34], "recompute_clusters_statu": 24, "compute_graph_dist": 24, "graphdistancerequest": [24, 34], "compute_graph_concept_nearest_categori": 24, "graphconceptnearestcategoryrequest": [24, 34], "compute_graph_cluster_nearest_categori": 24, "graphclusternearestcategoryrequest": [24, 34], "compute_graph_nearest_concept": 24, "graphnearestconceptrequest": [24, 34], "break_up_clust": 24, "breakupclusterrequest": [24, 34], "extract_sublink": 25, "getsublinksrequest": [25, 35], "extract_sublinks_statu": 25, "extract_page_cont": 25, "extractcontentrequest": [25, 35], "extract_page_content_statu": 25, "keywordsrequest": [26, 36], "use_nltk": [26, 64], "bool": [26, 32, 33, 34, 35, 37, 38, 39, 42, 47, 52, 63, 64, 70, 86], "process": [26, 56], "raw": [26, 36, 64, 69], "e": [26, 54, 56, 58], "g": [26, 54, 55, 58], "an": [26, 43, 54, 55, 57, 58, 70, 78], "abstract": 26, "public": 26, "cours": 26, "descript": 26, "lectur": [26, 32], "wikifyfromrawtextrequest": [26, 36], "wikifyfromkeywordsrequest": [26, 36], "method": [26, 33, 54, 55, 58, 86], "restrict_to_ontologi": 26, "graph_score_smooth": 26, "ontology_score_smooth": 26, "keywords_score_smooth": 26, "normalisation_coef": 26, "filtering_threshold": 26, "filtering_min_vot": 26, "refresh_scor": 26, "concept": [26, 32, 34, 54, 55, 63, 78, 81, 86], "wikipedia": [26, 36, 55, 61], "each": [26, 36, 44, 47, 54, 55, 56, 58, 67, 73, 86], "set": [26, 36, 43, 44, 57, 60, 61, 63, 86], "quantifi": 26, "follow": [26, 58, 67, 69, 73, 86], "extract": [26, 36, 56, 58, 64], "automat": [26, 43, 58], "omit": 26, "keyword_list": 26, "provid": [26, 47, 52, 54, 55, 56, 57, 58, 60], "input": [26, 56, 57, 58], "instead": [26, 43], "raw_text": [26, 36], "wikisearch": [26, 61], "For": [26, 55, 86], "10": [26, 34, 55, 57, 61, 64, 86], "through": [26, 55, 58], "request": [26, 54, 56], "elasticsearch": [26, 75], "pair": [26, 47, 55, 64, 73, 86], "sever": [26, 36, 73], "deriv": [26, 55], "account": 26, "accord": [26, 54, 56, 86], "rule": 26, "keep": [26, 55, 67], "most": [26, 58], "wikify_ontology_svg": 26, "wikifyresponseelem": [26, 36], "level": [26, 54, 63], "2": [26, 32, 34, 55, 57, 58, 73, 86, 96], "svg": [26, 63], "file": [26, 43, 44, 58, 63, 70], "repres": [26, 31, 34, 36, 55, 64, 67, 73], "subgraph": 26, "induc": [26, 55, 63], "wikify_graph_svg": 26, "concept_score_threshold": [26, 63], "3": [26, 34, 54, 55, 57, 63, 69, 73, 96], "edge_threshold": [26, 63], "min_component_s": [26, 63], "priority_test_text": 26, "get_translation_text_fingerprint_chain_list": 27, "src": [27, 34, 57], "tgt": [27, 34, 57], "calculate_translation_text_fingerprint": 27, "textfingerprintrequest": [27, 37], "calculate_translation_text_fingerprint_statu": 27, "translationrequest": [27, 37], "translate_statu": 27, "text_detect_languag": 27, "textdetectlanguagerequest": [27, 37], "text_detect_language_statu": 27, "get_video_fingerprint_chain_list": 28, "retrieve_fil": 28, "retrieveurlrequest": [28, 38], "get_retrieve_file_statu": 28, "calculate_video_fingerprint": 28, "videofingerprintrequest": [28, 38], "calculate_video_fingerprint_statu": 28, "get_fil": 28, "filerequest": [28, 31], "extract_audio": 28, "extractaudiorequest": [28, 38], "extract_audio_statu": 28, "detect_slid": 28, "detectslidesrequest": [28, 38], "detect_slides_statu": 28, "get_audio_fingerprint_chain_list": 29, "remove_sil": [29, 39], "calculate_audio_fingerprint": 29, "audiofingerprintrequest": [29, 39], "calculate_audio_fingerprint_statu": 29, "transcrib": [29, 58], "audiotranscriptionrequest": [29, 39], "transcribe_statu": 29, "detect_languag": 29, "audiodetectlanguagerequest": [29, 39], "priority_test": 29, "detect_language_statu": 29, "class": [31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 47, 52, 55, 57, 58, 60, 61, 66, 67, 69, 70, 73], "taskidrespons": 31, "basemodel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 42], "endpoint": [31, 34], "taskstatusrespons": [31, 32, 33, 34, 35, 37, 38, 39], "task_nam": [31, 32, 33, 34, 35, 37, 38, 39], "task_statu": [31, 32, 33, 34, 35, 37, 38, 39], "task_result": [31, 32, 33, 34, 35, 37, 38, 39, 60], "jsonwrappervalu": 31, "abc": [31, 32], "slideconceptsmap": 32, "completionrequestbas": 32, "simul": [32, 57], "academicentitydescriptor": 32, "entiti": 32, "liter": [32, 33, 34, 37, 38], "unit": 32, "person": 32, "subtyp": 32, "possible_subtyp": 32, "categori": [32, 34, 55], "cleanupresponsedict": 32, "subject": 32, "for_wikifi": 32, "summaryresponsedict": 32, "summary_long": 32, "summary_short": 32, "titl": 32, "academicentitysummaryresponsedict": 32, "inferred_subtyp": 32, "top_3_categori": 32, "completiontaskresponsebas": 32, "summari": [32, 57, 73], "text_too_larg": [32, 37], "success": [32, 33, 34, 35, 37, 38, 39, 58], "fresh": [32, 33, 35, 37, 38, 39], "approx_cost": 32, "debug_messag": 32, "summarytaskrespons": 32, "academicentitysummarytaskrespons": 32, "cleanuptaskrespons": 32, "summaryrespons": 32, "academicentitysummaryrespons": 32, "cleanuprespons": 32, "coverag": [32, 57], "min_freq": [32, 57], "slidesubsetrespons": 32, "subset": 32, "academic_ent": 32, "summaryfingerprinttaskrespons": 32, "closest_token": [32, 33, 37, 38, 39], "summaryfingerprintrespons": 32, "imagefingerprinttaskrespons": 33, "closest_token_origin": [33, 39], "imagefingerprintrespons": 33, "googl": [33, 58], "tesseract": [33, 58], "individualocrresult": 33, "extracttexttaskrespons": 33, "languag": [33, 37, 38, 39, 57, 58], "extracttextrespons": 33, "detectocrlanguagetaskrespons": 33, "detectocrlanguagerespons": 33, "treeresponseelem": 34, "child_id": [34, 55], "parent_id": [34, 55], "treerespons": 34, "child_to_par": 34, "category_id": [34, 52, 55], "cluster_id": [34, 55], "categoryinforespons": 34, "depth": [34, 55], "categoryparentrespons": 34, "parent": [34, 55], "tgt_type": 34, "cluster": [34, 53, 55], "treechildrenrespons": 34, "children": 34, "child_typ": 34, "treeparentrespons": 34, "n_cluster": [34, 54], "2200": 34, "min_n": [34, 54], "oneconceptresponseel": 34, "recomputeclusterstaskrespons": 34, "category_assign": 34, "impurity_count": 34, "impurity_proport": 34, "recomputeclustersrespons": 34, "breakupclustersclusternumberrespons": 34, "breakupclustersrespons": 34, "src_type": 34, "avg": [34, 55], "linear": [34, 55], "coeff": [34, 55], "tupl": [34, 56, 64, 86], "graphdistancerespons": 34, "sim": 34, "graphnearestcategoryrequest": 34, "adapt": 34, "top_n": [34, 55], "top_down_search": 34, "return_clust": [34, 55], "nearestclusterel": 34, "rank": 34, "nearestcategoryel": 34, "nearestcategoryelementwithclust": 34, "graphconceptnearestcategoryrespons": 34, "parent_categori": 34, "valid": [34, 56, 75], "existing_label": 34, "graphclusternearestcategoryrespons": 34, "graphnearestconceptrespons": 34, "url": [35, 38, 56, 58, 69], "getsublinkstaskrespons": 35, "validated_url": [35, 56], "sublink": [35, 56], "status_msg": 35, "getsublinksrespons": 35, "remove_head": [35, 56], "remove_long_pattern": [35, 56], "extractcontenttaskrespons": 35, "extractcontentrespons": 35, "It": [36, 64, 69, 86], "consist": [36, 58], "measur": 36, "degre": 36, "respect": [36, 55, 72, 86], "config": [36, 41], "schema_extra": 36, "exampl": [36, 47, 64, 69, 86], "44735199351890065": 36, "9058463104630012": 36, "1196": [36, 47], "angl": 36, "8055555555555556": 36, "22717425120724127": 36, "609271523178808": 36, "16661245633224378": 36, "44715741719086977": 36, "6666666666666667": 36, "152547": 36, "bisect": 36, "3333333333333333": 36, "003590346636521923": 36, "19828593689131283": 36, "2134432477817427": 36, "17781458572659029": 36, "19791666666666666": 36, "21885521885521886": 36, "23972889": 36, "distance_from_a_point_to_a_lin": 36, "16666666666666669": 36, "7855473315153876": 36, "33567080901262164": 36, "7886663359580247": 36, "7916666666666666": 36, "8232323232323234": 36, "946975": [36, 47], "line_": 36, "geometri": 36, "42461810549112244": 36, "6026490066225165": 36, "3582111602475977": 36, "5277457623305826": 36, "75": [36, 67], "43097643097643096": 36, "22634860": 36, "line_seg": 36, "5555555555555556": 36, "01572170017309725": 36, "5087650954421504": 36, "39019342923035233": 36, "2950855110143057": 36, "11647727272727273": 36, "21212121212121213": 36, "2175469": 36, "non": [36, 54], "line": [36, 54, 57, 58, 70, 86], "sight_propag": 36, "19444444444444448": 36, "14484503981375635": 36, "13627674782665528": 36, "4288185842201275": 36, "133496": 36, "parallelogram": 36, "3055555555555556": 36, "15017752515904018": 36, "2584729255940787": 36, "039652736888335365": 36, "19421461143444865": 36, "25": [36, 67], "76944": 36, "perpendicular": 36, "19444444444444445": 36, "12360559235107477": 36, "3307362680171406": 36, "15367913840285474": 36, "21973432050168798": 36, "36363636363636365": 36, "25278": 36, "quadrilater": 36, "02777777777777779": 36, "12678424818870415": 36, "4107908063887807": 36, "4451948682556247": 36, "3996645939435453": 36, "42424242424242425": 36, "76956": 36, "right_angl": 36, "4166666666666667": 36, "08695255651117278": 36, "7415270744059212": 36, "6912823774628103": 36, "4580780578246384": 36, "15909090909090912": 36, "196969696969697": 36, "94102": 36, "solid_angl": 36, "3888888888888889": 36, "3573397570845174": 36, "29631455223594527": 36, "48284225283305426": 36, "59375": 36, "6414141414141414": 36, "31482": 36, "tangent": 36, "4722222222222222": 36, "2535403349997643": 36, "5717479784842091": 36, "47723102055958355": 36, "30654": 36, "triangl": 36, "en": [37, 38, 57, 58], "fr": [37, 38, 57], "de": 37, "textfingerprinttaskrespons": 37, "textfingerprintrespons": 37, "translationtaskrespons": 37, "devic": 37, "translationrespons": 37, "textdetectlanguagetaskrespons": 37, "textdetectlanguagerespons": 37, "playlist": [38, 58], "retrieveurlresponseinn": 38, "retrieveurlrespons": 38, "videofingerprinttaskrespons": 38, "videofingerprintrespons": 38, "force_non_self": 38, "extractaudiotaskrespons": 38, "durat": [38, 39, 58], "extractaudiorespons": 38, "slidetokenandtimestamp": 38, "timestamp": [38, 58, 72], "detectslidestaskrespons": 38, "slide_token": 38, "detectslidesrespons": 38, "audiofingerprinttaskrespons": 39, "fp_nosil": 39, "audiofingerprintrespons": 39, "audiodetectlanguagetaskrespons": 39, "audiodetectlanguagerespons": 39, "force_lang": [39, 58], "strict": 39, "audiotranscriptiontaskrespons": 39, "transcript_result": 39, "subtitle_result": 39, "json": [39, 44, 58, 70], "audiotranscriptionrespons": 39, "interfac": 40, "json_repair": 41, "ontology_util": 41, "auth_util": 41, "common_util": 41, "gpt_message_preset": 41, "text_util": 41, "access_token": 42, "token_typ": 42, "tokendata": 42, "usernam": 42, "scope": 42, "email": [42, 69], "full_nam": 42, "disabl": 42, "userindb": 42, "hashed_password": 42, "generate_random_password_str": 42, "32": [42, 56, 57], "verify_password": 42, "plain_password": 42, "get_password_hash": 42, "password": 42, "get_us": 42, "authenticate_us": 42, "delete_fil": 43, "file_path": [43, 44], "delet": [43, 69], "full": [43, 44, 54, 58], "path": [43, 44, 47, 58, 91], "create_symlink_between_path": 43, "old_path": 43, "new_path": 43, "creat": [43, 44, 55, 56, 57, 60, 70, 73], "symlink": 43, "old": 43, "real": 43, "new": [43, 54, 58, 73], "videodbcachingmanag": 43, "init_db": 43, "audiodbcachingmanag": 43, "slidedbcachingmanag": 43, "textdbcachingmanag": 43, "completiondbcachingmanag": 43, "scrapingdbcachingmanag": 43, "get_details_using_origin": 43, "origin_token": 43, "col": [43, 55], "get": [43, 55, 69], "": [43, 47, 56, 57, 69], "videoconfig": 43, "get_root_dir": 43, "get_image_dir": 43, "get_audio_dir": 43, "get_video_dir": 43, "get_transcript_dir": 43, "concat_file_path": 43, "filenam": [43, 44, 58, 70], "subfold": 43, "concaten": 43, "root": [43, 58], "dir": 43, "given": [43, 44, 54, 55, 56, 57, 58, 60, 61, 63, 64, 69, 70, 72, 86], "should": [43, 70, 78], "generate_filepath": 43, "force_dir": 43, "gener": [43, 56, 57, 58, 64], "its": [43, 54, 55, 56, 58, 86], "particular": 43, "create_symlink": 43, "new_filenam": 43, "fingerprintparamet": 43, "load_valu": 43, "load": [43, 55, 57, 58], "fail": 43, "them": [43, 56, 58], "get_min_sim_text": 43, "get_min_sim_imag": 43, "get_min_sim_audio": 43, "get_min_sim_video": 43, "make_sure_path_exist": 44, "file_at_the_end": 44, "full_perm": 44, "recurs": [44, 58], "folder": [44, 58], "exist": [44, 57, 58, 70], "thu": 44, "doesn": [44, 58], "t": [44, 47, 55, 57, 58, 64, 70], "end": [44, 54, 56, 58, 78, 86], "If": [44, 54, 55, 58, 64, 70, 86], "function": [44, 58, 73, 86], "assign": [44, 86], "permiss": 44, "chmod": 44, "777": 44, "newli": 44, "file_exist": 44, "check": [44, 55, 56], "otherwis": [44, 58, 64, 86], "write_text_fil": 44, "filename_with_path": 44, "content": [44, 56, 58, 70], "write": [44, 58], "textual": 44, "write_json_fil": 44, "d": [44, 67, 69], "read_text_fil": 44, "open": 44, "read": [44, 58, 70], "read_json_fil": 44, "format_datetime_for_mysql": 44, "dt": 44, "parse_mysql_datetim": 44, "get_current_datetim": 44, "current": [44, 58, 72], "datetim": [44, 72], "mysql": 44, "string": [44, 56, 57, 58, 64], "invert_dict": 44, "strtobool": 44, "val": 44, "convert": [44, 55, 69], "represent": [44, 58], "truth": 44, "y": [44, 86], "ye": 44, "n": [44, 55, 91], "f": [44, 73], "off": 44, "rais": 44, "valueerror": 44, "anyth": 44, "els": 44, "case": [44, 58, 70], "insensit": 44, "generate_lecture_summary_messag": 46, "long_len": [46, 57], "short_len": [46, 57], "title_len": [46, 57], "generate_generic_summary_messag": 46, "generate_academic_entity_summary_messag": 46, "conceptsgraph": [47, 63], "fetch_from_db": [47, 52], "old_compute_scor": 47, "source_page_id": 47, "target_page_id": 47, "possibl": [47, 64], "displaystyl": 47, "frac": 47, "ln": 47, "rebound": 47, "out": [47, 63, 64], "min": 47, "element": [47, 55, 56], "ha": [47, 58, 86], "kei": [47, 55, 57, 58, 86], "cg": 47, "compute_scor": 47, "6220": 47, "18973446": 47, "9417": 47, "5193576613841849": 47, "4740698357575134": 47, "3591100561928845": 47, "5343247664351338": 47, "530184349205493": 47, "40043881227279876": 47, "add_graph_scor": 47, "smooth": [47, 52], "includ": [47, 52, 73], "appli": [47, 52], "transform": [47, 52, 54], "bump": 47, "avoid": [47, 70], "neg": 47, "exponenti": 47, "shape": [47, 86], "json_repair_error": 48, "string_util": 48, "repair_json": 49, "at_end_of_block_com": 49, "except": 50, "jsonrepairerror": 50, "messag": [50, 56, 57, 73], "posit": [50, 56], "is_hex": 51, "code": [51, 56, 58, 70], "is_digit": 51, "is_valid_string_charact": 51, "is_delimit": 51, "char": 51, "is_start_of_valu": 51, "is_control_charact": 51, "is_whitespac": 51, "is_special_whitespac": 51, "is_quot": 51, "is_double_quote_lik": 51, "is_double_quot": 51, "is_single_quote_lik": 51, "is_single_quot": 51, "strip_last_occurr": 51, "text_to_strip": 51, "strip_remaining_text": 51, "insert_before_last_whitespac": 51, "text_to_insert": 51, "remove_at_index": 51, "start": [51, 56, 58], "ends_with_comma_or_newlin": 51, "next_non_white_space_charact": 51, "char_code_at": 51, "ind": 51, "char_at": 51, "get_concept_categori": 52, "page_id": 52, "get_predefined_tre": 52, "get_category_par": [52, 55], "get_category_children": [52, 55], "add_concepts_categori": 52, "add_categories_categori": 52, "filter_concept": 52, "add_ontology_scor": 52, "push": 52, "awai": 52, "compute_all_graphs_from_scratch": 54, "data_to_use_dict": 54, "concept_nam": 54, "scratch": 54, "correspond": [54, 58], "map": [54, 55, 56, 72], "matrix": [54, 55], "normalize_featur": 54, "normal": [54, 64, 69], "l2": [54, 55], "norm": [54, 86], "dens": 54, "get_laplacian": 54, "laplacian": 54, "unnorm": 54, "adjac": [54, 55], "lil": 54, "spars": 54, "sum_laplacian": 54, "simpl": 54, "arithmetic_mean_laplacian": 54, "arithmet": [54, 86], "mean": [54, 86], "combine_laplacian": 54, "li": 54, "just": [54, 57], "spec_embed_on_laplacian": 54, "seed": 54, "420": 54, "spectral": 54, "embed": 54, "compon": [54, 63], "random": [54, 58, 91], "optim": [54, 56], "combine_and_embed_laplacian": 54, "main_graph": 54, "n_dim": 54, "1000": 54, "calcul": [54, 58], "combination_method": 54, "armean": 54, "dimens": 54, "perform_pca": 54, "n_compon": 54, "random_st": 54, "center_and_scal": 54, "pca": 54, "state": [54, 67], "after": [54, 78], "dimension": 54, "reduct": 54, "precompute_clustering_metr": 54, "affin": [54, 86], "normalize_vector": 54, "perform_constrained_agglom": 54, "cosin": [54, 86], "linkag": 54, "averag": [54, 55, 86], "full_comput": 54, "agglom": 54, "must": 54, "link": 54, "cannot": 54, "constraint": 54, "ndarrai": [54, 55], "ml": 54, "cl": 54, "point": [54, 56, 78], "return_model": 54, "model": [54, 57, 58], "well": [54, 73], "label": 54, "distanc": [54, 58, 86], "option": [54, 55, 56, 60], "variance_ratio_ev": 54, "varianc": 54, "ratio": [54, 58, 86], "also": [54, 73], "known": 54, "calinski": 54, "harabasz": 54, "davies_bouldin_ev": 54, "davi": 54, "bouldin": 54, "cluster_using_embed": 54, "one": [54, 55, 57, 58, 64, 67, 73, 86], "low": [54, 58, 86], "space": [54, 56, 64, 70], "etc": 54, "group_clust": 54, "rows_and_col": 54, "precomputed_map": 54, "group": 54, "togeth": [54, 55], "becom": 54, "singl": [54, 58], "what": [54, 64], "median": 54, "both": [54, 58, 86], "block": [54, 58, 70, 73], "quot": [54, 58], "without": [54, 58, 73, 86], "blank": [54, 58, 86], "unind": [54, 58, 86], "reassign_outli": 54, "reassign": 54, "outlier": 54, "vector": 54, "size": [54, 58, 63], "cluster_and_reassign_outli": 54, "assign_to_categories_using_exist": 54, "category_concept": 54, "category_id_to_index": 54, "convert_cluster_labels_to_dict": 54, "cluster_label": 54, "concept_index_to_id": 54, "concept_index_to_nam": 54, "db_results_to_pandas_df": 55, "get_id_dict": 55, "make_adj_undirect": 55, "graph_adj": 55, "make": [55, 58], "direct": [55, 86], "undirect": 55, "symmetr": 55, "derive_col_to_col_graph": 55, "orig_adj": 55, "get_col_to_col_dict": 55, "df": [55, 80, 87], "source_col": 55, "target_col": 55, "anoth": 55, "return_chosen_indic": 55, "base_list": 55, "indic": [55, 56, 57, 58], "remove_invalid_pair": 55, "l_main": 55, "l_secondary_1": 55, "l_secondary_2": 55, "ref_dict": 55, "refer": 55, "whose": [55, 58, 86], "appear": 55, "In": 55, "word": [55, 58, 64], "elimin": [55, 56], "doe": [55, 58, 70], "against": 55, "l_secondari": 55, "secondari": 55, "clean": [55, 57, 68], "up": [55, 57, 63], "order": 55, "thei": [55, 58, 64], "were": [55, 57], "create_graph_from_df": 55, "weight_col": 55, "col_dict": 55, "row_dict": 55, "pool_rows_and_col": 55, "make_symmetr": 55, "edg": [55, 56, 63, 86], "turn": 55, "node": 55, "weight": [55, 86], "precomput": 55, "adj": 55, "pool": 55, "convert_to_csr_matrix": 55, "csr": 55, "to_ndarray_and_flatten": 55, "adjusted_exp": 55, "x": [55, 86], "overlap": 55, "adjusted_exp_slope_1_point": 55, "compute_averag": 55, "average_and_combin": 55, "s1": [55, 56], "s2": [55, 56], "l1": 55, "skip_empti": 55, "ontologydata": 55, "test_mod": 55, "kwarg": [55, 60], "load_data": 55, "load_ontology_concept_nam": 55, "load_ontology_categori": 55, "load_non_ontology_concept_nam": 55, "load_concept_concept_graphscor": 55, "load_category_categori": 55, "load_category_concept": 55, "load_anchor_page_dict": 55, "anchor": 55, "tabl": [55, 90], "child": 55, "relat": 55, "compute_category_anchors_using_refer": 55, "compute_symmetric_concept_concept_matrix": 55, "compute_precalculated_similarity_matric": 55, "matric": 55, "get_concept_concept_similar": 55, "concept_1_id": 55, "concept_2_id": 55, "get_concept_cluster_similar": 55, "concept_id": 55, "get_cluster_cluster_similar": 55, "cluster_1_id": 55, "cluster_2_id": 55, "get_concept_category_similar": 55, "4": [55, 73, 96], "coeffici": [55, 86], "get_cluster_category_similar": 55, "get_category_category_similar": 55, "category_1_id": 55, "category_2_id": 55, "get_concept_closest_concept": 55, "find": [55, 56, 58], "top": [55, 57], "get_concept_closest_cluster_of_categori": 55, "under": 55, "term": 55, "get_concept_closest_categori": 55, "use_depth_3": 55, "adaptive_threshold": 55, "go": [55, 63], "directli": [55, 78], "get_cluster_closest_categori": 55, "get_custom_cluster_closest_categori": 55, "custom": 55, "get_category_closest_categori": 55, "As": 55, "compos": 55, "crossov": 55, "get_ontology_concept_names_t": 55, "concepts_to_keep": 55, "get_ontology_category_nam": 55, "get_ontology_category_info": 55, "cat_id": 55, "get_non_ontology_concept_nam": 55, "get_concept_concept_graphscore_t": 55, "get_category_to_categori": 55, "get_cluster_par": 55, "get_cluster_children": 55, "get_concept_parent_categori": 55, "get_concept_parent_clust": 55, "get_category_cluster_list": 55, "get_category_concept_list": 55, "get_cluster_concept_list": 55, "get_category_concept_t": 55, "get_category_cluster_t": 55, "get_category_anchor_pag": 55, "get_cluster_concept": 55, "get_test_concept_nam": 55, "get_test_category_concept": 55, "get_test_cluster_concept": 55, "compare_str": 56, "string1": 56, "string2": 56, "compar": [56, 58, 86], "arrai": 56, "first": [56, 58, 70, 73], "charact": 56, "find_consecutive_run": 56, "v": [56, 58, 86], "min_run": 56, "consecut": [56, 73], "run": [56, 67, 73, 78], "sequenc": [56, 58], "40": 56, "time": [56, 58, 65, 67], "k1": [56, 58], "k2": [56, 58], "find_edge_pattern": 56, "content_stack": 56, "flip_str": 56, "repeat": 56, "pattern": 56, "begin": [56, 58, 73], "webpag": 56, "flip": 56, "footer": 56, "header": 56, "string_circular_shift": 56, "shift": 56, "circular": 56, "mani": [56, 57, 63], "find_spac": 56, "shift_to_max_correl": 56, "maximum": [56, 57, 58, 61, 64, 86], "correl": 56, "largest": 56, "intersect": 56, "find_repeated_pattern": 56, "min_length": 56, "1024": 56, "everywher": 56, "within": 56, "substr": 56, "extract_text_from_url": 56, "request_head": 56, "max_length": [56, 58], "tag_search_sequ": 56, "headless": 56, "browser": 56, "tag": [56, 69], "search": [56, 58, 61], "check_url": 56, "test_url": 56, "access": 56, "fulli": 56, "resolv": 56, "so": [56, 58, 78], "create_base_url_token": 56, "standard": 56, "initialize_url": 56, "base_url": 56, "initi": 56, "determin": [56, 57], "protocol": 56, "http": 56, "correct": 56, "generate_sublink_token": 56, "base_token": 56, "reconstruct_data_dict": 56, "page_typ": 56, "reconstruct": 56, "precalcul": 56, "initialize_data_dict": 56, "fill": 56, "pagetyp": 56, "field": 56, "vacant": 56, "get_sublink": 56, "later": 56, "parse_page_typ": 56, "pars": [56, 58, 69], "predefin": 56, "process_all_sublink": 56, "modifi": 56, "remov": [56, 58], "long": [56, 57], "translation_list_to_text": 57, "str_or_list": 57, "translation_text_back_to_list": 57, "return_list": 57, "md5_text": 57, "md5": [57, 58], "hash": [57, 58], "generate_src_tgt_dict": 57, "generate_translation_text_token": 57, "perceptual_hash_text": 57, "perceptu": [57, 58], "strong": [57, 69], "min_window_length": 57, "window": 57, "k": [57, 58, 86], "gram": 57, "max_window_length": 57, "hash_len": 57, "detect_text_languag": 57, "detect": [57, 58, 78], "compute_slide_tfidf_scor": 57, "list_of_set": 57, "find_set_cov": 57, "find_best_slide_subset": 57, "slides_and_concept": 57, "prioriti": 57, "count_tokens_for_openai": 57, "cl100k_base": 57, "openai": 57, "force_dict_to_text": 57, "generate_summary_text_token": 57, "summary_typ": 57, "generate_completion_type_dict": 57, "convert_text_or_dict_to_text": 57, "text_or_dict": 57, "update_token_count": 57, "old_token_count": 57, "token_count": 57, "compute_chatgpt_request_cost": 57, "model_typ": [57, 58], "chatgptsummar": 57, "establish_connect": [57, 58], "ensur": 57, "boolean": [57, 73], "wa": 57, "found": [57, 58], "200": 57, "temperatur": 57, "top_p": 57, "summarize_gener": 57, "slide_to_concept": 57, "make_sure_json_is_valid": 57, "system_messag": 57, "n_retri": 57, "cleanup_text": 57, "handwrit": 57, "dirti": 57, "typo": 57, "unnecessari": 57, "break": 57, "ocr": [57, 58], "gpt": 57, "creativ": 57, "p": [57, 64, 69], "part": 57, "distribut": 57, "cost": 57, "system": 57, "sent": 57, "too": [57, 73], "translationmodel": 57, "load_model": 57, "huggingfac": 57, "pysbd": 57, "segment": [57, 58], "get_devic": 57, "unpunctu": 57, "flag": 57, "generate_random_token": 58, "retrieve_file_from_generic_url": 58, "output_filename_with_path": 58, "output_token": 58, "wget": 58, "store": [58, 63], "local": 58, "retrieve_file_from_kaltura": 58, "m3u8": 58, "kaltura": 58, "retrieve_file_from_youtub": 58, "download": 58, "youtub": 58, "retrieve_file_from_url": 58, "perform_prob": 58, "input_filename_with_path": 58, "probe": 58, "ffprobe": 58, "see": 58, "document": 58, "perform_slow_audio_prob": 58, "slower": 58, "ffmpeg": 58, "decod": 58, "stream": 58, "generate_symbolic_token": 58, "symbol": 58, "itself": 58, "md5_video_or_audio": 58, "detect_audio_format_and_dur": 58, "input_token": 58, "track": [58, 67, 73], "ogg": 58, "extract_audio_from_video": 58, "extract_media_seg": 58, "find_beginning_and_ending_sil": 58, "distance_from_end_tol": 58, "01": [58, 80], "noise_thresh": 58, "0001": 58, "silenc": 58, "toler": 58, "nois": 58, "remove_silence_doublesid": 58, "unsuccess": 58, "perceptual_hash_audio": 58, "7200": 58, "perceptual_hash_imag": 58, "hash_siz": 58, "16": 58, "compare_decoded_fingerprint": 58, "decoded_1": 58, "decoded_2": 58, "fuzzi": 58, "compare_encoded_fingerprint": 58, "f1": 58, "f2": 58, "decoder_func": 58, "decode_fingerprint": 58, "encod": [58, 69], "exact": 58, "find_closest_fingerprint_from_list": 58, "target_fp": 58, "fp_list": 58, "token_list": 58, "date_list": 58, "candid": 58, "highest": 58, "abov": [58, 72, 86], "lower": 58, "than": [58, 64, 86], "differ": [58, 73, 86], "three": 58, "satisfi": 58, "criterion": 58, "find_closest_audio_fingerprint_from_list": 58, "find_closest_image_fingerprint_from_list": 58, "extract_fram": 58, "output_folder_with_path": 58, "output_fold": 58, "frame": 58, "generate_frame_sample_indic": 58, "input_folder_with_path": 58, "12": 58, "we": 58, "don": [58, 64], "our": 58, "read_txt_gz_fil": 58, "fp": 58, "txt": 58, "gz": 58, "write_txt_gz_fil": 58, "read_json_gz_fil": 58, "perform_tesseract_ocr": 58, "image_path": 58, "tesseract_ocr_or_get_cach": 58, "ocr_path": 58, "langaug": 58, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 58, "nlpmodel": 58, "load_nlp_model": 58, "lazi": 58, "nlp": 58, "get_word": 58, "valid_onli": 58, "get_text_word_vector": 58, "get_text_word_vector_using_word": 58, "get_cosine_sim": 58, "v1": 58, "v2": 58, "frame_ocr_dist": 58, "nlp_model": 58, "frame_hash_similar": 58, "compute_ocr_noise_level": 58, "frame_sample_indic": 58, "sampl": 58, "identifi": 58, "below": [58, 63, 64, 72], "compute_ocr_threshold": 58, "distance_list": 58, "default_threshold": 58, "subsequ": 58, "empti": 58, "check_ocr_and_hash_threshold": 58, "k_l": 58, "k_r": 58, "ocr_dist_threshold": 58, "hash_similarity_threshold": 58, "frame_ocr_transit": 58, "transit": 58, "binari": 58, "frame_format": 58, "leftmost": 58, "rightmost": 58, "distinct": 58, "compute_video_ocr_transit": 58, "hash_dist_threshold": 58, "keep_first": 58, "transitori": 58, "whispertranscriptionmodel": 58, "load_model_whisp": 58, "whisper": 58, "memori": 58, "doc": [58, 78], "detect_audio_segment_lang_whisp": 58, "30": 58, "transcribe_audio_whisp": 58, "verbos": 58, "no_speech_threshold": 58, "6": [58, 73], "logprob_threshold": 58, "explicitli": 58, "feed": [58, 69], "transcript": 58, "probabl": 58, "speech": 58, "predict": 58, "confid": 58, "silent": 58, "treat": 58, "like": 58, "subtitl": 58, "googleocrmodel": 58, "lazili": 58, "connect": [58, 63], "alreadi": 58, "successfulli": 58, "establish": 58, "perform_ocr": 58, "text_detect": 58, "document_text_detect": 58, "wait_for_ocr_result": 58, "image_object": 58, "dtd": 58, "retri": 58, "call": [58, 64], "wait": 58, "td": 58, "failur": 58, "celery_config": 59, "wp": 59, "route_task": 60, "arg": 60, "kw": 60, "baseconfig": 60, "developmentconfig": 60, "get_set": 60, "create_celeri": 60, "app": 60, "get_celery_task": 60, "asyncresult": 60, "get_task_info": 60, "info": 60, "commun": 61, "limit": 61, "queri": 61, "searchrank": 61, "draw": 62, "draw_ontologi": 63, "neighbourhood": 63, "tmp": 63, "serialis": 63, "orient": 63, "record": 63, "succeed": 63, "draw_graph": 63, "word_token": 64, "sentenc": 64, "separ": 64, "you": [64, 69], "rake_extract": 64, "split_word": 64, "return_scor": 64, "auto": 64, "filter_past_tenses_and_adverb": 64, "unconstrain": 64, "python": 64, "rake": 64, "nltk": 64, "more": [64, 67, 73], "split": 64, "retur": 64, "minim": 64, "ignor": 64, "past": 64, "tens": 64, "participl": 64, "adverb": 64, "join": [64, 69], "crowd": 64, "young": 64, "boi": 64, "re": 64, "foolin": 64, "around": 64, "corner": 64, "drunk": 64, "dress": 64, "best": 64, "brown": 64, "baggi": 64, "platform": 64, "sole": 64, "give": 64, "damn": 64, "about": 64, "trumpet": 64, "playin": 64, "band": 64, "ain": 64, "rock": 64, "roll": 64, "get_keyword": 64, "breadcrumb": 65, "progress_bar": 65, "color": [66, 70], "time_color": 66, "grai": 66, "report": [66, 73], "outdent": 66, "progressbar": 67, "n_iter": 67, "bar_length": 67, "50": 67, "progress": 67, "bar": 67, "execut": [67, 73], "usag": [67, 73], "letter": 67, "b": 67, "c": [67, 69, 86], "pb": 67, "len": 67, "consum": [67, 73], "updat": 67, "00": 67, "100": 67, "print": [67, 69, 70, 72, 73], "iter": 67, "percentag": 67, "overwrit": 67, "ban": 67, "reset": [67, 70, 73], "increment": 67, "counter": 67, "reus": [67, 73], "io": 68, "htmlcleaner": 69, "htmlparser": 69, "html": 69, "shiver": 69, "dark": 69, "br": 69, "rain": 69, "park": 69, "meantim": 69, "get_data": 69, "handle_starttag": 69, "attr": 69, "handle_endtag": 69, "handle_data": 69, "solv": 69, "problem": 69, "lowercas": 69, "u2018rain": 69, "u2019": 69, "lt": 69, "evalu": 70, "pref": 70, "x1b": 70, "0m": 70, "black": 70, "30m": 70, "blue": 70, "34m": 70, "cyan": 70, "36m": 70, "green": 70, "32m": 70, "magenta": 70, "35m": 70, "red": 70, "31m": 70, "white": 70, "37m": 70, "yellow": 70, "33m": 70, "cprint": 70, "is_bold": 70, "bold": 70, "pprint": 70, "inlin": 70, "only_first": 70, "pretti": 70, "preced": 70, "skip": 70, "ellipsi": 70, "big": 70, "read_json": 70, "save_json": 70, "save": 70, "mkdir": 70, "dirnam": 70, "directori": 70, "date": [71, 78], "stopwatch": 71, "now": 72, "2022": 72, "06": 72, "28": 72, "09": 72, "46": 72, "21": 72, "677968": 72, "rescal": 72, "min_dat": 72, "max_dat": 72, "seri": 72, "rang": [72, 86], "assum": [72, 86], "yyyi": 72, "mm": 72, "dd": 72, "add_year": 72, "n_year": 72, "sw": 73, "delta": 73, "284306764602661": 73, "variabl": 73, "t1": 73, "t2": 73, "yet": 73, "t3": 73, "609307289123535": 73, "849977970123291": 73, "660188913345337": 73, "preprocess": 73, "pre_tim": 73, "task_tim": 73, "postprocess": 73, "post_tim": 73, "total_tim": 73, "proport": 73, "5176954220125477": 73, "tick": 73, "replac": [73, 86], "partial": 73, "furthermor": 73, "19": 73, "86": 73, "lap": 73, "74": 73, "11": 73, "66": 73, "45": 73, "checkpoint": 73, "finish": 73, "last": 73, "befor": [73, 86], "invest": 75, "visualis": 75, "create_index": 76, "populate_index": 76, "script": 78, "popul": 78, "aitor_concepts_": 78, "mediawiki": 78, "campus_analyt": 78, "creation": [78, 90], "said": 78, "could": 78, "veri": 78, "index_doc": 78, "aggregate_recent_past": 79, "check_unit": 79, "compute_fundraisers_unit": 79, "compute_investors_unit": 79, "compute_investors_units_2": 79, "compute_jaccard_index": 79, "concept_configur": 79, "create_investments_graph": 79, "detect_fundraisers_concept": 79, "toy_exampl": 79, "compute_year_coeffici": 80, "recent_past": 80, "rescale_scor": 80, "year": 80, "aggregate_year": 80, "groupby_column": [80, 87], "normalize_scor": 80, "score_column": 80, "show_trend": 81, "unit_id": 81, "unit_concept": 81, "show_matchmaking_list_view": 81, "investors_concepts_jaccard": 81, "investors_concept": 81, "unit_concept_id": 81, "show_matchmaking_chart_view": 81, "unit_investor": 81, "time_window": 81, "configur": 86, "investorid": 86, "sqrt": 86, "sum_": 86, "o": 86, "divid": 86, "henc": 86, "have": 86, "mix": 86, "min_ratio": 86, "05": 86, "sourcepageid": 86, "targetpageid": 86, "defin": [86, 90], "product": 86, "ball": 86, "loop": 86, "normalise_graph": 86, "add": 86, "miss": 86, "revers": 86, "vertex": 86, "associ": 86, "key_x": 86, "key_i": 86, "geometr": 86, "compute_affin": 86, "mix_x": 86, "mix_i": 86, "normalise_befor": 86, "requir": 86, "recommend": 86, "euclidean": 86, "notic": 86, "faster": 86, "inf": 86, "typic": 86, "higher": 86, "unus": 86, "u": 86, "squar": 86, "equival": 86, "scalar": 86, "tanh": 86, "denot": 86, "get_fr": 87, "db": 87, "get_investors_fr": 87, "fr_id": 87, "get_frs_fundrais": 87, "get_fundraisers_concept": 87, "fundraiser_id": 87, "derive_yearly_data": 87, "date_column": 87, "amount_column": 87, "build_prefix": 90, "1_old": 92, "2_new": 92, "3_slide": 92, "startup": 96}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [40, 0, 0, "-", "core"], [74, 0, 0, "-", "definitions"], [75, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "main"], [20, 0, 0, "-", "routers"], [30, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "completion"], [5, 0, 0, "-", "image"], [6, 0, 0, "-", "ontology"], [7, 0, 0, "-", "scraping"], [8, 0, 0, "-", "text"], [9, 0, 0, "-", "translation"], [10, 0, 0, "-", "video"], [11, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[8, 1, 1, "", "aggregate_results"], [8, 1, 1, "", "filter_results"]], "graphai.api.common": [[13, 0, 0, "-", "celery_tools"], [14, 0, 0, "-", "graph"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "translation"], [18, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[13, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[15, 1, 1, "", "log"]], "graphai.api.main": [[19, 1, 1, "", "init"], [19, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[21, 0, 0, "-", "auth"], [22, 0, 0, "-", "completion"], [23, 0, 0, "-", "image"], [24, 0, 0, "-", "ontology"], [25, 0, 0, "-", "scraping"], [26, 0, 0, "-", "text"], [27, 0, 0, "-", "translation"], [28, 0, 0, "-", "video"], [29, 0, 0, "-", "voice"]], "graphai.api.routers.auth": [[21, 1, 1, "", "create_access_token"], [21, 1, 1, "", "get_active_user_dummy"], [21, 1, 1, "", "get_current_active_user"], [21, 1, 1, "", "get_current_user"], [21, 1, 1, "", "login_for_access_token"], [21, 1, 1, "", "read_users_me"]], "graphai.api.routers.completion": [[22, 1, 1, "", "calculate_summary_text_fingerprint"], [22, 1, 1, "", "calculate_summary_text_fingerprint_status"], [22, 1, 1, "", "choose_best_subset"], [22, 1, 1, "", "clean_up"], [22, 1, 1, "", "get_cleanup_task_chain"], [22, 1, 1, "", "get_completion_task_chain"], [22, 1, 1, "", "get_completion_text_fingerprint_chain_list"], [22, 1, 1, "", "populate_academic_entity_dict"], [22, 1, 1, "", "populate_slide_concepts_dict"], [22, 1, 1, "", "summarize_academic_entity"], [22, 1, 1, "", "summarize_lecture"], [22, 1, 1, "", "summarize_status"], [22, 1, 1, "", "summarize_text"]], "graphai.api.routers.image": [[23, 1, 1, "", "calculate_slide_fingerprint"], [23, 1, 1, "", "calculate_slide_fingerprint_status"], [23, 1, 1, "", "detect_ocr_language_status"], [23, 1, 1, "", "extract_text"], [23, 1, 1, "", "extract_text_status"], [23, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[24, 1, 1, "", "break_up_cluster"], [24, 1, 1, "", "cat_children"], [24, 1, 1, "", "cat_info"], [24, 1, 1, "", "cat_parent"], [24, 1, 1, "", "cluster_children"], [24, 1, 1, "", "cluster_parent"], [24, 1, 1, "", "compute_graph_cluster_nearest_category"], [24, 1, 1, "", "compute_graph_concept_nearest_category"], [24, 1, 1, "", "compute_graph_distance"], [24, 1, 1, "", "compute_graph_nearest_concept"], [24, 1, 1, "", "recompute_clusters"], [24, 1, 1, "", "recompute_clusters_status"], [24, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[25, 1, 1, "", "extract_page_content"], [25, 1, 1, "", "extract_page_content_status"], [25, 1, 1, "", "extract_sublinks"], [25, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.text": [[26, 1, 1, "", "keywords"], [26, 1, 1, "", "priority_test_text"], [26, 1, 1, "", "wikify"], [26, 1, 1, "", "wikify_graph_svg"], [26, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[27, 1, 1, "", "calculate_translation_text_fingerprint"], [27, 1, 1, "", "calculate_translation_text_fingerprint_status"], [27, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [27, 1, 1, "", "text_detect_language"], [27, 1, 1, "", "text_detect_language_status"], [27, 1, 1, "", "translate"], [27, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[28, 1, 1, "", "calculate_video_fingerprint"], [28, 1, 1, "", "calculate_video_fingerprint_status"], [28, 1, 1, "", "detect_slides"], [28, 1, 1, "", "detect_slides_status"], [28, 1, 1, "", "extract_audio"], [28, 1, 1, "", "extract_audio_status"], [28, 1, 1, "", "get_file"], [28, 1, 1, "", "get_retrieve_file_status"], [28, 1, 1, "", "get_video_fingerprint_chain_list"], [28, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[29, 1, 1, "", "calculate_audio_fingerprint"], [29, 1, 1, "", "calculate_audio_fingerprint_status"], [29, 1, 1, "", "detect_language"], [29, 1, 1, "", "detect_language_status"], [29, 1, 1, "", "get_audio_fingerprint_chain_list"], [29, 1, 1, "", "priority_test"], [29, 1, 1, "", "transcribe"], [29, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[31, 0, 0, "-", "common"], [32, 0, 0, "-", "completion"], [33, 0, 0, "-", "image"], [34, 0, 0, "-", "ontology"], [35, 0, 0, "-", "scraping"], [36, 0, 0, "-", "text"], [37, 0, 0, "-", "translation"], [38, 0, 0, "-", "video"], [39, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[31, 2, 1, "", "FileRequest"], [31, 2, 1, "", "TaskIDResponse"], [31, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[31, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[31, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[31, 3, 1, "", "task_id"], [31, 3, 1, "", "task_name"], [31, 3, 1, "", "task_result"], [31, 3, 1, "", "task_status"]], "graphai.api.schemas.completion": [[32, 2, 1, "", "AcademicEntityDescriptor"], [32, 2, 1, "", "AcademicEntitySummarizationRequest"], [32, 2, 1, "", "AcademicEntitySummaryResponse"], [32, 2, 1, "", "AcademicEntitySummaryResponseDict"], [32, 2, 1, "", "AcademicEntitySummaryTaskResponse"], [32, 2, 1, "", "CleanupRequest"], [32, 2, 1, "", "CleanupResponse"], [32, 2, 1, "", "CleanupResponseDict"], [32, 2, 1, "", "CleanupTaskResponse"], [32, 2, 1, "", "CompletionRequestBase"], [32, 2, 1, "", "CompletionTaskResponseBase"], [32, 2, 1, "", "GenericSummarizationRequest"], [32, 2, 1, "", "LectureSummarizationRequest"], [32, 2, 1, "", "SlideConceptsMap"], [32, 2, 1, "", "SlideSubsetRequest"], [32, 2, 1, "", "SlideSubsetResponse"], [32, 2, 1, "", "SummaryFingerprintRequest"], [32, 2, 1, "", "SummaryFingerprintResponse"], [32, 2, 1, "", "SummaryFingerprintTaskResponse"], [32, 2, 1, "", "SummaryResponse"], [32, 2, 1, "", "SummaryResponseDict"], [32, 2, 1, "", "SummaryTaskResponse"]], "graphai.api.schemas.completion.AcademicEntityDescriptor": [[32, 3, 1, "", "categories"], [32, 3, 1, "", "entity"], [32, 3, 1, "", "name"], [32, 3, 1, "", "possible_subtypes"], [32, 3, 1, "", "subtype"], [32, 3, 1, "", "text"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict": [[32, 3, 1, "", "inferred_subtype"], [32, 3, 1, "", "top_3_categories"]], "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse": [[32, 3, 1, "", "result"]], "graphai.api.schemas.completion.CleanupRequest": [[32, 3, 1, "", "text"], [32, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.CleanupResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.CleanupResponseDict": [[32, 3, 1, "", "for_wikify"], [32, 3, 1, "", "subject"], [32, 3, 1, "", "text"]], "graphai.api.schemas.completion.CleanupTaskResponse": [[32, 3, 1, "", "result"]], "graphai.api.schemas.completion.CompletionRequestBase": [[32, 3, 1, "", "debug"], [32, 3, 1, "", "force"], [32, 3, 1, "", "simulate"]], "graphai.api.schemas.completion.CompletionTaskResponseBase": [[32, 3, 1, "", "approx_cost"], [32, 3, 1, "", "debug_message"], [32, 3, 1, "", "fresh"], [32, 3, 1, "", "result_type"], [32, 3, 1, "", "successful"], [32, 3, 1, "", "text_too_large"], [32, 3, 1, "", "tokens"]], "graphai.api.schemas.completion.GenericSummarizationRequest": [[32, 3, 1, "", "keywords"], [32, 3, 1, "", "text"]], "graphai.api.schemas.completion.LectureSummarizationRequest": [[32, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideConceptsMap": [[32, 3, 1, "", "concepts"], [32, 3, 1, "", "number"]], "graphai.api.schemas.completion.SlideSubsetRequest": [[32, 3, 1, "", "coverage"], [32, 3, 1, "", "min_freq"], [32, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideSubsetResponse": [[32, 3, 1, "", "subset"]], "graphai.api.schemas.completion.SummaryFingerprintRequest": [[32, 3, 1, "", "completion_type"], [32, 3, 1, "", "force"], [32, 3, 1, "", "text"], [32, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.SummaryFingerprintResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryFingerprintTaskResponse": [[32, 3, 1, "", "closest_token"], [32, 3, 1, "", "fresh"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.completion.SummaryResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryResponseDict": [[32, 3, 1, "", "summary_long"], [32, 3, 1, "", "summary_short"], [32, 3, 1, "", "title"]], "graphai.api.schemas.completion.SummaryTaskResponse": [[32, 3, 1, "", "result"]], "graphai.api.schemas.image": [[33, 2, 1, "", "DetectOCRLanguageResponse"], [33, 2, 1, "", "DetectOCRLanguageTaskResponse"], [33, 2, 1, "", "ExtractTextRequest"], [33, 2, 1, "", "ExtractTextResponse"], [33, 2, 1, "", "ExtractTextTaskResponse"], [33, 2, 1, "", "ImageFingerprintRequest"], [33, 2, 1, "", "ImageFingerprintResponse"], [33, 2, 1, "", "ImageFingerprintTaskResponse"], [33, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "language"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "method"], [33, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "language"], [33, 3, 1, "", "result"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[33, 3, 1, "", "closest_token"], [33, 3, 1, "", "closest_token_origin"], [33, 3, 1, "", "fresh"], [33, 3, 1, "", "result"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[33, 3, 1, "", "method"], [33, 3, 1, "", "text"]], "graphai.api.schemas.ontology": [[34, 2, 1, "", "BreakUpClusterRequest"], [34, 2, 1, "", "BreakUpClustersClusterNumberResponse"], [34, 2, 1, "", "BreakUpClustersResponse"], [34, 2, 1, "", "CategoryChildrenRequest"], [34, 2, 1, "", "CategoryInfoRequest"], [34, 2, 1, "", "CategoryInfoResponse"], [34, 2, 1, "", "CategoryParentResponse"], [34, 2, 1, "", "ClusterInfoRequest"], [34, 2, 1, "", "GraphClusterNearestCategoryRequest"], [34, 2, 1, "", "GraphClusterNearestCategoryResponse"], [34, 2, 1, "", "GraphConceptNearestCategoryRequest"], [34, 2, 1, "", "GraphConceptNearestCategoryResponse"], [34, 2, 1, "", "GraphDistanceRequest"], [34, 2, 1, "", "GraphDistanceResponse"], [34, 2, 1, "", "GraphNearestCategoryRequest"], [34, 2, 1, "", "GraphNearestConceptRequest"], [34, 2, 1, "", "GraphNearestConceptResponse"], [34, 2, 1, "", "NearestCategoryElement"], [34, 2, 1, "", "NearestCategoryElementWithClusters"], [34, 2, 1, "", "NearestClusterElement"], [34, 2, 1, "", "OneConceptResponseElement"], [34, 2, 1, "", "RecomputeClustersRequest"], [34, 2, 1, "", "RecomputeClustersResponse"], [34, 2, 1, "", "RecomputeClustersTaskResponse"], [34, 2, 1, "", "TreeChildrenResponse"], [34, 2, 1, "", "TreeParentResponse"], [34, 2, 1, "", "TreeResponse"], [34, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.BreakUpClusterRequest": [[34, 3, 1, "", "cluster_id"], [34, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse": [[34, 3, 1, "", "clusters"], [34, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersResponse": [[34, 3, 1, "", "results"]], "graphai.api.schemas.ontology.CategoryChildrenRequest": [[34, 3, 1, "", "category_id"], [34, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.CategoryInfoRequest": [[34, 3, 1, "", "category_id"]], "graphai.api.schemas.ontology.CategoryInfoResponse": [[34, 3, 1, "", "category_id"], [34, 3, 1, "", "depth"], [34, 3, 1, "", "id"], [34, 3, 1, "", "name"]], "graphai.api.schemas.ontology.CategoryParentResponse": [[34, 3, 1, "", "parent"]], "graphai.api.schemas.ontology.ClusterInfoRequest": [[34, 3, 1, "", "cluster_id"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest": [[34, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse": [[34, 3, 1, "", "existing_label"], [34, 3, 1, "", "parent_category"], [34, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest": [[34, 3, 1, "", "return_clusters"], [34, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse": [[34, 3, 1, "", "existing_label"], [34, 3, 1, "", "parent_category"], [34, 3, 1, "", "scores"], [34, 3, 1, "", "valid"]], "graphai.api.schemas.ontology.GraphDistanceRequest": [[34, 3, 1, "", "avg"], [34, 3, 1, "", "coeffs"], [34, 3, 1, "", "src"], [34, 3, 1, "", "src_type"], [34, 3, 1, "", "tgt"], [34, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.GraphDistanceResponse": [[34, 3, 1, "", "sim"]], "graphai.api.schemas.ontology.GraphNearestCategoryRequest": [[34, 3, 1, "", "avg"], [34, 3, 1, "", "coeffs"], [34, 3, 1, "", "top_down_search"], [34, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptRequest": [[34, 3, 1, "", "src"], [34, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptResponse": [[34, 3, 1, "", "closest"], [34, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.NearestCategoryElement": [[34, 3, 1, "", "category_id"], [34, 3, 1, "", "rank"], [34, 3, 1, "", "score"]], "graphai.api.schemas.ontology.NearestCategoryElementWithClusters": [[34, 3, 1, "", "clusters"]], "graphai.api.schemas.ontology.NearestClusterElement": [[34, 3, 1, "", "cluster_id"], [34, 3, 1, "", "rank"], [34, 3, 1, "", "score"]], "graphai.api.schemas.ontology.OneConceptResponseElement": [[34, 3, 1, "", "id"], [34, 3, 1, "", "name"]], "graphai.api.schemas.ontology.RecomputeClustersRequest": [[34, 3, 1, "", "min_n"], [34, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.RecomputeClustersResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.RecomputeClustersTaskResponse": [[34, 3, 1, "", "category_assignments"], [34, 3, 1, "", "impurity_count"], [34, 3, 1, "", "impurity_proportion"], [34, 3, 1, "", "results"], [34, 3, 1, "", "successful"]], "graphai.api.schemas.ontology.TreeChildrenResponse": [[34, 3, 1, "", "child_type"], [34, 3, 1, "", "children"]], "graphai.api.schemas.ontology.TreeParentResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponse": [[34, 3, 1, "", "child_to_parent"]], "graphai.api.schemas.ontology.TreeResponseElem": [[34, 3, 1, "", "child_id"], [34, 3, 1, "", "parent_id"]], "graphai.api.schemas.scraping": [[35, 2, 1, "", "ExtractContentRequest"], [35, 2, 1, "", "ExtractContentResponse"], [35, 2, 1, "", "ExtractContentTaskResponse"], [35, 2, 1, "", "GetSublinksRequest"], [35, 2, 1, "", "GetSublinksResponse"], [35, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[35, 3, 1, "", "remove_headers"], [35, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[35, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[35, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[35, 3, 1, "", "force"], [35, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[35, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[35, 3, 1, "", "fresh"], [35, 3, 1, "", "status_msg"], [35, 3, 1, "", "sublinks"], [35, 3, 1, "", "successful"], [35, 3, 1, "", "token"], [35, 3, 1, "", "validated_url"]], "graphai.api.schemas.text": [[36, 2, 1, "", "KeywordsRequest"], [36, 2, 1, "", "WikifyFromKeywordsRequest"], [36, 2, 1, "", "WikifyFromRawTextRequest"], [36, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[36, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyFromKeywordsRequest": [[36, 3, 1, "", "keywords"]], "graphai.api.schemas.text.WikifyFromRawTextRequest": [[36, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[36, 2, 1, "", "Config"], [36, 3, 1, "", "GraphScore"], [36, 3, 1, "", "KeywordsScore"], [36, 3, 1, "", "LevenshteinScore"], [36, 3, 1, "", "MixedScore"], [36, 3, 1, "", "OntologyGlobalScore"], [36, 3, 1, "", "OntologyLocalScore"], [36, 3, 1, "", "PageID"], [36, 3, 1, "", "PageTitle"], [36, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[36, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[37, 2, 1, "", "TextDetectLanguageRequest"], [37, 2, 1, "", "TextDetectLanguageResponse"], [37, 2, 1, "", "TextDetectLanguageTaskResponse"], [37, 2, 1, "", "TextFingerprintRequest"], [37, 2, 1, "", "TextFingerprintResponse"], [37, 2, 1, "", "TextFingerprintTaskResponse"], [37, 2, 1, "", "TranslationRequest"], [37, 2, 1, "", "TranslationResponse"], [37, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[37, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[37, 3, 1, "", "language"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "source"], [37, 3, 1, "", "target"], [37, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[37, 3, 1, "", "closest_token"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "source"], [37, 3, 1, "", "target"], [37, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[37, 3, 1, "", "device"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[38, 2, 1, "", "DetectSlidesRequest"], [38, 2, 1, "", "DetectSlidesResponse"], [38, 2, 1, "", "DetectSlidesTaskResponse"], [38, 2, 1, "", "ExtractAudioRequest"], [38, 2, 1, "", "ExtractAudioResponse"], [38, 2, 1, "", "ExtractAudioTaskResponse"], [38, 2, 1, "", "RetrieveURLRequest"], [38, 2, 1, "", "RetrieveURLResponse"], [38, 2, 1, "", "RetrieveURLResponseInner"], [38, 2, 1, "", "SlideTokenAndTimeStamp"], [38, 2, 1, "", "VideoFingerprintRequest"], [38, 2, 1, "", "VideoFingerprintResponse"], [38, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "force_non_self"], [38, 3, 1, "", "language"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "slide_tokens"], [38, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "force_non_self"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[38, 3, 1, "", "duration"], [38, 3, 1, "", "fresh"], [38, 3, 1, "", "successful"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "playlist"], [38, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "successful"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[38, 3, 1, "", "timestamp"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[38, 3, 1, "", "closest_token"], [38, 3, 1, "", "fresh"], [38, 3, 1, "", "result"], [38, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[39, 2, 1, "", "AudioDetectLanguageRequest"], [39, 2, 1, "", "AudioDetectLanguageResponse"], [39, 2, 1, "", "AudioDetectLanguageTaskResponse"], [39, 2, 1, "", "AudioFingerprintRequest"], [39, 2, 1, "", "AudioFingerprintResponse"], [39, 2, 1, "", "AudioFingerprintTaskResponse"], [39, 2, 1, "", "AudioTranscriptionRequest"], [39, 2, 1, "", "AudioTranscriptionResponse"], [39, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[39, 3, 1, "", "force"], [39, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[39, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[39, 3, 1, "", "fresh"], [39, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[39, 3, 1, "", "force"], [39, 3, 1, "", "remove_silence"], [39, 3, 1, "", "threshold"], [39, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[39, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[39, 3, 1, "", "closest_token"], [39, 3, 1, "", "closest_token_origin"], [39, 3, 1, "", "duration"], [39, 3, 1, "", "fp_nosilence"], [39, 3, 1, "", "fresh"], [39, 3, 1, "", "result"], [39, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[39, 3, 1, "", "force"], [39, 3, 1, "", "force_lang"], [39, 3, 1, "", "strict"], [39, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[39, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[39, 3, 1, "", "fresh"], [39, 3, 1, "", "language"], [39, 3, 1, "", "subtitle_results"], [39, 3, 1, "", "transcript_results"]], "graphai.core": [[41, 0, 0, "-", "common"], [59, 0, 0, "-", "interfaces"], [62, 0, 0, "-", "text"], [65, 0, 0, "-", "utils"]], "graphai.core.common": [[42, 0, 0, "-", "auth_utils"], [43, 0, 0, "-", "caching"], [44, 0, 0, "-", "common_utils"], [45, 0, 0, "-", "config"], [46, 0, 0, "-", "gpt_message_presets"], [47, 0, 0, "-", "graph"], [48, 0, 0, "-", "json_repair"], [52, 0, 0, "-", "ontology"], [53, 0, 0, "-", "ontology_utils"], [56, 0, 0, "-", "scraping"], [57, 0, 0, "-", "text_utils"], [58, 0, 0, "-", "video"]], "graphai.core.common.auth_utils": [[42, 2, 1, "", "Token"], [42, 2, 1, "", "TokenData"], [42, 2, 1, "", "User"], [42, 2, 1, "", "UserInDB"], [42, 1, 1, "", "authenticate_user"], [42, 1, 1, "", "generate_random_password_string"], [42, 1, 1, "", "get_password_hash"], [42, 1, 1, "", "get_user"], [42, 1, 1, "", "verify_password"]], "graphai.core.common.auth_utils.Token": [[42, 3, 1, "", "access_token"], [42, 3, 1, "", "token_type"]], "graphai.core.common.auth_utils.TokenData": [[42, 3, 1, "", "scopes"], [42, 3, 1, "", "username"]], "graphai.core.common.auth_utils.User": [[42, 3, 1, "", "disabled"], [42, 3, 1, "", "email"], [42, 3, 1, "", "full_name"], [42, 3, 1, "", "scopes"], [42, 3, 1, "", "username"]], "graphai.core.common.auth_utils.UserInDB": [[42, 3, 1, "", "hashed_password"]], "graphai.core.common.caching": [[43, 2, 1, "", "AudioDBCachingManager"], [43, 2, 1, "", "CompletionDBCachingManager"], [43, 2, 1, "", "FingerprintParameters"], [43, 2, 1, "", "ScrapingDBCachingManager"], [43, 2, 1, "", "SlideDBCachingManager"], [43, 2, 1, "", "TextDBCachingManager"], [43, 2, 1, "", "VideoConfig"], [43, 2, 1, "", "VideoDBCachingManager"], [43, 1, 1, "", "create_symlink_between_paths"], [43, 1, 1, "", "delete_file"]], "graphai.core.common.caching.AudioDBCachingManager": [[43, 4, 1, "", "init_db"]], "graphai.core.common.caching.CompletionDBCachingManager": [[43, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[43, 4, 1, "", "get_min_sim_audio"], [43, 4, 1, "", "get_min_sim_image"], [43, 4, 1, "", "get_min_sim_text"], [43, 4, 1, "", "get_min_sim_video"], [43, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[43, 4, 1, "", "get_details_using_origin"], [43, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[43, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[43, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[43, 4, 1, "", "concat_file_path"], [43, 4, 1, "", "create_symlink"], [43, 4, 1, "", "generate_filepath"], [43, 4, 1, "", "get_audio_dir"], [43, 4, 1, "", "get_image_dir"], [43, 4, 1, "", "get_root_dir"], [43, 4, 1, "", "get_transcript_dir"], [43, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[43, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[44, 1, 1, "", "file_exists"], [44, 1, 1, "", "format_datetime_for_mysql"], [44, 1, 1, "", "get_current_datetime"], [44, 1, 1, "", "invert_dict"], [44, 1, 1, "", "make_sure_path_exists"], [44, 1, 1, "", "parse_mysql_datetime"], [44, 1, 1, "", "read_json_file"], [44, 1, 1, "", "read_text_file"], [44, 1, 1, "", "strtobool"], [44, 1, 1, "", "write_json_file"], [44, 1, 1, "", "write_text_file"]], "graphai.core.common.gpt_message_presets": [[46, 1, 1, "", "generate_academic_entity_summary_message"], [46, 1, 1, "", "generate_generic_summary_message"], [46, 1, 1, "", "generate_lecture_summary_message"]], "graphai.core.common.graph": [[47, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[47, 4, 1, "", "add_graph_score"], [47, 4, 1, "", "fetch_from_db"], [47, 4, 1, "", "old_compute_scores"]], "graphai.core.common.json_repair": [[49, 0, 0, "-", "json_repair"], [50, 0, 0, "-", "json_repair_error"], [51, 0, 0, "-", "string_utils"]], "graphai.core.common.json_repair.json_repair": [[49, 1, 1, "", "at_end_of_block_comment"], [49, 1, 1, "", "repair_json"]], "graphai.core.common.json_repair.json_repair_error": [[50, 5, 1, "", "JSONRepairError"]], "graphai.core.common.json_repair.string_utils": [[51, 1, 1, "", "char_at"], [51, 1, 1, "", "char_code_at"], [51, 1, 1, "", "ends_with_comma_or_newline"], [51, 1, 1, "", "insert_before_last_whitespace"], [51, 1, 1, "", "is_control_character"], [51, 1, 1, "", "is_delimiter"], [51, 1, 1, "", "is_digit"], [51, 1, 1, "", "is_double_quote"], [51, 1, 1, "", "is_double_quote_like"], [51, 1, 1, "", "is_hex"], [51, 1, 1, "", "is_quote"], [51, 1, 1, "", "is_single_quote"], [51, 1, 1, "", "is_single_quote_like"], [51, 1, 1, "", "is_special_whitespace"], [51, 1, 1, "", "is_start_of_value"], [51, 1, 1, "", "is_valid_string_character"], [51, 1, 1, "", "is_whitespace"], [51, 1, 1, "", "next_non_white_space_character"], [51, 1, 1, "", "remove_at_index"], [51, 1, 1, "", "strip_last_occurrence"]], "graphai.core.common.ontology": [[52, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[52, 4, 1, "", "add_categories_category"], [52, 4, 1, "", "add_concepts_category"], [52, 4, 1, "", "add_ontology_scores"], [52, 4, 1, "", "fetch_from_db"], [52, 4, 1, "", "filter_concepts"], [52, 4, 1, "", "get_category_children"], [52, 4, 1, "", "get_category_parent"], [52, 4, 1, "", "get_concept_category"], [52, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.ontology_utils": [[54, 0, 0, "-", "clustering"], [55, 0, 0, "-", "data"]], "graphai.core.common.ontology_utils.clustering": [[54, 1, 1, "", "arithmetic_mean_laplacians"], [54, 1, 1, "", "assign_to_categories_using_existing"], [54, 1, 1, "", "cluster_and_reassign_outliers"], [54, 1, 1, "", "cluster_using_embedding"], [54, 1, 1, "", "combine_and_embed_laplacian"], [54, 1, 1, "", "combine_laplacians"], [54, 1, 1, "", "compute_all_graphs_from_scratch"], [54, 1, 1, "", "convert_cluster_labels_to_dict"], [54, 1, 1, "", "davies_bouldin_eval"], [54, 1, 1, "", "get_laplacian"], [54, 1, 1, "", "group_clustered"], [54, 1, 1, "", "normalize_features"], [54, 1, 1, "", "perform_PCA"], [54, 1, 1, "", "perform_constrained_agglomerative"], [54, 1, 1, "", "precompute_clustering_metric"], [54, 1, 1, "", "reassign_outliers"], [54, 1, 1, "", "spec_embed_on_laplacian"], [54, 1, 1, "", "sum_laplacians"], [54, 1, 1, "", "variance_ratio_eval"]], "graphai.core.common.ontology_utils.data": [[55, 2, 1, "", "OntologyData"], [55, 1, 1, "", "adjusted_exp"], [55, 1, 1, "", "adjusted_exp_slope_1_point"], [55, 1, 1, "", "average_and_combine"], [55, 1, 1, "", "compute_average"], [55, 1, 1, "", "convert_to_csr_matrix"], [55, 1, 1, "", "create_graph_from_df"], [55, 1, 1, "", "db_results_to_pandas_df"], [55, 1, 1, "", "derive_col_to_col_graph"], [55, 1, 1, "", "get_col_to_col_dict"], [55, 1, 1, "", "get_id_dict"], [55, 1, 1, "", "make_adj_undirected"], [55, 1, 1, "", "remove_invalid_pairs"], [55, 1, 1, "", "return_chosen_indices"], [55, 1, 1, "", "to_ndarray_and_flatten"]], "graphai.core.common.ontology_utils.data.OntologyData": [[55, 4, 1, "", "compute_category_anchors_using_references"], [55, 4, 1, "", "compute_precalculated_similarity_matrices"], [55, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [55, 4, 1, "", "get_category_anchor_pages"], [55, 4, 1, "", "get_category_category_similarity"], [55, 4, 1, "", "get_category_children"], [55, 4, 1, "", "get_category_closest_category"], [55, 4, 1, "", "get_category_cluster_list"], [55, 4, 1, "", "get_category_cluster_table"], [55, 4, 1, "", "get_category_concept_list"], [55, 4, 1, "", "get_category_concept_table"], [55, 4, 1, "", "get_category_parent"], [55, 4, 1, "", "get_category_to_category"], [55, 4, 1, "", "get_cluster_category_similarity"], [55, 4, 1, "", "get_cluster_children"], [55, 4, 1, "", "get_cluster_closest_category"], [55, 4, 1, "", "get_cluster_cluster_similarity"], [55, 4, 1, "", "get_cluster_concept_list"], [55, 4, 1, "", "get_cluster_concepts"], [55, 4, 1, "", "get_cluster_parent"], [55, 4, 1, "", "get_concept_category_similarity"], [55, 4, 1, "", "get_concept_closest_category"], [55, 4, 1, "", "get_concept_closest_cluster_of_category"], [55, 4, 1, "", "get_concept_closest_concept"], [55, 4, 1, "", "get_concept_cluster_similarity"], [55, 4, 1, "", "get_concept_concept_graphscore_table"], [55, 4, 1, "", "get_concept_concept_similarity"], [55, 4, 1, "", "get_concept_parent_category"], [55, 4, 1, "", "get_concept_parent_cluster"], [55, 4, 1, "", "get_custom_cluster_closest_category"], [55, 4, 1, "", "get_non_ontology_concept_names"], [55, 4, 1, "", "get_ontology_category_info"], [55, 4, 1, "", "get_ontology_category_names"], [55, 4, 1, "", "get_ontology_concept_names_table"], [55, 4, 1, "", "get_test_category_concept"], [55, 4, 1, "", "get_test_cluster_concept"], [55, 4, 1, "", "get_test_concept_names"], [55, 4, 1, "", "load_anchor_page_dict"], [55, 4, 1, "", "load_category_category"], [55, 4, 1, "", "load_category_concept"], [55, 4, 1, "", "load_concept_concept_graphscore"], [55, 4, 1, "", "load_data"], [55, 4, 1, "", "load_non_ontology_concept_names"], [55, 4, 1, "", "load_ontology_categories"], [55, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.common.scraping": [[56, 1, 1, "", "check_url"], [56, 1, 1, "", "compare_strings"], [56, 1, 1, "", "create_base_url_token"], [56, 1, 1, "", "extract_text_from_url"], [56, 1, 1, "", "find_consecutive_runs"], [56, 1, 1, "", "find_edge_patterns"], [56, 1, 1, "", "find_repeated_patterns"], [56, 1, 1, "", "find_spaces"], [56, 1, 1, "", "generate_sublink_token"], [56, 1, 1, "", "get_sublinks"], [56, 1, 1, "", "initialize_data_dict"], [56, 1, 1, "", "initialize_url"], [56, 1, 1, "", "parse_page_type"], [56, 1, 1, "", "process_all_sublinks"], [56, 1, 1, "", "reconstruct_data_dict"], [56, 1, 1, "", "remove_headers"], [56, 1, 1, "", "remove_long_patterns"], [56, 1, 1, "", "shift_to_max_correlation"], [56, 1, 1, "", "string_circular_shift"]], "graphai.core.common.text_utils": [[57, 2, 1, "", "ChatGPTSummarizer"], [57, 2, 1, "", "TranslationModels"], [57, 1, 1, "", "compute_chatgpt_request_cost"], [57, 1, 1, "", "compute_slide_tfidf_scores"], [57, 1, 1, "", "convert_text_or_dict_to_text"], [57, 1, 1, "", "count_tokens_for_openai"], [57, 1, 1, "", "detect_text_language"], [57, 1, 1, "", "find_best_slide_subset"], [57, 1, 1, "", "find_set_cover"], [57, 1, 1, "", "force_dict_to_text"], [57, 1, 1, "", "generate_completion_type_dict"], [57, 1, 1, "", "generate_src_tgt_dict"], [57, 1, 1, "", "generate_summary_text_token"], [57, 1, 1, "", "generate_translation_text_token"], [57, 1, 1, "", "md5_text"], [57, 1, 1, "", "perceptual_hash_text"], [57, 1, 1, "", "translation_list_to_text"], [57, 1, 1, "", "translation_text_back_to_list"], [57, 1, 1, "", "update_token_count"]], "graphai.core.common.text_utils.ChatGPTSummarizer": [[57, 4, 1, "", "cleanup_text"], [57, 4, 1, "", "establish_connection"], [57, 4, 1, "", "make_sure_json_is_valid"], [57, 4, 1, "", "summarize_academic_entity"], [57, 4, 1, "", "summarize_generic"], [57, 4, 1, "", "summarize_lecture"]], "graphai.core.common.text_utils.TranslationModels": [[57, 4, 1, "", "get_device"], [57, 4, 1, "", "load_models"], [57, 4, 1, "", "translate"]], "graphai.core.common.video": [[58, 2, 1, "", "GoogleOCRModel"], [58, 2, 1, "", "NLPModels"], [58, 2, 1, "", "WhisperTranscriptionModel"], [58, 1, 1, "", "check_ocr_and_hash_thresholds"], [58, 1, 1, "", "compare_decoded_fingerprints"], [58, 1, 1, "", "compare_encoded_fingerprints"], [58, 1, 1, "", "compute_ocr_noise_level"], [58, 1, 1, "", "compute_ocr_threshold"], [58, 1, 1, "", "compute_video_ocr_transitions"], [58, 1, 1, "", "detect_audio_format_and_duration"], [58, 1, 1, "", "extract_audio_from_video"], [58, 1, 1, "", "extract_frames"], [58, 1, 1, "", "extract_media_segment"], [58, 1, 1, "", "find_beginning_and_ending_silences"], [58, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [58, 1, 1, "", "find_closest_fingerprint_from_list"], [58, 1, 1, "", "find_closest_image_fingerprint_from_list"], [58, 1, 1, "", "frame_hash_similarity"], [58, 1, 1, "", "frame_ocr_distance"], [58, 1, 1, "", "frame_ocr_transition"], [58, 1, 1, "", "generate_frame_sample_indices"], [58, 1, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [58, 1, 1, "", "generate_random_token"], [58, 1, 1, "", "generate_symbolic_token"], [58, 1, 1, "", "get_cosine_sim"], [58, 1, 1, "", "md5_video_or_audio"], [58, 1, 1, "", "perceptual_hash_audio"], [58, 1, 1, "", "perceptual_hash_image"], [58, 1, 1, "", "perform_probe"], [58, 1, 1, "", "perform_slow_audio_probe"], [58, 1, 1, "", "perform_tesseract_ocr"], [58, 1, 1, "", "read_json_gz_file"], [58, 1, 1, "", "read_txt_gz_file"], [58, 1, 1, "", "remove_silence_doublesided"], [58, 1, 1, "", "retrieve_file_from_generic_url"], [58, 1, 1, "", "retrieve_file_from_kaltura"], [58, 1, 1, "", "retrieve_file_from_url"], [58, 1, 1, "", "retrieve_file_from_youtube"], [58, 1, 1, "", "tesseract_ocr_or_get_cached"], [58, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.GoogleOCRModel": [[58, 4, 1, "", "establish_connection"], [58, 4, 1, "", "perform_ocr"], [58, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[58, 4, 1, "", "get_text_word_vector"], [58, 4, 1, "", "get_text_word_vector_using_words"], [58, 4, 1, "", "get_words"], [58, 4, 1, "", "load_nlp_models"]], "graphai.core.common.video.WhisperTranscriptionModel": [[58, 4, 1, "", "detect_audio_segment_lang_whisper"], [58, 4, 1, "", "load_model_whisper"], [58, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[60, 0, 0, "-", "celery_config"], [61, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[60, 2, 1, "", "BaseConfig"], [60, 2, 1, "", "DevelopmentConfig"], [60, 1, 1, "", "create_celery"], [60, 1, 1, "", "get_celery_task"], [60, 1, 1, "", "get_settings"], [60, 1, 1, "", "get_task_info"], [60, 1, 1, "", "route_task"]], "graphai.core.interfaces.wp": [[61, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[61, 4, 1, "", "search"]], "graphai.core.text": [[63, 0, 0, "-", "draw"], [64, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[63, 1, 1, "", "draw_graph"], [63, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[64, 1, 1, "", "get_keywords"], [64, 1, 1, "", "rake_extract"], [64, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[66, 0, 0, "-", "breadcrumb"], [67, 0, 0, "-", "progress_bar"], [68, 0, 0, "-", "text"], [71, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[66, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[66, 4, 1, "", "indent"], [66, 4, 1, "", "log"], [66, 4, 1, "", "outdent"], [66, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[67, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[67, 4, 1, "", "reset"], [67, 4, 1, "", "update"]], "graphai.core.utils.text": [[69, 0, 0, "-", "clean"], [70, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[69, 2, 1, "", "HTMLCleaner"], [69, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[69, 4, 1, "", "get_data"], [69, 4, 1, "", "handle_data"], [69, 4, 1, "", "handle_endtag"], [69, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[70, 2, 1, "", "Colors"], [70, 1, 1, "", "cprint"], [70, 1, 1, "", "log"], [70, 1, 1, "", "mkdir"], [70, 1, 1, "", "pprint"], [70, 1, 1, "", "read_json"], [70, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[70, 3, 1, "", "codes"], [70, 3, 1, "", "pref"], [70, 3, 1, "", "reset"]], "graphai.core.utils.time": [[72, 0, 0, "-", "date"], [73, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[72, 1, 1, "", "add_years"], [72, 1, 1, "", "now"], [72, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[73, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[73, 4, 1, "", "delta"], [73, 4, 1, "", "report"], [73, 4, 1, "", "reset"], [73, 4, 1, "", "tick"], [73, 4, 1, "", "total"]], "graphai.pipelines": [[76, 0, 0, "-", "elasticsearch"], [79, 0, 0, "-", "investment"], [92, 0, 0, "-", "validation"], [96, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[78, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[78, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[80, 0, 0, "-", "aggregate_recent_past"], [81, 0, 0, "-", "check_unit"], [82, 0, 0, "-", "compute_fundraisers_units"], [83, 0, 0, "-", "compute_investors_units"], [84, 0, 0, "-", "compute_investors_units_2"], [85, 0, 0, "-", "compute_jaccard_index"], [86, 0, 0, "-", "concept_configuration"], [87, 0, 0, "-", "create_investments_graph"], [88, 0, 0, "-", "detect_fundraisers_concepts"], [89, 0, 0, "-", "main"], [90, 0, 0, "-", "parameters"], [91, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[80, 1, 1, "", "aggregate_recent_past"], [80, 1, 1, "", "aggregate_years"], [80, 1, 1, "", "compute_year_coefficients"], [80, 1, 1, "", "normalize_scores"], [80, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[81, 1, 1, "", "main"], [81, 1, 1, "", "show_matchmaking_chart_view"], [81, 1, 1, "", "show_matchmaking_list_view"], [81, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[82, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[83, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[84, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[85, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[86, 1, 1, "", "combine"], [86, 1, 1, "", "compute_affinities"], [86, 1, 1, "", "mix"], [86, 1, 1, "", "norm"], [86, 1, 1, "", "normalise"], [86, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[87, 1, 1, "", "create_investments_graph"], [87, 1, 1, "", "derive_yearly_data"], [87, 1, 1, "", "get_frs"], [87, 1, 1, "", "get_frs_fundraisers"], [87, 1, 1, "", "get_fundraisers_concepts"], [87, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[88, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[89, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[90, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[91, 1, 1, "", "base"], [91, 1, 1, "", "complete"], [91, 1, 1, "", "path"], [91, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "packag": [0, 1, 2, 12, 20, 30, 40, 41, 48, 53, 59, 62, 65, 68, 71, 75, 76, 79, 92, 96], "subpackag": [0, 1, 40, 41, 65, 75], "submodul": [0, 1, 2, 12, 20, 30, 41, 48, 53, 59, 62, 65, 68, 71, 76, 79, 92, 96], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "common": [3, 12, 13, 14, 15, 16, 17, 18, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100], "complet": [4, 22, 32], "imag": [5, 23, 33], "ontologi": [6, 16, 24, 34, 52], "scrape": [7, 25, 35, 56], "text": [8, 26, 36, 62, 63, 64, 68, 69, 70], "translat": [9, 17, 27, 37], "video": [10, 18, 28, 38, 58], "voic": [11, 29, 39], "celery_tool": 13, "graph": [14, 47, 97, 98, 99, 100], "log": 15, "main": [19, 89], "router": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "auth": 21, "schema": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "core": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "auth_util": 42, "cach": 43, "common_util": 44, "config": 45, "gpt_message_preset": 46, "json_repair": [48, 49, 50, 51], "json_repair_error": 50, "string_util": 51, "ontology_util": [53, 54, 55], "cluster": 54, "data": 55, "text_util": 57, "interfac": [59, 60, 61], "celery_config": 60, "wp": 61, "draw": 63, "keyword": 64, "util": [65, 66, 67, 68, 69, 70, 71, 72, 73], "breadcrumb": 66, "progress_bar": 67, "clean": 69, "io": 70, "time": [71, 72, 73], "date": 72, "stopwatch": 73, "definit": 74, "pipelin": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "elasticsearch": [76, 77, 78], "create_index": 77, "populate_index": 78, "invest": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "aggregate_recent_past": 80, "check_unit": 81, "compute_fundraisers_unit": 82, "compute_investors_unit": 83, "compute_investors_units_2": 84, "compute_jaccard_index": 85, "concept_configur": 86, "create_investments_graph": 87, "detect_fundraisers_concept": 88, "paramet": 90, "toy_exampl": 91, "valid": [92, 93, 94, 95], "1_old": 93, "2_new": 94, "3_slide": 95, "visualis": [96, 97, 98, 99, 100], "startup": [97, 98, 99, 100], "2": 98, "3": 99, "4": 100}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [40, "subpackages"], [41, "subpackages"], [65, "subpackages"], [75, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [12, "submodules"], [20, "submodules"], [30, "submodules"], [41, "submodules"], [48, "submodules"], [53, "submodules"], [59, "submodules"], [62, "submodules"], [65, "submodules"], [68, "submodules"], [71, "submodules"], [76, "submodules"], [79, "submodules"], [92, "submodules"], [96, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion module": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image module": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[7, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.text module": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[12, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[15, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[18, "module-graphai.api.common.video"]], "graphai.api.main module": [[19, "module-graphai.api.main"]], "graphai.api.routers package": [[20, "module-graphai.api.routers"]], "graphai.api.routers.auth module": [[21, "module-graphai.api.routers.auth"]], "graphai.api.routers.completion module": [[22, "module-graphai.api.routers.completion"]], "graphai.api.routers.image module": [[23, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[24, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[25, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text module": [[26, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[27, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[28, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[29, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[30, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[31, "module-graphai.api.schemas.common"]], "graphai.api.schemas.completion module": [[32, "module-graphai.api.schemas.completion"]], "graphai.api.schemas.image module": [[33, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[34, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[35, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.text module": [[36, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[37, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[38, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[39, "module-graphai.api.schemas.voice"]], "graphai.core package": [[40, "module-graphai.core"]], "graphai.core.common package": [[41, "module-graphai.core.common"]], "graphai.core.common.auth_utils module": [[42, "module-graphai.core.common.auth_utils"]], "graphai.core.common.caching module": [[43, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[44, "module-graphai.core.common.common_utils"]], "graphai.core.common.config module": [[45, "module-graphai.core.common.config"]], "graphai.core.common.gpt_message_presets module": [[46, "module-graphai.core.common.gpt_message_presets"]], "graphai.core.common.graph module": [[47, "module-graphai.core.common.graph"]], "graphai.core.common.json_repair package": [[48, "module-graphai.core.common.json_repair"]], "graphai.core.common.json_repair.json_repair module": [[49, "module-graphai.core.common.json_repair.json_repair"]], "graphai.core.common.json_repair.json_repair_error module": [[50, "module-graphai.core.common.json_repair.json_repair_error"]], "graphai.core.common.json_repair.string_utils module": [[51, "module-graphai.core.common.json_repair.string_utils"]], "graphai.core.common.ontology module": [[52, "module-graphai.core.common.ontology"]], "graphai.core.common.ontology_utils package": [[53, "module-graphai.core.common.ontology_utils"]], "graphai.core.common.ontology_utils.clustering module": [[54, "module-graphai.core.common.ontology_utils.clustering"]], "graphai.core.common.ontology_utils.data module": [[55, "module-graphai.core.common.ontology_utils.data"]], "graphai.core.common.scraping module": [[56, "module-graphai.core.common.scraping"]], "graphai.core.common.text_utils module": [[57, "module-graphai.core.common.text_utils"]], "graphai.core.common.video module": [[58, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[59, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[60, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.wp module": [[61, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[62, "module-graphai.core.text"]], "graphai.core.text.draw module": [[63, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[64, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[65, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[66, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[67, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[68, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[69, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[70, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[71, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[72, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[73, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[74, "module-graphai.definitions"]], "graphai.pipelines package": [[75, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[76, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[77, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[78, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[79, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[80, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[81, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[82, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[83, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[84, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[85, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[86, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[87, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[88, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[89, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[90, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[91, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[92, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[93, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[94, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[95, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[96, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[97, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[98, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[99, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[100, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.completion"], [5, "module-graphai.api.celery_tasks.image"], [6, "module-graphai.api.celery_tasks.ontology"], [7, "module-graphai.api.celery_tasks.scraping"], [8, "module-graphai.api.celery_tasks.text"], [9, "module-graphai.api.celery_tasks.translation"], [10, "module-graphai.api.celery_tasks.video"], [11, "module-graphai.api.celery_tasks.voice"], [12, "module-graphai.api.common"], [13, "module-graphai.api.common.celery_tools"], [14, "module-graphai.api.common.graph"], [15, "module-graphai.api.common.log"], [16, "module-graphai.api.common.ontology"], [17, "module-graphai.api.common.translation"], [18, "module-graphai.api.common.video"], [19, "module-graphai.api.main"], [20, "module-graphai.api.routers"], [21, "module-graphai.api.routers.auth"], [22, "module-graphai.api.routers.completion"], [23, "module-graphai.api.routers.image"], [24, "module-graphai.api.routers.ontology"], [25, "module-graphai.api.routers.scraping"], [26, "module-graphai.api.routers.text"], [27, "module-graphai.api.routers.translation"], [28, "module-graphai.api.routers.video"], [29, "module-graphai.api.routers.voice"], [30, "module-graphai.api.schemas"], [31, "module-graphai.api.schemas.common"], [32, "module-graphai.api.schemas.completion"], [33, "module-graphai.api.schemas.image"], [34, "module-graphai.api.schemas.ontology"], [35, "module-graphai.api.schemas.scraping"], [36, "module-graphai.api.schemas.text"], [37, "module-graphai.api.schemas.translation"], [38, "module-graphai.api.schemas.video"], [39, "module-graphai.api.schemas.voice"], [40, "module-graphai.core"], [41, "module-graphai.core.common"], [42, "module-graphai.core.common.auth_utils"], [43, "module-graphai.core.common.caching"], [44, "module-graphai.core.common.common_utils"], [45, "module-graphai.core.common.config"], [46, "module-graphai.core.common.gpt_message_presets"], [47, "module-graphai.core.common.graph"], [48, "module-graphai.core.common.json_repair"], [49, "module-graphai.core.common.json_repair.json_repair"], [50, "module-graphai.core.common.json_repair.json_repair_error"], [51, "module-graphai.core.common.json_repair.string_utils"], [52, "module-graphai.core.common.ontology"], [53, "module-graphai.core.common.ontology_utils"], [54, "module-graphai.core.common.ontology_utils.clustering"], [55, "module-graphai.core.common.ontology_utils.data"], [56, "module-graphai.core.common.scraping"], [57, "module-graphai.core.common.text_utils"], [58, "module-graphai.core.common.video"], [59, "module-graphai.core.interfaces"], [60, "module-graphai.core.interfaces.celery_config"], [61, "module-graphai.core.interfaces.wp"], [62, "module-graphai.core.text"], [63, "module-graphai.core.text.draw"], [64, "module-graphai.core.text.keywords"], [65, "module-graphai.core.utils"], [66, "module-graphai.core.utils.breadcrumb"], [67, "module-graphai.core.utils.progress_bar"], [68, "module-graphai.core.utils.text"], [69, "module-graphai.core.utils.text.clean"], [70, "module-graphai.core.utils.text.io"], [71, "module-graphai.core.utils.time"], [72, "module-graphai.core.utils.time.date"], [73, "module-graphai.core.utils.time.stopwatch"], [74, "module-graphai.definitions"], [75, "module-graphai.pipelines"], [76, "module-graphai.pipelines.elasticsearch"], [78, "module-graphai.pipelines.elasticsearch.populate_index"], [79, "module-graphai.pipelines.investment"], [80, "module-graphai.pipelines.investment.aggregate_recent_past"], [81, "module-graphai.pipelines.investment.check_unit"], [82, "module-graphai.pipelines.investment.compute_fundraisers_units"], [83, "module-graphai.pipelines.investment.compute_investors_units"], [84, "module-graphai.pipelines.investment.compute_investors_units_2"], [85, "module-graphai.pipelines.investment.compute_jaccard_index"], [86, "module-graphai.pipelines.investment.concept_configuration"], [87, "module-graphai.pipelines.investment.create_investments_graph"], [88, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [89, "module-graphai.pipelines.investment.main"], [90, "module-graphai.pipelines.investment.parameters"], [91, "module-graphai.pipelines.investment.toy_example"], [92, "module-graphai.pipelines.validation"], [96, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[7, "module-graphai.api.celery_tasks.scraping"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[12, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[13, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[15, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[15, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[18, "module-graphai.api.common.video"]], "graphai.api.main": [[19, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[19, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[19, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[20, "module-graphai.api.routers"]], "create_access_token() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.create_access_token"]], "get_active_user_dummy() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.get_current_active_user"]], "get_current_user() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.get_current_user"]], "graphai.api.routers.auth": [[21, "module-graphai.api.routers.auth"]], "login_for_access_token() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.login_for_access_token"]], "read_users_me() (in module graphai.api.routers.auth)": [[21, "graphai.api.routers.auth.read_users_me"]], "calculate_summary_text_fingerprint() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.calculate_summary_text_fingerprint"]], "calculate_summary_text_fingerprint_status() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.calculate_summary_text_fingerprint_status"]], "choose_best_subset() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.choose_best_subset"]], "clean_up() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.clean_up"]], "get_cleanup_task_chain() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.get_cleanup_task_chain"]], "get_completion_task_chain() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.get_completion_task_chain"]], "get_completion_text_fingerprint_chain_list() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.get_completion_text_fingerprint_chain_list"]], "graphai.api.routers.completion": [[22, "module-graphai.api.routers.completion"]], "populate_academic_entity_dict() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.populate_academic_entity_dict"]], "populate_slide_concepts_dict() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.populate_slide_concepts_dict"]], "summarize_academic_entity() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.summarize_academic_entity"]], "summarize_lecture() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.summarize_lecture"]], "summarize_status() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.summarize_status"]], "summarize_text() (in module graphai.api.routers.completion)": [[22, "graphai.api.routers.completion.summarize_text"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[23, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[23, "module-graphai.api.routers.image"]], "break_up_cluster() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.break_up_cluster"]], "cat_children() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.cat_children"]], "cat_info() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.cat_info"]], "cat_parent() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.cat_parent"]], "cluster_children() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.cluster_children"]], "cluster_parent() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.cluster_parent"]], "compute_graph_cluster_nearest_category() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.compute_graph_cluster_nearest_category"]], "compute_graph_concept_nearest_category() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.compute_graph_concept_nearest_category"]], "compute_graph_distance() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.compute_graph_distance"]], "compute_graph_nearest_concept() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.compute_graph_nearest_concept"]], "graphai.api.routers.ontology": [[24, "module-graphai.api.routers.ontology"]], "recompute_clusters() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.recompute_clusters"]], "recompute_clusters_status() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.recompute_clusters_status"]], "tree() (in module graphai.api.routers.ontology)": [[24, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[25, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[25, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[25, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[25, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[25, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text": [[26, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[26, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[26, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[26, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[26, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[26, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[27, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[27, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[28, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[28, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[29, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[29, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[30, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[31, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[31, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[31, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[31, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[31, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[31, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[31, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[31, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[31, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[31, "graphai.api.schemas.common.FileRequest.token"]], "academicentitydescriptor (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor"]], "academicentitysummarizationrequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest"]], "academicentitysummaryresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryResponse"]], "academicentitysummaryresponsedict (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict"]], "academicentitysummarytaskresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse"]], "cleanuprequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CleanupRequest"]], "cleanupresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CleanupResponse"]], "cleanupresponsedict (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CleanupResponseDict"]], "cleanuptaskresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CleanupTaskResponse"]], "completionrequestbase (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CompletionRequestBase"]], "completiontaskresponsebase (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase"]], "genericsummarizationrequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.GenericSummarizationRequest"]], "lecturesummarizationrequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.LectureSummarizationRequest"]], "slideconceptsmap (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SlideConceptsMap"]], "slidesubsetrequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SlideSubsetRequest"]], "slidesubsetresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SlideSubsetResponse"]], "summaryfingerprintrequest (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse"]], "summaryresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryResponse"]], "summaryresponsedict (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryResponseDict"]], "summarytaskresponse (class in graphai.api.schemas.completion)": [[32, "graphai.api.schemas.completion.SummaryTaskResponse"]], "approx_cost (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.approx_cost"]], "categories (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.categories"]], "closest_token (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.closest_token"]], "completion_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintRequest.completion_type"]], "concepts (graphai.api.schemas.completion.slideconceptsmap attribute)": [[32, "graphai.api.schemas.completion.SlideConceptsMap.concepts"]], "coverage (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[32, "graphai.api.schemas.completion.SlideSubsetRequest.coverage"]], "debug (graphai.api.schemas.completion.completionrequestbase attribute)": [[32, "graphai.api.schemas.completion.CompletionRequestBase.debug"]], "debug_message (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.debug_message"]], "entity (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.entity"]], "for_wikify (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[32, "graphai.api.schemas.completion.CleanupResponseDict.for_wikify"]], "force (graphai.api.schemas.completion.completionrequestbase attribute)": [[32, "graphai.api.schemas.completion.CompletionRequestBase.force"]], "force (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.fresh"]], "fresh (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.completion": [[32, "module-graphai.api.schemas.completion"]], "inferred_subtype (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.inferred_subtype"]], "keywords (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[32, "graphai.api.schemas.completion.GenericSummarizationRequest.keywords"]], "min_freq (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[32, "graphai.api.schemas.completion.SlideSubsetRequest.min_freq"]], "name (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.name"]], "number (graphai.api.schemas.completion.slideconceptsmap attribute)": [[32, "graphai.api.schemas.completion.SlideConceptsMap.number"]], "possible_subtypes (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.possible_subtypes"]], "result (graphai.api.schemas.completion.academicentitysummarytaskresponse attribute)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse.result"]], "result (graphai.api.schemas.completion.cleanuptaskresponse attribute)": [[32, "graphai.api.schemas.completion.CleanupTaskResponse.result"]], "result (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.result"]], "result (graphai.api.schemas.completion.summarytaskresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryTaskResponse.result"]], "result_type (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.result_type"]], "simulate (graphai.api.schemas.completion.completionrequestbase attribute)": [[32, "graphai.api.schemas.completion.CompletionRequestBase.simulate"]], "slides (graphai.api.schemas.completion.lecturesummarizationrequest attribute)": [[32, "graphai.api.schemas.completion.LectureSummarizationRequest.slides"]], "slides (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[32, "graphai.api.schemas.completion.SlideSubsetRequest.slides"]], "subject (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[32, "graphai.api.schemas.completion.CleanupResponseDict.subject"]], "subset (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[32, "graphai.api.schemas.completion.SlideSubsetResponse.subset"]], "subtype (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.subtype"]], "successful (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.successful"]], "successful (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.successful"]], "summary_long (graphai.api.schemas.completion.summaryresponsedict attribute)": [[32, "graphai.api.schemas.completion.SummaryResponseDict.summary_long"]], "summary_short (graphai.api.schemas.completion.summaryresponsedict attribute)": [[32, "graphai.api.schemas.completion.SummaryResponseDict.summary_short"]], "task_result (graphai.api.schemas.completion.academicentitysummaryresponse attribute)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryResponse.task_result"]], "task_result (graphai.api.schemas.completion.cleanupresponse attribute)": [[32, "graphai.api.schemas.completion.CleanupResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryfingerprintresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryresponse attribute)": [[32, "graphai.api.schemas.completion.SummaryResponse.task_result"]], "text (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[32, "graphai.api.schemas.completion.AcademicEntityDescriptor.text"]], "text (graphai.api.schemas.completion.cleanuprequest attribute)": [[32, "graphai.api.schemas.completion.CleanupRequest.text"]], "text (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[32, "graphai.api.schemas.completion.CleanupResponseDict.text"]], "text (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[32, "graphai.api.schemas.completion.GenericSummarizationRequest.text"]], "text (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.text_too_large"]], "text_type (graphai.api.schemas.completion.cleanuprequest attribute)": [[32, "graphai.api.schemas.completion.CleanupRequest.text_type"]], "text_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[32, "graphai.api.schemas.completion.SummaryFingerprintRequest.text_type"]], "title (graphai.api.schemas.completion.summaryresponsedict attribute)": [[32, "graphai.api.schemas.completion.SummaryResponseDict.title"]], "tokens (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[32, "graphai.api.schemas.completion.CompletionTaskResponseBase.tokens"]], "top_3_categories (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[32, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.top_3_categories"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[33, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[33, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[33, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[33, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[33, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[33, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[33, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[33, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[33, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[33, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[33, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[33, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[33, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[33, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[33, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[33, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[33, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "breakupclusterrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.BreakUpClusterRequest"]], "breakupclustersclusternumberresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse"]], "breakupclustersresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.BreakUpClustersResponse"]], "categorychildrenrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.CategoryChildrenRequest"]], "categoryinforequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.CategoryInfoRequest"]], "categoryinforesponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.CategoryInfoResponse"]], "categoryparentresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.CategoryParentResponse"]], "clusterinforequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.ClusterInfoRequest"]], "graphclusternearestcategoryrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest"]], "graphclusternearestcategoryresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse"]], "graphconceptnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest"]], "graphconceptnearestcategoryresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse"]], "graphdistancerequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest"]], "graphdistanceresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphDistanceResponse"]], "graphnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphNearestCategoryRequest"]], "graphnearestconceptrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptRequest"]], "graphnearestconceptresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptResponse"]], "nearestcategoryelement (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.NearestCategoryElement"]], "nearestcategoryelementwithclusters (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters"]], "nearestclusterelement (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.NearestClusterElement"]], "oneconceptresponseelement (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.OneConceptResponseElement"]], "recomputeclustersrequest (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.RecomputeClustersRequest"]], "recomputeclustersresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.RecomputeClustersResponse"]], "recomputeclusterstaskresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse"]], "treechildrenresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.TreeChildrenResponse"]], "treeparentresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.TreeParentResponse"]], "treeresponse (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[34, "graphai.api.schemas.ontology.TreeResponseElem"]], "avg (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.avg"]], "avg (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.avg"]], "category_assignments (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.category_assignments"]], "category_id (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[34, "graphai.api.schemas.ontology.CategoryChildrenRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforequest attribute)": [[34, "graphai.api.schemas.ontology.CategoryInfoRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[34, "graphai.api.schemas.ontology.CategoryInfoResponse.category_id"]], "category_id (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[34, "graphai.api.schemas.ontology.NearestCategoryElement.category_id"]], "child_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[34, "graphai.api.schemas.ontology.TreeResponseElem.child_id"]], "child_to_parent (graphai.api.schemas.ontology.treeresponse attribute)": [[34, "graphai.api.schemas.ontology.TreeResponse.child_to_parent"]], "child_type (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[34, "graphai.api.schemas.ontology.TreeChildrenResponse.child_type"]], "children (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[34, "graphai.api.schemas.ontology.TreeChildrenResponse.children"]], "closest (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptResponse.closest"]], "cluster_id (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[34, "graphai.api.schemas.ontology.BreakUpClusterRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.clusterinforequest attribute)": [[34, "graphai.api.schemas.ontology.ClusterInfoRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[34, "graphai.api.schemas.ontology.NearestClusterElement.cluster_id"]], "clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[34, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.clusters"]], "clusters (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[34, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.clusters"]], "coeffs (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.coeffs"]], "coeffs (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.coeffs"]], "depth (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[34, "graphai.api.schemas.ontology.CategoryInfoResponse.depth"]], "existing_label (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.existing_label"]], "existing_label (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.existing_label"]], "graphai.api.schemas.ontology": [[34, "module-graphai.api.schemas.ontology"]], "id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[34, "graphai.api.schemas.ontology.CategoryInfoResponse.id"]], "id (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[34, "graphai.api.schemas.ontology.OneConceptResponseElement.id"]], "impurity_count (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_count"]], "impurity_proportion (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_proportion"]], "min_n (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersRequest.min_n"]], "n_clusters (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[34, "graphai.api.schemas.ontology.BreakUpClusterRequest.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[34, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersRequest.n_clusters"]], "name (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[34, "graphai.api.schemas.ontology.CategoryInfoResponse.name"]], "name (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[34, "graphai.api.schemas.ontology.OneConceptResponseElement.name"]], "parent (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[34, "graphai.api.schemas.ontology.CategoryParentResponse.parent"]], "parent_category (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.parent_category"]], "parent_category (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.parent_category"]], "parent_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[34, "graphai.api.schemas.ontology.TreeResponseElem.parent_id"]], "rank (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[34, "graphai.api.schemas.ontology.NearestCategoryElement.rank"]], "rank (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[34, "graphai.api.schemas.ontology.NearestClusterElement.rank"]], "results (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[34, "graphai.api.schemas.ontology.BreakUpClustersResponse.results"]], "results (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.results"]], "return_clusters (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.return_clusters"]], "score (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[34, "graphai.api.schemas.ontology.NearestCategoryElement.score"]], "score (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[34, "graphai.api.schemas.ontology.NearestClusterElement.score"]], "scores (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptResponse.scores"]], "sim (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceResponse.sim"]], "src (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.src"]], "src (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptRequest.src"]], "src_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.src_type"]], "successful (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.successful"]], "task_result (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[34, "graphai.api.schemas.ontology.RecomputeClustersResponse.task_result"]], "task_result (graphai.api.schemas.ontology.treeparentresponse attribute)": [[34, "graphai.api.schemas.ontology.TreeParentResponse.task_result"]], "tgt (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt"]], "tgt_type (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[34, "graphai.api.schemas.ontology.CategoryChildrenRequest.tgt_type"]], "tgt_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[34, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt_type"]], "top_down_search (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_down_search"]], "top_n (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_n"]], "top_n (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[34, "graphai.api.schemas.ontology.GraphNearestConceptRequest.top_n"]], "valid (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[34, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.valid"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[35, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[35, "module-graphai.api.schemas.scraping"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[35, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[35, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[35, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[35, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[36, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyfromkeywordsrequest (class in graphai.api.schemas.text)": [[36, "graphai.api.schemas.text.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.schemas.text)": [[36, "graphai.api.schemas.text.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[36, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[36, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[36, "module-graphai.api.schemas.text"]], "keywords (graphai.api.schemas.text.wikifyfromkeywordsrequest attribute)": [[36, "graphai.api.schemas.text.WikifyFromKeywordsRequest.keywords"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[36, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyfromrawtextrequest attribute)": [[36, "graphai.api.schemas.text.WikifyFromRawTextRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[36, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "device (graphai.api.schemas.translation.translationtaskresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse.device"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[37, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[37, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[37, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[37, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[37, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[37, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[37, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[37, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[37, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[38, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[38, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[38, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[38, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[38, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[38, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[38, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[38, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[38, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[38, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[38, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[38, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[38, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[38, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[38, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[38, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[38, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[38, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[38, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[38, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[38, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[38, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[38, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[38, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[38, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[38, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[38, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[38, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[39, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[39, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "strict (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionRequest.strict"]], "subtitle_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_results"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[39, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[39, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[39, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_results"]], "graphai.core": [[40, "module-graphai.core"]], "graphai.core.common": [[41, "module-graphai.core.common"]], "token (class in graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.Token"]], "tokendata (class in graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.TokenData"]], "user (class in graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.User"]], "userindb (class in graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.UserInDB"]], "access_token (graphai.core.common.auth_utils.token attribute)": [[42, "graphai.core.common.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.authenticate_user"]], "disabled (graphai.core.common.auth_utils.user attribute)": [[42, "graphai.core.common.auth_utils.User.disabled"]], "email (graphai.core.common.auth_utils.user attribute)": [[42, "graphai.core.common.auth_utils.User.email"]], "full_name (graphai.core.common.auth_utils.user attribute)": [[42, "graphai.core.common.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.get_password_hash"]], "get_user() (in module graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.get_user"]], "graphai.core.common.auth_utils": [[42, "module-graphai.core.common.auth_utils"]], "hashed_password (graphai.core.common.auth_utils.userindb attribute)": [[42, "graphai.core.common.auth_utils.UserInDB.hashed_password"]], "scopes (graphai.core.common.auth_utils.tokendata attribute)": [[42, "graphai.core.common.auth_utils.TokenData.scopes"]], "scopes (graphai.core.common.auth_utils.user attribute)": [[42, "graphai.core.common.auth_utils.User.scopes"]], "token_type (graphai.core.common.auth_utils.token attribute)": [[42, "graphai.core.common.auth_utils.Token.token_type"]], "username (graphai.core.common.auth_utils.tokendata attribute)": [[42, "graphai.core.common.auth_utils.TokenData.username"]], "username (graphai.core.common.auth_utils.user attribute)": [[42, "graphai.core.common.auth_utils.User.username"]], "verify_password() (in module graphai.core.common.auth_utils)": [[42, "graphai.core.common.auth_utils.verify_password"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.AudioDBCachingManager"]], "completiondbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.CompletionDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[43, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[43, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[43, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[43, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[43, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[43, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.caching.fingerprintparameters method)": [[43, "graphai.core.common.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[43, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[43, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[43, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[43, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.completiondbcachingmanager method)": [[43, "graphai.core.common.caching.CompletionDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[43, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[43, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[43, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[43, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[43, "graphai.core.common.caching.FingerprintParameters.load_values"]], "file_exists() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[44, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[44, "graphai.core.common.common_utils.write_text_file"]], "graphai.core.common.config": [[45, "module-graphai.core.common.config"]], "generate_academic_entity_summary_message() (in module graphai.core.common.gpt_message_presets)": [[46, "graphai.core.common.gpt_message_presets.generate_academic_entity_summary_message"]], "generate_generic_summary_message() (in module graphai.core.common.gpt_message_presets)": [[46, "graphai.core.common.gpt_message_presets.generate_generic_summary_message"]], "generate_lecture_summary_message() (in module graphai.core.common.gpt_message_presets)": [[46, "graphai.core.common.gpt_message_presets.generate_lecture_summary_message"]], "graphai.core.common.gpt_message_presets": [[46, "module-graphai.core.common.gpt_message_presets"]], "conceptsgraph (class in graphai.core.common.graph)": [[47, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[47, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[47, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[47, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[47, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "graphai.core.common.json_repair": [[48, "module-graphai.core.common.json_repair"]], "at_end_of_block_comment() (in module graphai.core.common.json_repair.json_repair)": [[49, "graphai.core.common.json_repair.json_repair.at_end_of_block_comment"]], "graphai.core.common.json_repair.json_repair": [[49, "module-graphai.core.common.json_repair.json_repair"]], "repair_json() (in module graphai.core.common.json_repair.json_repair)": [[49, "graphai.core.common.json_repair.json_repair.repair_json"]], "jsonrepairerror": [[50, "graphai.core.common.json_repair.json_repair_error.JSONRepairError"]], "graphai.core.common.json_repair.json_repair_error": [[50, "module-graphai.core.common.json_repair.json_repair_error"]], "char_at() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.char_at"]], "char_code_at() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.char_code_at"]], "ends_with_comma_or_newline() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.ends_with_comma_or_newline"]], "graphai.core.common.json_repair.string_utils": [[51, "module-graphai.core.common.json_repair.string_utils"]], "insert_before_last_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.insert_before_last_whitespace"]], "is_control_character() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_control_character"]], "is_delimiter() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_delimiter"]], "is_digit() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_digit"]], "is_double_quote() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_double_quote"]], "is_double_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_double_quote_like"]], "is_hex() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_hex"]], "is_quote() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_quote"]], "is_single_quote() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_single_quote"]], "is_single_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_single_quote_like"]], "is_special_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_special_whitespace"]], "is_start_of_value() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_start_of_value"]], "is_valid_string_character() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_valid_string_character"]], "is_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.is_whitespace"]], "next_non_white_space_character() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.next_non_white_space_character"]], "remove_at_index() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.remove_at_index"]], "strip_last_occurrence() (in module graphai.core.common.json_repair.string_utils)": [[51, "graphai.core.common.json_repair.string_utils.strip_last_occurrence"]], "ontology (class in graphai.core.common.ontology)": [[52, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[52, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[52, "module-graphai.core.common.ontology"]], "graphai.core.common.ontology_utils": [[53, "module-graphai.core.common.ontology_utils"]], "arithmetic_mean_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.get_laplacian"]], "graphai.core.common.ontology_utils.clustering": [[54, "module-graphai.core.common.ontology_utils.clustering"]], "group_clustered() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.group_clustered"]], "normalize_features() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.normalize_features"]], "perform_pca() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.common.ontology_utils.clustering)": [[54, "graphai.core.common.ontology_utils.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.OntologyData"]], "adjusted_exp() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.average_and_combine"]], "compute_average() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.compute_average"]], "compute_category_anchors_using_references() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.derive_col_to_col_graph"]], "get_category_anchor_pages() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_anchor_pages"]], "get_category_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_closest_category"]], "get_cluster_cluster_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.get_col_to_col_dict"]], "get_concept_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_cluster_of_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_cluster_of_category"]], "get_concept_closest_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_concept"]], "get_concept_cluster_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_concept_similarity"]], "get_concept_parent_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_custom_cluster_closest_category"]], "get_id_dict() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_concept_names_table"]], "get_test_category_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.get_test_concept_names"]], "graphai.core.common.ontology_utils.data": [[55, "module-graphai.core.common.ontology_utils.data"]], "load_anchor_page_dict() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[55, "graphai.core.common.ontology_utils.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.common.ontology_utils.data)": [[55, "graphai.core.common.ontology_utils.data.to_ndarray_and_flatten"]], "check_url() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.check_url"]], "compare_strings() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.get_sublinks"]], "graphai.core.common.scraping": [[56, "module-graphai.core.common.scraping"]], "initialize_data_dict() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.common.scraping)": [[56, "graphai.core.common.scraping.string_circular_shift"]], "chatgptsummarizer (class in graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer"]], "translationmodels (class in graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.TranslationModels"]], "cleanup_text() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.cleanup_text"]], "compute_chatgpt_request_cost() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.compute_chatgpt_request_cost"]], "compute_slide_tfidf_scores() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.compute_slide_tfidf_scores"]], "convert_text_or_dict_to_text() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.convert_text_or_dict_to_text"]], "count_tokens_for_openai() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.count_tokens_for_openai"]], "detect_text_language() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.detect_text_language"]], "establish_connection() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.establish_connection"]], "find_best_slide_subset() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.find_set_cover"]], "force_dict_to_text() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.force_dict_to_text"]], "generate_completion_type_dict() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.generate_completion_type_dict"]], "generate_src_tgt_dict() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.generate_src_tgt_dict"]], "generate_summary_text_token() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.generate_summary_text_token"]], "generate_translation_text_token() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.common.text_utils.translationmodels method)": [[57, "graphai.core.common.text_utils.TranslationModels.get_device"]], "graphai.core.common.text_utils": [[57, "module-graphai.core.common.text_utils"]], "load_models() (graphai.core.common.text_utils.translationmodels method)": [[57, "graphai.core.common.text_utils.TranslationModels.load_models"]], "make_sure_json_is_valid() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.make_sure_json_is_valid"]], "md5_text() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.md5_text"]], "perceptual_hash_text() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.perceptual_hash_text"]], "summarize_academic_entity() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_academic_entity"]], "summarize_generic() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_generic"]], "summarize_lecture() (graphai.core.common.text_utils.chatgptsummarizer method)": [[57, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_lecture"]], "translate() (graphai.core.common.text_utils.translationmodels method)": [[57, "graphai.core.common.text_utils.TranslationModels.translate"]], "translation_list_to_text() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.translation_list_to_text"]], "translation_text_back_to_list() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.translation_text_back_to_list"]], "update_token_count() (in module graphai.core.common.text_utils)": [[57, "graphai.core.common.text_utils.update_token_count"]], "googleocrmodel (class in graphai.core.common.video)": [[58, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[58, "graphai.core.common.video.NLPModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[58, "graphai.core.common.video.WhisperTranscriptionModel"]], "check_ocr_and_hash_thresholds() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.check_ocr_and_hash_thresholds"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.compute_video_ocr_transitions"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[58, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[58, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.generate_symbolic_token"]], "get_cosine_sim() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.get_cosine_sim"]], "get_text_word_vector() (graphai.core.common.video.nlpmodels method)": [[58, "graphai.core.common.video.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.common.video.nlpmodels method)": [[58, "graphai.core.common.video.NLPModels.get_text_word_vector_using_words"]], "get_words() (graphai.core.common.video.nlpmodels method)": [[58, "graphai.core.common.video.NLPModels.get_words"]], "graphai.core.common.video": [[58, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[58, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "load_nlp_models() (graphai.core.common.video.nlpmodels method)": [[58, "graphai.core.common.video.NLPModels.load_nlp_models"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.perceptual_hash_image"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[58, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_generic_url() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.retrieve_file_from_url"]], "retrieve_file_from_youtube() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.retrieve_file_from_youtube"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[58, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[58, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[58, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[59, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[60, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[60, "graphai.core.interfaces.celery_config.route_task"]], "wp (class in graphai.core.interfaces.wp)": [[61, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[61, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[61, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[62, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[63, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[63, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[63, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[64, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[65, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[66, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[66, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[66, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[66, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[66, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[66, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[67, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[67, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[67, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[67, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[68, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[69, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[69, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[69, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[69, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[69, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[69, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[69, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[70, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[70, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[70, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[70, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[70, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[71, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[72, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[72, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[72, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[72, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[73, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[73, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[74, "module-graphai.definitions"]], "graphai.pipelines": [[75, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[76, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[78, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[78, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[79, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[80, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[80, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[80, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[80, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[80, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[80, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[81, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[81, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[81, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[81, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[81, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[82, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[82, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[83, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[83, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[84, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[84, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[85, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[85, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[86, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[86, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[87, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[87, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[88, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[88, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[89, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[89, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[90, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[90, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[91, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[91, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[91, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[91, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[91, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[92, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[96, "module-graphai.pipelines.visualisation"]]}})