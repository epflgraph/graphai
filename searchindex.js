Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.text", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.text", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.text.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.text module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.text module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module"], "terms": {"The": [0, 32, 34, 44, 50], "contain": [0, 26, 34, 41], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 9, 19, 26, 30], "project": 0, "ai": 0, "base": [0, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 46, 47, 50], "util": [0, 29], "api": [0, 34, 39], "core": 0, "definit": [0, 37], "modul": [0, 1, 2, 9, 16, 22, 30, 35, 40, 42, 45, 48], "celery_task": 1, "common": [1, 2, 22, 29], "router": 1, "schema": 1, "main": 1, "imag": [2, 16, 22, 34], "ontologi": [2, 9, 16, 19, 22, 23, 30], "text": [2, 16, 22, 24, 29, 34, 38, 39, 42], "video": [2, 9, 16, 22, 30], "voic": [2, 16, 22], "format_api_result": 3, "id": [3, 26, 32], "name": [3, 34, 36, 47], "statu": 3, "result": [3, 19, 24, 26, 28, 32, 33, 34, 38, 39], "fingerprint_lookup_retrieve_from_db": 3, "token": [3, 23, 24, 27, 28, 31, 34, 41], "db_manag": 3, "fingerprint_lookup_parallel": 3, "input_dict": 3, "i": [3, 19, 32, 34, 41, 44, 46, 50], "n_total": 3, "min_similar": [3, 34], "data_typ": 3, "audio": [3, 34], "fingerprint_lookup_callback": 3, "results_list": 3, "original_token": 3, "celery_tool": 9, "log": [9, 43, 47], "get_n_celery_work": 10, "msg": [12, 43, 47, 50], "second": [12, 34, 50], "none": [12, 19, 23, 24, 25, 27, 28, 31, 34, 36, 37, 38, 43, 44, 47], "total": [12, 44, 50], "fals": [12, 19, 24, 27, 28, 31, 34, 37, 41, 47, 50], "length": [12, 34], "64": 12, "async": [15, 17, 18, 19, 20, 21], "lazy_load_singleton": 15, "redirect_doc": 15, "calculate_fingerprint": 17, "data": [17, 19, 20, 21, 47], "imagefingerprintrequest": [17, 24], "calculate_fingerprint_statu": 17, "task_id": [17, 20, 21, 23, 24, 25, 27, 28, 36], "extract_text": 17, "extracttextrequest": [17, 24], "extract_text_statu": 17, "detect_ocr_language_statu": 17, "ontology_tree_response_handl": 18, "id_and_result": 18, "tree": [18, 23, 25, 34], "parent": 18, "category_id": [18, 33], "children": 18, "keyword": [19, 26, 38, 39, 40], "keywordsrequest": [19, 26], "use_nltk": [19, 41], "bool": [19, 24, 27, 28, 38, 41, 47], "process": 19, "raw": [19, 26, 41, 46], "e": [19, 34, 35], "g": [19, 34], "from": [19, 32, 34, 41, 46], "an": [19, 34, 47], "abstract": [19, 31], "public": 19, "cours": 19, "descript": 19, "lectur": 19, "slide": [19, 34], "return": [19, 32, 34, 36, 38, 39, 41, 46, 47, 49, 50], "list": [19, 24, 25, 26, 32, 34, 41], "wikifi": [19, 26], "wikifyrequest": [19, 26], "method": [19, 24, 34], "str": [19, 23, 24, 25, 26, 27, 28, 32, 38, 39, 41, 46, 47, 50], "concept": 19, "wikipedia": [19, 26, 39], "page": [19, 26, 32], "ar": [19, 34, 41, 49], "relev": [19, 26], "each": [19, 26, 32, 34, 44, 50], "set": [19, 26, 38, 39], "score": [19, 26, 32, 34, 41], "0": [19, 26, 28, 31, 32, 34, 47, 49, 50], "1": [19, 26, 31, 32, 34, 41, 49, 50], "quantifi": 19, "thi": [19, 34, 44], "done": 19, "follow": [19, 34, 38, 44, 46, 50], "extract": [19, 26, 34, 41], "automat": [19, 34], "omit": 19, "keyword_list": 19, "provid": [19, 34], "input": [19, 34], "instead": 19, "raw_text": [19, 26], "wikisearch": [19, 38, 39], "For": 19, "10": [19, 38, 39], "retriev": [19, 34, 38, 50], "can": [19, 34, 50], "through": [19, 34], "request": 19, "elasticsearch": [19, 38], "pair": [19, 32, 41, 50], "sever": [19, 26, 50], "deriv": 19, "take": 19, "account": 19, "among": 19, "other": [19, 50], "aggreg": 19, "filter": [19, 38], "accord": 19, "some": [19, 44, 50], "rule": 19, "keep": [19, 44], "onli": [19, 34, 47], "most": [19, 34], "priority_test_text": 19, "retrieve_fil": 20, "retrieveurlrequest": [20, 27], "get_retrieve_file_statu": 20, "get_fil": 20, "filerequest": [20, 23], "extract_audio": 20, "extractaudiorequest": [20, 27], "extract_audio_statu": 20, "detect_slid": 20, "detectslidesrequest": [20, 27], "detect_slides_statu": 20, "calculate_audio_fingerprint": 21, "audiofingerprintrequest": [21, 28], "calculate_audio_fingerprint_statu": 21, "transcrib": [21, 34], "audiotranscriptionrequest": [21, 28], "transcribe_statu": 21, "detect_languag": 21, "audiodetectlanguagerequest": [21, 28], "priority_test": 21, "detect_language_statu": 21, "class": [23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 46, 47, 50], "taskidrespons": 23, "basemodel": [23, 24, 25, 26, 27, 28], "object": [23, 25, 26, 31, 32, 33, 34, 36, 37, 38, 39, 43, 44, 47, 49, 50], "repres": [23, 25, 26, 41, 44, 50], "output": [23, 25, 34], "endpoint": [23, 25], "taskstatusrespons": [23, 24, 25, 27, 28], "task_nam": [23, 24, 25, 27, 28], "task_statu": [23, 24, 25, 27, 28], "task_result": [23, 24, 25, 27, 28, 36], "jsonwrappervalu": 23, "abc": [23, 31], "forc": [24, 27, 28], "imagefingerprinttaskrespons": 24, "fresh": [24, 27, 28], "success": [24, 27, 28, 34], "imagefingerprintrespons": 24, "liter": [24, 27], "googl": [24, 34], "tesseract": [24, 34], "individualocrresult": 24, "extracttexttaskrespons": 24, "languag": [24, 27, 28, 34], "extracttextrespons": 24, "detectocrlanguagetaskrespons": 24, "detectocrlanguagerespons": 24, "treeresponseelem": 25, "childcategoryid": 25, "int": [25, 26, 27, 32, 38, 39, 44, 47], "parentcategoryid": 25, "treerespons": 25, "inform": [26, 38], "anchor": 26, "defin": 26, "search": [26, 34, 38, 39], "space": [26, 41, 47], "wikifyresponseelem": 26, "pageid": [26, 38, 39], "pagetitl": [26, 38, 39], "searchscor": [26, 38, 39], "float": [26, 27, 28, 32, 41, 50], "levenshteinscor": 26, "ontologylocalscor": 26, "ontologyglobalscor": 26, "graphscor": 26, "keywordsscor": 26, "mixedscor": 26, "It": [26, 41, 46], "consist": [26, 34], "which": [26, 34, 41], "measur": 26, "degre": 26, "respect": [26, 49], "config": 26, "schema_extra": 26, "exampl": [26, 32, 41, 46], "1196": [26, 32], "angl": 26, "8055555555555556": 26, "44735199351890065": 26, "9058463104630012": 26, "152547": 26, "bisect": 26, "3333333333333333": 26, "16661245633224378": 26, "6666666666666667": 26, "5": [26, 50], "22717425120724127": 26, "609271523178808": 26, "44715741719086977": 26, "23972889": 26, "distance_from_a_point_to_a_lin": 26, "16666666666666669": 26, "2134432477817427": 26, "21885521885521886": 26, "19791666666666666": 26, "003590346636521923": 26, "19828593689131283": 26, "17781458572659029": 26, "946975": [26, 32], "line_": 26, "geometri": 26, "33567080901262164": 26, "8232323232323234": 26, "7916666666666666": 26, "7855473315153876": 26, "7886663359580247": 26, "22634860": 26, "line_seg": 26, "5555555555555556": 26, "3582111602475977": 26, "43097643097643096": 26, "75": [26, 44], "42461810549112244": 26, "6026490066225165": 26, "5277457623305826": 26, "2175469": 26, "non": [26, 38], "line": [26, 34, 47], "sight_propag": 26, "19444444444444448": 26, "39019342923035233": 26, "21212121212121213": 26, "11647727272727273": 26, "01572170017309725": 26, "5087650954421504": 26, "2950855110143057": 26, "133496": 26, "parallelogram": 26, "3055555555555556": 26, "13627674782665528": 26, "14484503981375635": 26, "4288185842201275": 26, "76944": 26, "perpendicular": 26, "19444444444444445": 26, "039652736888335365": 26, "25": [26, 44], "15017752515904018": 26, "2584729255940787": 26, "19421461143444865": 26, "25278": 26, "quadrilater": 26, "02777777777777779": 26, "15367913840285474": 26, "36363636363636365": 26, "12360559235107477": 26, "3307362680171406": 26, "21973432050168798": 26, "76956": 26, "right_angl": 26, "4166666666666667": 26, "4451948682556247": 26, "42424242424242425": 26, "12678424818870415": 26, "4107908063887807": 26, "3996645939435453": 26, "94102": 26, "solid_angl": 26, "3888888888888889": 26, "6912823774628103": 26, "196969696969697": 26, "15909090909090912": 26, "08695255651117278": 26, "7415270744059212": 26, "4580780578246384": 26, "31482": 26, "tangent": 26, "4722222222222222": 26, "29631455223594527": 26, "6414141414141414": 26, "59375": 26, "3573397570845174": 26, "48284225283305426": 26, "30654": 26, "triangl": 26, "5717479784842091": 26, "2535403349997643": 26, "47723102055958355": 26, "url": [27, 34, 46], "kaltura": 27, "true": [27, 31, 34, 41, 43, 47, 50], "timeout": [27, 34], "240": 27, "retrieveurlresponseinn": 27, "retrieveurlrespons": 27, "extractaudiotaskrespons": 27, "durat": [27, 28, 34], "extractaudiorespons": 27, "en": [27, 34], "fr": 27, "detectslidestaskrespons": 27, "slide_token": 27, "dict": [27, 32, 34, 38, 47], "detectslidesrespons": 27, "remove_sil": 28, "threshold": [28, 34, 41], "audiofingerprinttaskrespons": 28, "fp_nosil": 28, "audiofingerprintrespons": 28, "audiodetectlanguagetaskrespons": 28, "audiodetectlanguagerespons": 28, "force_lang": [28, 34], "audiotranscriptiontaskrespons": 28, "transcript_result": 28, "subtitle_result": 28, "json": [28, 34, 47], "audiotranscriptionrespons": 28, "interfac": 29, "cach": [30, 34], "make_sure_path_exist": 31, "path": [31, 32, 34], "file_at_the_end": 31, "surround_with_charact": 31, "": [31, 32, 34, 46], "c": [31, 44, 46], "dbcachingmanagerbas": 31, "cache_t": 31, "most_similar_t": 31, "init_db": 31, "resolve_most_similar_chain": 31, "delete_cache_row": 31, "id_token": 31, "insert_or_update_detail": 31, "values_to_insert": 31, "update_details_if_exist": 31, "get_detail": 31, "col": 31, "using_most_similar": 31, "get_details_using_origin": 31, "origin_token": 31, "get_all_detail": 31, "start": [31, 34], "limit": [31, 38, 39], "exclude_token": 31, "allow_nul": 31, "get_cache_count": 31, "non_null_col": 31, "insert_or_update_closest_match": 31, "get_closest_match": 31, "get_all_closest_match": 31, "audiodbcachingmanag": 31, "slidedbcachingmanag": 31, "videoconfig": 31, "concat_file_path": 31, "filenam": [31, 34, 47], "subfold": 31, "set_root_dir": 31, "new_root_dir": 31, "generate_filepath": 31, "force_dir": 31, "conceptsgraph": 32, "fetch_from_db": [32, 33], "compute_scor": 32, "source_page_id": 32, "target_page_id": 32, "comput": [32, 34], "all": [32, 34, 38, 41, 50], "possibl": [32, 41], "sourc": 32, "target": [32, 34], "two": [32, 34], "t": [32, 34, 41, 47], "displaystyl": 32, "frac": 32, "ln": 32, "rebound": 32, "out": 32, "min": 32, "max": 32, "number": [32, 34, 38, 39, 44, 47], "paramet": [32, 34, 38, 39, 41, 44, 46, 47, 50], "A": [32, 34, 38, 39, 41], "element": 32, "ha": 32, "kei": [32, 34], "type": [32, 34, 38, 39, 41, 46, 47], "cg": 32, "6220": 32, "18973446": 32, "9417": 32, "5193576613841849": 32, "4740698357575134": 32, "3591100561928845": 32, "5343247664351338": 32, "530184349205493": 32, "40043881227279876": 32, "add_graph_scor": 32, "get_concept_categori": 33, "page_id": 33, "get_predefined_tre": 33, "get_category_par": 33, "get_category_children": 33, "add_concepts_categori": 33, "add_categories_categori": 33, "filter_concept": 33, "add_ontology_scor": 33, "file_exist": 34, "file_path": 34, "get_dir_fil": 34, "root_dir": 34, "count_fil": 34, "write_text_fil": 34, "filename_with_path": 34, "content": [34, 47], "write_json_fil": 34, "d": [34, 44, 46], "read_text_fil": 34, "read_json_fil": 34, "generate_random_token": 34, "gener": [34, 41], "random": 34, "string": [34, 41], "us": [34, 38, 41, 46, 50], "current": [34, 49], "time": [34, 42, 44], "retrieve_file_from_url": 34, "output_filename_with_path": 34, "output_token": 34, "file": [34, 47], "given": [34, 36, 38, 39, 41, 46, 47, 49], "wget": 34, "store": 34, "local": 34, "param": 34, "otherwis": [34, 41], "retrieve_file_from_kaltura": 34, "120": 34, "perform_prob": 34, "input_filename_with_path": 34, "perform": [34, 38, 39], "probe": 34, "ffprobe": 34, "see": 34, "document": [34, 38], "md5_video_or_audio": 34, "detect_audio_format_and_dur": 34, "input_token": 34, "detect": 34, "track": [34, 44, 50], "its": 34, "ogg": 34, "format": [34, 38, 49], "plu": 34, "extract_audio_from_video": 34, "extract_audio_seg": 34, "find_beginning_and_ending_sil": 34, "distance_from_end_tol": 34, "01": 34, "noise_thresh": 34, "0001": 34, "silenc": 34, "begin": [34, 50], "end": 34, "toler": 34, "valu": [34, 37], "distanc": 34, "nois": 34, "dictionari": [34, 38, 47], "timestamp": [34, 49], "remov": 34, "remove_silence_doublesid": 34, "without": [34, 50], "unsuccess": 34, "perceptual_hash_audio": 34, "max_length": 34, "7200": 34, "perceptu": 34, "hash": 34, "maximum": [34, 38, 39], "represent": 34, "fingerprint": 34, "decod": 34, "both": 34, "doesn": 34, "exist": [34, 47], "perceptual_hash_imag": 34, "hash_siz": 34, "16": 34, "size": 34, "doe": [34, 47], "compare_decoded_fingerprint": 34, "decoded_1": 34, "decoded_2": 34, "compar": 34, "2": [34, 50], "fuzzi": 34, "match": [34, 38], "ratio": 34, "between": [34, 49, 50], "compare_encoded_fingerprint": 34, "f1": 34, "f2": 34, "decoder_func": 34, "function": [34, 50], "decode_fingerprint": 34, "encod": [34, 46], "them": 34, "indic": [34, 38], "exact": 34, "similar": 34, "so": 34, "find_closest_fingerprint_from_list": 34, "target_fp": 34, "fp_list": 34, "token_list": 34, "8": 34, "candid": 34, "find": [34, 37], "one": [34, 41, 44, 50], "highest": 34, "whose": 34, "abov": [34, 49], "minimum": 34, "correspond": 34, "those": 34, "If": [34, 41, 47], "unexpect": 34, "indent": [34, 43, 47], "lower": 34, "than": [34, 41], "block": [34, 47, 50], "quot": 34, "blank": 34, "unind": 34, "differ": [34, 50], "v": [34, 37], "closest": 34, "three": 34, "satisfi": 34, "criterion": 34, "find_closest_audio_fingerprint_from_list": 34, "find_closest_image_fingerprint_from_list": 34, "extract_fram": 34, "output_folder_with_path": 34, "output_fold": 34, "frame": 34, "folder": 34, "generate_frame_sample_indic": 34, "input_folder_with_path": 34, "step": 34, "we": 34, "don": [34, 41], "everi": [34, 47], "singl": 34, "our": 34, "calcul": 34, "full": 34, "read_txt_gz_fil": 34, "fp": 34, "write_txt_gz_fil": 34, "read_json_gz_fil": 34, "perform_tesseract_ocr": 34, "image_path": 34, "ocr": 34, "tesseract_ocr_or_get_cach": 34, "ocr_path": 34, "root": 34, "langaug": 34, "frame_ocr_dist": 34, "k1": 34, "k2": 34, "nlp_model": 34, "index": [34, 38], "nlp": 34, "model": 34, "frame_hash_similar": 34, "compute_ocr_noise_level": 34, "frame_sample_indic": 34, "sequenc": 34, "sampl": 34, "identifi": 34, "below": [34, 41, 49], "default": [34, 41, 50], "compute_ocr_threshold": 34, "distance_list": 34, "default_threshold": 34, "subsequ": 34, "empti": 34, "frame_ocr_transit": 34, "k_l": 34, "k_r": 34, "ocr_dist_threshold": 34, "hash_similarity_threshold": 34, "recurs": 34, "transit": 34, "binari": 34, "where": 34, "thei": [34, 41], "frame_format": 34, "leftmost": 34, "rightmost": 34, "consid": 34, "distinct": 34, "found": 34, "compute_video_ocr_transit": 34, "hash_dist_threshold": 34, "detect_text_languag": 34, "whispertranscriptionmodel": 34, "load_model_whisp": 34, "lazi": 34, "load": 34, "whisper": 34, "memori": 34, "model_typ": 34, "doc": [34, 38], "detail": 34, "detect_audio_segment_lang_whisp": 34, "30": 34, "code": [34, 47], "transcribe_audio_whisp": 34, "verbos": 34, "whether": [34, 41, 50], "explicitli": 34, "feed": [34, 46], "transcript": 34, "segment": 34, "like": 34, "translat": 34, "subtitl": 34, "nlpmodel": 34, "get_nlp_model": 34, "googleocrmodel": 34, "establish_connect": 34, "lazili": 34, "connect": 34, "perform_ocr": 34, "text_detect": 34, "document_text_detect": 34, "wait_for_ocr_result": 34, "image_object": 34, "dtd": 34, "retri": 34, "6": [34, 50], "celery_config": 35, "db": 35, "wp": 35, "route_task": 36, "arg": 36, "kwarg": 36, "option": 36, "task": [36, 44, 50], "kw": 36, "baseconfig": 36, "developmentconfig": 36, "get_set": 36, "create_celeri": 36, "get_celery_task": 36, "get_task_info": 36, "info": 36, "quote_valu": 37, "commun": [37, 38, 39], "epflgraph": [37, 38], "databas": 37, "execute_queri": 37, "queri": [37, 38, 39], "execut": [37, 44, 50], "custom": 37, "build_conditions_list": 37, "condit": 37, "table_nam": 37, "field": [37, 38], "print_queri": 37, "drop_tabl": 37, "create_t": 37, "insert_datafram": 37, "df": 37, "drop_create_insert_t": 37, "es_bool": 38, "must": 38, "must_not": 38, "should": [38, 47], "build": 38, "claus": 38, "argument": 38, "es_match": 38, "boost": 38, "oper": 38, "es_multi_match": 38, "minimum_should_match": 38, "multi_match": 38, "es_dis_max": 38, "dis_max": 38, "instanc": 38, "panda": [38, 39, 49], "datafram": [38, 39], "column": [38, 39], "searchrank": [38, 39], "uniqu": [38, 39], "pd": [38, 39], "search_mediawiki": 38, "mediawiki": 38, "structur": 38, "search_mediawiki_no_rescor": 38, "skip": [38, 47], "rescor": 38, "part": 38, "search_mediawiki_no_plain": 38, "restrict": 38, "plain": 38, "search_mediawiki_restrict_4": 38, "titl": 38, "head": 38, "opening_text": 38, "search_mediawiki_restrict_2": 38, "about": [38, 41], "respons": 38, "index_doc": 38, "create_index": 38, "map": [38, 49], "creat": [38, 47, 50], "delete_index": 38, "delet": [38, 46], "refresh": 38, "word_token": 41, "word": 41, "sentenc": 41, "separ": 41, "how": 41, "you": [41, 46], "rake_extract": 41, "split_word": 41, "return_scor": 41, "unconstrain": 41, "python": 41, "rake": 41, "nltk": 41, "more": [41, 44, 50], "split": 41, "retur": 41, "tupl": 41, "minim": 41, "ignor": 41, "join": [41, 46], "Then": 41, "crowd": 41, "young": 41, "boi": 41, "re": 41, "foolin": 41, "around": 41, "corner": 41, "drunk": 41, "dress": 41, "best": 41, "brown": 41, "baggi": 41, "platform": 41, "sole": 41, "give": 41, "damn": 41, "ani": 41, "trumpet": 41, "playin": 41, "band": 41, "ain": 41, "what": 41, "call": 41, "rock": 41, "roll": 41, "get_keyword": 41, "normal": [41, 46], "p": [41, 46], "breadcrumb": 42, "progress_bar": 42, "debug": [43, 47], "color": [43, 47], "time_color": 43, "grai": 43, "report": [43, 50], "outdent": 43, "progressbar": 44, "n_iter": 44, "bar_length": 44, "50": 44, "progress": 44, "bar": 44, "usag": [44, 50], "letter": 44, "b": 44, "pb": 44, "len": 44, "run": [44, 50], "consum": [44, 50], "updat": 44, "00": 44, "100": 44, "print": [44, 46, 47, 49, 50], "iter": 44, "percentag": 44, "complet": [44, 50], "overwrit": 44, "previou": [44, 50], "state": 44, "ban": 44, "reset": [44, 47, 50], "increment": 44, "counter": 44, "reus": [44, 50], "clean": 45, "io": 45, "htmlcleaner": 46, "htmlparser": 46, "pars": 46, "html": 46, "tag": 46, "get": 46, "shiver": 46, "strong": 46, "dark": 46, "br": 46, "rain": 46, "park": 46, "meantim": 46, "get_data": 46, "handle_starttag": 46, "attr": 46, "handle_endtag": 46, "handle_data": 46, "solv": 46, "problem": 46, "email": 46, "convert": 46, "lowercas": 46, "u2018rain": 46, "u2019": 46, "lt": 46, "3": [46, 50], "evalu": 47, "pref": 47, "x1b": 47, "0m": 47, "black": 47, "30m": 47, "blue": 47, "34m": 47, "cyan": 47, "36m": 47, "green": 47, "32m": 47, "magenta": 47, "35m": 47, "red": 47, "31m": 47, "white": 47, "37m": 47, "yellow": 47, "33m": 47, "cprint": 47, "is_bold": 47, "bold": 47, "case": 47, "pprint": 47, "inlin": 47, "only_first": 47, "pretti": 47, "preced": 47, "first": [47, 50], "ellipsi": 47, "avoid": 47, "big": 47, "read_json": 47, "read": 47, "save_json": 47, "save": 47, "mkdir": 47, "dirnam": 47, "directori": 47, "date": 48, "stopwatch": 48, "now": 49, "datetim": 49, "2022": 49, "06": 49, "28": 49, "09": 49, "46": 49, "21": 49, "677968": 49, "rescal": 49, "min_dat": 49, "max_dat": 49, "seri": 49, "linearli": 49, "rang": 49, "assum": 49, "yyyi": 49, "mm": 49, "dd": 49, "add_year": 49, "n_year": 49, "sw": 50, "delta": 50, "4": 50, "284306764602661": 50, "variabl": 50, "consecut": 50, "well": 50, "t1": 50, "t2": 50, "yet": 50, "t3": 50, "609307289123535": 50, "849977970123291": 50, "660188913345337": 50, "also": 50, "preprocess": 50, "pre_tim": 50, "task_tim": 50, "postprocess": 50, "post_tim": 50, "total_tim": 50, "f": 50, "proport": 50, "5176954220125477": 50, "tick": 50, "replac": 50, "partial": 50, "need": 50, "furthermor": 50, "too": 50, "19": 50, "86": 50, "lap": 50, "74": 50, "11": 50, "66": 50, "45": 50, "final": 50, "checkpoint": 50, "new": 50, "finish": 50, "summari": 50, "includ": 50, "last": 50, "boolean": 50, "befor": 50, "messag": 50}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [29, 0, 0, "-", "core"], [51, 0, 0, "-", "definitions"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [9, 0, 0, "-", "common"], [15, 0, 0, "-", "main"], [16, 0, 0, "-", "routers"], [22, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "text"], [7, 0, 0, "-", "video"], [8, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.common": [[10, 0, 0, "-", "celery_tools"], [11, 0, 0, "-", "graph"], [12, 0, 0, "-", "log"], [13, 0, 0, "-", "ontology"], [14, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[10, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[12, 1, 1, "", "log"]], "graphai.api.main": [[15, 1, 1, "", "lazy_load_singletons"], [15, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[17, 0, 0, "-", "image"], [18, 0, 0, "-", "ontology"], [19, 0, 0, "-", "text"], [20, 0, 0, "-", "video"], [21, 0, 0, "-", "voice"]], "graphai.api.routers.image": [[17, 1, 1, "", "calculate_fingerprint"], [17, 1, 1, "", "calculate_fingerprint_status"], [17, 1, 1, "", "detect_ocr_language_status"], [17, 1, 1, "", "extract_text"], [17, 1, 1, "", "extract_text_status"]], "graphai.api.routers.ontology": [[18, 1, 1, "", "children"], [18, 1, 1, "", "ontology_tree_response_handler"], [18, 1, 1, "", "parent"], [18, 1, 1, "", "tree"]], "graphai.api.routers.text": [[19, 1, 1, "", "keywords"], [19, 1, 1, "", "priority_test_text"], [19, 1, 1, "", "wikify"]], "graphai.api.routers.video": [[20, 1, 1, "", "detect_slides"], [20, 1, 1, "", "detect_slides_status"], [20, 1, 1, "", "extract_audio"], [20, 1, 1, "", "extract_audio_status"], [20, 1, 1, "", "get_file"], [20, 1, 1, "", "get_retrieve_file_status"], [20, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[21, 1, 1, "", "calculate_audio_fingerprint"], [21, 1, 1, "", "calculate_audio_fingerprint_status"], [21, 1, 1, "", "detect_language"], [21, 1, 1, "", "detect_language_status"], [21, 1, 1, "", "priority_test"], [21, 1, 1, "", "transcribe"], [21, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[23, 0, 0, "-", "common"], [24, 0, 0, "-", "image"], [25, 0, 0, "-", "ontology"], [26, 0, 0, "-", "text"], [27, 0, 0, "-", "video"], [28, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[23, 2, 1, "", "FileRequest"], [23, 2, 1, "", "TaskIDResponse"], [23, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[23, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[23, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[23, 3, 1, "", "task_id"], [23, 3, 1, "", "task_name"], [23, 3, 1, "", "task_result"], [23, 3, 1, "", "task_status"]], "graphai.api.schemas.image": [[24, 2, 1, "", "DetectOCRLanguageResponse"], [24, 2, 1, "", "DetectOCRLanguageTaskResponse"], [24, 2, 1, "", "ExtractTextRequest"], [24, 2, 1, "", "ExtractTextResponse"], [24, 2, 1, "", "ExtractTextTaskResponse"], [24, 2, 1, "", "ImageFingerprintRequest"], [24, 2, 1, "", "ImageFingerprintResponse"], [24, 2, 1, "", "ImageFingerprintTaskResponse"], [24, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[24, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[24, 3, 1, "", "fresh"], [24, 3, 1, "", "language"], [24, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[24, 3, 1, "", "force"], [24, 3, 1, "", "method"], [24, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[24, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[24, 3, 1, "", "fresh"], [24, 3, 1, "", "language"], [24, 3, 1, "", "result"], [24, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[24, 3, 1, "", "force"], [24, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[24, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[24, 3, 1, "", "fresh"], [24, 3, 1, "", "result"], [24, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[24, 3, 1, "", "method"], [24, 3, 1, "", "text"], [24, 3, 1, "", "token"]], "graphai.api.schemas.ontology": [[25, 2, 1, "", "TreeResponse"], [25, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[25, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[25, 3, 1, "", "ChildCategoryID"], [25, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.text": [[26, 2, 1, "", "KeywordsRequest"], [26, 2, 1, "", "WikifyRequest"], [26, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[26, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[26, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[26, 2, 1, "", "Config"], [26, 3, 1, "", "GraphScore"], [26, 3, 1, "", "KeywordsScore"], [26, 3, 1, "", "LevenshteinScore"], [26, 3, 1, "", "MixedScore"], [26, 3, 1, "", "OntologyGlobalScore"], [26, 3, 1, "", "OntologyLocalScore"], [26, 3, 1, "", "PageID"], [26, 3, 1, "", "PageTitle"], [26, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[26, 3, 1, "", "schema_extra"]], "graphai.api.schemas.video": [[27, 2, 1, "", "DetectSlidesRequest"], [27, 2, 1, "", "DetectSlidesResponse"], [27, 2, 1, "", "DetectSlidesTaskResponse"], [27, 2, 1, "", "ExtractAudioRequest"], [27, 2, 1, "", "ExtractAudioResponse"], [27, 2, 1, "", "ExtractAudioTaskResponse"], [27, 2, 1, "", "RetrieveURLRequest"], [27, 2, 1, "", "RetrieveURLResponse"], [27, 2, 1, "", "RetrieveURLResponseInner"]], "graphai.api.schemas.video.DetectSlidesRequest": [[27, 3, 1, "", "force"], [27, 3, 1, "", "language"], [27, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[27, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[27, 3, 1, "", "fresh"], [27, 3, 1, "", "slide_tokens"], [27, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[27, 3, 1, "", "force"], [27, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[27, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[27, 3, 1, "", "duration"], [27, 3, 1, "", "fresh"], [27, 3, 1, "", "successful"], [27, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[27, 3, 1, "", "kaltura"], [27, 3, 1, "", "timeout"], [27, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[27, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[27, 3, 1, "", "successful"], [27, 3, 1, "", "token"]], "graphai.api.schemas.voice": [[28, 2, 1, "", "AudioDetectLanguageRequest"], [28, 2, 1, "", "AudioDetectLanguageResponse"], [28, 2, 1, "", "AudioDetectLanguageTaskResponse"], [28, 2, 1, "", "AudioFingerprintRequest"], [28, 2, 1, "", "AudioFingerprintResponse"], [28, 2, 1, "", "AudioFingerprintTaskResponse"], [28, 2, 1, "", "AudioTranscriptionRequest"], [28, 2, 1, "", "AudioTranscriptionResponse"], [28, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[28, 3, 1, "", "force"], [28, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[28, 3, 1, "", "fresh"], [28, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[28, 3, 1, "", "force"], [28, 3, 1, "", "remove_silence"], [28, 3, 1, "", "threshold"], [28, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[28, 3, 1, "", "duration"], [28, 3, 1, "", "fp_nosilence"], [28, 3, 1, "", "fresh"], [28, 3, 1, "", "result"], [28, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[28, 3, 1, "", "force"], [28, 3, 1, "", "force_lang"], [28, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[28, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[28, 3, 1, "", "fresh"], [28, 3, 1, "", "language"], [28, 3, 1, "", "subtitle_result"], [28, 3, 1, "", "transcript_result"]], "graphai.core": [[30, 0, 0, "-", "common"], [35, 0, 0, "-", "interfaces"], [40, 0, 0, "-", "text"], [42, 0, 0, "-", "utils"]], "graphai.core.common": [[31, 0, 0, "-", "caching"], [32, 0, 0, "-", "graph"], [33, 0, 0, "-", "ontology"], [34, 0, 0, "-", "video"]], "graphai.core.common.caching": [[31, 2, 1, "", "AudioDBCachingManager"], [31, 2, 1, "", "DBCachingManagerBase"], [31, 2, 1, "", "SlideDBCachingManager"], [31, 2, 1, "", "VideoConfig"], [31, 1, 1, "", "make_sure_path_exists"], [31, 1, 1, "", "surround_with_character"]], "graphai.core.common.caching.AudioDBCachingManager": [[31, 4, 1, "", "init_db"]], "graphai.core.common.caching.DBCachingManagerBase": [[31, 4, 1, "", "delete_cache_rows"], [31, 4, 1, "", "get_all_closest_matches"], [31, 4, 1, "", "get_all_details"], [31, 4, 1, "", "get_cache_count"], [31, 4, 1, "", "get_closest_match"], [31, 4, 1, "", "get_details"], [31, 4, 1, "", "get_details_using_origin"], [31, 4, 1, "", "init_db"], [31, 4, 1, "", "insert_or_update_closest_match"], [31, 4, 1, "", "insert_or_update_details"], [31, 4, 1, "", "resolve_most_similar_chain"], [31, 4, 1, "", "update_details_if_exists"]], "graphai.core.common.caching.SlideDBCachingManager": [[31, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[31, 4, 1, "", "concat_file_path"], [31, 4, 1, "", "generate_filepath"], [31, 4, 1, "", "set_root_dir"]], "graphai.core.common.graph": [[32, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[32, 4, 1, "", "add_graph_score"], [32, 4, 1, "", "compute_scores"], [32, 4, 1, "", "fetch_from_db"]], "graphai.core.common.ontology": [[33, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[33, 4, 1, "", "add_categories_category"], [33, 4, 1, "", "add_concepts_category"], [33, 4, 1, "", "add_ontology_scores"], [33, 4, 1, "", "fetch_from_db"], [33, 4, 1, "", "filter_concepts"], [33, 4, 1, "", "get_category_children"], [33, 4, 1, "", "get_category_parent"], [33, 4, 1, "", "get_concept_category"], [33, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.video": [[34, 2, 1, "", "GoogleOCRModel"], [34, 2, 1, "", "NLPModels"], [34, 2, 1, "", "WhisperTranscriptionModel"], [34, 1, 1, "", "compare_decoded_fingerprints"], [34, 1, 1, "", "compare_encoded_fingerprints"], [34, 1, 1, "", "compute_ocr_noise_level"], [34, 1, 1, "", "compute_ocr_threshold"], [34, 1, 1, "", "compute_video_ocr_transitions"], [34, 1, 1, "", "count_files"], [34, 1, 1, "", "detect_audio_format_and_duration"], [34, 1, 1, "", "detect_text_language"], [34, 1, 1, "", "extract_audio_from_video"], [34, 1, 1, "", "extract_audio_segment"], [34, 1, 1, "", "extract_frames"], [34, 1, 1, "", "file_exists"], [34, 1, 1, "", "find_beginning_and_ending_silences"], [34, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [34, 1, 1, "", "find_closest_fingerprint_from_list"], [34, 1, 1, "", "find_closest_image_fingerprint_from_list"], [34, 1, 1, "", "frame_hash_similarity"], [34, 1, 1, "", "frame_ocr_distance"], [34, 1, 1, "", "frame_ocr_transition"], [34, 1, 1, "", "generate_frame_sample_indices"], [34, 1, 1, "", "generate_random_token"], [34, 1, 1, "", "get_dir_files"], [34, 1, 1, "", "md5_video_or_audio"], [34, 1, 1, "", "perceptual_hash_audio"], [34, 1, 1, "", "perceptual_hash_image"], [34, 1, 1, "", "perform_probe"], [34, 1, 1, "", "perform_tesseract_ocr"], [34, 1, 1, "", "read_json_file"], [34, 1, 1, "", "read_json_gz_file"], [34, 1, 1, "", "read_text_file"], [34, 1, 1, "", "read_txt_gz_file"], [34, 1, 1, "", "remove_silence_doublesided"], [34, 1, 1, "", "retrieve_file_from_kaltura"], [34, 1, 1, "", "retrieve_file_from_url"], [34, 1, 1, "", "tesseract_ocr_or_get_cached"], [34, 1, 1, "", "write_json_file"], [34, 1, 1, "", "write_text_file"], [34, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.GoogleOCRModel": [[34, 4, 1, "", "establish_connection"], [34, 4, 1, "", "perform_ocr"], [34, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[34, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.WhisperTranscriptionModel": [[34, 4, 1, "", "detect_audio_segment_lang_whisper"], [34, 4, 1, "", "load_model_whisper"], [34, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[36, 0, 0, "-", "celery_config"], [37, 0, 0, "-", "db"], [38, 0, 0, "-", "es"], [39, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[36, 2, 1, "", "BaseConfig"], [36, 2, 1, "", "DevelopmentConfig"], [36, 1, 1, "", "create_celery"], [36, 1, 1, "", "get_celery_task"], [36, 1, 1, "", "get_settings"], [36, 1, 1, "", "get_task_info"], [36, 1, 1, "", "route_task"]], "graphai.core.interfaces.db": [[37, 2, 1, "", "DB"], [37, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[37, 4, 1, "", "build_conditions_list"], [37, 4, 1, "", "create_table"], [37, 4, 1, "", "drop_create_insert_table"], [37, 4, 1, "", "drop_table"], [37, 4, 1, "", "execute_query"], [37, 4, 1, "", "find"], [37, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[38, 2, 1, "", "ES"], [38, 1, 1, "", "es_bool"], [38, 1, 1, "", "es_dis_max"], [38, 1, 1, "", "es_match"], [38, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[38, 4, 1, "", "create_index"], [38, 4, 1, "", "delete_index"], [38, 4, 1, "", "index_doc"], [38, 4, 1, "", "indices"], [38, 4, 1, "", "refresh"], [38, 4, 1, "", "search"], [38, 4, 1, "", "search_mediawiki"], [38, 4, 1, "", "search_mediawiki_no_plain"], [38, 4, 1, "", "search_mediawiki_no_rescore"], [38, 4, 1, "", "search_mediawiki_restrict_2"], [38, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[39, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[39, 4, 1, "", "search"]], "graphai.core.text": [[41, 0, 0, "-", "keywords"]], "graphai.core.text.keywords": [[41, 1, 1, "", "get_keywords"], [41, 1, 1, "", "rake_extract"], [41, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[43, 0, 0, "-", "breadcrumb"], [44, 0, 0, "-", "progress_bar"], [45, 0, 0, "-", "text"], [48, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[43, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[43, 4, 1, "", "indent"], [43, 4, 1, "", "log"], [43, 4, 1, "", "outdent"], [43, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[44, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[44, 4, 1, "", "reset"], [44, 4, 1, "", "update"]], "graphai.core.utils.text": [[46, 0, 0, "-", "clean"], [47, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[46, 2, 1, "", "HTMLCleaner"], [46, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[46, 4, 1, "", "get_data"], [46, 4, 1, "", "handle_data"], [46, 4, 1, "", "handle_endtag"], [46, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[47, 2, 1, "", "Colors"], [47, 1, 1, "", "cprint"], [47, 1, 1, "", "log"], [47, 1, 1, "", "mkdir"], [47, 1, 1, "", "pprint"], [47, 1, 1, "", "read_json"], [47, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[47, 3, 1, "", "codes"], [47, 3, 1, "", "pref"], [47, 3, 1, "", "reset"]], "graphai.core.utils.time": [[49, 0, 0, "-", "date"], [50, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[49, 1, 1, "", "add_years"], [49, 1, 1, "", "now"], [49, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[50, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[50, 4, 1, "", "delta"], [50, 4, 1, "", "report"], [50, 4, 1, "", "reset"], [50, 4, 1, "", "tick"], [50, 4, 1, "", "total"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "packag": [0, 1, 2, 9, 16, 22, 29, 30, 35, 40, 42, 45, 48], "subpackag": [0, 1, 29, 42], "submodul": [0, 1, 2, 9, 16, 22, 30, 35, 40, 42, 45, 48], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "celery_task": [2, 3, 4, 5, 6, 7, 8], "common": [3, 9, 10, 11, 12, 13, 14, 23, 30, 31, 32, 33, 34], "modul": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 44, 46, 47, 49, 50, 51], "imag": [4, 17, 24], "ontologi": [5, 13, 18, 25, 33], "text": [6, 19, 26, 40, 41, 45, 46, 47], "video": [7, 14, 20, 27, 34], "voic": [8, 21, 28], "celery_tool": 10, "graph": [11, 32], "log": 12, "main": 15, "router": [16, 17, 18, 19, 20, 21], "schema": [22, 23, 24, 25, 26, 27, 28], "core": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "cach": 31, "interfac": [35, 36, 37, 38, 39], "celery_config": 36, "db": 37, "e": 38, "wp": 39, "keyword": 41, "util": [42, 43, 44, 45, 46, 47, 48, 49, 50], "breadcrumb": 43, "progress_bar": 44, "clean": 46, "io": 47, "time": [48, 49, 50], "date": 49, "stopwatch": 50, "definit": 51}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [29, "subpackages"], [42, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [9, "submodules"], [16, "submodules"], [22, "submodules"], [30, "submodules"], [35, "submodules"], [40, "submodules"], [42, "submodules"], [45, "submodules"], [48, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image module": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.text module": [[6, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.video module": [[7, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[8, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[9, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[10, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[11, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[12, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[13, "module-graphai.api.common.ontology"]], "graphai.api.common.video module": [[14, "module-graphai.api.common.video"]], "graphai.api.main module": [[15, "module-graphai.api.main"]], "graphai.api.routers package": [[16, "module-graphai.api.routers"]], "graphai.api.routers.image module": [[17, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[18, "module-graphai.api.routers.ontology"]], "graphai.api.routers.text module": [[19, "module-graphai.api.routers.text"]], "graphai.api.routers.video module": [[20, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[21, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[22, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[23, "module-graphai.api.schemas.common"]], "graphai.api.schemas.image module": [[24, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[25, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.text module": [[26, "module-graphai.api.schemas.text"]], "graphai.api.schemas.video module": [[27, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[28, "module-graphai.api.schemas.voice"]], "graphai.core package": [[29, "module-graphai.core"]], "graphai.core.common package": [[30, "module-graphai.core.common"]], "graphai.core.common.caching module": [[31, "module-graphai.core.common.caching"]], "graphai.core.common.graph module": [[32, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[33, "module-graphai.core.common.ontology"]], "graphai.core.common.video module": [[34, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[35, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[36, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.db module": [[37, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[38, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[39, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[40, "module-graphai.core.text"]], "graphai.core.text.keywords module": [[41, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[42, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[43, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[44, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[45, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[46, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[47, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[48, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[49, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[50, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[51, "module-graphai.definitions"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.image"], [5, "module-graphai.api.celery_tasks.ontology"], [6, "module-graphai.api.celery_tasks.text"], [7, "module-graphai.api.celery_tasks.video"], [8, "module-graphai.api.celery_tasks.voice"], [9, "module-graphai.api.common"], [10, "module-graphai.api.common.celery_tools"], [11, "module-graphai.api.common.graph"], [12, "module-graphai.api.common.log"], [13, "module-graphai.api.common.ontology"], [14, "module-graphai.api.common.video"], [15, "module-graphai.api.main"], [16, "module-graphai.api.routers"], [17, "module-graphai.api.routers.image"], [18, "module-graphai.api.routers.ontology"], [19, "module-graphai.api.routers.text"], [20, "module-graphai.api.routers.video"], [21, "module-graphai.api.routers.voice"], [22, "module-graphai.api.schemas"], [23, "module-graphai.api.schemas.common"], [24, "module-graphai.api.schemas.image"], [25, "module-graphai.api.schemas.ontology"], [26, "module-graphai.api.schemas.text"], [27, "module-graphai.api.schemas.video"], [28, "module-graphai.api.schemas.voice"], [29, "module-graphai.core"], [30, "module-graphai.core.common"], [31, "module-graphai.core.common.caching"], [32, "module-graphai.core.common.graph"], [33, "module-graphai.core.common.ontology"], [34, "module-graphai.core.common.video"], [35, "module-graphai.core.interfaces"], [36, "module-graphai.core.interfaces.celery_config"], [37, "module-graphai.core.interfaces.db"], [38, "module-graphai.core.interfaces.es"], [39, "module-graphai.core.interfaces.wp"], [40, "module-graphai.core.text"], [41, "module-graphai.core.text.keywords"], [42, "module-graphai.core.utils"], [43, "module-graphai.core.utils.breadcrumb"], [44, "module-graphai.core.utils.progress_bar"], [45, "module-graphai.core.utils.text"], [46, "module-graphai.core.utils.text.clean"], [47, "module-graphai.core.utils.text.io"], [48, "module-graphai.core.utils.time"], [49, "module-graphai.core.utils.time.date"], [50, "module-graphai.core.utils.time.stopwatch"], [51, "module-graphai.definitions"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.text": [[6, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.video": [[7, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[8, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[9, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[10, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[10, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[11, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[12, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[12, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[13, "module-graphai.api.common.ontology"]], "graphai.api.common.video": [[14, "module-graphai.api.common.video"]], "graphai.api.main": [[15, "module-graphai.api.main"]], "lazy_load_singletons() (in module graphai.api.main)": [[15, "graphai.api.main.lazy_load_singletons"]], "redirect_docs() (in module graphai.api.main)": [[15, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[16, "module-graphai.api.routers"]], "calculate_fingerprint() (in module graphai.api.routers.image)": [[17, "graphai.api.routers.image.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.image)": [[17, "graphai.api.routers.image.calculate_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[17, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[17, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[17, "graphai.api.routers.image.extract_text_status"]], "graphai.api.routers.image": [[17, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[18, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[18, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[18, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[18, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[18, "graphai.api.routers.ontology.tree"]], "graphai.api.routers.text": [[19, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[19, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[19, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[19, "graphai.api.routers.text.wikify"]], "detect_slides() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.get_retrieve_file_status"]], "graphai.api.routers.video": [[20, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[20, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.detect_language_status"]], "graphai.api.routers.voice": [[21, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[21, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[22, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[23, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[23, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[23, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[23, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[23, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[23, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[23, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[23, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[23, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[23, "graphai.api.schemas.common.FileRequest.token"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[24, "graphai.api.schemas.image.IndividualOCRResult"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[24, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[24, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[24, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[24, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[24, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[24, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[24, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[24, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[24, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[24, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[24, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[24, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[24, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[24, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[24, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[24, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "token (graphai.api.schemas.image.individualocrresult attribute)": [[24, "graphai.api.schemas.image.IndividualOCRResult.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[25, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[25, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[25, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[25, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[25, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[25, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[26, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[26, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[26, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[26, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[26, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[26, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[26, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[26, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[27, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[27, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[27, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[27, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[27, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[27, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "graphai.api.schemas.video": [[27, "module-graphai.api.schemas.video"]], "kaltura (graphai.api.schemas.video.retrieveurlrequest attribute)": [[27, "graphai.api.schemas.video.RetrieveURLRequest.kaltura"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[27, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[27, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[27, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[27, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[27, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[27, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[27, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[27, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "timeout (graphai.api.schemas.video.retrieveurlrequest attribute)": [[27, "graphai.api.schemas.video.RetrieveURLRequest.timeout"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[27, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[27, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[27, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[27, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[27, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[28, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[28, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_result"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[28, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[28, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[28, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_result"]], "graphai.core": [[29, "module-graphai.core"]], "graphai.core.common": [[30, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[31, "graphai.core.common.caching.AudioDBCachingManager"]], "dbcachingmanagerbase (class in graphai.core.common.caching)": [[31, "graphai.core.common.caching.DBCachingManagerBase"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[31, "graphai.core.common.caching.SlideDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[31, "graphai.core.common.caching.VideoConfig"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[31, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "delete_cache_rows() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.delete_cache_rows"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[31, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_all_closest_matches() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_all_closest_matches"]], "get_all_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_all_details"]], "get_cache_count() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_cache_count"]], "get_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_closest_match"]], "get_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_details"]], "get_details_using_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.get_details_using_origin"]], "graphai.core.common.caching": [[31, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[31, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[31, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "insert_or_update_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_closest_match"]], "insert_or_update_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_details"]], "make_sure_path_exists() (in module graphai.core.common.caching)": [[31, "graphai.core.common.caching.make_sure_path_exists"]], "resolve_most_similar_chain() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.resolve_most_similar_chain"]], "set_root_dir() (graphai.core.common.caching.videoconfig method)": [[31, "graphai.core.common.caching.VideoConfig.set_root_dir"]], "surround_with_character() (in module graphai.core.common.caching)": [[31, "graphai.core.common.caching.surround_with_character"]], "update_details_if_exists() (graphai.core.common.caching.dbcachingmanagerbase method)": [[31, "graphai.core.common.caching.DBCachingManagerBase.update_details_if_exists"]], "conceptsgraph (class in graphai.core.common.graph)": [[32, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[32, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[32, "graphai.core.common.graph.ConceptsGraph.compute_scores"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[32, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[32, "module-graphai.core.common.graph"]], "ontology (class in graphai.core.common.ontology)": [[33, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[33, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[33, "module-graphai.core.common.ontology"]], "googleocrmodel (class in graphai.core.common.video)": [[34, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[34, "graphai.core.common.video.NLPModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[34, "graphai.core.common.video.WhisperTranscriptionModel"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.compute_video_ocr_transitions"]], "count_files() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.count_files"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[34, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_text_language() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.detect_text_language"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[34, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.extract_audio_from_video"]], "extract_audio_segment() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.extract_audio_segment"]], "extract_frames() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.extract_frames"]], "file_exists() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.file_exists"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.generate_random_token"]], "get_dir_files() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.get_dir_files"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[34, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[34, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[34, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.perceptual_hash_image"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[34, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.read_json_file"]], "read_json_gz_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.read_json_gz_file"]], "read_text_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.read_text_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[34, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[34, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_json_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.write_json_file"]], "write_text_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.write_text_file"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[34, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[35, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[36, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[36, "graphai.core.interfaces.celery_config.route_task"]], "db (class in graphai.core.interfaces.db)": [[37, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.build_conditions_list"]], "create_table() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.find"]], "graphai.core.interfaces.db": [[37, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[37, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[37, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[38, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[38, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[38, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[38, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[38, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[38, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[38, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[39, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[39, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[39, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[40, "module-graphai.core.text"]], "get_keywords() (in module graphai.core.text.keywords)": [[41, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[41, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[41, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[41, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[42, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[43, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[43, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[43, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[43, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[43, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[43, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[44, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[44, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[44, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[44, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[45, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[46, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[46, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[46, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[46, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[46, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[46, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[46, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[47, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[47, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[47, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[47, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[47, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[48, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[49, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[49, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[49, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[49, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[50, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[50, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[51, "module-graphai.definitions"]]}})