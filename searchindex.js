Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.auth", "graphai.api.auth.auth_utils", "graphai.api.auth.router", "graphai.api.common", "graphai.api.common.schemas", "graphai.api.common.utils", "graphai.api.embedding", "graphai.api.embedding.router", "graphai.api.embedding.schemas", "graphai.api.image", "graphai.api.image.router", "graphai.api.image.schemas", "graphai.api.main", "graphai.api.main.main", "graphai.api.ontology", "graphai.api.ontology.router", "graphai.api.ontology.schemas", "graphai.api.scraping", "graphai.api.scraping.router", "graphai.api.scraping.schemas", "graphai.api.text", "graphai.api.text.router", "graphai.api.text.schemas", "graphai.api.translation", "graphai.api.translation.router", "graphai.api.translation.schemas", "graphai.api.video", "graphai.api.video.router", "graphai.api.video.schemas", "graphai.api.voice", "graphai.api.voice.router", "graphai.api.voice.schemas", "graphai.celery", "graphai.celery.common", "graphai.celery.common.celery_config", "graphai.celery.common.celery_tools", "graphai.celery.common.jobs", "graphai.celery.common.log", "graphai.celery.common.tasks", "graphai.celery.embedding", "graphai.celery.embedding.jobs", "graphai.celery.embedding.tasks", "graphai.celery.image", "graphai.celery.image.jobs", "graphai.celery.image.tasks", "graphai.celery.ontology", "graphai.celery.ontology.jobs", "graphai.celery.ontology.tasks", "graphai.celery.scraping", "graphai.celery.scraping.jobs", "graphai.celery.scraping.tasks", "graphai.celery.text", "graphai.celery.text.jobs", "graphai.celery.text.tasks", "graphai.celery.translation", "graphai.celery.translation.jobs", "graphai.celery.translation.tasks", "graphai.celery.video", "graphai.celery.video.jobs", "graphai.celery.video.tasks", "graphai.celery.voice", "graphai.celery.voice.jobs", "graphai.celery.voice.tasks", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.config", "graphai.core.common.fingerprinting", "graphai.core.common.lookup", "graphai.core.embedding", "graphai.core.embedding.embedding", "graphai.core.image", "graphai.core.image.image", "graphai.core.image.ocr", "graphai.core.ontology", "graphai.core.ontology.clustering", "graphai.core.ontology.data", "graphai.core.ontology.ontology", "graphai.core.scraping", "graphai.core.scraping.scraping", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.graph", "graphai.core.text.keywords", "graphai.core.text.scores", "graphai.core.text.wikisearch", "graphai.core.translation", "graphai.core.translation.text_utils", "graphai.core.translation.translation", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.core.video", "graphai.core.video.video", "graphai.core.voice", "graphai.core.voice.transcribe", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.auth.rst", "graphai.api.auth.auth_utils.rst", "graphai.api.auth.router.rst", "graphai.api.common.rst", "graphai.api.common.schemas.rst", "graphai.api.common.utils.rst", "graphai.api.embedding.rst", "graphai.api.embedding.router.rst", "graphai.api.embedding.schemas.rst", "graphai.api.image.rst", "graphai.api.image.router.rst", "graphai.api.image.schemas.rst", "graphai.api.main.rst", "graphai.api.main.main.rst", "graphai.api.ontology.rst", "graphai.api.ontology.router.rst", "graphai.api.ontology.schemas.rst", "graphai.api.scraping.rst", "graphai.api.scraping.router.rst", "graphai.api.scraping.schemas.rst", "graphai.api.text.rst", "graphai.api.text.router.rst", "graphai.api.text.schemas.rst", "graphai.api.translation.rst", "graphai.api.translation.router.rst", "graphai.api.translation.schemas.rst", "graphai.api.video.rst", "graphai.api.video.router.rst", "graphai.api.video.schemas.rst", "graphai.api.voice.rst", "graphai.api.voice.router.rst", "graphai.api.voice.schemas.rst", "graphai.celery.rst", "graphai.celery.common.rst", "graphai.celery.common.celery_config.rst", "graphai.celery.common.celery_tools.rst", "graphai.celery.common.jobs.rst", "graphai.celery.common.log.rst", "graphai.celery.common.tasks.rst", "graphai.celery.embedding.rst", "graphai.celery.embedding.jobs.rst", "graphai.celery.embedding.tasks.rst", "graphai.celery.image.rst", "graphai.celery.image.jobs.rst", "graphai.celery.image.tasks.rst", "graphai.celery.ontology.rst", "graphai.celery.ontology.jobs.rst", "graphai.celery.ontology.tasks.rst", "graphai.celery.scraping.rst", "graphai.celery.scraping.jobs.rst", "graphai.celery.scraping.tasks.rst", "graphai.celery.text.rst", "graphai.celery.text.jobs.rst", "graphai.celery.text.tasks.rst", "graphai.celery.translation.rst", "graphai.celery.translation.jobs.rst", "graphai.celery.translation.tasks.rst", "graphai.celery.video.rst", "graphai.celery.video.jobs.rst", "graphai.celery.video.tasks.rst", "graphai.celery.voice.rst", "graphai.celery.voice.jobs.rst", "graphai.celery.voice.tasks.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.config.rst", "graphai.core.common.fingerprinting.rst", "graphai.core.common.lookup.rst", "graphai.core.embedding.rst", "graphai.core.embedding.embedding.rst", "graphai.core.image.rst", "graphai.core.image.image.rst", "graphai.core.image.ocr.rst", "graphai.core.ontology.rst", "graphai.core.ontology.clustering.rst", "graphai.core.ontology.data.rst", "graphai.core.ontology.ontology.rst", "graphai.core.scraping.rst", "graphai.core.scraping.scraping.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.graph.rst", "graphai.core.text.keywords.rst", "graphai.core.text.scores.rst", "graphai.core.text.wikisearch.rst", "graphai.core.translation.rst", "graphai.core.translation.text_utils.rst", "graphai.core.translation.translation.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.core.video.rst", "graphai.core.video.video.rst", "graphai.core.voice.rst", "graphai.core.voice.transcribe.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.auth package", "graphai.api.auth.auth_utils module", "graphai.api.auth.router module", "graphai.api.common package", "graphai.api.common.schemas module", "graphai.api.common.utils module", "graphai.api.embedding package", "graphai.api.embedding.router module", "graphai.api.embedding.schemas module", "graphai.api.image package", "graphai.api.image.router module", "graphai.api.image.schemas module", "graphai.api.main package", "graphai.api.main.main module", "graphai.api.ontology package", "graphai.api.ontology.router module", "graphai.api.ontology.schemas module", "graphai.api.scraping package", "graphai.api.scraping.router module", "graphai.api.scraping.schemas module", "graphai.api.text package", "graphai.api.text.router module", "graphai.api.text.schemas module", "graphai.api.translation package", "graphai.api.translation.router module", "graphai.api.translation.schemas module", "graphai.api.video package", "graphai.api.video.router module", "graphai.api.video.schemas module", "graphai.api.voice package", "graphai.api.voice.router module", "graphai.api.voice.schemas module", "graphai.celery package", "graphai.celery.common package", "graphai.celery.common.celery_config module", "graphai.celery.common.celery_tools module", "graphai.celery.common.jobs module", "graphai.celery.common.log module", "graphai.celery.common.tasks module", "graphai.celery.embedding package", "graphai.celery.embedding.jobs module", "graphai.celery.embedding.tasks module", "graphai.celery.image package", "graphai.celery.image.jobs module", "graphai.celery.image.tasks module", "graphai.celery.ontology package", "graphai.celery.ontology.jobs module", "graphai.celery.ontology.tasks module", "graphai.celery.scraping package", "graphai.celery.scraping.jobs module", "graphai.celery.scraping.tasks module", "graphai.celery.text package", "graphai.celery.text.jobs module", "graphai.celery.text.tasks module", "graphai.celery.translation package", "graphai.celery.translation.jobs module", "graphai.celery.translation.tasks module", "graphai.celery.video package", "graphai.celery.video.jobs module", "graphai.celery.video.tasks module", "graphai.celery.voice package", "graphai.celery.voice.jobs module", "graphai.celery.voice.tasks module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.config module", "graphai.core.common.fingerprinting module", "graphai.core.common.lookup module", "graphai.core.embedding package", "graphai.core.embedding.embedding module", "graphai.core.image package", "graphai.core.image.image module", "graphai.core.image.ocr module", "graphai.core.ontology package", "graphai.core.ontology.clustering module", "graphai.core.ontology.data module", "graphai.core.ontology.ontology module", "graphai.core.scraping package", "graphai.core.scraping.scraping module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.graph module", "graphai.core.text.keywords module", "graphai.core.text.scores module", "graphai.core.text.wikisearch module", "graphai.core.translation package", "graphai.core.translation.text_utils module", "graphai.core.translation.translation module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.core.video package", "graphai.core.video.video module", "graphai.core.voice package", "graphai.core.voice.transcribe module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 6, 38, 67, 68, 70, 71, 73, 78, 79, 82, 83, 84, 87, 88, 90, 94, 100, 102, 104, 114], "contain": [0, 24, 36, 68, 71, 78, 79, 82, 83, 85, 86, 88, 104, 114], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 23, 24, 78, 79, 83, 84, 87, 114, 124], "project": 0, "ai": 0, "base": [0, 3, 6, 23, 24, 36, 67, 73, 76, 78, 79, 82, 83, 85, 87, 88, 90, 93, 94, 96, 97, 100, 102, 104, 114, 119], "util": [0, 5, 65], "api": [0, 76, 83, 88], "celeri": [0, 7], "core": 0, "pipelin": 0, "definit": [0, 114], "modul": [0, 2, 5, 8, 11, 14, 16, 19, 22, 25, 28, 31, 35, 41, 44, 47, 50, 53, 56, 59, 62, 66, 72, 74, 77, 81, 83, 89, 92, 95, 98, 101, 103, 107, 120, 124], "auth": 1, "common": [1, 34, 65], "embed": [1, 23, 24, 34, 65, 78], "imag": [1, 34, 65, 70, 71, 102], "main": [1, 79, 107, 109], "ontologi": [1, 6, 23, 24, 34, 65, 83, 84, 85, 87], "scrape": [1, 34, 65], "text": [1, 34, 42, 57, 65, 68, 70, 71, 73, 76, 82, 90, 91, 92, 102, 104], "translat": [1, 34, 65, 71, 86, 104], "video": [1, 34, 65, 70, 71, 104], "voic": [1, 34, 65], "auth_util": 2, "router": [2, 8, 11, 16, 19, 22, 25, 28, 31], "get_ratelimit_valu": 3, "class": [3, 6, 24, 36, 67, 73, 76, 79, 83, 85, 90, 93, 94, 96, 97, 100, 102, 104], "token": [3, 4, 6, 38, 42, 45, 51, 57, 60, 63, 67, 70, 71, 73, 75, 82, 86, 90, 91, 102, 104], "access_token": 3, "str": [3, 4, 6, 23, 24, 83, 86, 88, 96, 97, 100, 114], "token_typ": 3, "basemodel": [3, 6, 24], "model_computed_field": [3, 6, 24], "classvar": [3, 6, 24], "dict": [3, 4, 6, 24, 67, 71, 78, 82, 90, 97, 102, 104], "computedfieldinfo": [3, 6, 24], "A": [3, 6, 23, 24, 79, 83, 84, 85, 86, 87, 88, 104], "dictionari": [3, 6, 7, 24, 68, 71, 78, 79, 82, 88, 90, 97, 104], "comput": [3, 6, 23, 24, 70, 71, 78, 83, 85, 87, 102, 114], "field": [3, 6, 24, 82], "name": [3, 6, 7, 24, 36, 67, 78, 97, 102], "correspond": [3, 6, 24, 70, 78], "object": [3, 6, 24, 36, 67, 71, 73, 76, 79, 83, 84, 85, 87, 90, 93, 94, 97, 99, 100, 102, 104], "model_config": [3, 6, 24], "configdict": [3, 6, 24], "configur": [3, 6, 24, 114], "model": [3, 6, 24, 73, 78, 90, 102, 104], "should": [3, 6, 24, 67, 97], "conform": [3, 6, 24], "pydant": [3, 6, 24], "config": [3, 6, 24, 66], "model_field": [3, 6, 24], "fieldinfo": [3, 6, 24], "annot": [3, 6, 24], "requir": [3, 6, 24, 114], "true": [3, 6, 23, 24, 38, 42, 57, 68, 70, 71, 73, 76, 78, 79, 82, 83, 85, 86, 87, 90, 93, 97, 100, 102, 114], "metadata": [3, 6, 24], "about": [3, 6, 24, 83, 86], "defin": [3, 6, 24, 114, 118], "map": [3, 6, 24, 78, 79, 82, 99], "thi": [3, 6, 23, 24, 70, 71, 78, 83, 87, 94, 114], "replac": [3, 6, 24, 100, 114], "__fields__": [3, 6, 24], "from": [3, 6, 7, 23, 24, 67, 70, 71, 78, 82, 83, 85, 86, 87, 96, 102, 114], "v1": [3, 6, 24, 102], "tokendata": 3, "usernam": 3, "none": [3, 4, 6, 23, 36, 38, 39, 45, 60, 63, 67, 68, 70, 71, 73, 75, 78, 79, 82, 90, 93, 94, 97, 102, 104, 114, 115], "scope": 3, "list": [3, 23, 24, 67, 70, 71, 73, 78, 79, 82, 83, 86, 88, 102, 114], "fals": [3, 6, 23, 38, 39, 42, 45, 51, 57, 60, 63, 67, 68, 71, 73, 75, 76, 78, 79, 82, 83, 86, 87, 90, 91, 97, 100, 102, 104, 114], "default": [3, 6, 23, 36, 67, 73, 78, 82, 83, 84, 85, 86, 87, 88, 100, 102], "union": [3, 6], "nonetyp": [3, 6], "user": [3, 4], "email": [3, 96], "full_nam": 3, "disabl": 3, "bool": [3, 6, 23, 83, 85, 86, 87, 97, 114], "userindb": 3, "hashed_password": 3, "generate_random_password_str": 3, "length": [3, 24, 39, 70, 82, 104], "32": [3, 82], "verify_password": 3, "plain_password": 3, "get_password_hash": 3, "password": 3, "get_us": 3, "get_user_ratelimit_overrid": 3, "path": [3, 4, 67, 68, 70, 76, 102, 104, 119], "authenticate_us": 3, "create_access_token": 4, "data": [4, 23, 71, 77, 78, 82, 97], "expires_delta": 4, "timedelta": 4, "async": [4, 23], "extract_username_and_scop": 4, "get_current_us": 4, "security_scop": 4, "securityscop": 4, "get_current_active_us": 4, "current_us": 4, "get_active_user_dummi": 4, "get_user_for_rate_limit": 4, "header": [4, 51, 82], "login_for_access_token": 4, "form_data": 4, "oauth2passwordrequestform": 4, "read_users_m": 4, "schema": [5, 8, 11, 16, 19, 22, 25, 28, 31], "taskidrespons": 6, "task_id": [6, 36], "repres": [6, 23, 24, 79, 86, 94, 100], "output": [6, 7, 102, 104], "tree": [6, 78, 102], "endpoint": 6, "titl": [6, 24], "task": [6, 7, 35, 36, 38, 41, 44, 47, 50, 53, 56, 59, 62, 71, 94, 100], "id": [6, 7, 24, 36, 38, 67, 78, 79, 82], "descript": [6, 23, 24], "creat": [6, 36, 67, 68, 79, 82, 90, 97, 100], "respons": 6, "an": [6, 23, 67, 70, 73, 78, 79, 90, 97, 102, 104], "request": [6, 23, 78, 82], "taskstatusrespons": 6, "task_nam": 6, "task_statu": 6, "task_result": [6, 36], "abc": 6, "json": [6, 68, 97, 102, 104], "statu": [6, 7, 36, 82], "filerequest": 6, "file": [6, 23, 67, 68, 70, 76, 83, 84, 97, 102, 104], "download": [6, 102], "receiv": 6, "anoth": [6, 24, 79], "tokenstatu": 6, "activ": 6, "fingerprint": [6, 66, 67, 71], "whether": [6, 23, 67, 68, 70, 78, 79, 82, 83, 85, 86, 87, 100, 102, 104, 114], "": [6, 23, 67, 68, 70, 73, 82, 83, 87, 90, 96], "i": [6, 23, 24, 67, 68, 70, 71, 73, 76, 78, 79, 82, 83, 84, 86, 87, 88, 94, 96, 100, 102, 104, 114], "avail": 6, "which": [6, 24, 67, 71, 79, 82, 83, 84, 86, 87, 88, 102, 104, 114], "make": [6, 24, 76, 79], "calcul": [6, 78, 102], "possibl": [6, 86], "otherwis": [6, 68, 73, 76, 83, 86, 102, 104, 114], "onli": [6, 23, 71, 79, 83, 88, 97, 102, 114], "cach": [6, 38, 66, 71, 102], "result": [6, 7, 23, 24, 36, 38, 54, 70, 71, 73, 75, 76, 78, 79, 82, 83, 84, 85, 87, 88, 91, 102, 104, 114], "can": [6, 23, 70, 71, 83, 88, 100, 104], "return": [6, 7, 23, 36, 38, 67, 68, 70, 71, 73, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 96, 97, 99, 100, 102, 104, 114], "ha": [6, 73, 114], "databas": [6, 71], "format_api_result": 7, "format": [7, 68, 99, 102], "come": 7, "param": [7, 36, 38, 67, 68, 70, 71, 73, 76, 78, 79, 82, 90, 102, 104, 108, 110, 111, 112, 113, 115, 116], "appropri": 7, "keyword": [23, 24, 54, 83, 85, 87, 88], "keywordsrequest": [23, 24], "use_nltk": [23, 54, 83, 86], "process": [23, 82, 83, 88], "raw": [23, 24, 96], "e": [23, 78, 82, 83, 87, 88, 102, 104], "g": [23, 78, 79, 83, 88, 104], "abstract": 23, "public": 23, "cours": 23, "lectur": 23, "slide": [23, 102], "wikifi": [23, 24, 83, 84], "wikifyfromrawtextrequest": [23, 24], "wikifyfromkeywordsrequest": [23, 24], "method": [23, 45, 54, 75, 76, 78, 79, 83, 88, 114], "restrict_to_ontologi": [23, 54, 83, 87], "graph_score_smooth": [23, 54, 83, 87], "ontology_score_smooth": [23, 54, 83, 87], "keywords_score_smooth": [23, 54, 83, 87], "aggregation_coef": [23, 54, 83, 87], "float": [23, 24, 83, 84, 86, 87, 100, 114], "0": [23, 24, 68, 70, 73, 79, 82, 83, 84, 85, 87, 88, 90, 97, 99, 100, 102, 104, 108, 114], "5": [23, 79, 83, 85, 87, 100, 104], "filtering_threshold": [23, 54, 83, 87], "1": [23, 24, 68, 70, 79, 82, 83, 87, 88, 90, 99, 100, 102, 114], "filtering_min_agreement_fract": [23, 54, 83, 87], "8": [23, 60, 83, 87], "refresh_scor": [23, 54, 83, 87], "concept": [23, 24, 78, 79, 83, 84, 85, 87, 88, 109, 114], "wikipedia": [23, 24, 79, 83, 88], "page": [23, 24, 79, 82, 83, 87, 88], "ar": [23, 24, 38, 68, 70, 79, 82, 83, 84, 86, 87, 99, 102, 114], "relev": [23, 24, 71, 83, 88], "each": [23, 24, 68, 78, 79, 82, 83, 87, 88, 94, 100, 114], "set": [23, 24, 36, 67, 68, 73, 83, 84, 88, 114], "score": [23, 24, 70, 78, 79, 83, 84, 85, 86, 88, 90, 104, 114], "quantifi": 23, "done": [23, 71], "follow": [23, 94, 96, 100, 102, 114], "extract": [23, 24, 82, 83, 86, 102, 104], "automat": [23, 67, 104], "omit": 23, "string": [23, 68, 70, 73, 82, 86, 90, 102], "provid": [23, 36, 78, 79, 82, 83, 85, 90, 102], "input": [23, 70, 76, 82, 102, 104], "under": [23, 79], "instead": [23, 38, 67], "raw_text": [23, 24, 54], "wikisearch": [23, 83, 87], "For": [23, 70, 79, 114], "most": [23, 70], "10": [23, 79, 83, 86, 88, 114], "retriev": [23, 67, 71, 82, 83, 88, 100, 102], "through": [23, 79, 102], "elasticsearch": [23, 83, 88], "pair": [23, 79, 86, 100, 114], "sever": [23, 24, 83, 87, 100], "deriv": [23, 79], "take": [23, 79, 83, 87, 114], "account": 23, "vector": [23, 24, 78], "among": [23, 71], "other": [23, 24, 79, 83, 87, 88, 100], "aggreg": [23, 24, 71, 78, 83, 87], "filter": [23, 83, 84, 86, 87], "accord": [23, 24, 78, 82, 114], "some": [23, 87, 94, 100, 114], "rule": 23, "keep": [23, 79, 94], "argument": 23, "pass": [23, 73], "have": [23, 73, 114], "more": [23, 86, 94, 100], "precis": 23, "control": [23, 83, 87, 114], "It": [23, 24, 83, 86, 88, 96, 114], "either": [23, 83, 88], "us": [23, 67, 71, 73, 76, 78, 79, 82, 83, 86, 87, 88, 96, 100, 102, 104, 114], "one": [23, 24, 70, 78, 79, 83, 86, 88, 94, 100, 114], "appli": [23, 83, 85, 87], "transform": [23, 73, 78, 83, 85, 87], "bump": [23, 83, 85, 87], "avoid": [23, 83, 85, 87, 97], "pronounc": 23, "neg": [23, 83, 85], "exponenti": [23, 83, 85], "shape": [23, 83, 85, 114], "push": [23, 83, 85, 87], "awai": [23, 83, 85, 87], "number": [23, 71, 76, 78, 79, 82, 83, 87, 88, 94, 97, 102, 114], "how": [23, 78, 82, 83, 86, 87, 90], "valu": [23, 67, 68, 70, 79, 82, 83, 87, 102, 114], "sum": [23, 24, 78, 83, 87], "over": [23, 83, 87, 114], "normalis": [23, 83, 86, 87, 114], "max": [23, 83, 87], "ani": [23, 24, 83, 86, 87, 114], "between": [23, 67, 70, 78, 79, 83, 87, 99, 100, 102, 114], "linearli": [23, 87, 99], "interpol": [23, 87], "those": [23, 70, 79, 87], "two": [23, 24, 70, 71, 76, 79, 82, 87, 102], "approach": [23, 87], "threshold": [23, 67, 71, 83, 84, 86, 87, 102, 104], "all": [23, 24, 70, 73, 78, 82, 83, 86, 87, 100, 102, 114], "decid": [23, 83, 87], "good": [23, 83, 87], "enough": [23, 73, 83, 87], "perspect": [23, 83, 87], "kept": [23, 83, 87, 114], "iff": [23, 83, 87], "least": [23, 83, 87], "fraction": [23, 83, 87, 88], "recomput": [23, 83, 87], "after": [23, 78, 83, 86, 87], "wikify_ontology_svg": [23, 54], "wikifyresponseelem": [23, 24], "level": [23, 54, 78, 83, 84], "int": [23, 24, 83, 84, 88, 94, 97], "2": [23, 70, 79, 83, 88, 90, 100, 102, 114, 124], "svg": [23, 83, 84], "subgraph": 23, "induc": [23, 79, 83, 84], "wikify_graph_svg": [23, 54], "concept_score_threshold": [23, 54, 83, 84], "3": [23, 78, 79, 83, 84, 88, 96, 100, 124], "edge_threshold": [23, 54, 83, 84], "min_component_s": [23, 54, 83, 84], "exampl": [24, 83, 86, 96, 114], "To": 24, "draw": [24, 83], "straight": 24, "line": [24, 70, 78, 97, 104, 114], "point": [24, 78, 82], "nto": 24, "produc": 24, "finit": 24, "continu": 24, "describ": 24, "circl": 24, "center": 24, "radiu": 24, "nthat": 24, "right": 24, "angl": 24, "equal": [24, 71, 82], "fall": 24, "interior": 24, "same": [24, 71, 82, 102, 114], "side": 24, "less": 24, "than": [24, 70, 86, 114], "indefinit": 24, "meet": 24, "concept_id": [24, 79, 80, 83, 84, 85, 87, 88], "concept_nam": [24, 78, 83, 84, 87, 88], "search_scor": [24, 83, 84, 87, 88], "levenshtein_scor": [24, 83, 84], "embedding_local_scor": 24, "embedding_global_scor": 24, "graph_scor": [24, 83, 84, 85], "ontology_local_scor": [24, 83, 84, 85], "ontology_global_scor": [24, 83, 84, 85], "embedding_keywords_scor": 24, "graph_keywords_scor": 24, "ontology_keywords_scor": 24, "mixed_scor": [24, 83, 84, 87], "consist": 24, "measur": 24, "degre": 24, "respect": [24, 79, 99, 114], "json_schema_extra": 24, "1196": 24, "9447807640350212": 24, "936190393844887": 24, "9806112066572416": 24, "7920787642145825": 24, "995049504950495": 24, "974893873592604": 24, "9821428571428572": 24, "12401488": 24, "triangl": 24, "6047569988500392": 24, "18117340257708767": 24, "5498335395955196": 24, "22692356368077668": 24, "30184919393927595": 24, "4680631523928115": 24, "3889476967863415": 24, "6666666666666666": 24, "18009831669894236": 24, "3392857142857143": 24, "13295107": 24, "transvers": 24, "geometri": 24, "7783132229139607": 24, "8541509524253893": 24, "7899500675092881": 24, "8158838242881319": 24, "079490218003065": 24, "2110192540065071": 24, "6477110513680882": 24, "8333333333333333": 24, "8540145985401459": 24, "7178571428571429": 24, "146689": 24, "earth": 24, "6191743554865394": 24, "3393292344705985": 24, "6058537722364034": 24, "32094309692256273": 24, "04560562055085982": 24, "5850789404910146": 24, "2747973601576835": 24, "0006414535135995178": 24, "18025826114750698": 24, "2222222222222222": 24, "475": 24, "152547": 24, "bisect": 24, "5829791653941659": 24, "6658021950254382": 24, "5916531383849596": 24, "6072448552560294": 24, "3652836360342975": 24, "2470772552749216": 24, "49403585288280044": 24, "6649784001191716": 24, "27142857142857146": 24, "161243": 24, "nine": 24, "5954070757052229": 24, "6252501137210749": 24, "6128662674658956": 24, "6809346631686672": 24, "23567484697484573": 24, "3974121105221985": 24, "5454425715474266": 24, "6234172501117234": 24, "5428571428571429": 24, "165487": 24, "world": 24, "5875702591903744": 24, "32915926499040604": 24, "5557247926738698": 24, "35937866385263295": 24, "018301492693509606": 24, "20854298868986648": 24, "35381073854308764": 24, "3324892000595859": 24, "1780815": 24, "6123892146782264": 24, "40341637127911656": 24, "7313486756137682": 24, "43983570252851467": 24, "6785714285714286": 24, "1896705": 24, "oscul": 24, "6001356168702854": 24, "6095596040570643": 24, "15095693713821154": 24, "44197078056376315": 24, "06785714285714284": 24, "1898401": 24, "arc": 24, "6206023872446591": 24, "45726985451624325": 24, "6214735523605726": 24, "5967180832515523": 24, "37885045617052326": 24, "09530697673156802": 24, "429472346018896": 24, "41496111506273836": 24, "6075750180441352": 24, "1975821": 24, "skew": 24, "6071866898797716": 24, "453132323677798": 24, "5926923831317541": 24, "6342079203068262": 24, "1467272460558672": 24, "4842714203388464": 24, "4997033279190881": 24, "4571726500819306": 24, "201359": 24, "squar": [24, 114], "6094673983855882": 24, "6228894106876862": 24, "1853365490872417": 24, "33646712232710085": 24, "4634098506722587": 24, "2035714285714286": 24, "22634860": 24, "segment": [24, 90, 104], "6015345514255728": 24, "44397434138761116": 24, "6289329297461709": 24, "6463107906576082": 24, "5940970321127149": 24, "1325957938789834": 24, "47811753398436485": 24, "250265": 24, "rhumb": 24, "7314235936190492": 24, "5403307788136165": 24, "7146040614704057": 24, "7244902789723203": 24, "10852920758292811": 24, "36085995785542146": 24, "49088968517023296": 24, "5297660279561411": 24, "48877312914546234": 24, "4848520041529702": 24, "7678571428571428": 24, "31482": 24, "tangent": 24, "59976908308104": 24, "4963883113854736": 24, "1724878951919264": 24, "35549687067330726": 24, "3307757": 24, "simson": 24, "578947689005502": 24, "6270069103429565": 24, "013581124397822893": 24, "43210300146756936": 24, "462730": 24, "inscrib": 24, "768343013064605": 24, "7717801666974846": 24, "12482171404042144": 24, "6445516077439113": 24, "6622740540324344": 24, "44285714285714284": 24, "48082": 24, "great": 24, "6151678032679938": 24, "6194506424602977": 24, "5237975686048405": 24, "5752620110628913": 24, "40714285714285714": 24, "524003": 24, "intern": 24, "extern": 24, "9544700262181692": 24, "9547191776223249": 24, "06348267860292894": 24, "6012700464524801": 24, "8358244891138791": 24, "9464285714285714": 24, "5407025": 24, "7428783723631838": 24, "7502904601610197": 24, "006235350315249621": 24, "39303319759855243": 24, "6026876561381135": 24, "3928571428571429": 24, "6220": 24, "6044584589208712": 24, "6247087590356082": 24, "5495989056289238": 24, "6404968907479984": 24, "6107142857142858": 24, "664497": 24, "parallel": [24, 71], "6220133585096995": 24, "6017217718876411": 24, "40095604092651027": 24, "06793369410635872": 24, "3948184056141364": 24, "76956": 24, "7548885234150651": 24, "8246343320198054": 24, "7571720795352108": 24, "8192570426095808": 24, "3076508249923096": 24, "5768412624599064": 24, "7030698606760027": 24, "8248175182481752": 24, "65": 24, "89246": 24, "curv": 24, "6058837846959582": 24, "6061010985898527": 24, "6010512105924976": 24, "009984282260938813": 24, "4660368744333562": 24, "91111": 24, "trisect": 24, "7222511927302219": 24, "7114737175075206": 24, "42053296186769257": 24, "5472899496445176": 24, "7163539488698042": 24, "6821428571428572": 24, "946975": 24, "8476721575861583": 24, "653131668312657": 24, "9162572314594017": 24, "9426016455778317": 24, "2862599599983249": 24, "7850418748754415": 24, "6514226203690341": 24, "9778406317665507": 24, "wikipag": 24, "global": 24, "given": [24, 36, 67, 68, 70, 78, 79, 82, 83, 84, 86, 88, 96, 97, 99, 102, 104, 114], "found": [24, 102], "local": [24, 102], "levenshtein": 24, "similar": [24, 67, 70, 71, 79, 102, 114], "mix": [24, 114], "weight": [24, 79, 83, 87, 114], "averag": [24, 78, 79, 83, 87, 114], "search": [24, 82, 83, 88, 102], "celery_config": 35, "celery_tool": 35, "job": [35, 41, 44, 47, 50, 53, 56, 59, 62], "log": [35, 79, 93, 97], "route_task": 36, "arg": [36, 38], "kwarg": [36, 71, 79], "option": [36, 78, 79, 82], "kw": 36, "baseconfig": 36, "developmentconfig": 36, "get_set": 36, "create_celeri": 36, "app": 36, "get_celery_task": 36, "asyncresult": 36, "get_task_info": 36, "info": 36, "get_n_celery_work": 37, "direct_lookup_generic_job": 38, "task_fn": 38, "return_result": [38, 42, 51, 57, 63], "timeout": 38, "40": [38, 82], "launch": 38, "direct": [38, 79, 114], "lookup": [38, 66], "function": [38, 68, 70, 100, 102, 114], "look": 38, "up": [38, 79, 83, 84], "If": [38, 68, 70, 73, 78, 79, 86, 90, 97, 114], "full": [38, 67, 68, 70, 76, 78, 102, 104], "just": [38, 78], "second": [38, 39, 70, 82, 100, 104], "case": [38, 68, 76, 97], "hit": 38, "miss": [38, 114], "msg": [39, 93, 97, 100], "total": [39, 71, 94, 100], "64": 39, "get_embedding_text_fingerprint_chain_list": 42, "model_typ": [42, 73], "fingerprint_lookup_job": [42, 45, 57, 60, 63], "fingerprint_compute_job": [42, 57], "asynchron": [42, 57], "fingerprint_job": [42, 45, 57, 60, 63], "forc": [42, 45, 51, 57, 60, 63, 67, 71, 73, 75, 91, 102, 104], "embedding_job": 42, "ocr_job": 45, "googl": [45, 75, 76], "api_token": [45, 75], "tree_job": 48, "category_info_job": 48, "category_id": [48, 79], "category_parent_job": 48, "category_children_job": 48, "dest_typ": 48, "cluster_parent_job": 48, "cluster_id": [48, 79, 80], "cluster_children_job": 48, "recompute_clusters_job": 48, "n_cluster": [48, 78, 80], "min_n": [48, 78, 80], "graph_distance_job": 48, "src": [48, 57, 90, 91], "tgt": [48, 57, 90, 91], "src_type": 48, "tgt_type": 48, "avg": [48, 79, 80], "coeff": [48, 79, 80], "concept_nearest_category_job": 48, "top_n": [48, 79, 80], "use_depth_3": [48, 79, 80], "return_clust": [48, 79, 80], "cluster_nearest_category_job": 48, "concept_nearest_concept_job": 48, "breakup_cluster_job": 48, "sublink_lookup_job": 51, "extract_sublinks_job": 51, "url": [51, 60, 82, 96, 102], "extract_content_job": 51, "long_pattern": [51, 82], "wikify_text": 54, "wikify_keyword": 54, "keyword_list": 54, "get_translation_text_fingerprint_chain_list": 57, "translation_job": 57, "skip_sentence_segment": [57, 90, 91], "detect_text_language_job": 57, "get_video_fingerprint_chain_list": 60, "min_similar": [60, 70, 71], "n_job": 60, "ignore_fp_result": 60, "get_audio_fingerprint_chain_list": 60, "get_slide_fingerprint_chain_list": 60, "origin_token": [60, 67, 102], "retrieve_url_job": 60, "is_playlist": 60, "extract_audio_job": 60, "recalculate_cach": 60, "detect_slides_job": 60, "languag": [60, 90, 102, 104], "get_file_job": 60, "get_audio_language_detection_task_chain": 63, "n_div": [63, 104], "15": 63, "len_seg": 63, "30": [63, 104], "language_lookup_job": 63, "detect_language_job": 63, "transcribe_job": 63, "lang": [63, 71, 90, 102], "strict_sil": [63, 104], "common_util": 66, "delete_fil": 67, "file_path": [67, 68, 102], "delet": [67, 96], "create_symlink_between_path": 67, "old_path": 67, "new_path": 67, "symlink": 67, "old": 67, "real": 67, "new": [67, 76, 78, 100, 102], "videodbcachingmanag": 67, "initialize_databas": 67, "dbcachingmanagerbas": [67, 71], "init_db": 67, "audiodbcachingmanag": 67, "slidedbcachingmanag": 67, "textdbcachingmanag": 67, "scrapingdbcachingmanag": 67, "get_details_using_origin": 67, "col": [67, 71, 79], "get": [67, 79, 96], "detail": [67, 71], "row": [67, 71, 78, 79, 114], "origin": [67, 71, 78, 79, 82, 83, 85, 102], "column": [67, 78, 79, 83, 84, 85, 87, 88, 114], "embeddingdbcachingmanag": 67, "videoconfig": 67, "get_root_dir": 67, "get_image_dir": 67, "get_audio_dir": 67, "get_video_dir": 67, "get_transcript_dir": 67, "concat_file_path": 67, "filenam": [67, 68, 97], "subfold": 67, "concaten": 67, "root": [67, 102], "dir": 67, "generate_filepath": 67, "force_dir": 67, "gener": [67, 73, 82, 86, 90, 102], "its": [67, 70, 78, 79, 82, 102, 114], "particular": 67, "create_symlink": 67, "new_filenam": 67, "fingerprintparamet": 67, "load_valu": 67, "load": [67, 73, 79, 90, 102, 104], "fail": 67, "them": [67, 70, 82, 83, 87], "get_min_sim_text": 67, "get_min_sim_imag": 67, "get_min_sim_audio": 67, "get_min_sim_video": 67, "get_token_file_statu": 67, "file_manag": [67, 75, 102, 104], "make_sure_path_exist": 68, "file_at_the_end": 68, "full_perm": 68, "recurs": [68, 102], "folder": [68, 102], "need": [68, 71, 73, 100], "exist": [68, 70, 76, 97], "thu": 68, "doesn": [68, 70], "t": [68, 70, 79, 83, 86, 97, 102], "end": [68, 70, 78, 82, 104, 114], "assign": [68, 114], "permiss": 68, "chmod": 68, "777": 68, "newli": 68, "file_exist": 68, "check": [68, 79, 82], "write_text_fil": 68, "filename_with_path": 68, "content": [68, 82, 97, 102], "write": [68, 102], "textual": 68, "write_json_fil": 68, "d": [68, 94, 96], "read_text_fil": 68, "open": 68, "read": [68, 97, 102], "read_json_fil": 68, "format_datetime_for_mysql": 68, "dt": 68, "parse_mysql_datetim": 68, "get_current_datetim": 68, "current": [68, 99, 102], "datetim": [68, 99], "mysql": 68, "invert_dict": 68, "strtobool": 68, "val": 68, "convert": [68, 79, 96], "represent": [68, 70], "truth": 68, "y": [68, 114], "ye": 68, "n": [68, 73, 79, 83, 88, 102, 119], "f": [68, 100], "off": 68, "rais": 68, "valueerror": 68, "anyth": 68, "els": 68, "insensit": 68, "copy_file_within_fold": 68, "folder_nam": 68, "src_file": 68, "dest_fil": 68, "convert_list_to_text": 68, "str_or_list": 68, "convert_text_back_to_list": 68, "return_list": [68, 91], "perceptual_hash_text": 70, "perceptu": [70, 102], "hash": [70, 102], "strong": [70, 96], "min_window_length": 70, "minimum": [70, 71, 73, 78, 82, 102], "window": 70, "k": [70, 102, 114], "gram": 70, "max_window_length": 70, "maximum": [70, 82, 86, 88, 102, 114], "hash_len": 70, "md5_video_or_audio": 70, "input_filename_with_path": [70, 76, 102, 104], "md5": [70, 73, 90], "audio": [70, 71, 102, 104], "stream": [70, 102], "perceptual_hash_audio": 70, "max_length": [70, 82], "7200": 70, "decod": [70, 102], "both": [70, 78, 114], "perceptual_hash_imag": 70, "hash_siz": 70, "16": 70, "size": [70, 78, 83, 84, 102], "doe": [70, 79, 97], "compare_decoded_fingerprint": 70, "decoded_1": 70, "decoded_2": 70, "compar": [70, 82, 114], "fuzzi": 70, "match": [70, 71, 82, 88], "ratio": [70, 78, 114], "compare_encoded_fingerprint": 70, "f1": 70, "f2": 70, "decoder_func": 70, "hex_to_hash": 70, "encod": [70, 83, 86, 96], "indic": [70, 79, 82, 102, 104], "exact": 70, "target": [70, 71, 79, 90, 102], "so": [70, 82, 102], "find_closest_fingerprint_from_list": 70, "target_fp": 70, "fp_list": 70, "token_list": 70, "date_list": 70, "strip_underscor": 70, "candid": 70, "find": [70, 79, 82, 83, 88, 102], "highest": [70, 104], "whose": [70, 79, 114], "abov": [70, 99, 102, 114], "unexpect": [70, 71, 78, 79, 104, 114], "indent": [70, 71, 78, 79, 93, 97, 104], "lower": 70, "block": [70, 78, 97, 100, 104], "quot": [70, 78, 104], "without": [70, 78, 100, 104, 114], "blank": [70, 78, 104, 114], "unind": [70, 78, 104, 114], "paramet": [70, 78, 83, 84, 85, 86, 87, 88, 94, 96, 97, 100, 104, 107, 114], "differ": [70, 100, 114], "v": [70, 73, 82, 114], "remov": [70, 82], "trail": 70, "underscor": 70, "closest": [70, 71, 79], "three": [70, 104], "satisfi": 70, "criterion": 70, "find_closest_fingerprint_for_list_from_list": 70, "find_closest_audio_fingerprint_from_list": 70, "find_closest_image_fingerprint_from_list": 70, "find_closest_text_fingerprint_from_list": 70, "md5_text": 70, "compute_text_fingerprint": 70, "lookup_latest_allowed_d": 71, "fp_token": 71, "db_manag": 71, "fingerprint_lookup_retrieve_from_db": 71, "equality_condit": 71, "condit": 71, "count": 71, "where": [71, 102, 114], "sourc": [71, 78, 79, 90], "plu": [71, 79, 83, 85, 90], "fingerprint_lookup_parallel": 71, "input_dict": [71, 104], "n_total": [71, 82], "data_typ": 71, "perform": [71, 76, 78, 82, 88, 102, 114], "previou": [71, 94, 100], "step": [71, 102], "index": [71, 78, 79, 82, 102, 114], "consid": [71, 78, 83, 84, 88, 102], "type": [71, 73, 82, 83, 85, 86, 87, 88, 96, 97, 104], "mode": [71, 78], "fingerprint_lookup_direct": 71, "fp_result": 71, "fingerprint_lookup_callback": 71, "results_list": [71, 104], "handl": 71, "collect": 71, "insert": 71, "retrieve_fingerprint_callback": 71, "has_origin": 71, "ignore_fingerprint_results_callback": 71, "token_status_func": 71, "is_fingerprint": 71, "fingerprint_cache_lookup": 71, "fingerprint_cache_lookup_with_most_similar": 71, "extra_col": 71, "cache_lookup_gener": 71, "database_callback_gener": 71, "values_dict": 71, "use_closest_match": 71, "token_based_text_lookup": 71, "main_col": 71, "modify_result_func": 71, "modify_result_arg": 71, "fingerprint_based_text_lookup": 71, "fp": [71, 73, 91, 102], "embedding_to_json": 73, "embedding_from_json": 73, "generate_embedding_text_token": 73, "get_text_token_count_using_model": 73, "model_token": 73, "embeddingmodel": 73, "get_devic": [73, 90], "load_model": [73, 90], "load_heavi": 73, "sentenc": [73, 86], "model_load": 73, "get_token": 73, "set_token": 73, "get_last_usag": [73, 90, 104], "unload_model": [73, 90, 104], "unload_period": [73, 90, 104], "10800": [73, 90], "unload": 73, "except": 73, "light": 73, "time": [73, 82, 92, 94, 102, 104], "sinc": 73, "last": [73, 100], "heavi": 73, "qualifi": 73, "get_token_count": 73, "get_max_token": 73, "emb": 73, "minilm": 73, "l12": 73, "v2": [73, 102], "copy_embedding_object": 73, "embedding_obj": 73, "compute_embedding_text_fingerprint_callback": 73, "token_based_embedding_lookup": 73, "fingerprint_based_embedding_lookup": 73, "embed_text": 73, "insert_embedding_into_db": 73, "embedding_text_list_fingerprint_parallel": 73, "text_list": 73, "embedding_text_list_fingerprint_callback": 73, "embedding_text_list_embed_parallel": 73, "input_list": 73, "embedding_text_list_embed_callback": 73, "ocr": [74, 102], "cache_lookup_extract_slide_text": 75, "extract_slide_text": 75, "extract_slide_text_callback": 75, "googleocrmodel": 76, "api_kei": 76, "establish_connect": 76, "lazili": 76, "connect": [76, 83, 84], "alreadi": 76, "successfulli": 76, "establish": 76, "perform_ocr": 76, "text_detect": 76, "document_text_detect": 76, "wait_for_ocr_result": 76, "image_object": 76, "dtd": 76, "retri": 76, "6": [76, 100], "call": [76, 83, 86], "wait": 76, "td": 76, "detect": [76, 90, 102, 104], "document": [76, 102], "failur": 76, "get_ocr_colnam": 76, "cluster": [77, 79, 88], "compute_all_graphs_from_scratch": 78, "data_to_use_dict": 78, "scratch": 78, "datafram": [78, 79, 83, 84, 85, 87, 88, 114], "matrix": [78, 79], "normalize_featur": 78, "normal": [78, 96], "l2": [78, 79], "norm": [78, 114], "dens": 78, "get_laplacian": 78, "laplacian": 78, "unnorm": 78, "adjac": [78, 79], "lil": 78, "spars": 78, "sum_laplacian": 78, "simpl": 78, "arithmetic_mean_laplacian": 78, "arithmet": [78, 114], "mean": [78, 83, 88, 114], "combine_laplacian": 78, "combin": [78, 114], "li": 78, "spec_embed_on_laplacian": 78, "seed": 78, "420": 78, "spectral": 78, "compon": [78, 83, 84], "random": [78, 102, 119], "optim": [78, 82], "combine_and_embed_laplacian": 78, "main_graph": 78, "n_dim": 78, "1000": 78, "combination_method": 78, "armean": 78, "dimens": 78, "perform_pca": 78, "n_compon": 78, "random_st": 78, "center_and_scal": 78, "pca": 78, "state": [78, 94], "dimension": 78, "reduct": 78, "precompute_clustering_metr": 78, "affin": [78, 114], "normalize_vector": 78, "perform_constrained_agglom": 78, "cosin": [78, 114], "linkag": 78, "full_comput": 78, "agglom": 78, "must": 78, "link": 78, "cannot": 78, "constraint": 78, "ndarrai": [78, 79], "ml": 78, "cl": 78, "return_model": 78, "well": [78, 100], "label": 78, "distanc": [78, 102, 114], "variance_ratio_ev": 78, "varianc": 78, "also": [78, 100], "known": 78, "calinski": 78, "harabasz": 78, "davies_bouldin_ev": 78, "davi": 78, "bouldin": 78, "cluster_using_embed": 78, "low": [78, 114], "space": [78, 82, 86, 97], "etc": [78, 83, 86], "group_clust": 78, "rows_and_col": 78, "precomputed_map": 78, "group": 78, "togeth": [78, 79], "becom": 78, "singl": [78, 102], "what": [78, 83, 86], "median": 78, "reassign_outli": 78, "reassign": 78, "outlier": 78, "non": 78, "cluster_and_reassign_outli": 78, "assign_to_categories_using_exist": 78, "category_concept": 78, "category_id_to_index": 78, "convert_cluster_labels_to_dict": 78, "cluster_label": 78, "concept_index_to_id": 78, "concept_index_to_nam": 78, "db_results_to_pandas_df": 79, "get_id_dict": 79, "make_adj_undirect": 79, "graph_adj": 79, "undirect": 79, "symmetr": 79, "derive_col_to_col_graph": 79, "orig_adj": 79, "get_col_to_col_dict": 79, "df": [79, 108, 115], "source_col": 79, "target_col": 79, "element": [79, 82], "kei": [79, 88, 104, 114], "return_chosen_indic": 79, "base_list": 79, "remove_invalid_pair": 79, "l_main": 79, "l_secondary_1": 79, "l_secondary_2": 79, "ref_dict": 79, "refer": 79, "appear": 79, "In": 79, "word": [79, 86, 102], "elimin": [79, 82], "against": 79, "l_secondari": 79, "secondari": 79, "clean": [79, 95], "order": 79, "thei": [79, 83, 86, 102], "were": 79, "create_graph_from_df": 79, "weight_col": 79, "col_dict": 79, "row_dict": 79, "pool_rows_and_col": 79, "make_symmetr": 79, "edg": [79, 82, 83, 84, 114], "turn": 79, "node": 79, "precomput": 79, "adj": 79, "pool": 79, "convert_to_csr_matrix": 79, "csr": 79, "to_ndarray_and_flatten": 79, "adjusted_exp": 79, "x": [79, 114], "overlap": 79, "adjusted_exp_slope_1_point": 79, "compute_averag": 79, "average_and_combin": 79, "s1": [79, 82], "s2": [79, 82], "l1": 79, "skip_empti": 79, "ontologydata": 79, "test_mod": 79, "load_data": 79, "load_ontology_concept_nam": 79, "load_ontology_categori": 79, "load_non_ontology_concept_nam": 79, "load_concept_concept_graphscor": 79, "load_category_categori": 79, "load_category_concept": 79, "load_anchor_page_dict": 79, "categori": [79, 83, 84], "anchor": 79, "tabl": [79, 118], "child": 79, "parent": 79, "relat": 79, "compute_category_anchors_using_refer": 79, "compute_symmetric_concept_concept_matrix": 79, "compute_precalculated_similarity_matric": 79, "matric": 79, "get_concept_concept_similar": 79, "concept_1_id": 79, "concept_2_id": 79, "get_concept_cluster_similar": 79, "linear": 79, "get_cluster_cluster_similar": 79, "cluster_1_id": 79, "cluster_2_id": 79, "get_concept_category_similar": 79, "4": [79, 100, 124], "coeffici": [79, 114], "get_cluster_category_similar": 79, "get_category_category_similar": 79, "category_1_id": 79, "category_2_id": 79, "get_concept_closest_concept": 79, "top": [79, 88], "get_concept_closest_cluster_of_categori": 79, "term": 79, "get_concept_closest_categori": 79, "adaptive_threshold": 79, "go": 79, "depth": 79, "directli": 79, "get_cluster_closest_categori": 79, "get_custom_cluster_closest_categori": 79, "custom": 79, "get_category_closest_categori": 79, "As": 79, "compos": 79, "crossov": 79, "get_ontology_concept_names_t": 79, "concepts_to_keep": 79, "get_ontology_category_nam": 79, "get_ontology_category_info": 79, "cat_id": 79, "get_non_ontology_concept_nam": 79, "get_concept_concept_graphscore_t": 79, "get_category_to_categori": 79, "get_category_par": 79, "child_id": 79, "get_category_children": 79, "parent_id": 79, "get_cluster_par": 79, "get_cluster_children": 79, "get_concept_parent_categori": 79, "get_concept_parent_clust": 79, "get_category_cluster_list": 79, "get_category_concept_list": 79, "get_cluster_concept_list": 79, "get_category_concept_t": 79, "get_category_cluster_t": 79, "get_category_anchor_pag": 79, "get_cluster_concept": 79, "get_concept_nam": 79, "get_test_concept_nam": 79, "get_test_category_concept": 79, "get_test_cluster_concept": 79, "get_root_categori": 79, "generate_tree_structur": 79, "start": [79, 82, 83, 88, 104], "generate_category_concept_dict": 79, "recompute_clust": 80, "ontology_data_obj": 80, "get_concept_category_closest": 80, "get_cluster_category_closest": 80, "get_concept_concept_closest": 80, "break_up_clust": 80, "compare_str": 82, "string1": 82, "string2": 82, "arrai": 82, "first": [82, 97, 100, 102], "charact": 82, "find_consecutive_run": 82, "min_run": 82, "consecut": [82, 100], "run": [82, 94, 100], "sequenc": [82, 102], "tupl": [82, 83, 86, 88, 114], "k1": [82, 102], "k2": [82, 102], "find_edge_pattern": 82, "content_stack": 82, "flip_str": 82, "repeat": 82, "pattern": 82, "begin": [82, 100], "webpag": 82, "flip": 82, "footer": 82, "string_circular_shift": 82, "shift": 82, "circular": 82, "mani": 82, "find_spac": 82, "everi": [82, 97, 102, 114], "shift_to_max_correl": 82, "correl": 82, "posit": [82, 83, 88], "largest": 82, "intersect": 82, "find_repeated_pattern": 82, "min_length": 82, "1024": 82, "everywher": 82, "within": 82, "substr": 82, "extract_text_from_url": 82, "request_head": 82, "tag_search_sequ": 82, "headless": 82, "browser": 82, "tag": [82, 96], "check_url": 82, "test_url": 82, "access": 82, "fulli": 82, "resolv": 82, "valid": [82, 106], "messag": [82, 100], "code": [82, 97, 104], "create_base_url_token": 82, "standard": 82, "initialize_url": 82, "base_url": 82, "initi": 82, "determin": 82, "protocol": 82, "http": 82, "correct": 82, "generate_sublink_token": 82, "base_token": 82, "validated_url": 82, "sublink": 82, "reconstruct_data_dict": 82, "page_typ": 82, "reconstruct": 82, "precalcul": 82, "initialize_data_dict": 82, "fill": 82, "pagetyp": 82, "vacant": 82, "get_sublink": 82, "later": 82, "parse_page_typ": 82, "pars": [82, 96, 102], "predefin": 82, "process_all_sublink": 82, "modifi": 82, "remove_head": 82, "remove_long_pattern": 82, "long": [82, 90], "cache_lookup_get_sublink": 82, "initialize_url_and_get_sublink": 82, "scraping_sublinks_callback": 82, "cache_lookup_process_all_sublink": 82, "process_all_scraping_sublinks_parallel": 82, "sublink_parallel_processing_merge_callback": 82, "remove_junk_scraping_parallel": 82, "extract_scraping_content_callback": 82, "conceptsgraph": [83, 84, 85, 87], "load_from_db": [83, 85], "get_ontology_concept": [83, 85], "add_graph_scor": [83, 85], "smooth": [83, 85, 87], "pd": [83, 84, 85, 87, 88, 114], "panda": [83, 84, 85, 87, 88, 99], "includ": [83, 85, 87, 100], "add_ontology_scor": [83, 85], "extract_keyword": [83, 86], "solv": [83, 86, 96], "problem": [83, 86, 96], "strip": [83, 86], "html": [83, 86, 96], "lowercas": [83, 86, 96], "nltk": [83, 86], "rake": [83, 86], "python": [83, 86], "join": [83, 86, 96], "p": [83, 86, 96], "Then": [83, 86], "crowd": [83, 86], "young": [83, 86], "boi": [83, 86], "re": [83, 86], "foolin": [83, 86], "around": [83, 86], "corner": [83, 86], "drunk": [83, 86], "dress": [83, 86], "best": [83, 86], "brown": [83, 86], "baggi": [83, 86], "platform": [83, 86], "sole": [83, 86], "don": [83, 86, 102], "give": [83, 86], "damn": [83, 86], "trumpet": [83, 86], "playin": [83, 86], "band": [83, 86], "ain": [83, 86], "rock": [83, 86], "roll": [83, 86], "keywords_list": [83, 88], "interfac": [83, 88], "portion": [83, 88], "middl": [83, 88], "third": [83, 88], "searchrank": [83, 87, 88], "uniqu": [83, 87, 88, 114], "fallback": [83, 88], "compute_scor": [83, 87], "gather": [83, 87], "final": [83, 87, 100, 114], "x_score": [83, 87], "draw_ontologi": [83, 84], "neighbourhood": [83, 84], "store": [83, 84, 102], "tmp": [83, 84], "keywords_scor": [83, 84], "visualis": [83, 84, 106], "draw_graph": [83, 84], "below": [83, 84, 86, 99, 102], "out": [83, 84, 86], "word_token": 86, "separ": 86, "you": [86, 96], "rake_extract": 86, "split_word": 86, "return_scor": 86, "auto": 86, "filter_past_tenses_and_adverb": 86, "unconstrain": 86, "split": 86, "retur": 86, "minim": 86, "ignor": 86, "past": 86, "tens": 86, "participl": 86, "adverb": 86, "compute_levenshtein_scor": 87, "compute_embedding_scor": 87, "compute_keywords_scor": 87, "compute_mixed_scor": 87, "aggregate_result": 87, "coef": 87, "filter_result": 87, "epsilon": [87, 108], "min_agreement_fract": 87, "depend": 87, "criteria": 87, "specifi": [87, 114], "subset": 87, "search_wikipedia_api": 88, "limit": 88, "queri": 88, "search_elasticsearch": 88, "elasticserch": 88, "text_util": 89, "generate_src_tgt_dict": 90, "generate_translation_text_token": 90, "detect_text_languag": 90, "compute_slide_tfidf_scor": 90, "list_of_set": 90, "min_freq": 90, "find_set_cov": 90, "coverag": 90, "find_best_slide_subset": 90, "slides_and_concept": 90, "prioriti": 90, "translationmodel": 90, "huggingfac": 90, "pysbd": 90, "en": [90, 102, 104], "fr": 90, "skip": [90, 97], "unpunctu": 90, "too": [90, 100], "flag": 90, "translate_text": 91, "translation_obj": 91, "translate_text_callback": 91, "compute_translation_text_fingerprint_callback": 91, "cache_lookup_translation_text_using_fingerprint": 91, "cache_lookup_translate_text": 91, "detect_language_transl": 91, "breadcrumb": 92, "progress_bar": 92, "debug": [93, 97], "color": [93, 97], "time_color": 93, "grai": 93, "report": [93, 100], "outdent": 93, "progressbar": 94, "n_iter": 94, "bar_length": 94, "50": 94, "progress": 94, "bar": 94, "track": [94, 100, 102], "execut": [94, 100], "usag": [94, 100], "letter": 94, "b": 94, "c": [94, 96, 114], "pb": 94, "len": 94, "consum": [94, 100], "updat": 94, "25": 94, "00": 94, "75": 94, "100": 94, "print": [94, 96, 97, 99, 100], "iter": 94, "percentag": 94, "complet": [94, 100, 119], "overwrit": 94, "ban": 94, "reset": [94, 97, 100], "increment": 94, "counter": 94, "reus": [94, 100], "io": 95, "htmlcleaner": 96, "htmlparser": 96, "shiver": 96, "dark": 96, "br": 96, "rain": 96, "park": 96, "meantim": 96, "feed": [96, 104], "get_data": 96, "handle_starttag": 96, "attr": 96, "handle_endtag": 96, "handle_data": 96, "u2018rain": 96, "u2019": 96, "lt": 96, "evalu": 97, "pref": 97, "x1b": 97, "0m": 97, "black": 97, "30m": 97, "blue": 97, "34m": 97, "cyan": 97, "36m": 97, "green": 97, "32m": 97, "magenta": 97, "35m": 97, "red": 97, "31m": 97, "white": 97, "37m": 97, "yellow": 97, "33m": 97, "cprint": 97, "is_bold": 97, "bold": 97, "pprint": 97, "inlin": 97, "only_first": 97, "pretti": 97, "preced": 97, "ellipsi": 97, "big": 97, "read_json": 97, "save_json": 97, "save": 97, "mkdir": 97, "dirnam": 97, "directori": 97, "date": 98, "stopwatch": 98, "now": 99, "timestamp": [99, 104], "2022": 99, "06": 99, "28": 99, "09": 99, "46": 99, "21": 99, "677968": 99, "rescal": 99, "min_dat": 99, "max_dat": 99, "seri": 99, "rang": [99, 114], "assum": [99, 114], "yyyi": 99, "mm": 99, "dd": 99, "add_year": 99, "n_year": 99, "sw": 100, "delta": 100, "284306764602661": 100, "variabl": 100, "t1": 100, "t2": 100, "yet": 100, "t3": 100, "609307289123535": 100, "849977970123291": 100, "660188913345337": 100, "preprocess": 100, "pre_tim": 100, "task_tim": 100, "postprocess": 100, "post_tim": 100, "total_tim": 100, "proport": 100, "5176954220125477": 100, "tick": 100, "partial": 100, "furthermor": 100, "19": 100, "86": 100, "lap": 100, "74": 100, "11": 100, "66": 100, "45": 100, "checkpoint": 100, "finish": 100, "summari": 100, "boolean": 100, "befor": [100, 114], "generate_random_token": 102, "get_file_s": 102, "retrieve_file_from_generic_url": 102, "output_filename_with_path": [102, 104], "output_token": [102, 104], "wget": 102, "success": [102, 104], "retrieve_file_from_kaltura": 102, "m3u8": 102, "kaltura": 102, "playlist": 102, "retrieve_file_from_youtub": 102, "youtub": 102, "retrieve_file_from_any_sourc": 102, "is_kaltura": 102, "create_filename_using_url_format": 102, "perform_prob": 102, "probe": 102, "ffprobe": 102, "see": 102, "get_available_stream": 102, "perform_slow_audio_prob": 102, "slower": 102, "ffmpeg": 102, "generate_symbolic_token": 102, "symbol": 102, "itself": 102, "detect_audio_dur": 102, "durat": 102, "ogg": 102, "input_token": 102, "generate_audio_token": 102, "extract_audio_from_video": 102, "extract_fram": 102, "output_folder_with_path": 102, "output_fold": 102, "frame": 102, "generate_frame_sample_indic": 102, "input_folder_with_path": 102, "12": 102, "we": 102, "our": 102, "read_txt_gz_fil": 102, "txt": 102, "gz": 102, "write_txt_gz_fil": 102, "read_json_gz_fil": 102, "perform_tesseract_ocr": 102, "image_path": 102, "tesseract": 102, "tesseract_ocr_or_get_cach": 102, "ocr_path": 102, "langaug": 102, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 102, "nlpmodel": 102, "load_nlp_model": 102, "lazi": [102, 104], "nlp": 102, "get_word": 102, "valid_onli": 102, "get_text_word_vector": 102, "get_text_word_vector_using_word": 102, "get_cosine_sim": 102, "frame_ocr_dist": 102, "nlp_model": 102, "frame_hash_similar": 102, "compute_ocr_noise_level": 102, "frame_sample_indic": 102, "nois": 102, "sampl": [102, 104], "identifi": 102, "compute_ocr_threshold": 102, "distance_list": 102, "default_threshold": 102, "05": [102, 114], "subsequ": 102, "empti": 102, "check_ocr_and_hash_threshold": 102, "k_l": 102, "k_r": 102, "ocr_dist_threshold": 102, "hash_similarity_threshold": 102, "frame_ocr_transit": 102, "transit": 102, "binari": 102, "frame_format": 102, "leftmost": 102, "rightmost": 102, "distinct": 102, "compute_video_ocr_transit": 102, "hash_dist_threshold": 102, "keep_first": 102, "transitori": 102, "get_video_token_statu": 102, "get_image_token_statu": 102, "get_audio_token_statu": 102, "retrieve_file_from_url": 102, "force_token": 102, "retrieve_file_from_url_callback": 102, "compute_video_fingerprint": 102, "compute_video_fingerprint_callback": 102, "cache_lookup_retrieve_file_from_url": 102, "cache_lookup_extract_audio": 102, "extract_audio": 102, "extract_audio_callback": 102, "reextract_cached_audio": 102, "compute_audio_fingerprint": 102, "compute_audio_fingerprint_callback": 102, "cache_lookup_detect_slid": 102, "extract_and_sample_fram": 102, "compute_noise_level_parallel": 102, "compute_noise_threshold_callback": 102, "hash_thresh": 102, "compute_slide_transitions_parallel": 102, "compute_slide_transitions_callback": 102, "detect_slides_callback": 102, "attempt": 102, "reextract_cached_slid": 102, "compute_slide_fingerprint": 102, "compute_slide_set_fingerprint": 102, "compute_slide_fingerprint_callback": 102, "retrieve_slide_fingerprint_callback": 102, "ignore_slide_fingerprint_results_callback": 102, "ignore_audio_fingerprint_results_callback": 102, "retrieve_audio_fingerprint_callback": 102, "retrieve_video_fingerprint_callback": 102, "ignore_video_fingerprint_results_callback": 102, "transcrib": 103, "whispertranscriptionmodel": 104, "load_model_whisp": 104, "whisper": 104, "memori": 104, "43200": 104, "get_silence_threshold": 104, "detect_audio_segment_lang_whisp": 104, "transcribe_audio_whisp": 104, "force_lang": 104, "verbos": 104, "explicitli": 104, "transcript": 104, "silenc": 104, "strict": 104, "lenient": 104, "affect": 104, "logprob": 104, "speech": 104, "like": 104, "subtitl": 104, "extract_media_seg": 104, "detect_language_retrieve_from_db_and_split": 104, "segment_length": 104, "detect_language_parallel": 104, "tokens_dict": 104, "detect_language_callback": 104, "transcribe_audio_to_text": 104, "transcribe_callback": 104, "cache_lookup_audio_transcript": 104, "cache_lookup_audio_fingerprint": 104, "cache_lookup_audio_languag": 104, "invest": 106, "aggregate_recent_past": 107, "check_unit": 107, "compute_fundraisers_unit": 107, "compute_investors_unit": 107, "compute_investors_units_2": 107, "compute_jaccard_index": 107, "concept_configur": 107, "create_investments_graph": 107, "detect_fundraisers_concept": 107, "toy_exampl": 107, "compute_year_coeffici": 108, "recent_past": 108, "rescale_scor": 108, "year": 108, "aggregate_year": 108, "groupby_column": [108, 115], "normalize_scor": 108, "score_column": 108, "01": 108, "show_trend": 109, "unit_id": 109, "unit_concept": 109, "show_matchmaking_list_view": 109, "investors_concepts_jaccard": 109, "investors_concept": 109, "unit_concept_id": 109, "show_matchmaking_chart_view": 109, "unit_investor": 109, "time_window": 109, "pageid": 114, "investorid": 114, "sqrt": 114, "sum_": 114, "o": 114, "divid": 114, "henc": 114, "min_ratio": 114, "sourcepageid": 114, "targetpageid": 114, "product": 114, "ball": 114, "loop": 114, "normalise_graph": 114, "add": 114, "revers": 114, "vertex": 114, "associ": 114, "key_x": 114, "key_i": 114, "geometr": 114, "compute_affin": 114, "mix_x": 114, "mix_i": 114, "normalise_befor": 114, "recommend": 114, "euclidean": 114, "notic": 114, "faster": 114, "inf": 114, "typic": 114, "higher": 114, "unus": 114, "u": 114, "equival": 114, "scalar": 114, "tanh": 114, "denot": 114, "get_fr": 115, "db": 115, "get_investors_fr": 115, "fr_id": 115, "get_frs_fundrais": 115, "get_fundraisers_concept": 115, "fundraiser_id": 115, "derive_yearly_data": 115, "date_column": 115, "amount_column": 115, "creation": 118, "build_prefix": 118, "1_old": 120, "2_new": 120, "3_slide": 120, "startup": 124}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [34, 0, 0, "-", "celery"], [65, 0, 0, "-", "core"], [105, 0, 0, "-", "definitions"], [106, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "auth"], [5, 0, 0, "-", "common"], [8, 0, 0, "-", "embedding"], [11, 0, 0, "-", "image"], [14, 0, 0, "-", "main"], [16, 0, 0, "-", "ontology"], [19, 0, 0, "-", "scraping"], [22, 0, 0, "-", "text"], [25, 0, 0, "-", "translation"], [28, 0, 0, "-", "video"], [31, 0, 0, "-", "voice"]], "graphai.api.auth": [[3, 0, 0, "-", "auth_utils"], [4, 0, 0, "-", "router"]], "graphai.api.auth.auth_utils": [[3, 1, 1, "", "Token"], [3, 1, 1, "", "TokenData"], [3, 1, 1, "", "User"], [3, 1, 1, "", "UserInDB"], [3, 3, 1, "", "authenticate_user"], [3, 3, 1, "", "generate_random_password_string"], [3, 3, 1, "", "get_password_hash"], [3, 3, 1, "", "get_ratelimit_values"], [3, 3, 1, "", "get_user"], [3, 3, 1, "", "get_user_ratelimit_overrides"], [3, 3, 1, "", "verify_password"]], "graphai.api.auth.auth_utils.Token": [[3, 2, 1, "", "access_token"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "token_type"]], "graphai.api.auth.auth_utils.TokenData": [[3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.User": [[3, 2, 1, "", "disabled"], [3, 2, 1, "", "email"], [3, 2, 1, "", "full_name"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.UserInDB": [[3, 2, 1, "", "hashed_password"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"]], "graphai.api.auth.router": [[4, 3, 1, "", "create_access_token"], [4, 3, 1, "", "extract_username_and_scopes"], [4, 3, 1, "", "get_active_user_dummy"], [4, 3, 1, "", "get_current_active_user"], [4, 3, 1, "", "get_current_user"], [4, 3, 1, "", "get_user_for_rate_limiter"], [4, 3, 1, "", "login_for_access_token"], [4, 3, 1, "", "read_users_me"]], "graphai.api.common": [[6, 0, 0, "-", "schemas"], [7, 0, 0, "-", "utils"]], "graphai.api.common.schemas": [[6, 1, 1, "", "FileRequest"], [6, 1, 1, "", "TaskIDResponse"], [6, 1, 1, "", "TaskStatusResponse"], [6, 1, 1, "", "TokenStatus"]], "graphai.api.common.schemas.FileRequest": [[6, 2, 1, "", "model_computed_fields"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "", "token"]], "graphai.api.common.schemas.TaskIDResponse": [[6, 2, 1, "", "model_computed_fields"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "", "task_id"]], "graphai.api.common.schemas.TaskStatusResponse": [[6, 2, 1, "", "model_computed_fields"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "", "task_id"], [6, 2, 1, "", "task_name"], [6, 2, 1, "", "task_result"], [6, 2, 1, "", "task_status"]], "graphai.api.common.schemas.TokenStatus": [[6, 2, 1, "", "active"], [6, 2, 1, "", "fingerprinted"], [6, 2, 1, "", "model_computed_fields"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"]], "graphai.api.common.utils": [[7, 3, 1, "", "format_api_results"]], "graphai.api.text": [[23, 0, 0, "-", "router"], [24, 0, 0, "-", "schemas"]], "graphai.api.text.router": [[23, 3, 1, "", "keywords"], [23, 3, 1, "", "wikify"], [23, 3, 1, "", "wikify_graph_svg"], [23, 3, 1, "", "wikify_ontology_svg"]], "graphai.api.text.schemas": [[24, 1, 1, "", "KeywordsRequest"], [24, 1, 1, "", "WikifyFromKeywordsRequest"], [24, 1, 1, "", "WikifyFromRawTextRequest"], [24, 1, 1, "", "WikifyResponseElem"]], "graphai.api.text.schemas.KeywordsRequest": [[24, 2, 1, "", "model_computed_fields"], [24, 2, 1, "", "model_config"], [24, 2, 1, "", "model_fields"], [24, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyFromKeywordsRequest": [[24, 2, 1, "", "keywords"], [24, 2, 1, "", "model_computed_fields"], [24, 2, 1, "", "model_config"], [24, 2, 1, "", "model_fields"]], "graphai.api.text.schemas.WikifyFromRawTextRequest": [[24, 2, 1, "", "model_computed_fields"], [24, 2, 1, "", "model_config"], [24, 2, 1, "", "model_fields"], [24, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyResponseElem": [[24, 2, 1, "", "concept_id"], [24, 2, 1, "", "concept_name"], [24, 2, 1, "", "embedding_global_score"], [24, 2, 1, "", "embedding_keywords_score"], [24, 2, 1, "", "embedding_local_score"], [24, 2, 1, "", "graph_keywords_score"], [24, 2, 1, "", "graph_score"], [24, 2, 1, "", "levenshtein_score"], [24, 2, 1, "", "mixed_score"], [24, 2, 1, "", "model_computed_fields"], [24, 2, 1, "", "model_config"], [24, 2, 1, "", "model_fields"], [24, 2, 1, "", "ontology_global_score"], [24, 2, 1, "", "ontology_keywords_score"], [24, 2, 1, "", "ontology_local_score"], [24, 2, 1, "", "search_score"]], "graphai.celery": [[35, 0, 0, "-", "common"], [41, 0, 0, "-", "embedding"], [44, 0, 0, "-", "image"], [47, 0, 0, "-", "ontology"], [50, 0, 0, "-", "scraping"], [53, 0, 0, "-", "text"], [56, 0, 0, "-", "translation"], [59, 0, 0, "-", "video"], [62, 0, 0, "-", "voice"]], "graphai.celery.common": [[36, 0, 0, "-", "celery_config"], [37, 0, 0, "-", "celery_tools"], [38, 0, 0, "-", "jobs"], [39, 0, 0, "-", "log"], [40, 0, 0, "-", "tasks"]], "graphai.celery.common.celery_config": [[36, 1, 1, "", "BaseConfig"], [36, 1, 1, "", "DevelopmentConfig"], [36, 3, 1, "", "create_celery"], [36, 3, 1, "", "get_celery_task"], [36, 3, 1, "", "get_settings"], [36, 3, 1, "", "get_task_info"], [36, 3, 1, "", "route_task"]], "graphai.celery.common.celery_tools": [[37, 3, 1, "", "get_n_celery_workers"]], "graphai.celery.common.jobs": [[38, 3, 1, "", "direct_lookup_generic_job"]], "graphai.celery.common.log": [[39, 3, 1, "", "log"]], "graphai.celery.embedding": [[42, 0, 0, "-", "jobs"], [43, 0, 0, "-", "tasks"]], "graphai.celery.embedding.jobs": [[42, 3, 1, "", "embedding_job"], [42, 3, 1, "", "fingerprint_compute_job"], [42, 3, 1, "", "fingerprint_job"], [42, 3, 1, "", "fingerprint_lookup_job"], [42, 3, 1, "", "get_embedding_text_fingerprint_chain_list"]], "graphai.celery.image": [[45, 0, 0, "-", "jobs"], [46, 0, 0, "-", "tasks"]], "graphai.celery.image.jobs": [[45, 3, 1, "", "fingerprint_job"], [45, 3, 1, "", "fingerprint_lookup_job"], [45, 3, 1, "", "ocr_job"]], "graphai.celery.ontology": [[48, 0, 0, "-", "jobs"], [49, 0, 0, "-", "tasks"]], "graphai.celery.ontology.jobs": [[48, 3, 1, "", "breakup_cluster_job"], [48, 3, 1, "", "category_children_job"], [48, 3, 1, "", "category_info_job"], [48, 3, 1, "", "category_parent_job"], [48, 3, 1, "", "cluster_children_job"], [48, 3, 1, "", "cluster_nearest_category_job"], [48, 3, 1, "", "cluster_parent_job"], [48, 3, 1, "", "concept_nearest_category_job"], [48, 3, 1, "", "concept_nearest_concept_job"], [48, 3, 1, "", "graph_distance_job"], [48, 3, 1, "", "recompute_clusters_job"], [48, 3, 1, "", "tree_job"]], "graphai.celery.scraping": [[51, 0, 0, "-", "jobs"], [52, 0, 0, "-", "tasks"]], "graphai.celery.scraping.jobs": [[51, 3, 1, "", "extract_content_job"], [51, 3, 1, "", "extract_sublinks_job"], [51, 3, 1, "", "sublink_lookup_job"]], "graphai.celery.text": [[54, 0, 0, "-", "jobs"], [55, 0, 0, "-", "tasks"]], "graphai.celery.text.jobs": [[54, 3, 1, "", "keywords"], [54, 3, 1, "", "wikify_graph_svg"], [54, 3, 1, "", "wikify_keywords"], [54, 3, 1, "", "wikify_ontology_svg"], [54, 3, 1, "", "wikify_text"]], "graphai.celery.translation": [[57, 0, 0, "-", "jobs"], [58, 0, 0, "-", "tasks"]], "graphai.celery.translation.jobs": [[57, 3, 1, "", "detect_text_language_job"], [57, 3, 1, "", "fingerprint_compute_job"], [57, 3, 1, "", "fingerprint_job"], [57, 3, 1, "", "fingerprint_lookup_job"], [57, 3, 1, "", "get_translation_text_fingerprint_chain_list"], [57, 3, 1, "", "translation_job"]], "graphai.celery.video": [[60, 0, 0, "-", "jobs"], [61, 0, 0, "-", "tasks"]], "graphai.celery.video.jobs": [[60, 3, 1, "", "detect_slides_job"], [60, 3, 1, "", "extract_audio_job"], [60, 3, 1, "", "fingerprint_job"], [60, 3, 1, "", "fingerprint_lookup_job"], [60, 3, 1, "", "get_audio_fingerprint_chain_list"], [60, 3, 1, "", "get_file_job"], [60, 3, 1, "", "get_slide_fingerprint_chain_list"], [60, 3, 1, "", "get_video_fingerprint_chain_list"], [60, 3, 1, "", "retrieve_url_job"]], "graphai.celery.voice": [[63, 0, 0, "-", "jobs"], [64, 0, 0, "-", "tasks"]], "graphai.celery.voice.jobs": [[63, 3, 1, "", "detect_language_job"], [63, 3, 1, "", "fingerprint_job"], [63, 3, 1, "", "fingerprint_lookup_job"], [63, 3, 1, "", "get_audio_language_detection_task_chain"], [63, 3, 1, "", "language_lookup_job"], [63, 3, 1, "", "transcribe_job"]], "graphai.core": [[66, 0, 0, "-", "common"], [72, 0, 0, "-", "embedding"], [74, 0, 0, "-", "image"], [77, 0, 0, "-", "ontology"], [81, 0, 0, "-", "scraping"], [83, 0, 0, "-", "text"], [89, 0, 0, "-", "translation"], [92, 0, 0, "-", "utils"], [101, 0, 0, "-", "video"], [103, 0, 0, "-", "voice"]], "graphai.core.common": [[67, 0, 0, "-", "caching"], [68, 0, 0, "-", "common_utils"], [69, 0, 0, "-", "config"], [70, 0, 0, "-", "fingerprinting"], [71, 0, 0, "-", "lookup"]], "graphai.core.common.caching": [[67, 1, 1, "", "AudioDBCachingManager"], [67, 1, 1, "", "EmbeddingDBCachingManager"], [67, 1, 1, "", "FingerprintParameters"], [67, 1, 1, "", "ScrapingDBCachingManager"], [67, 1, 1, "", "SlideDBCachingManager"], [67, 1, 1, "", "TextDBCachingManager"], [67, 1, 1, "", "VideoConfig"], [67, 1, 1, "", "VideoDBCachingManager"], [67, 3, 1, "", "create_symlink_between_paths"], [67, 3, 1, "", "delete_file"], [67, 3, 1, "", "get_token_file_status"]], "graphai.core.common.caching.AudioDBCachingManager": [[67, 4, 1, "", "init_db"]], "graphai.core.common.caching.EmbeddingDBCachingManager": [[67, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[67, 4, 1, "", "get_min_sim_audio"], [67, 4, 1, "", "get_min_sim_image"], [67, 4, 1, "", "get_min_sim_text"], [67, 4, 1, "", "get_min_sim_video"], [67, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[67, 4, 1, "", "get_details_using_origin"], [67, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[67, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[67, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[67, 4, 1, "", "concat_file_path"], [67, 4, 1, "", "create_symlink"], [67, 4, 1, "", "generate_filepath"], [67, 4, 1, "", "get_audio_dir"], [67, 4, 1, "", "get_image_dir"], [67, 4, 1, "", "get_root_dir"], [67, 4, 1, "", "get_transcript_dir"], [67, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[67, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[68, 3, 1, "", "convert_list_to_text"], [68, 3, 1, "", "convert_text_back_to_list"], [68, 3, 1, "", "copy_file_within_folder"], [68, 3, 1, "", "file_exists"], [68, 3, 1, "", "format_datetime_for_mysql"], [68, 3, 1, "", "get_current_datetime"], [68, 3, 1, "", "invert_dict"], [68, 3, 1, "", "make_sure_path_exists"], [68, 3, 1, "", "parse_mysql_datetime"], [68, 3, 1, "", "read_json_file"], [68, 3, 1, "", "read_text_file"], [68, 3, 1, "", "strtobool"], [68, 3, 1, "", "write_json_file"], [68, 3, 1, "", "write_text_file"]], "graphai.core.common.fingerprinting": [[70, 3, 1, "", "compare_decoded_fingerprints"], [70, 3, 1, "", "compare_encoded_fingerprints"], [70, 3, 1, "", "compute_text_fingerprint"], [70, 3, 1, "", "find_closest_audio_fingerprint_from_list"], [70, 3, 1, "", "find_closest_fingerprint_for_list_from_list"], [70, 3, 1, "", "find_closest_fingerprint_from_list"], [70, 3, 1, "", "find_closest_image_fingerprint_from_list"], [70, 3, 1, "", "find_closest_text_fingerprint_from_list"], [70, 3, 1, "", "md5_text"], [70, 3, 1, "", "md5_video_or_audio"], [70, 3, 1, "", "perceptual_hash_audio"], [70, 3, 1, "", "perceptual_hash_image"], [70, 3, 1, "", "perceptual_hash_text"]], "graphai.core.common.lookup": [[71, 3, 1, "", "cache_lookup_generic"], [71, 3, 1, "", "database_callback_generic"], [71, 3, 1, "", "fingerprint_based_text_lookup"], [71, 3, 1, "", "fingerprint_cache_lookup"], [71, 3, 1, "", "fingerprint_cache_lookup_with_most_similar"], [71, 3, 1, "", "fingerprint_lookup_callback"], [71, 3, 1, "", "fingerprint_lookup_direct"], [71, 3, 1, "", "fingerprint_lookup_parallel"], [71, 3, 1, "", "fingerprint_lookup_retrieve_from_db"], [71, 3, 1, "", "ignore_fingerprint_results_callback"], [71, 3, 1, "", "is_fingerprinted"], [71, 3, 1, "", "lookup_latest_allowed_date"], [71, 3, 1, "", "retrieve_fingerprint_callback"], [71, 3, 1, "", "token_based_text_lookup"]], "graphai.core.embedding": [[73, 0, 0, "-", "embedding"]], "graphai.core.embedding.embedding": [[73, 1, 1, "", "EmbeddingModels"], [73, 3, 1, "", "compute_embedding_text_fingerprint_callback"], [73, 3, 1, "", "copy_embedding_object"], [73, 3, 1, "", "embed_text"], [73, 3, 1, "", "embedding_from_json"], [73, 3, 1, "", "embedding_text_list_embed_callback"], [73, 3, 1, "", "embedding_text_list_embed_parallel"], [73, 3, 1, "", "embedding_text_list_fingerprint_callback"], [73, 3, 1, "", "embedding_text_list_fingerprint_parallel"], [73, 3, 1, "", "embedding_to_json"], [73, 3, 1, "", "fingerprint_based_embedding_lookup"], [73, 3, 1, "", "generate_embedding_text_token"], [73, 3, 1, "", "get_text_token_count_using_model"], [73, 3, 1, "", "insert_embedding_into_db"], [73, 3, 1, "", "token_based_embedding_lookup"]], "graphai.core.embedding.embedding.EmbeddingModels": [[73, 4, 1, "", "embed"], [73, 4, 1, "", "get_device"], [73, 4, 1, "", "get_last_usage"], [73, 4, 1, "", "get_max_tokens"], [73, 4, 1, "", "get_token_count"], [73, 4, 1, "", "get_tokenizer"], [73, 4, 1, "", "load_model"], [73, 4, 1, "", "load_models"], [73, 4, 1, "", "model_loaded"], [73, 4, 1, "", "set_tokenizer"], [73, 4, 1, "", "unload_model"]], "graphai.core.image": [[75, 0, 0, "-", "image"], [76, 0, 0, "-", "ocr"]], "graphai.core.image.image": [[75, 3, 1, "", "cache_lookup_extract_slide_text"], [75, 3, 1, "", "extract_slide_text"], [75, 3, 1, "", "extract_slide_text_callback"]], "graphai.core.image.ocr": [[76, 1, 1, "", "GoogleOCRModel"], [76, 3, 1, "", "get_ocr_colnames"]], "graphai.core.image.ocr.GoogleOCRModel": [[76, 4, 1, "", "establish_connection"], [76, 4, 1, "", "perform_ocr"], [76, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.ontology": [[78, 0, 0, "-", "clustering"], [79, 0, 0, "-", "data"], [80, 0, 0, "-", "ontology"]], "graphai.core.ontology.clustering": [[78, 3, 1, "", "arithmetic_mean_laplacians"], [78, 3, 1, "", "assign_to_categories_using_existing"], [78, 3, 1, "", "cluster_and_reassign_outliers"], [78, 3, 1, "", "cluster_using_embedding"], [78, 3, 1, "", "combine_and_embed_laplacian"], [78, 3, 1, "", "combine_laplacians"], [78, 3, 1, "", "compute_all_graphs_from_scratch"], [78, 3, 1, "", "convert_cluster_labels_to_dict"], [78, 3, 1, "", "davies_bouldin_eval"], [78, 3, 1, "", "get_laplacian"], [78, 3, 1, "", "group_clustered"], [78, 3, 1, "", "normalize_features"], [78, 3, 1, "", "perform_PCA"], [78, 3, 1, "", "perform_constrained_agglomerative"], [78, 3, 1, "", "precompute_clustering_metric"], [78, 3, 1, "", "reassign_outliers"], [78, 3, 1, "", "spec_embed_on_laplacian"], [78, 3, 1, "", "sum_laplacians"], [78, 3, 1, "", "variance_ratio_eval"]], "graphai.core.ontology.data": [[79, 1, 1, "", "OntologyData"], [79, 3, 1, "", "adjusted_exp"], [79, 3, 1, "", "adjusted_exp_slope_1_point"], [79, 3, 1, "", "average_and_combine"], [79, 3, 1, "", "compute_average"], [79, 3, 1, "", "convert_to_csr_matrix"], [79, 3, 1, "", "create_graph_from_df"], [79, 3, 1, "", "db_results_to_pandas_df"], [79, 3, 1, "", "derive_col_to_col_graph"], [79, 3, 1, "", "get_col_to_col_dict"], [79, 3, 1, "", "get_id_dict"], [79, 3, 1, "", "make_adj_undirected"], [79, 3, 1, "", "remove_invalid_pairs"], [79, 3, 1, "", "return_chosen_indices"], [79, 3, 1, "", "to_ndarray_and_flatten"]], "graphai.core.ontology.data.OntologyData": [[79, 4, 1, "", "compute_category_anchors_using_references"], [79, 4, 1, "", "compute_precalculated_similarity_matrices"], [79, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [79, 4, 1, "", "generate_category_concept_dict"], [79, 4, 1, "", "generate_tree_structure"], [79, 4, 1, "", "get_category_anchor_pages"], [79, 4, 1, "", "get_category_category_similarity"], [79, 4, 1, "", "get_category_children"], [79, 4, 1, "", "get_category_closest_category"], [79, 4, 1, "", "get_category_cluster_list"], [79, 4, 1, "", "get_category_cluster_table"], [79, 4, 1, "", "get_category_concept_list"], [79, 4, 1, "", "get_category_concept_table"], [79, 4, 1, "", "get_category_parent"], [79, 4, 1, "", "get_category_to_category"], [79, 4, 1, "", "get_cluster_category_similarity"], [79, 4, 1, "", "get_cluster_children"], [79, 4, 1, "", "get_cluster_closest_category"], [79, 4, 1, "", "get_cluster_cluster_similarity"], [79, 4, 1, "", "get_cluster_concept_list"], [79, 4, 1, "", "get_cluster_concepts"], [79, 4, 1, "", "get_cluster_parent"], [79, 4, 1, "", "get_concept_category_similarity"], [79, 4, 1, "", "get_concept_closest_category"], [79, 4, 1, "", "get_concept_closest_cluster_of_category"], [79, 4, 1, "", "get_concept_closest_concept"], [79, 4, 1, "", "get_concept_cluster_similarity"], [79, 4, 1, "", "get_concept_concept_graphscore_table"], [79, 4, 1, "", "get_concept_concept_similarity"], [79, 4, 1, "", "get_concept_name"], [79, 4, 1, "", "get_concept_parent_category"], [79, 4, 1, "", "get_concept_parent_cluster"], [79, 4, 1, "", "get_custom_cluster_closest_category"], [79, 4, 1, "", "get_non_ontology_concept_names"], [79, 4, 1, "", "get_ontology_category_info"], [79, 4, 1, "", "get_ontology_category_names"], [79, 4, 1, "", "get_ontology_concept_names_table"], [79, 4, 1, "", "get_root_category"], [79, 4, 1, "", "get_test_category_concept"], [79, 4, 1, "", "get_test_cluster_concept"], [79, 4, 1, "", "get_test_concept_names"], [79, 4, 1, "", "load_anchor_page_dict"], [79, 4, 1, "", "load_category_category"], [79, 4, 1, "", "load_category_concept"], [79, 4, 1, "", "load_concept_concept_graphscore"], [79, 4, 1, "", "load_data"], [79, 4, 1, "", "load_non_ontology_concept_names"], [79, 4, 1, "", "load_ontology_categories"], [79, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.ontology.ontology": [[80, 3, 1, "", "break_up_cluster"], [80, 3, 1, "", "get_cluster_category_closest"], [80, 3, 1, "", "get_concept_category_closest"], [80, 3, 1, "", "get_concept_concept_closest"], [80, 3, 1, "", "recompute_clusters"]], "graphai.core.scraping": [[82, 0, 0, "-", "scraping"]], "graphai.core.scraping.scraping": [[82, 3, 1, "", "cache_lookup_get_sublinks"], [82, 3, 1, "", "cache_lookup_process_all_sublinks"], [82, 3, 1, "", "check_url"], [82, 3, 1, "", "compare_strings"], [82, 3, 1, "", "create_base_url_token"], [82, 3, 1, "", "extract_scraping_content_callback"], [82, 3, 1, "", "extract_text_from_url"], [82, 3, 1, "", "find_consecutive_runs"], [82, 3, 1, "", "find_edge_patterns"], [82, 3, 1, "", "find_repeated_patterns"], [82, 3, 1, "", "find_spaces"], [82, 3, 1, "", "generate_sublink_token"], [82, 3, 1, "", "get_sublinks"], [82, 3, 1, "", "initialize_data_dict"], [82, 3, 1, "", "initialize_url"], [82, 3, 1, "", "initialize_url_and_get_sublinks"], [82, 3, 1, "", "parse_page_type"], [82, 3, 1, "", "process_all_scraping_sublinks_parallel"], [82, 3, 1, "", "process_all_sublinks"], [82, 3, 1, "", "reconstruct_data_dict"], [82, 3, 1, "", "remove_headers"], [82, 3, 1, "", "remove_junk_scraping_parallel"], [82, 3, 1, "", "remove_long_patterns"], [82, 3, 1, "", "scraping_sublinks_callback"], [82, 3, 1, "", "shift_to_max_correlation"], [82, 3, 1, "", "string_circular_shift"], [82, 3, 1, "", "sublink_parallel_processing_merge_callback"]], "graphai.core.text": [[83, 1, 1, "", "ConceptsGraph"], [83, 3, 1, "", "compute_scores"], [84, 0, 0, "-", "draw"], [83, 3, 1, "", "draw_graph"], [83, 3, 1, "", "draw_ontology"], [83, 3, 1, "", "extract_keywords"], [85, 0, 0, "-", "graph"], [86, 0, 0, "-", "keywords"], [87, 0, 0, "-", "scores"], [88, 0, 0, "-", "wikisearch"]], "graphai.core.text.ConceptsGraph": [[83, 4, 1, "", "add_graph_score"], [83, 4, 1, "", "add_ontology_scores"], [83, 4, 1, "", "get_ontology_concepts"], [83, 4, 1, "", "load_from_db"]], "graphai.core.text.draw": [[84, 3, 1, "", "draw_graph"], [84, 3, 1, "", "draw_ontology"]], "graphai.core.text.graph": [[85, 1, 1, "", "ConceptsGraph"]], "graphai.core.text.graph.ConceptsGraph": [[85, 4, 1, "", "add_graph_score"], [85, 4, 1, "", "add_ontology_scores"], [85, 4, 1, "", "get_ontology_concepts"], [85, 4, 1, "", "load_from_db"]], "graphai.core.text.keywords": [[86, 3, 1, "", "extract_keywords"], [86, 3, 1, "", "rake_extract"], [86, 3, 1, "", "word_tokens"]], "graphai.core.text.scores": [[87, 3, 1, "", "aggregate_results"], [87, 3, 1, "", "compute_embedding_scores"], [87, 3, 1, "", "compute_keywords_scores"], [87, 3, 1, "", "compute_levenshtein_score"], [87, 3, 1, "", "compute_mixed_score"], [87, 3, 1, "", "compute_scores"], [87, 3, 1, "", "filter_results"]], "graphai.core.text.wikisearch": [[88, 3, 1, "", "search_elasticsearch"], [88, 3, 1, "", "search_wikipedia_api"], [88, 3, 1, "", "wikisearch"]], "graphai.core.translation": [[90, 0, 0, "-", "text_utils"], [91, 0, 0, "-", "translation"]], "graphai.core.translation.text_utils": [[90, 1, 1, "", "TranslationModels"], [90, 3, 1, "", "compute_slide_tfidf_scores"], [90, 3, 1, "", "detect_text_language"], [90, 3, 1, "", "find_best_slide_subset"], [90, 3, 1, "", "find_set_cover"], [90, 3, 1, "", "generate_src_tgt_dict"], [90, 3, 1, "", "generate_translation_text_token"]], "graphai.core.translation.text_utils.TranslationModels": [[90, 4, 1, "", "get_device"], [90, 4, 1, "", "get_last_usage"], [90, 4, 1, "", "load_models"], [90, 4, 1, "", "translate"], [90, 4, 1, "", "unload_model"]], "graphai.core.translation.translation": [[91, 3, 1, "", "cache_lookup_translate_text"], [91, 3, 1, "", "cache_lookup_translation_text_using_fingerprint"], [91, 3, 1, "", "compute_translation_text_fingerprint_callback"], [91, 3, 1, "", "detect_language_translation"], [91, 3, 1, "", "translate_text"], [91, 3, 1, "", "translate_text_callback"]], "graphai.core.utils": [[93, 0, 0, "-", "breadcrumb"], [94, 0, 0, "-", "progress_bar"], [95, 0, 0, "-", "text"], [98, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[93, 1, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[93, 4, 1, "", "indent"], [93, 4, 1, "", "log"], [93, 4, 1, "", "outdent"], [93, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[94, 1, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[94, 4, 1, "", "reset"], [94, 4, 1, "", "update"]], "graphai.core.utils.text": [[96, 0, 0, "-", "clean"], [97, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[96, 1, 1, "", "HTMLCleaner"], [96, 3, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[96, 4, 1, "", "get_data"], [96, 4, 1, "", "handle_data"], [96, 4, 1, "", "handle_endtag"], [96, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[97, 1, 1, "", "Colors"], [97, 3, 1, "", "cprint"], [97, 3, 1, "", "log"], [97, 3, 1, "", "mkdir"], [97, 3, 1, "", "pprint"], [97, 3, 1, "", "read_json"], [97, 3, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[97, 2, 1, "", "codes"], [97, 2, 1, "", "pref"], [97, 2, 1, "", "reset"]], "graphai.core.utils.time": [[99, 0, 0, "-", "date"], [100, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[99, 3, 1, "", "add_years"], [99, 3, 1, "", "now"], [99, 3, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[100, 1, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[100, 4, 1, "", "delta"], [100, 4, 1, "", "report"], [100, 4, 1, "", "reset"], [100, 4, 1, "", "tick"], [100, 4, 1, "", "total"]], "graphai.core.video": [[102, 0, 0, "-", "video"]], "graphai.core.video.video": [[102, 1, 1, "", "NLPModels"], [102, 3, 1, "", "cache_lookup_detect_slides"], [102, 3, 1, "", "cache_lookup_extract_audio"], [102, 3, 1, "", "cache_lookup_retrieve_file_from_url"], [102, 3, 1, "", "check_ocr_and_hash_thresholds"], [102, 3, 1, "", "compute_audio_fingerprint"], [102, 3, 1, "", "compute_audio_fingerprint_callback"], [102, 3, 1, "", "compute_noise_level_parallel"], [102, 3, 1, "", "compute_noise_threshold_callback"], [102, 3, 1, "", "compute_ocr_noise_level"], [102, 3, 1, "", "compute_ocr_threshold"], [102, 3, 1, "", "compute_slide_fingerprint"], [102, 3, 1, "", "compute_slide_fingerprint_callback"], [102, 3, 1, "", "compute_slide_set_fingerprint"], [102, 3, 1, "", "compute_slide_transitions_callback"], [102, 3, 1, "", "compute_slide_transitions_parallel"], [102, 3, 1, "", "compute_video_fingerprint"], [102, 3, 1, "", "compute_video_fingerprint_callback"], [102, 3, 1, "", "compute_video_ocr_transitions"], [102, 3, 1, "", "create_filename_using_url_format"], [102, 3, 1, "", "detect_audio_duration"], [102, 3, 1, "", "detect_slides_callback"], [102, 3, 1, "", "extract_and_sample_frames"], [102, 3, 1, "", "extract_audio"], [102, 3, 1, "", "extract_audio_callback"], [102, 3, 1, "", "extract_audio_from_video"], [102, 3, 1, "", "extract_frames"], [102, 3, 1, "", "frame_hash_similarity"], [102, 3, 1, "", "frame_ocr_distance"], [102, 3, 1, "", "frame_ocr_transition"], [102, 3, 1, "", "generate_audio_token"], [102, 3, 1, "", "generate_frame_sample_indices"], [102, 3, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [102, 3, 1, "", "generate_random_token"], [102, 3, 1, "", "generate_symbolic_token"], [102, 3, 1, "", "get_audio_token_status"], [102, 3, 1, "", "get_available_streams"], [102, 3, 1, "", "get_cosine_sim"], [102, 3, 1, "", "get_file_size"], [102, 3, 1, "", "get_image_token_status"], [102, 3, 1, "", "get_video_token_status"], [102, 3, 1, "", "ignore_audio_fingerprint_results_callback"], [102, 3, 1, "", "ignore_slide_fingerprint_results_callback"], [102, 3, 1, "", "ignore_video_fingerprint_results_callback"], [102, 3, 1, "", "perform_probe"], [102, 3, 1, "", "perform_slow_audio_probe"], [102, 3, 1, "", "perform_tesseract_ocr"], [102, 3, 1, "", "read_json_gz_file"], [102, 3, 1, "", "read_txt_gz_file"], [102, 3, 1, "", "reextract_cached_audio"], [102, 3, 1, "", "reextract_cached_slides"], [102, 3, 1, "", "retrieve_audio_fingerprint_callback"], [102, 3, 1, "", "retrieve_file_from_any_source"], [102, 3, 1, "", "retrieve_file_from_generic_url"], [102, 3, 1, "", "retrieve_file_from_kaltura"], [102, 3, 1, "", "retrieve_file_from_url"], [102, 3, 1, "", "retrieve_file_from_url_callback"], [102, 3, 1, "", "retrieve_file_from_youtube"], [102, 3, 1, "", "retrieve_slide_fingerprint_callback"], [102, 3, 1, "", "retrieve_video_fingerprint_callback"], [102, 3, 1, "", "tesseract_ocr_or_get_cached"], [102, 3, 1, "", "write_txt_gz_file"]], "graphai.core.video.video.NLPModels": [[102, 4, 1, "", "get_text_word_vector"], [102, 4, 1, "", "get_text_word_vector_using_words"], [102, 4, 1, "", "get_words"], [102, 4, 1, "", "load_nlp_models"]], "graphai.core.voice": [[104, 0, 0, "-", "transcribe"]], "graphai.core.voice.transcribe": [[104, 1, 1, "", "WhisperTranscriptionModel"], [104, 3, 1, "", "cache_lookup_audio_fingerprint"], [104, 3, 1, "", "cache_lookup_audio_language"], [104, 3, 1, "", "cache_lookup_audio_transcript"], [104, 3, 1, "", "detect_language_callback"], [104, 3, 1, "", "detect_language_parallel"], [104, 3, 1, "", "detect_language_retrieve_from_db_and_split"], [104, 3, 1, "", "extract_media_segment"], [104, 3, 1, "", "transcribe_audio_to_text"], [104, 3, 1, "", "transcribe_callback"]], "graphai.core.voice.transcribe.WhisperTranscriptionModel": [[104, 4, 1, "", "detect_audio_segment_lang_whisper"], [104, 4, 1, "", "get_last_usage"], [104, 4, 1, "", "get_silence_thresholds"], [104, 4, 1, "", "load_model_whisper"], [104, 4, 1, "", "transcribe_audio_whisper"], [104, 4, 1, "", "unload_model"]], "graphai.pipelines": [[107, 0, 0, "-", "investment"], [120, 0, 0, "-", "validation"], [124, 0, 0, "-", "visualisation"]], "graphai.pipelines.investment": [[108, 0, 0, "-", "aggregate_recent_past"], [109, 0, 0, "-", "check_unit"], [110, 0, 0, "-", "compute_fundraisers_units"], [111, 0, 0, "-", "compute_investors_units"], [112, 0, 0, "-", "compute_investors_units_2"], [113, 0, 0, "-", "compute_jaccard_index"], [114, 0, 0, "-", "concept_configuration"], [115, 0, 0, "-", "create_investments_graph"], [116, 0, 0, "-", "detect_fundraisers_concepts"], [117, 0, 0, "-", "main"], [118, 0, 0, "-", "parameters"], [119, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[108, 3, 1, "", "aggregate_recent_past"], [108, 3, 1, "", "aggregate_years"], [108, 3, 1, "", "compute_year_coefficients"], [108, 3, 1, "", "normalize_scores"], [108, 3, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[109, 3, 1, "", "main"], [109, 3, 1, "", "show_matchmaking_chart_view"], [109, 3, 1, "", "show_matchmaking_list_view"], [109, 3, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[110, 3, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[111, 3, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[112, 3, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[113, 3, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[114, 3, 1, "", "combine"], [114, 3, 1, "", "compute_affinities"], [114, 3, 1, "", "mix"], [114, 3, 1, "", "norm"], [114, 3, 1, "", "normalise"], [114, 3, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[115, 3, 1, "", "create_investments_graph"], [115, 3, 1, "", "derive_yearly_data"], [115, 3, 1, "", "get_frs"], [115, 3, 1, "", "get_frs_fundraisers"], [115, 3, 1, "", "get_fundraisers_concepts"], [115, 3, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[116, 3, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[117, 3, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[118, 3, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[119, 3, 1, "", "base"], [119, 3, 1, "", "complete"], [119, 3, 1, "", "path"], [119, 3, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "packag": [0, 1, 2, 5, 8, 11, 14, 16, 19, 22, 25, 28, 31, 34, 35, 41, 44, 47, 50, 53, 56, 59, 62, 65, 66, 72, 74, 77, 81, 83, 89, 92, 95, 98, 101, 103, 106, 107, 120, 124], "subpackag": [0, 1, 34, 65, 92, 106], "submodul": [0, 2, 5, 8, 11, 14, 16, 19, 22, 25, 28, 31, 35, 41, 44, 47, 50, 53, 56, 59, 62, 66, 72, 74, 77, 81, 83, 89, 92, 95, 98, 101, 103, 107, 120, 124], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "auth": [2, 3, 4], "auth_util": 3, "modul": [3, 4, 6, 7, 9, 10, 12, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 67, 68, 69, 70, 71, 73, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128], "router": [4, 9, 12, 17, 20, 23, 26, 29, 32], "common": [5, 6, 7, 35, 36, 37, 38, 39, 40, 66, 67, 68, 69, 70, 71], "schema": [6, 10, 13, 18, 21, 24, 27, 30, 33], "util": [7, 92, 93, 94, 95, 96, 97, 98, 99, 100], "embed": [8, 9, 10, 41, 42, 43, 72, 73], "imag": [11, 12, 13, 44, 45, 46, 74, 75, 76], "main": [14, 15, 117], "ontologi": [16, 17, 18, 47, 48, 49, 77, 78, 79, 80], "scrape": [19, 20, 21, 50, 51, 52, 81, 82], "text": [22, 23, 24, 53, 54, 55, 83, 84, 85, 86, 87, 88, 95, 96, 97], "translat": [25, 26, 27, 56, 57, 58, 89, 90, 91], "video": [28, 29, 30, 59, 60, 61, 101, 102], "voic": [31, 32, 33, 62, 63, 64, 103, 104], "celeri": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "celery_config": 36, "celery_tool": 37, "job": [38, 42, 45, 48, 51, 54, 57, 60, 63], "log": 39, "task": [40, 43, 46, 49, 52, 55, 58, 61, 64], "core": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "cach": 67, "common_util": 68, "config": 69, "fingerprint": 70, "lookup": 71, "ocr": 76, "cluster": 78, "data": 79, "draw": 84, "graph": [85, 125, 126, 127, 128], "keyword": 86, "score": 87, "wikisearch": 88, "text_util": 90, "breadcrumb": 93, "progress_bar": 94, "clean": 96, "io": 97, "time": [98, 99, 100], "date": 99, "stopwatch": 100, "transcrib": 104, "definit": 105, "pipelin": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "invest": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "aggregate_recent_past": 108, "check_unit": 109, "compute_fundraisers_unit": 110, "compute_investors_unit": 111, "compute_investors_units_2": 112, "compute_jaccard_index": 113, "concept_configur": 114, "create_investments_graph": 115, "detect_fundraisers_concept": 116, "paramet": 118, "toy_exampl": 119, "valid": [120, 121, 122, 123], "1_old": 121, "2_new": 122, "3_slide": 123, "visualis": [124, 125, 126, 127, 128], "startup": [125, 126, 127, 128], "2": 126, "3": 127, "4": 128}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [34, "subpackages"], [65, "subpackages"], [92, "subpackages"], [106, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [5, "submodules"], [8, "submodules"], [11, "submodules"], [14, "submodules"], [16, "submodules"], [19, "submodules"], [22, "submodules"], [25, "submodules"], [28, "submodules"], [31, "submodules"], [35, "submodules"], [41, "submodules"], [44, "submodules"], [47, "submodules"], [50, "submodules"], [53, "submodules"], [56, "submodules"], [59, "submodules"], [62, "submodules"], [66, "submodules"], [72, "submodules"], [74, "submodules"], [77, "submodules"], [81, "submodules"], [83, "submodules"], [89, "submodules"], [92, "submodules"], [95, "submodules"], [98, "submodules"], [101, "submodules"], [103, "submodules"], [107, "submodules"], [120, "submodules"], [124, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.auth package": [[2, "module-graphai.api.auth"]], "graphai.api.auth.auth_utils module": [[3, "module-graphai.api.auth.auth_utils"]], "graphai.api.auth.router module": [[4, "module-graphai.api.auth.router"]], "graphai.api.common package": [[5, "module-graphai.api.common"]], "graphai.api.common.schemas module": [[6, "module-graphai.api.common.schemas"]], "graphai.api.common.utils module": [[7, "module-graphai.api.common.utils"]], "graphai.api.embedding package": [[8, "module-graphai.api.embedding"]], "graphai.api.embedding.router module": [[9, "graphai-api-embedding-router-module"]], "graphai.api.embedding.schemas module": [[10, "graphai-api-embedding-schemas-module"]], "graphai.api.image package": [[11, "module-graphai.api.image"]], "graphai.api.image.router module": [[12, "graphai-api-image-router-module"]], "graphai.api.image.schemas module": [[13, "graphai-api-image-schemas-module"]], "graphai.api.main package": [[14, "module-graphai.api.main"]], "graphai.api.main.main module": [[15, "graphai-api-main-main-module"]], "graphai.api.ontology package": [[16, "module-graphai.api.ontology"]], "graphai.api.ontology.router module": [[17, "graphai-api-ontology-router-module"]], "graphai.api.ontology.schemas module": [[18, "graphai-api-ontology-schemas-module"]], "graphai.api.scraping package": [[19, "module-graphai.api.scraping"]], "graphai.api.scraping.router module": [[20, "graphai-api-scraping-router-module"]], "graphai.api.scraping.schemas module": [[21, "graphai-api-scraping-schemas-module"]], "graphai.api.text package": [[22, "module-graphai.api.text"]], "graphai.api.text.router module": [[23, "module-graphai.api.text.router"]], "graphai.api.text.schemas module": [[24, "module-graphai.api.text.schemas"]], "graphai.api.translation package": [[25, "module-graphai.api.translation"]], "graphai.api.translation.router module": [[26, "graphai-api-translation-router-module"]], "graphai.api.translation.schemas module": [[27, "graphai-api-translation-schemas-module"]], "graphai.api.video package": [[28, "module-graphai.api.video"]], "graphai.api.video.router module": [[29, "graphai-api-video-router-module"]], "graphai.api.video.schemas module": [[30, "graphai-api-video-schemas-module"]], "graphai.api.voice package": [[31, "module-graphai.api.voice"]], "graphai.api.voice.router module": [[32, "graphai-api-voice-router-module"]], "graphai.api.voice.schemas module": [[33, "graphai-api-voice-schemas-module"]], "graphai.celery package": [[34, "module-graphai.celery"]], "graphai.celery.common package": [[35, "module-graphai.celery.common"]], "graphai.celery.common.celery_config module": [[36, "module-graphai.celery.common.celery_config"]], "graphai.celery.common.celery_tools module": [[37, "module-graphai.celery.common.celery_tools"]], "graphai.celery.common.jobs module": [[38, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log module": [[39, "module-graphai.celery.common.log"]], "graphai.celery.common.tasks module": [[40, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding package": [[41, "module-graphai.celery.embedding"]], "graphai.celery.embedding.jobs module": [[42, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks module": [[43, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image package": [[44, "module-graphai.celery.image"]], "graphai.celery.image.jobs module": [[45, "module-graphai.celery.image.jobs"]], "graphai.celery.image.tasks module": [[46, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology package": [[47, "module-graphai.celery.ontology"]], "graphai.celery.ontology.jobs module": [[48, "module-graphai.celery.ontology.jobs"]], "graphai.celery.ontology.tasks module": [[49, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping package": [[50, "module-graphai.celery.scraping"]], "graphai.celery.scraping.jobs module": [[51, "module-graphai.celery.scraping.jobs"]], "graphai.celery.scraping.tasks module": [[52, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text package": [[53, "module-graphai.celery.text"]], "graphai.celery.text.jobs module": [[54, "module-graphai.celery.text.jobs"]], "graphai.celery.text.tasks module": [[55, "module-graphai.celery.text.tasks"]], "graphai.celery.translation package": [[56, "module-graphai.celery.translation"]], "graphai.celery.translation.jobs module": [[57, "module-graphai.celery.translation.jobs"]], "graphai.celery.translation.tasks module": [[58, "module-graphai.celery.translation.tasks"]], "graphai.celery.video package": [[59, "module-graphai.celery.video"]], "graphai.celery.video.jobs module": [[60, "module-graphai.celery.video.jobs"]], "graphai.celery.video.tasks module": [[61, "module-graphai.celery.video.tasks"]], "graphai.celery.voice package": [[62, "module-graphai.celery.voice"]], "graphai.celery.voice.jobs module": [[63, "module-graphai.celery.voice.jobs"]], "graphai.celery.voice.tasks module": [[64, "module-graphai.celery.voice.tasks"]], "graphai.core package": [[65, "module-graphai.core"]], "graphai.core.common package": [[66, "module-graphai.core.common"]], "graphai.core.common.caching module": [[67, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[68, "module-graphai.core.common.common_utils"]], "graphai.core.common.config module": [[69, "module-graphai.core.common.config"]], "graphai.core.common.fingerprinting module": [[70, "module-graphai.core.common.fingerprinting"]], "graphai.core.common.lookup module": [[71, "module-graphai.core.common.lookup"]], "graphai.core.embedding package": [[72, "module-graphai.core.embedding"]], "graphai.core.embedding.embedding module": [[73, "module-graphai.core.embedding.embedding"]], "graphai.core.image package": [[74, "module-graphai.core.image"]], "graphai.core.image.image module": [[75, "module-graphai.core.image.image"]], "graphai.core.image.ocr module": [[76, "module-graphai.core.image.ocr"]], "graphai.core.ontology package": [[77, "module-graphai.core.ontology"]], "graphai.core.ontology.clustering module": [[78, "module-graphai.core.ontology.clustering"]], "graphai.core.ontology.data module": [[79, "module-graphai.core.ontology.data"]], "graphai.core.ontology.ontology module": [[80, "module-graphai.core.ontology.ontology"]], "graphai.core.scraping package": [[81, "module-graphai.core.scraping"]], "graphai.core.scraping.scraping module": [[82, "module-graphai.core.scraping.scraping"]], "graphai.core.text package": [[83, "module-graphai.core.text"]], "graphai.core.text.draw module": [[84, "module-graphai.core.text.draw"]], "graphai.core.text.graph module": [[85, "module-graphai.core.text.graph"]], "graphai.core.text.keywords module": [[86, "module-graphai.core.text.keywords"]], "graphai.core.text.scores module": [[87, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch module": [[88, "module-graphai.core.text.wikisearch"]], "graphai.core.translation package": [[89, "module-graphai.core.translation"]], "graphai.core.translation.text_utils module": [[90, "module-graphai.core.translation.text_utils"]], "graphai.core.translation.translation module": [[91, "module-graphai.core.translation.translation"]], "graphai.core.utils package": [[92, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[93, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[94, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[95, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[96, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[97, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[98, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[99, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[100, "module-graphai.core.utils.time.stopwatch"]], "graphai.core.video package": [[101, "module-graphai.core.video"]], "graphai.core.video.video module": [[102, "module-graphai.core.video.video"]], "graphai.core.voice package": [[103, "module-graphai.core.voice"]], "graphai.core.voice.transcribe module": [[104, "module-graphai.core.voice.transcribe"]], "graphai.definitions module": [[105, "module-graphai.definitions"]], "graphai.pipelines package": [[106, "module-graphai.pipelines"]], "graphai.pipelines.investment package": [[107, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[108, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[109, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[110, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[111, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[112, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[113, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[114, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[115, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[116, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[117, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[118, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[119, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[120, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[121, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[122, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[123, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[124, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[125, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[126, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[127, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[128, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.auth"], [3, "module-graphai.api.auth.auth_utils"], [4, "module-graphai.api.auth.router"], [5, "module-graphai.api.common"], [6, "module-graphai.api.common.schemas"], [7, "module-graphai.api.common.utils"], [8, "module-graphai.api.embedding"], [11, "module-graphai.api.image"], [14, "module-graphai.api.main"], [16, "module-graphai.api.ontology"], [19, "module-graphai.api.scraping"], [22, "module-graphai.api.text"], [23, "module-graphai.api.text.router"], [24, "module-graphai.api.text.schemas"], [25, "module-graphai.api.translation"], [28, "module-graphai.api.video"], [31, "module-graphai.api.voice"], [34, "module-graphai.celery"], [35, "module-graphai.celery.common"], [36, "module-graphai.celery.common.celery_config"], [37, "module-graphai.celery.common.celery_tools"], [38, "module-graphai.celery.common.jobs"], [39, "module-graphai.celery.common.log"], [40, "module-graphai.celery.common.tasks"], [41, "module-graphai.celery.embedding"], [42, "module-graphai.celery.embedding.jobs"], [43, "module-graphai.celery.embedding.tasks"], [44, "module-graphai.celery.image"], [45, "module-graphai.celery.image.jobs"], [46, "module-graphai.celery.image.tasks"], [47, "module-graphai.celery.ontology"], [48, "module-graphai.celery.ontology.jobs"], [49, "module-graphai.celery.ontology.tasks"], [50, "module-graphai.celery.scraping"], [51, "module-graphai.celery.scraping.jobs"], [52, "module-graphai.celery.scraping.tasks"], [53, "module-graphai.celery.text"], [54, "module-graphai.celery.text.jobs"], [55, "module-graphai.celery.text.tasks"], [56, "module-graphai.celery.translation"], [57, "module-graphai.celery.translation.jobs"], [58, "module-graphai.celery.translation.tasks"], [59, "module-graphai.celery.video"], [60, "module-graphai.celery.video.jobs"], [61, "module-graphai.celery.video.tasks"], [62, "module-graphai.celery.voice"], [63, "module-graphai.celery.voice.jobs"], [64, "module-graphai.celery.voice.tasks"], [65, "module-graphai.core"], [66, "module-graphai.core.common"], [67, "module-graphai.core.common.caching"], [68, "module-graphai.core.common.common_utils"], [69, "module-graphai.core.common.config"], [70, "module-graphai.core.common.fingerprinting"], [71, "module-graphai.core.common.lookup"], [72, "module-graphai.core.embedding"], [73, "module-graphai.core.embedding.embedding"], [74, "module-graphai.core.image"], [75, "module-graphai.core.image.image"], [76, "module-graphai.core.image.ocr"], [77, "module-graphai.core.ontology"], [78, "module-graphai.core.ontology.clustering"], [79, "module-graphai.core.ontology.data"], [80, "module-graphai.core.ontology.ontology"], [81, "module-graphai.core.scraping"], [82, "module-graphai.core.scraping.scraping"], [83, "module-graphai.core.text"], [84, "module-graphai.core.text.draw"], [85, "module-graphai.core.text.graph"], [86, "module-graphai.core.text.keywords"], [87, "module-graphai.core.text.scores"], [88, "module-graphai.core.text.wikisearch"], [89, "module-graphai.core.translation"], [90, "module-graphai.core.translation.text_utils"], [91, "module-graphai.core.translation.translation"], [92, "module-graphai.core.utils"], [93, "module-graphai.core.utils.breadcrumb"], [94, "module-graphai.core.utils.progress_bar"], [95, "module-graphai.core.utils.text"], [96, "module-graphai.core.utils.text.clean"], [97, "module-graphai.core.utils.text.io"], [98, "module-graphai.core.utils.time"], [99, "module-graphai.core.utils.time.date"], [100, "module-graphai.core.utils.time.stopwatch"], [101, "module-graphai.core.video"], [102, "module-graphai.core.video.video"], [103, "module-graphai.core.voice"], [104, "module-graphai.core.voice.transcribe"], [105, "module-graphai.definitions"], [106, "module-graphai.pipelines"], [107, "module-graphai.pipelines.investment"], [108, "module-graphai.pipelines.investment.aggregate_recent_past"], [109, "module-graphai.pipelines.investment.check_unit"], [110, "module-graphai.pipelines.investment.compute_fundraisers_units"], [111, "module-graphai.pipelines.investment.compute_investors_units"], [112, "module-graphai.pipelines.investment.compute_investors_units_2"], [113, "module-graphai.pipelines.investment.compute_jaccard_index"], [114, "module-graphai.pipelines.investment.concept_configuration"], [115, "module-graphai.pipelines.investment.create_investments_graph"], [116, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [117, "module-graphai.pipelines.investment.main"], [118, "module-graphai.pipelines.investment.parameters"], [119, "module-graphai.pipelines.investment.toy_example"], [120, "module-graphai.pipelines.validation"], [124, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.auth": [[2, "module-graphai.api.auth"]], "token (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.Token"]], "tokendata (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.TokenData"]], "user (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.User"]], "userindb (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.UserInDB"]], "access_token (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.authenticate_user"]], "disabled (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.disabled"]], "email (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.email"]], "full_name (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_password_hash"]], "get_ratelimit_values() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_ratelimit_values"]], "get_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user"]], "get_user_ratelimit_overrides() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user_ratelimit_overrides"]], "graphai.api.auth.auth_utils": [[3, "module-graphai.api.auth.auth_utils"]], "hashed_password (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.hashed_password"]], "model_computed_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_computed_fields"]], "model_config (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_config"]], "model_config (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_config"]], "model_config (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_config"]], "model_config (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_config"]], "model_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_fields"]], "model_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_fields"]], "model_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_fields"]], "model_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_fields"]], "scopes (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.scopes"]], "scopes (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.scopes"]], "token_type (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.token_type"]], "username (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.username"]], "username (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.username"]], "verify_password() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.verify_password"]], "create_access_token() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.create_access_token"]], "extract_username_and_scopes() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.extract_username_and_scopes"]], "get_active_user_dummy() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.get_current_active_user"]], "get_current_user() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.get_current_user"]], "get_user_for_rate_limiter() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.get_user_for_rate_limiter"]], "graphai.api.auth.router": [[4, "module-graphai.api.auth.router"]], "login_for_access_token() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.login_for_access_token"]], "read_users_me() (in module graphai.api.auth.router)": [[4, "graphai.api.auth.router.read_users_me"]], "graphai.api.common": [[5, "module-graphai.api.common"]], "filerequest (class in graphai.api.common.schemas)": [[6, "graphai.api.common.schemas.FileRequest"]], "taskidresponse (class in graphai.api.common.schemas)": [[6, "graphai.api.common.schemas.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.common.schemas)": [[6, "graphai.api.common.schemas.TaskStatusResponse"]], "tokenstatus (class in graphai.api.common.schemas)": [[6, "graphai.api.common.schemas.TokenStatus"]], "active (graphai.api.common.schemas.tokenstatus attribute)": [[6, "graphai.api.common.schemas.TokenStatus.active"]], "fingerprinted (graphai.api.common.schemas.tokenstatus attribute)": [[6, "graphai.api.common.schemas.TokenStatus.fingerprinted"]], "graphai.api.common.schemas": [[6, "module-graphai.api.common.schemas"]], "model_computed_fields (graphai.api.common.schemas.filerequest attribute)": [[6, "graphai.api.common.schemas.FileRequest.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskidresponse attribute)": [[6, "graphai.api.common.schemas.TaskIDResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.tokenstatus attribute)": [[6, "graphai.api.common.schemas.TokenStatus.model_computed_fields"]], "model_config (graphai.api.common.schemas.filerequest attribute)": [[6, "graphai.api.common.schemas.FileRequest.model_config"]], "model_config (graphai.api.common.schemas.taskidresponse attribute)": [[6, "graphai.api.common.schemas.TaskIDResponse.model_config"]], "model_config (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.model_config"]], "model_config (graphai.api.common.schemas.tokenstatus attribute)": [[6, "graphai.api.common.schemas.TokenStatus.model_config"]], "model_fields (graphai.api.common.schemas.filerequest attribute)": [[6, "graphai.api.common.schemas.FileRequest.model_fields"]], "model_fields (graphai.api.common.schemas.taskidresponse attribute)": [[6, "graphai.api.common.schemas.TaskIDResponse.model_fields"]], "model_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.model_fields"]], "model_fields (graphai.api.common.schemas.tokenstatus attribute)": [[6, "graphai.api.common.schemas.TokenStatus.model_fields"]], "task_id (graphai.api.common.schemas.taskidresponse attribute)": [[6, "graphai.api.common.schemas.TaskIDResponse.task_id"]], "task_id (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.task_id"]], "task_name (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.task_name"]], "task_result (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.task_result"]], "task_status (graphai.api.common.schemas.taskstatusresponse attribute)": [[6, "graphai.api.common.schemas.TaskStatusResponse.task_status"]], "token (graphai.api.common.schemas.filerequest attribute)": [[6, "graphai.api.common.schemas.FileRequest.token"]], "format_api_results() (in module graphai.api.common.utils)": [[7, "graphai.api.common.utils.format_api_results"]], "graphai.api.common.utils": [[7, "module-graphai.api.common.utils"]], "graphai.api.embedding": [[8, "module-graphai.api.embedding"]], "graphai.api.image": [[11, "module-graphai.api.image"]], "graphai.api.main": [[14, "module-graphai.api.main"]], "graphai.api.ontology": [[16, "module-graphai.api.ontology"]], "graphai.api.scraping": [[19, "module-graphai.api.scraping"]], "graphai.api.text": [[22, "module-graphai.api.text"]], "graphai.api.text.router": [[23, "module-graphai.api.text.router"]], "keywords() (in module graphai.api.text.router)": [[23, "graphai.api.text.router.keywords"]], "wikify() (in module graphai.api.text.router)": [[23, "graphai.api.text.router.wikify"]], "wikify_graph_svg() (in module graphai.api.text.router)": [[23, "graphai.api.text.router.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.text.router)": [[23, "graphai.api.text.router.wikify_ontology_svg"]], "keywordsrequest (class in graphai.api.text.schemas)": [[24, "graphai.api.text.schemas.KeywordsRequest"]], "wikifyfromkeywordsrequest (class in graphai.api.text.schemas)": [[24, "graphai.api.text.schemas.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.text.schemas)": [[24, "graphai.api.text.schemas.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.text.schemas)": [[24, "graphai.api.text.schemas.WikifyResponseElem"]], "concept_id (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.concept_id"]], "concept_name (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.concept_name"]], "embedding_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.embedding_global_score"]], "embedding_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.embedding_keywords_score"]], "embedding_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.embedding_local_score"]], "graph_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.graph_keywords_score"]], "graph_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.graph_score"]], "graphai.api.text.schemas": [[24, "module-graphai.api.text.schemas"]], "keywords (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromKeywordsRequest.keywords"]], "levenshtein_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.levenshtein_score"]], "mixed_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.mixed_score"]], "model_computed_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[24, "graphai.api.text.schemas.KeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.model_computed_fields"]], "model_config (graphai.api.text.schemas.keywordsrequest attribute)": [[24, "graphai.api.text.schemas.KeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.model_config"]], "model_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[24, "graphai.api.text.schemas.KeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.model_fields"]], "ontology_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.ontology_global_score"]], "ontology_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.ontology_keywords_score"]], "ontology_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.ontology_local_score"]], "raw_text (graphai.api.text.schemas.keywordsrequest attribute)": [[24, "graphai.api.text.schemas.KeywordsRequest.raw_text"]], "raw_text (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[24, "graphai.api.text.schemas.WikifyFromRawTextRequest.raw_text"]], "search_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[24, "graphai.api.text.schemas.WikifyResponseElem.search_score"]], "graphai.api.translation": [[25, "module-graphai.api.translation"]], "graphai.api.video": [[28, "module-graphai.api.video"]], "graphai.api.voice": [[31, "module-graphai.api.voice"]], "graphai.celery": [[34, "module-graphai.celery"]], "graphai.celery.common": [[35, "module-graphai.celery.common"]], "baseconfig (class in graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.BaseConfig"]], "developmentconfig (class in graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.create_celery"]], "get_celery_task() (in module graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.get_celery_task"]], "get_settings() (in module graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.get_settings"]], "get_task_info() (in module graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.get_task_info"]], "graphai.celery.common.celery_config": [[36, "module-graphai.celery.common.celery_config"]], "route_task() (in module graphai.celery.common.celery_config)": [[36, "graphai.celery.common.celery_config.route_task"]], "get_n_celery_workers() (in module graphai.celery.common.celery_tools)": [[37, "graphai.celery.common.celery_tools.get_n_celery_workers"]], "graphai.celery.common.celery_tools": [[37, "module-graphai.celery.common.celery_tools"]], "direct_lookup_generic_job() (in module graphai.celery.common.jobs)": [[38, "graphai.celery.common.jobs.direct_lookup_generic_job"]], "graphai.celery.common.jobs": [[38, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log": [[39, "module-graphai.celery.common.log"]], "log() (in module graphai.celery.common.log)": [[39, "graphai.celery.common.log.log"]], "graphai.celery.common.tasks": [[40, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding": [[41, "module-graphai.celery.embedding"]], "embedding_job() (in module graphai.celery.embedding.jobs)": [[42, "graphai.celery.embedding.jobs.embedding_job"]], "fingerprint_compute_job() (in module graphai.celery.embedding.jobs)": [[42, "graphai.celery.embedding.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.embedding.jobs)": [[42, "graphai.celery.embedding.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.embedding.jobs)": [[42, "graphai.celery.embedding.jobs.fingerprint_lookup_job"]], "get_embedding_text_fingerprint_chain_list() (in module graphai.celery.embedding.jobs)": [[42, "graphai.celery.embedding.jobs.get_embedding_text_fingerprint_chain_list"]], "graphai.celery.embedding.jobs": [[42, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks": [[43, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image": [[44, "module-graphai.celery.image"]], "fingerprint_job() (in module graphai.celery.image.jobs)": [[45, "graphai.celery.image.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.image.jobs)": [[45, "graphai.celery.image.jobs.fingerprint_lookup_job"]], "graphai.celery.image.jobs": [[45, "module-graphai.celery.image.jobs"]], "ocr_job() (in module graphai.celery.image.jobs)": [[45, "graphai.celery.image.jobs.ocr_job"]], "graphai.celery.image.tasks": [[46, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology": [[47, "module-graphai.celery.ontology"]], "breakup_cluster_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.breakup_cluster_job"]], "category_children_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.category_children_job"]], "category_info_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.category_info_job"]], "category_parent_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.category_parent_job"]], "cluster_children_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.cluster_children_job"]], "cluster_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.cluster_nearest_category_job"]], "cluster_parent_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.cluster_parent_job"]], "concept_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.concept_nearest_category_job"]], "concept_nearest_concept_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.concept_nearest_concept_job"]], "graph_distance_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.graph_distance_job"]], "graphai.celery.ontology.jobs": [[48, "module-graphai.celery.ontology.jobs"]], "recompute_clusters_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.recompute_clusters_job"]], "tree_job() (in module graphai.celery.ontology.jobs)": [[48, "graphai.celery.ontology.jobs.tree_job"]], "graphai.celery.ontology.tasks": [[49, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping": [[50, "module-graphai.celery.scraping"]], "extract_content_job() (in module graphai.celery.scraping.jobs)": [[51, "graphai.celery.scraping.jobs.extract_content_job"]], "extract_sublinks_job() (in module graphai.celery.scraping.jobs)": [[51, "graphai.celery.scraping.jobs.extract_sublinks_job"]], "graphai.celery.scraping.jobs": [[51, "module-graphai.celery.scraping.jobs"]], "sublink_lookup_job() (in module graphai.celery.scraping.jobs)": [[51, "graphai.celery.scraping.jobs.sublink_lookup_job"]], "graphai.celery.scraping.tasks": [[52, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text": [[53, "module-graphai.celery.text"]], "graphai.celery.text.jobs": [[54, "module-graphai.celery.text.jobs"]], "keywords() (in module graphai.celery.text.jobs)": [[54, "graphai.celery.text.jobs.keywords"]], "wikify_graph_svg() (in module graphai.celery.text.jobs)": [[54, "graphai.celery.text.jobs.wikify_graph_svg"]], "wikify_keywords() (in module graphai.celery.text.jobs)": [[54, "graphai.celery.text.jobs.wikify_keywords"]], "wikify_ontology_svg() (in module graphai.celery.text.jobs)": [[54, "graphai.celery.text.jobs.wikify_ontology_svg"]], "wikify_text() (in module graphai.celery.text.jobs)": [[54, "graphai.celery.text.jobs.wikify_text"]], "graphai.celery.text.tasks": [[55, "module-graphai.celery.text.tasks"]], "graphai.celery.translation": [[56, "module-graphai.celery.translation"]], "detect_text_language_job() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.detect_text_language_job"]], "fingerprint_compute_job() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.fingerprint_lookup_job"]], "get_translation_text_fingerprint_chain_list() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.get_translation_text_fingerprint_chain_list"]], "graphai.celery.translation.jobs": [[57, "module-graphai.celery.translation.jobs"]], "translation_job() (in module graphai.celery.translation.jobs)": [[57, "graphai.celery.translation.jobs.translation_job"]], "graphai.celery.translation.tasks": [[58, "module-graphai.celery.translation.tasks"]], "graphai.celery.video": [[59, "module-graphai.celery.video"]], "detect_slides_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.detect_slides_job"]], "extract_audio_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.extract_audio_job"]], "fingerprint_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.fingerprint_lookup_job"]], "get_audio_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.get_audio_fingerprint_chain_list"]], "get_file_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.get_file_job"]], "get_slide_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.get_slide_fingerprint_chain_list"]], "get_video_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.get_video_fingerprint_chain_list"]], "graphai.celery.video.jobs": [[60, "module-graphai.celery.video.jobs"]], "retrieve_url_job() (in module graphai.celery.video.jobs)": [[60, "graphai.celery.video.jobs.retrieve_url_job"]], "graphai.celery.video.tasks": [[61, "module-graphai.celery.video.tasks"]], "graphai.celery.voice": [[62, "module-graphai.celery.voice"]], "detect_language_job() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.detect_language_job"]], "fingerprint_job() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.fingerprint_lookup_job"]], "get_audio_language_detection_task_chain() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.get_audio_language_detection_task_chain"]], "graphai.celery.voice.jobs": [[63, "module-graphai.celery.voice.jobs"]], "language_lookup_job() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.language_lookup_job"]], "transcribe_job() (in module graphai.celery.voice.jobs)": [[63, "graphai.celery.voice.jobs.transcribe_job"]], "graphai.celery.voice.tasks": [[64, "module-graphai.celery.voice.tasks"]], "graphai.core": [[65, "module-graphai.core"]], "graphai.core.common": [[66, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.AudioDBCachingManager"]], "embeddingdbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.EmbeddingDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[67, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[67, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[67, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[67, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[67, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[67, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.caching.fingerprintparameters method)": [[67, "graphai.core.common.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[67, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_token_file_status() (in module graphai.core.common.caching)": [[67, "graphai.core.common.caching.get_token_file_status"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[67, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[67, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[67, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.embeddingdbcachingmanager method)": [[67, "graphai.core.common.caching.EmbeddingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[67, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[67, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[67, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[67, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[67, "graphai.core.common.caching.FingerprintParameters.load_values"]], "convert_list_to_text() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.convert_list_to_text"]], "convert_text_back_to_list() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.convert_text_back_to_list"]], "copy_file_within_folder() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.copy_file_within_folder"]], "file_exists() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[68, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[68, "graphai.core.common.common_utils.write_text_file"]], "graphai.core.common.config": [[69, "module-graphai.core.common.config"]], "compare_decoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.compare_encoded_fingerprints"]], "compute_text_fingerprint() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.compute_text_fingerprint"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_for_list_from_list() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.find_closest_fingerprint_for_list_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.find_closest_image_fingerprint_from_list"]], "find_closest_text_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.find_closest_text_fingerprint_from_list"]], "graphai.core.common.fingerprinting": [[70, "module-graphai.core.common.fingerprinting"]], "md5_text() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.fingerprinting)": [[70, "graphai.core.common.fingerprinting.perceptual_hash_text"]], "cache_lookup_generic() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.cache_lookup_generic"]], "database_callback_generic() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.database_callback_generic"]], "fingerprint_based_text_lookup() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_based_text_lookup"]], "fingerprint_cache_lookup() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_cache_lookup"]], "fingerprint_cache_lookup_with_most_similar() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_cache_lookup_with_most_similar"]], "fingerprint_lookup_callback() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.fingerprint_lookup_retrieve_from_db"]], "graphai.core.common.lookup": [[71, "module-graphai.core.common.lookup"]], "ignore_fingerprint_results_callback() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.ignore_fingerprint_results_callback"]], "is_fingerprinted() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.is_fingerprinted"]], "lookup_latest_allowed_date() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.lookup_latest_allowed_date"]], "retrieve_fingerprint_callback() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.retrieve_fingerprint_callback"]], "token_based_text_lookup() (in module graphai.core.common.lookup)": [[71, "graphai.core.common.lookup.token_based_text_lookup"]], "graphai.core.embedding": [[72, "module-graphai.core.embedding"]], "embeddingmodels (class in graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.EmbeddingModels"]], "compute_embedding_text_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.compute_embedding_text_fingerprint_callback"]], "copy_embedding_object() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.copy_embedding_object"]], "embed() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.embed"]], "embed_text() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embed_text"]], "embedding_from_json() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_from_json"]], "embedding_text_list_embed_callback() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_text_list_embed_callback"]], "embedding_text_list_embed_parallel() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_text_list_embed_parallel"]], "embedding_text_list_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_callback"]], "embedding_text_list_fingerprint_parallel() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_parallel"]], "embedding_to_json() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.embedding_to_json"]], "fingerprint_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.fingerprint_based_embedding_lookup"]], "generate_embedding_text_token() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.generate_embedding_text_token"]], "get_device() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.get_device"]], "get_last_usage() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.get_last_usage"]], "get_max_tokens() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.get_max_tokens"]], "get_text_token_count_using_model() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.get_text_token_count_using_model"]], "get_token_count() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.get_token_count"]], "get_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.get_tokenizer"]], "graphai.core.embedding.embedding": [[73, "module-graphai.core.embedding.embedding"]], "insert_embedding_into_db() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.insert_embedding_into_db"]], "load_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.load_model"]], "load_models() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.load_models"]], "model_loaded() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.model_loaded"]], "set_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.set_tokenizer"]], "token_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[73, "graphai.core.embedding.embedding.token_based_embedding_lookup"]], "unload_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[73, "graphai.core.embedding.embedding.EmbeddingModels.unload_model"]], "graphai.core.image": [[74, "module-graphai.core.image"]], "cache_lookup_extract_slide_text() (in module graphai.core.image.image)": [[75, "graphai.core.image.image.cache_lookup_extract_slide_text"]], "extract_slide_text() (in module graphai.core.image.image)": [[75, "graphai.core.image.image.extract_slide_text"]], "extract_slide_text_callback() (in module graphai.core.image.image)": [[75, "graphai.core.image.image.extract_slide_text_callback"]], "graphai.core.image.image": [[75, "module-graphai.core.image.image"]], "googleocrmodel (class in graphai.core.image.ocr)": [[76, "graphai.core.image.ocr.GoogleOCRModel"]], "establish_connection() (graphai.core.image.ocr.googleocrmodel method)": [[76, "graphai.core.image.ocr.GoogleOCRModel.establish_connection"]], "get_ocr_colnames() (in module graphai.core.image.ocr)": [[76, "graphai.core.image.ocr.get_ocr_colnames"]], "graphai.core.image.ocr": [[76, "module-graphai.core.image.ocr"]], "perform_ocr() (graphai.core.image.ocr.googleocrmodel method)": [[76, "graphai.core.image.ocr.GoogleOCRModel.perform_ocr"]], "wait_for_ocr_results() (graphai.core.image.ocr.googleocrmodel method)": [[76, "graphai.core.image.ocr.GoogleOCRModel.wait_for_ocr_results"]], "graphai.core.ontology": [[77, "module-graphai.core.ontology"]], "arithmetic_mean_laplacians() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.get_laplacian"]], "graphai.core.ontology.clustering": [[78, "module-graphai.core.ontology.clustering"]], "group_clustered() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.group_clustered"]], "normalize_features() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.normalize_features"]], "perform_pca() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.ontology.clustering)": [[78, "graphai.core.ontology.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.OntologyData"]], "adjusted_exp() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.average_and_combine"]], "compute_average() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.compute_average"]], "compute_category_anchors_using_references() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.derive_col_to_col_graph"]], "generate_category_concept_dict() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_anchor_pages"]], "get_category_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category"]], "get_cluster_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.get_col_to_col_dict"]], "get_concept_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_cluster_of_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_closest_cluster_of_category"]], "get_concept_closest_concept() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept"]], "get_concept_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_name"]], "get_concept_parent_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category"]], "get_id_dict() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_ontology_concept_names_table"]], "get_root_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.get_test_concept_names"]], "graphai.core.ontology.data": [[79, "module-graphai.core.ontology.data"]], "load_anchor_page_dict() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[79, "graphai.core.ontology.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.ontology.data)": [[79, "graphai.core.ontology.data.to_ndarray_and_flatten"]], "break_up_cluster() (in module graphai.core.ontology.ontology)": [[80, "graphai.core.ontology.ontology.break_up_cluster"]], "get_cluster_category_closest() (in module graphai.core.ontology.ontology)": [[80, "graphai.core.ontology.ontology.get_cluster_category_closest"]], "get_concept_category_closest() (in module graphai.core.ontology.ontology)": [[80, "graphai.core.ontology.ontology.get_concept_category_closest"]], "get_concept_concept_closest() (in module graphai.core.ontology.ontology)": [[80, "graphai.core.ontology.ontology.get_concept_concept_closest"]], "graphai.core.ontology.ontology": [[80, "module-graphai.core.ontology.ontology"]], "recompute_clusters() (in module graphai.core.ontology.ontology)": [[80, "graphai.core.ontology.ontology.recompute_clusters"]], "graphai.core.scraping": [[81, "module-graphai.core.scraping"]], "cache_lookup_get_sublinks() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.cache_lookup_get_sublinks"]], "cache_lookup_process_all_sublinks() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.cache_lookup_process_all_sublinks"]], "check_url() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.check_url"]], "compare_strings() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.create_base_url_token"]], "extract_scraping_content_callback() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.extract_scraping_content_callback"]], "extract_text_from_url() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.get_sublinks"]], "graphai.core.scraping.scraping": [[82, "module-graphai.core.scraping.scraping"]], "initialize_data_dict() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.initialize_url"]], "initialize_url_and_get_sublinks() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.initialize_url_and_get_sublinks"]], "parse_page_type() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.parse_page_type"]], "process_all_scraping_sublinks_parallel() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.process_all_scraping_sublinks_parallel"]], "process_all_sublinks() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.remove_headers"]], "remove_junk_scraping_parallel() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.remove_junk_scraping_parallel"]], "remove_long_patterns() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.remove_long_patterns"]], "scraping_sublinks_callback() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.scraping_sublinks_callback"]], "shift_to_max_correlation() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.string_circular_shift"]], "sublink_parallel_processing_merge_callback() (in module graphai.core.scraping.scraping)": [[82, "graphai.core.scraping.scraping.sublink_parallel_processing_merge_callback"]], "conceptsgraph (class in graphai.core.text)": [[83, "graphai.core.text.ConceptsGraph"]], "add_graph_score() (graphai.core.text.conceptsgraph method)": [[83, "graphai.core.text.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.conceptsgraph method)": [[83, "graphai.core.text.ConceptsGraph.add_ontology_scores"]], "compute_scores() (in module graphai.core.text)": [[83, "graphai.core.text.compute_scores"]], "draw_graph() (in module graphai.core.text)": [[83, "graphai.core.text.draw_graph"]], "draw_ontology() (in module graphai.core.text)": [[83, "graphai.core.text.draw_ontology"]], "extract_keywords() (in module graphai.core.text)": [[83, "graphai.core.text.extract_keywords"]], "get_ontology_concepts() (graphai.core.text.conceptsgraph method)": [[83, "graphai.core.text.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text": [[83, "module-graphai.core.text"]], "load_from_db() (graphai.core.text.conceptsgraph method)": [[83, "graphai.core.text.ConceptsGraph.load_from_db"]], "wikisearch() (in module graphai.core.text)": [[83, "graphai.core.text.wikisearch"]], "draw_graph() (in module graphai.core.text.draw)": [[84, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[84, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[84, "module-graphai.core.text.draw"]], "conceptsgraph (class in graphai.core.text.graph)": [[85, "graphai.core.text.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.text.graph.conceptsgraph method)": [[85, "graphai.core.text.graph.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.graph.conceptsgraph method)": [[85, "graphai.core.text.graph.ConceptsGraph.add_ontology_scores"]], "get_ontology_concepts() (graphai.core.text.graph.conceptsgraph method)": [[85, "graphai.core.text.graph.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text.graph": [[85, "module-graphai.core.text.graph"]], "load_from_db() (graphai.core.text.graph.conceptsgraph method)": [[85, "graphai.core.text.graph.ConceptsGraph.load_from_db"]], "extract_keywords() (in module graphai.core.text.keywords)": [[86, "graphai.core.text.keywords.extract_keywords"]], "graphai.core.text.keywords": [[86, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[86, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[86, "graphai.core.text.keywords.word_tokens"]], "aggregate_results() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.aggregate_results"]], "compute_embedding_scores() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.compute_embedding_scores"]], "compute_keywords_scores() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.compute_keywords_scores"]], "compute_levenshtein_score() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.compute_levenshtein_score"]], "compute_mixed_score() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.compute_mixed_score"]], "compute_scores() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.compute_scores"]], "filter_results() (in module graphai.core.text.scores)": [[87, "graphai.core.text.scores.filter_results"]], "graphai.core.text.scores": [[87, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch": [[88, "module-graphai.core.text.wikisearch"]], "search_elasticsearch() (in module graphai.core.text.wikisearch)": [[88, "graphai.core.text.wikisearch.search_elasticsearch"]], "search_wikipedia_api() (in module graphai.core.text.wikisearch)": [[88, "graphai.core.text.wikisearch.search_wikipedia_api"]], "wikisearch() (in module graphai.core.text.wikisearch)": [[88, "graphai.core.text.wikisearch.wikisearch"]], "graphai.core.translation": [[89, "module-graphai.core.translation"]], "translationmodels (class in graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.TranslationModels"]], "compute_slide_tfidf_scores() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.compute_slide_tfidf_scores"]], "detect_text_language() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.detect_text_language"]], "find_best_slide_subset() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.find_set_cover"]], "generate_src_tgt_dict() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.generate_src_tgt_dict"]], "generate_translation_text_token() (in module graphai.core.translation.text_utils)": [[90, "graphai.core.translation.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.translation.text_utils.translationmodels method)": [[90, "graphai.core.translation.text_utils.TranslationModels.get_device"]], "get_last_usage() (graphai.core.translation.text_utils.translationmodels method)": [[90, "graphai.core.translation.text_utils.TranslationModels.get_last_usage"]], "graphai.core.translation.text_utils": [[90, "module-graphai.core.translation.text_utils"]], "load_models() (graphai.core.translation.text_utils.translationmodels method)": [[90, "graphai.core.translation.text_utils.TranslationModels.load_models"]], "translate() (graphai.core.translation.text_utils.translationmodels method)": [[90, "graphai.core.translation.text_utils.TranslationModels.translate"]], "unload_model() (graphai.core.translation.text_utils.translationmodels method)": [[90, "graphai.core.translation.text_utils.TranslationModels.unload_model"]], "cache_lookup_translate_text() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.cache_lookup_translate_text"]], "cache_lookup_translation_text_using_fingerprint() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.cache_lookup_translation_text_using_fingerprint"]], "compute_translation_text_fingerprint_callback() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.compute_translation_text_fingerprint_callback"]], "detect_language_translation() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.detect_language_translation"]], "graphai.core.translation.translation": [[91, "module-graphai.core.translation.translation"]], "translate_text() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.translate_text"]], "translate_text_callback() (in module graphai.core.translation.translation)": [[91, "graphai.core.translation.translation.translate_text_callback"]], "graphai.core.utils": [[92, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[93, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[93, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[93, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[93, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[93, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[93, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[94, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[94, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[94, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[94, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[95, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[96, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[96, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[96, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[96, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[96, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[96, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[96, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[97, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[97, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[97, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[97, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[97, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[98, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[99, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[99, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[99, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[99, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[100, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[100, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.core.video": [[101, "module-graphai.core.video"]], "nlpmodels (class in graphai.core.video.video)": [[102, "graphai.core.video.video.NLPModels"]], "cache_lookup_detect_slides() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.cache_lookup_detect_slides"]], "cache_lookup_extract_audio() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.cache_lookup_extract_audio"]], "cache_lookup_retrieve_file_from_url() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.cache_lookup_retrieve_file_from_url"]], "check_ocr_and_hash_thresholds() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.check_ocr_and_hash_thresholds"]], "compute_audio_fingerprint() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_audio_fingerprint"]], "compute_audio_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_audio_fingerprint_callback"]], "compute_noise_level_parallel() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_noise_level_parallel"]], "compute_noise_threshold_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_noise_threshold_callback"]], "compute_ocr_noise_level() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_ocr_threshold"]], "compute_slide_fingerprint() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_slide_fingerprint"]], "compute_slide_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_slide_fingerprint_callback"]], "compute_slide_set_fingerprint() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_slide_set_fingerprint"]], "compute_slide_transitions_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_slide_transitions_callback"]], "compute_slide_transitions_parallel() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_slide_transitions_parallel"]], "compute_video_fingerprint() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_video_fingerprint"]], "compute_video_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_video_fingerprint_callback"]], "compute_video_ocr_transitions() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.compute_video_ocr_transitions"]], "create_filename_using_url_format() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.create_filename_using_url_format"]], "detect_audio_duration() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.detect_audio_duration"]], "detect_slides_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.detect_slides_callback"]], "extract_and_sample_frames() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.extract_and_sample_frames"]], "extract_audio() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.extract_audio"]], "extract_audio_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.extract_audio_callback"]], "extract_audio_from_video() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.extract_frames"]], "frame_hash_similarity() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.frame_ocr_transition"]], "generate_audio_token() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.generate_audio_token"]], "generate_frame_sample_indices() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.generate_symbolic_token"]], "get_audio_token_status() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_audio_token_status"]], "get_available_streams() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_available_streams"]], "get_cosine_sim() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_cosine_sim"]], "get_file_size() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_file_size"]], "get_image_token_status() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_image_token_status"]], "get_text_word_vector() (graphai.core.video.video.nlpmodels method)": [[102, "graphai.core.video.video.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.video.video.nlpmodels method)": [[102, "graphai.core.video.video.NLPModels.get_text_word_vector_using_words"]], "get_video_token_status() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.get_video_token_status"]], "get_words() (graphai.core.video.video.nlpmodels method)": [[102, "graphai.core.video.video.NLPModels.get_words"]], "graphai.core.video.video": [[102, "module-graphai.core.video.video"]], "ignore_audio_fingerprint_results_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.ignore_audio_fingerprint_results_callback"]], "ignore_slide_fingerprint_results_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.ignore_slide_fingerprint_results_callback"]], "ignore_video_fingerprint_results_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.ignore_video_fingerprint_results_callback"]], "load_nlp_models() (graphai.core.video.video.nlpmodels method)": [[102, "graphai.core.video.video.NLPModels.load_nlp_models"]], "perform_probe() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.read_txt_gz_file"]], "reextract_cached_audio() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.reextract_cached_audio"]], "reextract_cached_slides() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.reextract_cached_slides"]], "retrieve_audio_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_audio_fingerprint_callback"]], "retrieve_file_from_any_source() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_any_source"]], "retrieve_file_from_generic_url() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_url"]], "retrieve_file_from_url_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_url_callback"]], "retrieve_file_from_youtube() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_file_from_youtube"]], "retrieve_slide_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_slide_fingerprint_callback"]], "retrieve_video_fingerprint_callback() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.retrieve_video_fingerprint_callback"]], "tesseract_ocr_or_get_cached() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.tesseract_ocr_or_get_cached"]], "write_txt_gz_file() (in module graphai.core.video.video)": [[102, "graphai.core.video.video.write_txt_gz_file"]], "graphai.core.voice": [[103, "module-graphai.core.voice"]], "whispertranscriptionmodel (class in graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel"]], "cache_lookup_audio_fingerprint() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.cache_lookup_audio_fingerprint"]], "cache_lookup_audio_language() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.cache_lookup_audio_language"]], "cache_lookup_audio_transcript() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.cache_lookup_audio_transcript"]], "detect_audio_segment_lang_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_language_callback() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.detect_language_callback"]], "detect_language_parallel() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.detect_language_parallel"]], "detect_language_retrieve_from_db_and_split() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.detect_language_retrieve_from_db_and_split"]], "extract_media_segment() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.extract_media_segment"]], "get_last_usage() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_last_usage"]], "get_silence_thresholds() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_silence_thresholds"]], "graphai.core.voice.transcribe": [[104, "module-graphai.core.voice.transcribe"]], "load_model_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.load_model_whisper"]], "transcribe_audio_to_text() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.transcribe_audio_to_text"]], "transcribe_audio_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.transcribe_audio_whisper"]], "transcribe_callback() (in module graphai.core.voice.transcribe)": [[104, "graphai.core.voice.transcribe.transcribe_callback"]], "unload_model() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[104, "graphai.core.voice.transcribe.WhisperTranscriptionModel.unload_model"]], "graphai.definitions": [[105, "module-graphai.definitions"]], "graphai.pipelines": [[106, "module-graphai.pipelines"]], "graphai.pipelines.investment": [[107, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[108, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[108, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[108, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[108, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[108, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[108, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[109, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[109, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[109, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[109, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[109, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[110, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[110, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[111, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[111, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[112, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[112, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[113, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[113, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[114, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[114, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[115, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[115, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[116, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[116, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[117, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[117, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[118, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[118, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[119, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[119, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[119, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[119, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[119, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[120, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[124, "module-graphai.pipelines.visualisation"]]}})