Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.auth", "graphai.api.auth.auth_utils", "graphai.api.auth.log", "graphai.api.auth.router", "graphai.api.common", "graphai.api.common.schemas", "graphai.api.common.utils", "graphai.api.embedding", "graphai.api.embedding.router", "graphai.api.embedding.schemas", "graphai.api.image", "graphai.api.image.router", "graphai.api.image.schemas", "graphai.api.main", "graphai.api.main.main", "graphai.api.ontology", "graphai.api.ontology.router", "graphai.api.ontology.schemas", "graphai.api.scraping", "graphai.api.scraping.router", "graphai.api.scraping.schemas", "graphai.api.text", "graphai.api.text.router", "graphai.api.text.schemas", "graphai.api.translation", "graphai.api.translation.router", "graphai.api.translation.schemas", "graphai.api.video", "graphai.api.video.router", "graphai.api.video.schemas", "graphai.api.voice", "graphai.api.voice.router", "graphai.api.voice.schemas", "graphai.celery", "graphai.celery.common", "graphai.celery.common.celery_config", "graphai.celery.common.celery_tools", "graphai.celery.common.jobs", "graphai.celery.common.log", "graphai.celery.common.tasks", "graphai.celery.embedding", "graphai.celery.embedding.jobs", "graphai.celery.embedding.tasks", "graphai.celery.image", "graphai.celery.image.jobs", "graphai.celery.image.tasks", "graphai.celery.ontology", "graphai.celery.ontology.jobs", "graphai.celery.ontology.tasks", "graphai.celery.scraping", "graphai.celery.scraping.jobs", "graphai.celery.scraping.tasks", "graphai.celery.text", "graphai.celery.text.jobs", "graphai.celery.text.tasks", "graphai.celery.translation", "graphai.celery.translation.jobs", "graphai.celery.translation.tasks", "graphai.celery.video", "graphai.celery.video.jobs", "graphai.celery.video.tasks", "graphai.celery.voice", "graphai.celery.voice.jobs", "graphai.celery.voice.tasks", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.config", "graphai.core.common.fingerprinting", "graphai.core.common.lookup", "graphai.core.common.multimedia_utils", "graphai.core.embedding", "graphai.core.embedding.embedding", "graphai.core.image", "graphai.core.image.image", "graphai.core.image.ocr", "graphai.core.ontology", "graphai.core.ontology.clustering", "graphai.core.ontology.data", "graphai.core.ontology.ontology", "graphai.core.ontology.openalex", "graphai.core.scraping", "graphai.core.scraping.scraping", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.embeddings", "graphai.core.text.exercises", "graphai.core.text.graph", "graphai.core.text.keywords", "graphai.core.text.scores", "graphai.core.text.wikisearch", "graphai.core.translation", "graphai.core.translation.text_utils", "graphai.core.translation.translation", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.core.video", "graphai.core.video.video", "graphai.core.video.video_utils", "graphai.core.voice", "graphai.core.voice.transcribe", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.auth.rst", "graphai.api.auth.auth_utils.rst", "graphai.api.auth.log.rst", "graphai.api.auth.router.rst", "graphai.api.common.rst", "graphai.api.common.schemas.rst", "graphai.api.common.utils.rst", "graphai.api.embedding.rst", "graphai.api.embedding.router.rst", "graphai.api.embedding.schemas.rst", "graphai.api.image.rst", "graphai.api.image.router.rst", "graphai.api.image.schemas.rst", "graphai.api.main.rst", "graphai.api.main.main.rst", "graphai.api.ontology.rst", "graphai.api.ontology.router.rst", "graphai.api.ontology.schemas.rst", "graphai.api.scraping.rst", "graphai.api.scraping.router.rst", "graphai.api.scraping.schemas.rst", "graphai.api.text.rst", "graphai.api.text.router.rst", "graphai.api.text.schemas.rst", "graphai.api.translation.rst", "graphai.api.translation.router.rst", "graphai.api.translation.schemas.rst", "graphai.api.video.rst", "graphai.api.video.router.rst", "graphai.api.video.schemas.rst", "graphai.api.voice.rst", "graphai.api.voice.router.rst", "graphai.api.voice.schemas.rst", "graphai.celery.rst", "graphai.celery.common.rst", "graphai.celery.common.celery_config.rst", "graphai.celery.common.celery_tools.rst", "graphai.celery.common.jobs.rst", "graphai.celery.common.log.rst", "graphai.celery.common.tasks.rst", "graphai.celery.embedding.rst", "graphai.celery.embedding.jobs.rst", "graphai.celery.embedding.tasks.rst", "graphai.celery.image.rst", "graphai.celery.image.jobs.rst", "graphai.celery.image.tasks.rst", "graphai.celery.ontology.rst", "graphai.celery.ontology.jobs.rst", "graphai.celery.ontology.tasks.rst", "graphai.celery.scraping.rst", "graphai.celery.scraping.jobs.rst", "graphai.celery.scraping.tasks.rst", "graphai.celery.text.rst", "graphai.celery.text.jobs.rst", "graphai.celery.text.tasks.rst", "graphai.celery.translation.rst", "graphai.celery.translation.jobs.rst", "graphai.celery.translation.tasks.rst", "graphai.celery.video.rst", "graphai.celery.video.jobs.rst", "graphai.celery.video.tasks.rst", "graphai.celery.voice.rst", "graphai.celery.voice.jobs.rst", "graphai.celery.voice.tasks.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.config.rst", "graphai.core.common.fingerprinting.rst", "graphai.core.common.lookup.rst", "graphai.core.common.multimedia_utils.rst", "graphai.core.embedding.rst", "graphai.core.embedding.embedding.rst", "graphai.core.image.rst", "graphai.core.image.image.rst", "graphai.core.image.ocr.rst", "graphai.core.ontology.rst", "graphai.core.ontology.clustering.rst", "graphai.core.ontology.data.rst", "graphai.core.ontology.ontology.rst", "graphai.core.ontology.openalex.rst", "graphai.core.scraping.rst", "graphai.core.scraping.scraping.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.embeddings.rst", "graphai.core.text.exercises.rst", "graphai.core.text.graph.rst", "graphai.core.text.keywords.rst", "graphai.core.text.scores.rst", "graphai.core.text.wikisearch.rst", "graphai.core.translation.rst", "graphai.core.translation.text_utils.rst", "graphai.core.translation.translation.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.core.video.rst", "graphai.core.video.video.rst", "graphai.core.video.video_utils.rst", "graphai.core.voice.rst", "graphai.core.voice.transcribe.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.auth package", "graphai.api.auth.auth_utils module", "graphai.api.auth.log module", "graphai.api.auth.router module", "graphai.api.common package", "graphai.api.common.schemas module", "graphai.api.common.utils module", "graphai.api.embedding package", "graphai.api.embedding.router module", "graphai.api.embedding.schemas module", "graphai.api.image package", "graphai.api.image.router module", "graphai.api.image.schemas module", "graphai.api.main package", "graphai.api.main.main module", "graphai.api.ontology package", "graphai.api.ontology.router module", "graphai.api.ontology.schemas module", "graphai.api.scraping package", "graphai.api.scraping.router module", "graphai.api.scraping.schemas module", "graphai.api.text package", "graphai.api.text.router module", "graphai.api.text.schemas module", "graphai.api.translation package", "graphai.api.translation.router module", "graphai.api.translation.schemas module", "graphai.api.video package", "graphai.api.video.router module", "graphai.api.video.schemas module", "graphai.api.voice package", "graphai.api.voice.router module", "graphai.api.voice.schemas module", "graphai.celery package", "graphai.celery.common package", "graphai.celery.common.celery_config module", "graphai.celery.common.celery_tools module", "graphai.celery.common.jobs module", "graphai.celery.common.log module", "graphai.celery.common.tasks module", "graphai.celery.embedding package", "graphai.celery.embedding.jobs module", "graphai.celery.embedding.tasks module", "graphai.celery.image package", "graphai.celery.image.jobs module", "graphai.celery.image.tasks module", "graphai.celery.ontology package", "graphai.celery.ontology.jobs module", "graphai.celery.ontology.tasks module", "graphai.celery.scraping package", "graphai.celery.scraping.jobs module", "graphai.celery.scraping.tasks module", "graphai.celery.text package", "graphai.celery.text.jobs module", "graphai.celery.text.tasks module", "graphai.celery.translation package", "graphai.celery.translation.jobs module", "graphai.celery.translation.tasks module", "graphai.celery.video package", "graphai.celery.video.jobs module", "graphai.celery.video.tasks module", "graphai.celery.voice package", "graphai.celery.voice.jobs module", "graphai.celery.voice.tasks module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.config module", "graphai.core.common.fingerprinting module", "graphai.core.common.lookup module", "graphai.core.common.multimedia_utils module", "graphai.core.embedding package", "graphai.core.embedding.embedding module", "graphai.core.image package", "graphai.core.image.image module", "graphai.core.image.ocr module", "graphai.core.ontology package", "graphai.core.ontology.clustering module", "graphai.core.ontology.data module", "graphai.core.ontology.ontology module", "graphai.core.ontology.openalex module", "graphai.core.scraping package", "graphai.core.scraping.scraping module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.embeddings module", "graphai.core.text.exercises module", "graphai.core.text.graph module", "graphai.core.text.keywords module", "graphai.core.text.scores module", "graphai.core.text.wikisearch module", "graphai.core.translation package", "graphai.core.translation.text_utils module", "graphai.core.translation.translation module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.core.video package", "graphai.core.video.video module", "graphai.core.video.video_utils module", "graphai.core.voice package", "graphai.core.voice.transcribe module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 7, 25, 39, 68, 69, 71, 72, 75, 80, 81, 85, 86, 87, 92, 93, 95, 99, 105, 108, 110, 120], "contain": [0, 25, 37, 69, 72, 78, 80, 81, 85, 86, 90, 91, 93, 110, 120], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 24, 25, 80, 81, 86, 87, 92, 120, 130], "project": 0, "ai": 0, "base": [0, 3, 4, 7, 24, 25, 37, 68, 75, 78, 79, 80, 81, 85, 86, 88, 90, 92, 93, 95, 98, 99, 101, 102, 105, 108, 110, 120, 125], "util": [0, 6, 66], "api": [0, 78, 86, 89, 93], "celeri": [0, 8], "core": 0, "pipelin": 0, "definit": [0, 120], "modul": [0, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 36, 42, 45, 48, 51, 54, 57, 60, 63, 67, 74, 76, 79, 84, 86, 94, 97, 100, 103, 106, 109, 113, 126, 130], "auth": 1, "common": [1, 35, 66], "embed": [1, 24, 25, 35, 66, 80, 86], "imag": [1, 35, 66, 71, 72, 73, 108], "main": [1, 81, 113, 115], "ontologi": [1, 7, 24, 25, 35, 66, 86, 87, 90, 92], "scrape": [1, 35, 66], "text": [1, 35, 43, 58, 66, 69, 71, 72, 73, 75, 78, 85, 95, 96, 97, 108, 110], "translat": [1, 35, 66, 72, 91, 110], "video": [1, 35, 66, 71, 72, 110], "voic": [1, 35, 66], "auth_util": 2, "log": [2, 36, 79, 81, 98, 102], "router": [2, 9, 12, 17, 20, 23, 26, 29, 32], "get_ratelimit_valu": 3, "class": [3, 4, 7, 25, 37, 68, 75, 78, 79, 81, 86, 88, 90, 95, 98, 99, 101, 102, 105, 108, 110], "token": [3, 5, 7, 39, 43, 46, 52, 58, 61, 64, 68, 69, 71, 72, 73, 75, 77, 85, 91, 95, 96, 107, 108, 110], "access_token": 3, "str": [3, 4, 5, 7, 24, 25, 86, 91, 93, 101, 102, 105, 120], "token_typ": 3, "basemodel": [3, 7, 25], "model_computed_field": [3, 7, 25], "classvar": [3, 7, 25], "dict": [3, 4, 5, 7, 25, 68, 72, 80, 85, 95, 102, 108, 110], "computedfieldinfo": [3, 7, 25], "A": [3, 7, 24, 25, 81, 86, 87, 90, 91, 92, 93, 110], "dictionari": [3, 7, 8, 25, 69, 72, 79, 80, 81, 85, 93, 95, 102, 110], "comput": [3, 7, 24, 25, 71, 72, 80, 86, 88, 90, 92, 108, 120], "field": [3, 7, 25, 85], "name": [3, 7, 8, 25, 37, 68, 80, 102, 108], "correspond": [3, 7, 25, 71, 80], "object": [3, 7, 25, 37, 68, 72, 75, 78, 79, 81, 86, 87, 88, 90, 92, 95, 98, 99, 102, 104, 105, 108, 110], "model_config": [3, 7, 25], "configdict": [3, 7, 25], "configur": [3, 7, 25, 120], "model": [3, 7, 25, 75, 80, 95, 108, 110], "should": [3, 7, 25, 68, 102], "conform": [3, 7, 25], "pydant": [3, 7, 25], "config": [3, 7, 25, 67], "model_field": [3, 7, 25], "fieldinfo": [3, 7, 25], "annot": [3, 7, 25], "requir": [3, 7, 25, 120], "true": [3, 7, 24, 25, 39, 43, 46, 58, 69, 71, 72, 75, 77, 78, 79, 80, 81, 85, 86, 90, 91, 92, 95, 98, 102, 105, 107, 108, 120], "metadata": [3, 7, 25], "about": [3, 7, 25, 86, 91], "defin": [3, 7, 25, 120, 124], "map": [3, 7, 25, 80, 81, 85, 104], "thi": [3, 7, 24, 25, 71, 72, 80, 99, 120], "replac": [3, 7, 25, 105, 120], "__fields__": [3, 7, 25], "from": [3, 7, 8, 24, 25, 68, 69, 71, 72, 80, 85, 86, 90, 91, 92, 101, 108, 120], "v1": [3, 7, 25, 108], "tokendata": 3, "usernam": 3, "none": [3, 4, 5, 7, 24, 25, 37, 39, 40, 46, 61, 64, 68, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 85, 95, 98, 99, 102, 107, 108, 110, 120, 121], "scope": 3, "list": [3, 24, 25, 68, 71, 72, 75, 79, 80, 81, 85, 86, 91, 93, 108, 120], "fals": [3, 7, 24, 25, 39, 40, 43, 46, 49, 52, 58, 61, 64, 68, 69, 72, 75, 77, 78, 79, 80, 81, 82, 85, 86, 91, 92, 95, 96, 102, 105, 107, 108, 110, 120], "default": [3, 7, 24, 25, 37, 68, 75, 80, 85, 86, 87, 90, 91, 92, 93, 105, 108], "union": [3, 7], "nonetyp": [3, 7], "user": [3, 5], "email": [3, 101], "full_nam": 3, "disabl": 3, "bool": [3, 7, 24, 25, 86, 90, 91, 92, 102, 120], "userindb": 3, "hashed_password": 3, "generate_random_password_str": 3, "length": [3, 25, 40, 71, 85, 110], "32": [3, 85], "verify_password": 3, "plain_password": 3, "get_password_hash": 3, "password": 3, "get_us": 3, "get_user_ratelimit_overrid": 3, "path": [3, 5, 68, 69, 71, 73, 78, 108, 110, 125], "authenticate_us": 3, "async": [3, 4, 5, 24], "extract_username_and_scop": 3, "extract_username_sync": 3, "get_user_ag": 4, "request": [4, 7, 24, 80, 85, 86, 89], "log_request": 4, "request_data": 4, "loggermiddlewar": 4, "app": [4, 37], "callabl": 4, "mutablemap": 4, "ani": [4, 24, 25, 86, 91, 92, 120], "await": 4, "basehttpmiddlewar": 4, "dispatch": 4, "call_next": 4, "respons": [4, 7], "create_access_token": 5, "data": [5, 24, 55, 72, 79, 80, 85, 86, 88, 89, 102], "expires_delta": 5, "timedelta": 5, "get_current_us": 5, "security_scop": 5, "securityscop": 5, "get_current_active_us": 5, "current_us": 5, "get_active_user_dummi": 5, "get_user_for_rate_limit": 5, "header": [5, 52, 85], "login_for_access_token": 5, "form_data": 5, "oauth2passwordrequestform": 5, "read_users_m": 5, "schema": [6, 9, 12, 17, 20, 23, 26, 29, 32], "taskidrespons": 7, "task_id": [7, 37], "repres": [7, 24, 25, 81, 91, 99, 105], "output": [7, 8, 25, 69, 108, 110], "tree": [7, 80, 108], "endpoint": 7, "titl": [7, 25], "task": [7, 8, 36, 37, 39, 42, 45, 48, 51, 54, 57, 60, 63, 72, 99, 105], "id": [7, 8, 25, 37, 39, 68, 79, 80, 81, 85], "descript": [7, 24, 25], "creat": [7, 37, 68, 69, 79, 81, 85, 95, 102, 105], "an": [7, 24, 25, 68, 71, 73, 75, 80, 81, 86, 89, 95, 102, 108, 110], "taskstatusrespons": 7, "task_nam": 7, "task_statu": 7, "task_result": [7, 37], "abc": [7, 78], "json": [7, 69, 78, 102, 108, 110], "statu": [7, 8, 37, 85], "filerequest": 7, "file": [7, 24, 68, 69, 71, 73, 78, 86, 87, 102, 108, 110], "download": [7, 108], "receiv": 7, "anoth": [7, 25, 81], "tokenstatu": 7, "activ": 7, "fingerprint": [7, 67, 68, 72], "whether": [7, 24, 25, 68, 69, 71, 78, 79, 80, 81, 85, 86, 90, 91, 92, 105, 108, 110, 120], "": [7, 24, 68, 69, 71, 73, 75, 78, 85, 86, 92, 95], "i": [7, 24, 25, 68, 69, 71, 72, 75, 78, 79, 80, 81, 85, 86, 87, 91, 92, 93, 99, 105, 107, 108, 110, 120], "avail": 7, "which": [7, 25, 68, 72, 81, 85, 86, 87, 91, 93, 108, 110, 120], "make": [7, 24, 25, 78, 81, 86, 89], "calcul": [7, 80, 108], "possibl": [7, 91], "otherwis": [7, 69, 75, 78, 86, 91, 108, 110, 120], "onli": [7, 24, 72, 81, 86, 93, 102, 108, 120], "cach": [7, 39, 67, 72, 108], "result": [7, 8, 24, 25, 37, 39, 55, 71, 72, 73, 75, 77, 78, 80, 81, 85, 86, 87, 88, 90, 92, 93, 96, 107, 108, 110, 120], "can": [7, 24, 25, 71, 72, 86, 93, 105, 110], "return": [7, 8, 24, 25, 37, 39, 68, 69, 71, 72, 73, 75, 78, 79, 80, 81, 85, 86, 87, 90, 91, 92, 93, 95, 101, 102, 104, 105, 108, 110, 120], "ha": [7, 25, 75, 120], "databas": [7, 72], "format_api_result": 8, "format": [8, 25, 69, 104, 108], "come": 8, "param": [8, 37, 39, 68, 69, 71, 72, 73, 75, 78, 79, 80, 81, 85, 95, 108, 110, 114, 116, 117, 118, 119, 121, 122], "appropri": 8, "keyword": [24, 25, 55, 86, 90, 92, 93], "keywordsrequest": [24, 25], "use_nltk": [24, 55, 86, 91], "process": [24, 85, 86, 93], "raw": [24, 25, 101], "e": [24, 80, 85, 86, 92, 93, 108, 110], "g": [24, 80, 81, 86, 93, 110], "abstract": [24, 78], "public": 24, "cours": 24, "lectur": [24, 25], "slide": [24, 108], "wikifi": [24, 25, 86, 87], "wikifyfromrawtextrequest": [24, 25], "wikifyfromkeywordsrequest": [24, 25], "method": [24, 46, 55, 77, 78, 79, 80, 81, 86, 93, 120], "restrict_to_ontologi": [24, 55, 86, 92], "score_smooth": [24, 55, 86, 92], "aggregation_coef": [24, 55, 86, 92], "float": [24, 25, 86, 87, 91, 92, 105, 120], "0": [24, 25, 69, 71, 75, 81, 85, 86, 87, 90, 92, 93, 95, 102, 104, 105, 107, 108, 110, 114, 120], "5": [24, 25, 79, 81, 86, 90, 92, 105, 110], "filtering_threshold": [24, 55, 86, 92], "15": [24, 64, 86, 92], "refresh_scor": [24, 55, 86, 92], "concept": [24, 25, 79, 80, 81, 86, 87, 88, 90, 92, 93, 115, 120], "wikipedia": [24, 25, 81, 86, 93], "page": [24, 25, 78, 79, 81, 85, 86, 92, 93], "ar": [24, 25, 39, 69, 71, 79, 81, 85, 86, 87, 91, 92, 104, 108, 120], "relev": [24, 25, 72, 86, 93], "each": [24, 25, 69, 79, 80, 81, 85, 86, 92, 93, 99, 105, 120], "set": [24, 25, 37, 69, 75, 86, 87, 93, 120], "score": [24, 25, 71, 79, 80, 81, 86, 87, 90, 91, 93, 95, 110, 120], "1": [24, 25, 69, 71, 79, 81, 85, 86, 92, 93, 95, 104, 105, 108, 120], "quantifi": 24, "done": [24, 72], "follow": [24, 99, 105, 108, 120], "extract": [24, 25, 73, 78, 85, 86, 91, 108, 110], "automat": [24, 68, 110], "omit": 24, "string": [24, 69, 71, 73, 75, 78, 85, 91, 95, 108], "provid": [24, 37, 73, 79, 80, 81, 85, 86, 90, 95, 108], "input": [24, 25, 71, 73, 78, 85, 108, 110], "under": 24, "instead": [24, 39, 68], "raw_text": [24, 25, 55], "wikisearch": [24, 86, 92], "For": [24, 25, 71, 120], "most": [24, 71], "10": [24, 79, 81, 86, 91, 93, 120], "retriev": [24, 68, 69, 72, 85, 86, 93, 105, 108], "through": [24, 79, 81, 108], "elasticsearch": [24, 86, 93], "pair": [24, 81, 91, 105, 120], "sever": [24, 25, 86, 92, 105], "deriv": [24, 81], "take": [24, 81, 86, 92, 120], "account": 24, "vector": [24, 25, 80, 88], "among": [24, 72], "other": [24, 25, 81, 86, 92, 93, 105], "aggreg": [24, 25, 72, 80, 86, 92], "filter": [24, 86, 87, 91, 92], "accord": [24, 25, 80, 85, 120], "some": [24, 25, 86, 92, 99, 105, 120], "rule": 24, "keep": [24, 81, 92, 99], "argument": 24, "pass": [24, 75], "have": [24, 75, 120], "more": [24, 86, 91, 92, 99, 105], "precis": 24, "control": [24, 86, 92, 120], "It": [24, 25, 86, 91, 93, 120], "either": [24, 86, 93], "us": [24, 25, 68, 69, 72, 73, 75, 78, 79, 80, 81, 85, 86, 91, 92, 93, 105, 108, 110, 120], "one": [24, 25, 71, 80, 81, 86, 91, 93, 99, 105, 120], "appli": [24, 86, 90, 92], "transform": [24, 75, 80, 86, 90, 92], "distribut": [24, 86, 92], "them": [24, 71, 85, 86, 92], "evenli": [24, 86, 92], "number": [24, 69, 72, 78, 79, 80, 81, 85, 86, 92, 93, 99, 102, 120], "how": [24, 80, 85, 86, 91, 92, 95], "valu": [24, 68, 69, 71, 81, 85, 86, 88, 92, 108, 120], "sum": [24, 25, 80, 86, 92], "over": [24, 86, 92, 120], "normalis": [24, 86, 91, 92, 120], "max": [24, 86, 92], "between": [24, 68, 71, 79, 80, 81, 92, 104, 105, 108, 120], "linearli": [24, 92, 104], "interpol": [24, 92], "those": [24, 71, 81, 92], "two": [24, 25, 71, 72, 78, 79, 81, 85, 92, 108], "approach": [24, 92], "threshold": [24, 68, 72, 86, 87, 91, 92, 108, 110], "all": [24, 25, 71, 75, 80, 85, 86, 91, 92, 105, 108, 120], "decid": [24, 86, 92], "good": [24, 86, 92], "enough": [24, 75, 86, 92], "perspect": [24, 86, 92], "recomput": [24, 86, 92], "after": [24, 80, 86, 91, 92], "wikify_ontology_svg": [24, 55], "wikifyresponseelem": [24, 25], "level": [24, 25, 55, 80, 86, 87], "int": [24, 25, 86, 87, 93, 99, 102], "2": [24, 25, 71, 79, 81, 86, 93, 95, 105, 108, 120, 130], "svg": [24, 86, 87], "subgraph": 24, "induc": [24, 81, 86, 87], "wikify_graph_svg": [24, 55], "concept_score_threshold": [24, 55, 86, 87], "3": [24, 25, 79, 80, 81, 86, 87, 93, 105, 130], "edge_threshold": [24, 55, 86, 87], "min_component_s": [24, 55, 86, 87], "generate_exercis": [24, 55, 86, 89], "generatetextexerciserequest": [24, 25], "generatelectureexerciserequest": [24, 25], "chatbot": [24, 86, 89], "gener": [24, 25, 68, 69, 75, 85, 86, 89, 91, 95, 108], "exercis": [24, 25, 86], "exampl": [25, 86, 91, 120], "To": 25, "draw": [25, 86], "straight": 25, "line": [25, 71, 80, 102, 110, 120], "point": [25, 80, 85], "nto": 25, "produc": 25, "finit": 25, "continu": 25, "describ": 25, "circl": 25, "center": 25, "radiu": 25, "nthat": 25, "right": 25, "angl": 25, "equal": [25, 72, 85], "fall": 25, "interior": 25, "same": [25, 72, 85, 92, 108, 120], "side": 25, "less": 25, "than": [25, 71, 91, 120], "indefinit": 25, "meet": 25, "concept_id": [25, 49, 79, 81, 82, 86, 87, 88, 90, 92, 93], "concept_nam": [25, 80, 86, 87, 92, 93], "search_scor": [25, 86, 87, 92, 93], "levenshtein_scor": [25, 86, 87], "embedding_local_scor": 25, "embedding_global_scor": 25, "graph_scor": [25, 86, 87, 90], "ontology_local_scor": [25, 86, 87, 90], "ontology_global_scor": [25, 86, 87, 90], "embedding_keywords_scor": 25, "graph_keywords_scor": 25, "ontology_keywords_scor": 25, "mixed_scor": [25, 86, 87, 92], "consist": 25, "measur": 25, "degre": 25, "respect": [25, 81, 104, 120], "json_schema_extra": 25, "1196": 25, "9447807640350212": 25, "936190393844887": 25, "9806112066572416": 25, "7920787642145825": 25, "995049504950495": 25, "974893873592604": 25, "9821428571428572": 25, "12401488": 25, "triangl": 25, "6047569988500392": 25, "18117340257708767": 25, "5498335395955196": 25, "22692356368077668": 25, "30184919393927595": 25, "4680631523928115": 25, "3889476967863415": 25, "6666666666666666": 25, "18009831669894236": 25, "3392857142857143": 25, "13295107": 25, "transvers": 25, "geometri": 25, "7783132229139607": 25, "8541509524253893": 25, "7899500675092881": 25, "8158838242881319": 25, "079490218003065": 25, "2110192540065071": 25, "6477110513680882": 25, "8333333333333333": 25, "8540145985401459": 25, "7178571428571429": 25, "146689": 25, "earth": 25, "6191743554865394": 25, "3393292344705985": 25, "6058537722364034": 25, "32094309692256273": 25, "04560562055085982": 25, "5850789404910146": 25, "2747973601576835": 25, "0006414535135995178": 25, "18025826114750698": 25, "2222222222222222": 25, "475": 25, "152547": 25, "bisect": 25, "5829791653941659": 25, "6658021950254382": 25, "5916531383849596": 25, "6072448552560294": 25, "3652836360342975": 25, "2470772552749216": 25, "49403585288280044": 25, "6649784001191716": 25, "27142857142857146": 25, "161243": 25, "nine": 25, "5954070757052229": 25, "6252501137210749": 25, "6128662674658956": 25, "6809346631686672": 25, "23567484697484573": 25, "3974121105221985": 25, "5454425715474266": 25, "6234172501117234": 25, "5428571428571429": 25, "165487": 25, "world": 25, "5875702591903744": 25, "32915926499040604": 25, "5557247926738698": 25, "35937866385263295": 25, "018301492693509606": 25, "20854298868986648": 25, "35381073854308764": 25, "3324892000595859": 25, "1780815": 25, "6123892146782264": 25, "40341637127911656": 25, "7313486756137682": 25, "43983570252851467": 25, "6785714285714286": 25, "1896705": 25, "oscul": 25, "6001356168702854": 25, "6095596040570643": 25, "15095693713821154": 25, "44197078056376315": 25, "06785714285714284": 25, "1898401": 25, "arc": 25, "6206023872446591": 25, "45726985451624325": 25, "6214735523605726": 25, "5967180832515523": 25, "37885045617052326": 25, "09530697673156802": 25, "429472346018896": 25, "41496111506273836": 25, "6075750180441352": 25, "1975821": 25, "skew": 25, "6071866898797716": 25, "453132323677798": 25, "5926923831317541": 25, "6342079203068262": 25, "1467272460558672": 25, "4842714203388464": 25, "4997033279190881": 25, "4571726500819306": 25, "201359": 25, "squar": [25, 120], "6094673983855882": 25, "6228894106876862": 25, "1853365490872417": 25, "33646712232710085": 25, "4634098506722587": 25, "2035714285714286": 25, "22634860": 25, "segment": [25, 95, 110], "6015345514255728": 25, "44397434138761116": 25, "6289329297461709": 25, "6463107906576082": 25, "5940970321127149": 25, "1325957938789834": 25, "47811753398436485": 25, "250265": 25, "rhumb": 25, "7314235936190492": 25, "5403307788136165": 25, "7146040614704057": 25, "7244902789723203": 25, "10852920758292811": 25, "36085995785542146": 25, "49088968517023296": 25, "5297660279561411": 25, "48877312914546234": 25, "4848520041529702": 25, "7678571428571428": 25, "31482": 25, "tangent": 25, "59976908308104": 25, "4963883113854736": 25, "1724878951919264": 25, "35549687067330726": 25, "3307757": 25, "simson": 25, "578947689005502": 25, "6270069103429565": 25, "013581124397822893": 25, "43210300146756936": 25, "462730": 25, "inscrib": 25, "768343013064605": 25, "7717801666974846": 25, "12482171404042144": 25, "6445516077439113": 25, "6622740540324344": 25, "44285714285714284": 25, "48082": 25, "great": 25, "6151678032679938": 25, "6194506424602977": 25, "5237975686048405": 25, "5752620110628913": 25, "40714285714285714": 25, "524003": 25, "intern": 25, "extern": 25, "9544700262181692": 25, "9547191776223249": 25, "06348267860292894": 25, "6012700464524801": 25, "8358244891138791": 25, "9464285714285714": 25, "5407025": 25, "7428783723631838": 25, "7502904601610197": 25, "006235350315249621": 25, "39303319759855243": 25, "6026876561381135": 25, "3928571428571429": 25, "6220": 25, "6044584589208712": 25, "6247087590356082": 25, "5495989056289238": 25, "6404968907479984": 25, "6107142857142858": 25, "664497": 25, "parallel": [25, 72], "6220133585096995": 25, "6017217718876411": 25, "40095604092651027": 25, "06793369410635872": 25, "3948184056141364": 25, "76956": 25, "7548885234150651": 25, "8246343320198054": 25, "7571720795352108": 25, "8192570426095808": 25, "3076508249923096": 25, "5768412624599064": 25, "7030698606760027": 25, "8248175182481752": 25, "65": 25, "89246": 25, "curv": 25, "6058837846959582": 25, "6061010985898527": 25, "6010512105924976": 25, "009984282260938813": 25, "4660368744333562": 25, "91111": 25, "trisect": 25, "7222511927302219": 25, "7114737175075206": 25, "42053296186769257": 25, "5472899496445176": 25, "7163539488698042": 25, "6821428571428572": 25, "946975": 25, "8476721575861583": 25, "653131668312657": 25, "9162572314594017": 25, "9426016455778317": 25, "2862599599983249": 25, "7850418748754415": 25, "6514226203690341": 25, "9778406317665507": 25, "wikipag": 25, "global": 25, "given": [25, 37, 68, 69, 71, 79, 80, 81, 85, 86, 87, 91, 93, 101, 102, 104, 108, 110, 120], "found": [25, 108], "local": [25, 69, 108], "levenshtein": 25, "similar": [25, 71, 72, 79, 81, 108, 120], "mix": [25, 120], "weight": [25, 81, 86, 92, 120], "averag": [25, 79, 80, 81, 86, 92, 120], "search": [25, 85, 86, 93, 108], "bloom_level": 25, "liter": 25, "4": [25, 79, 81, 105, 130], "6": [25, 78, 105], "include_solut": 25, "output_format": 25, "plain": 25, "markdown": 25, "latex": 25, "llm_model": 25, "gpt": 25, "4o": 25, "mini": 25, "openai_api_kei": 25, "llm": 25, "desir": 25, "bloom": 25, "taxonomi": 25, "languag": [25, 61, 73, 78, 95, 107, 108, 110], "sent": 25, "what": [25, 80, 86, 91], "involv": 25, "inclin": 25, "plane": 25, "friction": 25, "ask": 25, "solut": 25, "along": 25, "kei": [25, 81, 93, 110, 120], "openai": 25, "foo": 25, "bar": [25, 99], "factual": 25, "content": [25, 69, 78, 85, 102, 108], "upon": 25, "bodi": 25, "whose": [25, 71, 81, 120], "mass": 25, "m": 25, "constant": 25, "written": 25, "form": 25, "f": [25, 69, 105], "ma": 25, "where": [25, 72, 108, 120], "forc": [25, 43, 46, 52, 58, 61, 64, 68, 72, 75, 77, 96, 107, 110], "acceler": 25, "both": [25, 71, 80, 120], "quantiti": 25, "If": [25, 39, 69, 71, 75, 79, 80, 81, 91, 95, 102, 120], "net": 25, "act": 25, "equat": 25, "lecture_id": 25, "0_mp6uyap1": 25, "celery_config": 36, "celery_tool": 36, "job": [36, 42, 45, 48, 51, 54, 57, 60, 63], "route_task": 37, "arg": [37, 39], "kwarg": [37, 72, 79, 81], "option": [37, 79, 80, 81, 85], "kw": 37, "baseconfig": 37, "developmentconfig": 37, "get_set": 37, "create_celeri": 37, "get_celery_task": 37, "asyncresult": 37, "get_task_info": 37, "info": 37, "get_n_celery_work": 38, "direct_lookup_generic_job": 39, "task_fn": 39, "return_result": [39, 43, 52, 58, 64], "timeout": 39, "40": [39, 85], "launch": 39, "direct": [39, 79, 81, 120], "lookup": [39, 67], "function": [39, 69, 71, 105, 108, 120], "look": 39, "up": [39, 81, 86, 87], "full": [39, 68, 69, 71, 73, 78, 80, 108, 110], "just": [39, 80], "second": [39, 40, 71, 85, 105, 110], "case": [39, 69, 78, 102], "hit": 39, "miss": [39, 120], "msg": [40, 98, 102, 105], "total": [40, 72, 99, 105], "64": 40, "get_embedding_text_fingerprint_chain_list": 43, "model_typ": [43, 75], "fingerprint_lookup_job": [43, 46, 58, 61, 64], "fingerprint_compute_job": [43, 58], "asynchron": [43, 58], "fingerprint_job": [43, 46, 58, 61, 64], "embedding_job": 43, "retrieve_image_from_url_job": 46, "url": [46, 52, 61, 69, 77, 85, 101, 107, 108], "ocr_job": 46, "googl": [46, 77, 78], "api_token": [46, 77], "openai_token": [46, 77], "pdf_in_pag": [46, 77], "tree_job": 49, "category_info_job": 49, "category_id": [49, 79, 81, 83], "cluster_info_job": 49, "cluster_id": [49, 79, 81, 82], "concept_info_job": 49, "openalex_category_nearest_topics_job": 49, "openalex_topic_nearest_categories_job": 49, "topic_id": [49, 79, 83], "recompute_clusters_job": 49, "n_cluster": [49, 79, 80, 82], "min_n": [49, 79, 80, 82], "graph_distance_job": 49, "src": [49, 58, 95, 96], "tgt": [49, 58, 95, 96], "src_type": 49, "tgt_type": 49, "avg": [49, 79, 81, 82], "coeff": [49, 79, 81, 82], "concept_nearest_category_job": 49, "top_n": [49, 79, 81, 82], "use_depth_3": [49, 79, 81, 82], "return_clust": [49, 79, 81, 82], "use_embed": [49, 79, 82], "cluster_nearest_category_job": 49, "concept_nearest_concept_job": 49, "breakup_cluster_job": 49, "sublink_lookup_job": 52, "extract_sublinks_job": 52, "extract_content_job": 52, "long_pattern": [52, 85], "wikify_text": 55, "wikify_keyword": 55, "keyword_list": 55, "get_translation_text_fingerprint_chain_list": 58, "translation_job": 58, "skip_sentence_segment": [58, 95, 96], "detect_text_language_job": 58, "get_video_fingerprint_chain_list": 61, "min_similar": [61, 71, 72], "n_job": 61, "8": 61, "ignore_fp_result": 61, "get_audio_fingerprint_chain_list": 61, "get_slide_fingerprint_chain_list": 61, "origin_token": [61, 68, 107], "retrieve_url_job": 61, "is_playlist": 61, "extract_audio_job": 61, "recalculate_cach": 61, "detect_slides_job": 61, "get_file_job": 61, "get_audio_language_detection_task_chain": 64, "n_div": [64, 110], "len_seg": 64, "30": [64, 110], "language_lookup_job": 64, "detect_language_job": 64, "transcribe_job": 64, "lang": [64, 72, 95, 108], "strict_sil": [64, 110], "common_util": 67, "multimedia_util": 67, "delete_fil": 68, "file_path": [68, 69], "delet": [68, 101], "create_symlink_between_path": 68, "old_path": 68, "new_path": 68, "symlink": 68, "old": 68, "real": 68, "new": [68, 78, 80, 105, 108], "videodbcachingmanag": 68, "initialize_databas": 68, "dbcachingmanagerbas": [68, 72], "init_db": 68, "audiodbcachingmanag": 68, "slidedbcachingmanag": 68, "textdbcachingmanag": 68, "scrapingdbcachingmanag": 68, "get_details_using_origin": 68, "col": [68, 72, 81], "get": [68, 81], "detail": [68, 72], "row": [68, 72, 80, 81, 92, 120], "origin": [68, 72, 80, 81, 85, 86, 90, 108], "column": [68, 80, 81, 86, 87, 90, 92, 93, 120], "embeddingdbcachingmanag": 68, "videoconfig": 68, "get_root_dir": 68, "get_image_dir": 68, "get_audio_dir": 68, "get_video_dir": 68, "get_transcript_dir": 68, "concat_file_path": 68, "filenam": [68, 69, 102], "subfold": 68, "concaten": 68, "root": [68, 108], "dir": 68, "generate_filepath": 68, "force_dir": 68, "its": [68, 71, 79, 80, 81, 85, 92, 108, 120], "particular": 68, "create_symlink": 68, "new_filenam": 68, "fingerprintparamet": 68, "load_valu": 68, "load": [68, 75, 79, 81, 95, 108, 110], "get_min_sim_imag": 68, "get_min_sim_audio": 68, "get_min_sim_video": 68, "get_token_file_statu": 68, "file_manag": [68, 77, 107, 110], "make_sure_path_exist": 69, "file_at_the_end": 69, "full_perm": 69, "recurs": [69, 108], "folder": [69, 108], "need": [69, 72, 75, 105], "exist": [69, 71, 78, 102], "thu": 69, "doesn": [69, 71], "t": [69, 71, 81, 86, 91, 102, 108], "end": [69, 71, 80, 85, 110, 120], "assign": [69, 120], "permiss": 69, "chmod": 69, "777": 69, "newli": 69, "file_exist": 69, "check": [69, 81, 85], "write_text_fil": 69, "filename_with_path": 69, "write": [69, 108], "textual": 69, "write_json_fil": 69, "d": [69, 99, 101], "read_text_fil": 69, "open": 69, "read": [69, 102, 108], "read_json_fil": 69, "format_datetime_for_mysql": 69, "dt": 69, "parse_mysql_datetim": 69, "get_current_datetim": 69, "current": [69, 104], "datetim": [69, 104], "mysql": 69, "invert_dict": 69, "strtobool": 69, "val": 69, "convert": [69, 81, 101], "represent": [69, 71], "truth": 69, "y": [69, 120], "ye": 69, "n": [69, 75, 81, 86, 93, 107, 125], "off": 69, "rais": 69, "valueerror": 69, "anyth": 69, "els": 69, "insensit": 69, "copy_file_within_fold": 69, "folder_nam": 69, "src_file": 69, "dest_fil": 69, "convert_list_to_text": 69, "str_or_list": 69, "convert_text_back_to_list": 69, "return_list": [69, 96], "generate_random_token": 69, "random": [69, 80, 125], "time": [69, 75, 85, 97, 99, 110], "get_file_s": 69, "retrieve_generic_file_from_generic_url": 69, "output_filename_with_path": [69, 108, 110], "output_token": [69, 108, 110], "wget": [69, 108], "store": [69, 86, 87, 108], "success": [69, 108, 110], "is_url": 69, "is_token": 69, "is_pdf": 69, "perceptual_hash_text": 71, "perceptu": [71, 108], "hash": [71, 108], "strong": 71, "min_window_length": 71, "minimum": [71, 72, 75, 80, 85, 108], "window": 71, "k": [71, 108, 120], "gram": 71, "max_window_length": 71, "maximum": [71, 85, 91, 93, 108, 120], "hash_len": 71, "md5_video_or_audio": 71, "input_filename_with_path": [71, 73, 78, 108, 110], "md5": [71, 75, 95], "audio": [71, 72, 108, 110], "stream": [71, 108], "perceptual_hash_audio": 71, "max_length": [71, 85], "7200": 71, "decod": [71, 108], "perceptual_hash_imag": 71, "hash_siz": 71, "16": 71, "size": [71, 80, 86, 87, 108], "doe": [71, 81, 102], "perceptual_hash_pdf": 71, "compare_decoded_fingerprint": 71, "decoded_1": 71, "decoded_2": 71, "compar": [71, 85, 120], "fuzzi": 71, "match": [71, 72, 85, 93], "ratio": [71, 80, 120], "compare_encoded_fingerprint": 71, "f1": 71, "f2": 71, "decoder_func": 71, "hex_to_hash": 71, "encod": [71, 86, 91, 101], "indic": [71, 81, 85, 108, 110], "exact": 71, "target": [71, 72, 81, 95, 108], "so": [71, 85, 108], "find_closest_fingerprint_from_list": 71, "target_fp": 71, "fp_list": 71, "token_list": 71, "date_list": 71, "strip_underscor": 71, "candid": 71, "find": [71, 79, 81, 85, 86, 93, 108], "highest": [71, 110], "abov": [71, 104, 108, 120], "unexpect": [71, 72, 79, 80, 81, 110, 120], "indent": [71, 72, 79, 80, 81, 98, 102, 110], "lower": 71, "block": [71, 80, 102, 105, 110], "quot": [71, 80, 110], "without": [71, 80, 105, 110, 120], "blank": [71, 80, 110, 120], "unind": [71, 80, 110, 120], "paramet": [71, 80, 86, 87, 90, 91, 92, 93, 99, 101, 102, 105, 110, 113, 120], "differ": [71, 105, 120], "v": [71, 75, 81, 85, 120], "remov": [71, 85], "trail": 71, "underscor": 71, "closest": [71, 72, 79, 81], "three": [71, 110], "satisfi": 71, "criterion": 71, "find_closest_fingerprint_for_list_from_list": 71, "find_closest_audio_fingerprint_from_list": 71, "find_closest_image_fingerprint_from_list": 71, "find_closest_text_fingerprint_from_list": 71, "md5_text": 71, "compute_text_fingerprint": 71, "lookup_latest_allowed_d": 72, "fp_token": 72, "db_manag": 72, "fingerprint_lookup_retrieve_from_db": 72, "equality_condit": 72, "condit": 72, "count": 72, "sourc": [72, 80, 81, 95], "plu": [72, 81, 86, 90, 95], "fingerprint_lookup_parallel": 72, "input_dict": [72, 110], "n_total": [72, 85], "data_typ": 72, "perform": [72, 73, 78, 80, 85, 93, 108, 120], "previou": [72, 99, 105], "step": [72, 108], "index": [72, 79, 80, 81, 85, 108, 120], "consid": [72, 80, 86, 87, 93, 108], "type": [72, 75, 85, 86, 90, 91, 92, 93, 101, 102, 110], "mode": [72, 80], "fingerprint_lookup_direct": 72, "fp_result": 72, "fingerprint_lookup_callback": 72, "results_list": [72, 110], "handl": 72, "collect": 72, "insert": 72, "retrieve_fingerprint_callback": 72, "has_origin": 72, "ignore_fingerprint_results_callback": 72, "token_status_func": 72, "is_fingerprint": 72, "fingerprint_cache_lookup": 72, "fingerprint_cache_lookup_with_most_similar": 72, "extra_col": 72, "cache_lookup_gener": 72, "database_callback_gener": 72, "values_dict": 72, "use_closest_match": 72, "token_based_text_lookup": 72, "main_col": 72, "modify_result_func": 72, "modify_result_arg": 72, "fingerprint_based_text_lookup": 72, "fp": [72, 75, 96, 108], "get_video_token_statu": 73, "get_image_token_statu": 73, "get_audio_token_statu": 73, "perform_prob": 73, "probe": [73, 108], "ffprobe": 73, "see": 73, "document": [73, 78, 108], "get_available_stream": 73, "perform_tesseract_ocr": 73, "image_path": [73, 78, 108], "ocr": [73, 76, 108], "tesseract": [73, 78, 108], "detect_text_languag": 73, "detect": [73, 78, 108, 110], "embedding_to_json": 75, "embedding_from_json": 75, "generate_embedding_text_token": 75, "get_text_token_count_using_model": 75, "model_token": 75, "embeddingmodel": 75, "get_devic": [75, 95], "load_model": [75, 95], "load_heavi": 75, "sentenc": [75, 91], "model_load": 75, "get_token": 75, "set_token": 75, "get_last_usag": [75, 95, 110], "unload_model": [75, 95, 110], "unload_period": [75, 95, 110], "10800": [75, 95], "unload": 75, "except": 75, "light": 75, "sinc": 75, "last": [75, 105], "heavi": 75, "qualifi": 75, "get_token_count": 75, "get_max_token": 75, "emb": 75, "minilm": 75, "l12": 75, "v2": [75, 108], "copy_embedding_object": 75, "embedding_obj": 75, "compute_embedding_text_fingerprint_callback": 75, "token_based_embedding_lookup": 75, "fingerprint_based_embedding_lookup": 75, "embed_text": 75, "insert_embedding_into_db": 75, "embedding_text_list_fingerprint_parallel": 75, "text_list": 75, "embedding_text_list_fingerprint_callback": 75, "embedding_text_list_embed_parallel": 75, "input_list": 75, "embedding_text_list_embed_callback": 75, "create_image_filename_using_url_format": 77, "cache_lookup_retrieve_image_from_url": 77, "retrieve_image_file_from_url": 77, "force_token": [77, 107], "retrieve_image_file_from_url_callback": 77, "cache_lookup_extract_slide_text": 77, "extract_slide_text": 77, "extract_slide_text_callback": 77, "imgtobase64convert": 78, "get_base64": 78, "abstractocrmodel": 78, "api_kei": 78, "model_class": 78, "model_nam": 78, "establish_connect": 78, "lazili": 78, "connect": [78, 86, 87], "alreadi": 78, "successfulli": 78, "establish": 78, "perform_ocr": 78, "googleocrmodel": 78, "text_detect": 78, "document_text_detect": 78, "wait_for_ocr_result": 78, "image_object": 78, "dtd": 78, "retri": 78, "call": [78, 86, 91], "wait": 78, "td": 78, "failur": 78, "openaiocrmodel": 78, "get_ocr_colnam": 78, "perform_tesseract_ocr_on_pdf": 78, "pdf_path": 78, "in_pag": 78, "pdf": 78, "separ": [78, 91], "singular": 78, "entir": 78, "ontologydata": [79, 81], "test_mod": [79, 81], "load_data": [79, 81], "load_ontology_concept_nam": [79, 81], "load_ontology_categori": [79, 81], "load_non_ontology_concept_nam": [79, 81], "load_concept_concept_graphscor": [79, 81], "load_category_categori": [79, 81], "load_category_concept": [79, 81], "load_anchor_page_dict": [79, 81], "categori": [79, 81, 86, 87], "anchor": [79, 81], "tabl": [79, 81, 124], "child": [79, 81], "parent": [79, 81], "relat": [79, 81], "compute_category_anchors_using_refer": [79, 81], "compute_symmetric_concept_concept_matrix": [79, 81], "matrix": [79, 80, 81], "compute_precalculated_similarity_matric": [79, 81], "precomput": [79, 81], "matric": [79, 81], "cluster": [79, 81, 93], "get_concept_concept_similar": [79, 81], "concept_1_id": [79, 81], "concept_2_id": [79, 81], "get_concept_cluster_similar": [79, 81], "linear": [79, 81], "get_cluster_cluster_similar": [79, 81], "cluster_1_id": [79, 81], "cluster_2_id": [79, 81], "get_concept_category_similar": [79, 81], "coeffici": [79, 81, 120], "get_cluster_category_similar": [79, 81], "get_category_category_similar": [79, 81], "category_1_id": [79, 81], "category_2_id": [79, 81], "get_concept_closest_concept": [79, 81], "top": [79, 81, 93], "get_concept_closest_concept_embed": [79, 81], "get_concept_closest_categori": [79, 81], "adaptive_threshold": [79, 81], "go": [79, 81], "depth": [79, 81], "directli": [79, 81], "get_concept_category_closest_embed": [79, 81], "get_cluster_closest_categori": [79, 81], "get_custom_cluster_closest_categori": [79, 81], "custom": [79, 81], "get_cluster_closest_category_embed": [79, 81], "get_custom_cluster_closest_category_embed": [79, 81], "get_category_closest_categori": [79, 81], "As": [79, 81], "compos": [79, 81], "crossov": [79, 81], "get_ontology_concept_names_t": [79, 81], "concepts_to_keep": [79, 81], "get_ontology_category_nam": [79, 81], "get_ontology_category_info": [79, 81], "cat_id": [79, 81, 82], "get_non_ontology_concept_nam": [79, 81], "get_concept_concept_graphscore_t": [79, 81], "get_category_to_categori": [79, 81], "get_category_par": [79, 81], "child_id": [79, 81], "get_category_branch": [79, 81], "get_category_children": [79, 81], "parent_id": [79, 81], "get_cluster_par": [79, 81], "get_cluster_children": [79, 81], "get_concept_parent_categori": [79, 81], "get_concept_parent_clust": [79, 81], "get_category_cluster_list": [79, 81], "get_category_concept_list": [79, 81], "get_cluster_concept_list": [79, 81], "get_category_concept_t": [79, 81], "get_category_cluster_t": [79, 81], "get_category_anchor_pag": [79, 81], "get_cluster_concept": [79, 81], "get_concept_nam": [79, 81], "get_concept_names_list": [79, 81], "get_test_concept_nam": [79, 81], "get_test_category_concept": [79, 81], "get_test_cluster_concept": [79, 81], "get_root_categori": [79, 81], "generate_tree_structur": [79, 81], "start": [79, 81, 85, 86, 93, 110], "generate_category_concept_dict": [79, 81], "recompute_clust": [79, 82], "ontology_data_obj": [79, 82], "get_concept_category_closest": [79, 82], "get_cluster_category_closest": [79, 82], "get_concept_concept_closest": [79, 82], "break_up_clust": [79, 82], "get_openalex_nearest": [79, 83], "openalex": 79, "compute_all_graphs_from_scratch": 80, "data_to_use_dict": 80, "scratch": 80, "datafram": [80, 81, 86, 87, 90, 92, 93, 120], "normalize_featur": 80, "normal": [80, 101], "l2": [80, 81], "norm": [80, 120], "dens": 80, "get_laplacian": 80, "laplacian": 80, "unnorm": 80, "adjac": [80, 81], "lil": 80, "spars": 80, "sum_laplacian": 80, "simpl": 80, "arithmetic_mean_laplacian": 80, "arithmet": [80, 120], "mean": [80, 86, 93, 120], "combine_laplacian": 80, "combin": [80, 120], "li": 80, "spec_embed_on_laplacian": 80, "seed": 80, "420": 80, "spectral": 80, "compon": [80, 86, 87], "optim": [80, 85], "combine_and_embed_laplacian": 80, "main_graph": 80, "n_dim": 80, "1000": 80, "combination_method": 80, "armean": 80, "dimens": 80, "perform_pca": 80, "n_compon": 80, "random_st": 80, "center_and_scal": 80, "pca": 80, "state": [80, 99], "dimension": 80, "reduct": 80, "precompute_clustering_metr": 80, "affin": [80, 120], "normalize_vector": 80, "perform_constrained_agglom": 80, "cosin": [80, 120], "linkag": 80, "full_comput": 80, "agglom": 80, "must": 80, "link": 80, "cannot": 80, "constraint": 80, "ndarrai": [80, 81], "ml": 80, "cl": 80, "return_model": 80, "well": [80, 105], "label": 80, "distanc": [80, 108, 120], "variance_ratio_ev": 80, "varianc": 80, "also": [80, 105], "known": 80, "calinski": 80, "harabasz": 80, "davies_bouldin_ev": 80, "davi": 80, "bouldin": 80, "cluster_using_embed": 80, "low": [80, 120], "space": [80, 85, 91, 102], "etc": [80, 86, 91], "group_clust": 80, "rows_and_col": 80, "precomputed_map": 80, "group": 80, "togeth": [80, 81], "becom": 80, "singl": [80, 108], "median": 80, "reassign_outli": 80, "reassign": 80, "outlier": 80, "non": 80, "cluster_and_reassign_outli": 80, "assign_to_categories_using_exist": 80, "category_concept": 80, "category_id_to_index": 80, "convert_cluster_labels_to_dict": 80, "cluster_label": 80, "concept_index_to_id": 80, "concept_index_to_nam": 80, "db_results_to_pandas_df": 81, "get_id_dict": 81, "make_adj_undirect": 81, "graph_adj": 81, "undirect": 81, "symmetr": 81, "derive_col_to_col_graph": 81, "orig_adj": 81, "get_col_to_col_dict": 81, "df": [81, 114, 121], "source_col": 81, "target_col": 81, "element": [81, 85], "return_chosen_indic": 81, "base_list": 81, "remove_invalid_pair": 81, "l_main": 81, "l_secondary_1": 81, "l_secondary_2": 81, "ref_dict": 81, "refer": 81, "appear": 81, "In": 81, "word": [81, 91, 108], "elimin": [81, 85], "against": 81, "l_secondari": 81, "secondari": 81, "clean": [81, 100], "order": 81, "thei": [81, 86, 91, 108], "were": 81, "create_graph_from_df": 81, "weight_col": 81, "col_dict": 81, "row_dict": 81, "pool_rows_and_col": 81, "make_symmetr": 81, "edg": [81, 85, 86, 87, 120], "turn": 81, "node": 81, "adj": 81, "pool": 81, "convert_to_csr_matrix": 81, "csr": 81, "to_ndarray_and_flatten": 81, "adjusted_exp": 81, "x": [81, 120], "overlap": 81, "adjusted_exp_slope_1_point": 81, "compute_averag": 81, "ensure_nonzero_denomin": 81, "compute_average_of_df": 81, "average_and_combin": 81, "s1": [81, 85], "s2": [81, 85], "l1": 81, "skip_empti": 81, "embeddings_table_exist": 81, "execute_single_entity_concepts_and_anchors_queri": 81, "concepts_queri": 81, "anchors_queri": 81, "entity_id": 81, "execute_multi_entity_concepts_and_anchors_queri": 81, "combine_concept_and_anchor_scor": 81, "d4_cat_id_to_index": 81, "concept_length": 81, "anchor_length": 81, "get_category_info": 82, "get_cluster_info": 82, "get_concept_info": 82, "compare_str": 85, "string1": 85, "string2": 85, "arrai": 85, "first": [85, 102, 105, 108], "charact": 85, "find_consecutive_run": 85, "min_run": 85, "consecut": [85, 105], "run": [85, 99, 105], "sequenc": [85, 108], "tupl": [85, 86, 91, 93, 120], "k1": [85, 108], "k2": [85, 108], "find_edge_pattern": 85, "content_stack": 85, "flip_str": 85, "repeat": 85, "pattern": 85, "begin": [85, 105], "webpag": 85, "flip": 85, "footer": 85, "string_circular_shift": 85, "shift": 85, "circular": 85, "mani": 85, "find_spac": 85, "everi": [85, 102, 108, 120], "shift_to_max_correl": 85, "correl": 85, "posit": [85, 86, 93], "largest": 85, "intersect": 85, "find_repeated_pattern": 85, "min_length": 85, "1024": 85, "everywher": 85, "within": 85, "substr": 85, "extract_text_from_url": 85, "request_head": 85, "tag_search_sequ": 85, "headless": 85, "browser": 85, "tag": [85, 101], "check_url": 85, "test_url": 85, "access": 85, "fulli": 85, "resolv": 85, "valid": [85, 112], "messag": [85, 105], "code": [85, 102, 110], "create_base_url_token": 85, "standard": 85, "initialize_url": 85, "base_url": 85, "initi": 85, "determin": 85, "protocol": 85, "http": 85, "correct": 85, "generate_sublink_token": 85, "base_token": 85, "validated_url": 85, "sublink": 85, "reconstruct_data_dict": 85, "page_typ": 85, "reconstruct": 85, "precalcul": 85, "initialize_data_dict": 85, "fill": 85, "pagetyp": 85, "vacant": 85, "get_sublink": 85, "later": 85, "parse_page_typ": 85, "pars": [85, 101, 108], "predefin": 85, "process_all_sublink": 85, "modifi": 85, "remove_head": 85, "remove_long_pattern": 85, "long": [85, 95], "cache_lookup_get_sublink": 85, "initialize_url_and_get_sublink": 85, "scraping_sublinks_callback": 85, "cache_lookup_process_all_sublink": 85, "process_all_scraping_sublinks_parallel": 85, "sublink_parallel_processing_merge_callback": 85, "remove_junk_scraping_parallel": 85, "extract_scraping_content_callback": 85, "conceptsgraph": [86, 87, 90, 92], "load_from_db": [86, 90], "get_ontology_concept": [86, 90], "add_graph_scor": [86, 90], "smooth": [86, 90, 92], "pd": [86, 87, 90, 92, 93, 120], "panda": [86, 87, 90, 92, 93, 104], "includ": [86, 90, 92, 105], "bump": [86, 90], "avoid": [86, 90, 102], "neg": [86, 90], "exponenti": [86, 90], "shape": [86, 90, 120], "add_ontology_scor": [86, 90], "push": [86, 90], "awai": [86, 90], "extract_keyword": [86, 91], "solv": [86, 91, 101], "problem": [86, 91, 101], "strip": [86, 91], "html": [86, 91, 101], "lowercas": [86, 91, 101], "nltk": [86, 91], "rake": [86, 91], "python": [86, 91], "join": [86, 91], "p": [86, 91], "Then": [86, 91], "crowd": [86, 91], "young": [86, 91], "boi": [86, 91], "re": [86, 91], "foolin": [86, 91], "around": [86, 91], "corner": [86, 91], "drunk": [86, 91], "dress": [86, 91], "best": [86, 91], "brown": [86, 91], "baggi": [86, 91], "platform": [86, 91], "sole": [86, 91], "don": [86, 91, 108], "give": [86, 91], "damn": [86, 91], "trumpet": [86, 91], "playin": [86, 91], "band": [86, 91], "ain": [86, 91], "rock": [86, 91], "roll": [86, 91], "keywords_list": [86, 93], "fraction": [86, 93], "interfac": [86, 93], "portion": [86, 93], "middl": [86, 93], "third": [86, 93], "searchrank": [86, 92, 93], "uniqu": [86, 92, 93, 120], "fallback": [86, 93], "compute_scor": [86, 92], "gather": [86, 92], "final": [86, 92, 105, 120], "x_score": [86, 92], "draw_ontologi": [86, 87], "neighbourhood": [86, 87], "tmp": [86, 87], "keywords_scor": [86, 87], "visualis": [86, 87, 112], "draw_graph": [86, 87], "below": [86, 87, 91, 104, 108], "out": [86, 87, 91], "conceptembed": 88, "hold": 88, "compute_embedding_scor": 88, "word_token": 91, "you": 91, "rake_extract": 91, "split_word": 91, "return_scor": 91, "auto": 91, "filter_past_tenses_and_adverb": 91, "unconstrain": 91, "split": 91, "retur": 91, "minim": 91, "ignor": 91, "past": 91, "tens": 91, "participl": 91, "adverb": 91, "compute_levenshtein_scor": 92, "compute_keywords_scor": 92, "compute_mixed_scor": 92, "aggregate_result": 92, "coef": 92, "filter_result": 92, "epsilon": [92, 114], "depend": 92, "criteria": 92, "specifi": [92, 120], "subset": 92, "search_wikipedia_api": 93, "limit": 93, "queri": 93, "search_elasticsearch": 93, "elasticserch": 93, "text_util": 94, "generate_src_tgt_dict": 95, "generate_translation_text_token": 95, "compute_slide_tfidf_scor": 95, "list_of_set": 95, "min_freq": 95, "find_set_cov": 95, "coverag": 95, "find_best_slide_subset": 95, "slides_and_concept": 95, "prioriti": 95, "translationmodel": 95, "huggingfac": 95, "pysbd": 95, "en": [95, 108, 110], "fr": 95, "skip": [95, 102], "unpunctu": 95, "too": [95, 105], "flag": 95, "translate_text": 96, "translation_obj": 96, "translate_text_callback": 96, "compute_translation_text_fingerprint_callback": 96, "cache_lookup_translation_text_using_fingerprint": 96, "cache_lookup_translate_text": 96, "detect_language_transl": 96, "breadcrumb": 97, "progress_bar": 97, "debug": [98, 102], "color": [98, 102], "time_color": 98, "grai": 98, "report": [98, 105], "outdent": 98, "progressbar": 99, "n_iter": 99, "bar_length": 99, "50": 99, "progress": 99, "track": [99, 105, 108], "execut": [99, 105], "usag": [99, 105], "letter": 99, "b": 99, "c": [99, 120], "pb": 99, "len": 99, "consum": [99, 105], "updat": 99, "25": 99, "00": 99, "75": 99, "100": 99, "print": [99, 102, 104, 105], "iter": 99, "percentag": 99, "complet": [99, 105, 125], "overwrit": 99, "ban": 99, "reset": [99, 102, 105], "increment": 99, "counter": 99, "reus": [99, 105], "io": 100, "htmlcleaner": 101, "htmlparser": 101, "handle_starttag": 101, "attr": 101, "handle_endtag": 101, "handle_data": 101, "get_data": 101, "evalu": 102, "pref": 102, "x1b": 102, "0m": 102, "black": 102, "30m": 102, "blue": 102, "34m": 102, "cyan": 102, "36m": 102, "green": 102, "32m": 102, "magenta": 102, "35m": 102, "red": 102, "31m": 102, "white": 102, "37m": 102, "yellow": 102, "33m": 102, "cprint": 102, "is_bold": 102, "bold": 102, "pprint": 102, "inlin": 102, "only_first": 102, "pretti": 102, "preced": 102, "ellipsi": 102, "big": 102, "read_json": 102, "save_json": 102, "save": 102, "mkdir": 102, "dirnam": 102, "directori": 102, "date": 103, "stopwatch": 103, "now": 104, "timestamp": [104, 110], "2022": 104, "06": 104, "28": 104, "09": 104, "46": 104, "21": 104, "677968": 104, "rescal": 104, "min_dat": 104, "max_dat": 104, "seri": 104, "rang": [104, 120], "assum": [104, 120], "yyyi": 104, "mm": 104, "dd": 104, "add_year": 104, "n_year": 104, "sw": 105, "delta": 105, "284306764602661": 105, "variabl": 105, "t1": 105, "t2": 105, "yet": 105, "t3": 105, "609307289123535": 105, "849977970123291": 105, "660188913345337": 105, "preprocess": 105, "pre_tim": 105, "task_tim": 105, "postprocess": 105, "post_tim": 105, "total_tim": 105, "proport": 105, "5176954220125477": 105, "tick": 105, "partial": 105, "furthermor": 105, "19": 105, "86": 105, "lap": 105, "74": 105, "11": 105, "66": 105, "45": 105, "checkpoint": 105, "finish": 105, "summari": 105, "boolean": 105, "befor": [105, 120], "video_util": 106, "retrieve_file_from_url": 107, "is_kaltura": [107, 108], "retrieve_file_from_url_callback": 107, "compute_video_fingerprint": 107, "compute_video_fingerprint_callback": 107, "video_id_and_duration_fp_lookup": 107, "cache_lookup_retrieve_file_from_url": 107, "cache_lookup_extract_audio": 107, "extract_audio": 107, "extract_audio_callback": 107, "reextract_cached_audio": 107, "compute_audio_fingerprint": 107, "compute_audio_fingerprint_callback": 107, "cache_lookup_detect_slid": 107, "extract_and_sample_fram": 107, "compute_noise_level_parallel": 107, "nlp_model": [107, 108], "compute_noise_threshold_callback": 107, "hash_thresh": 107, "compute_slide_transitions_parallel": 107, "compute_slide_transitions_callback": 107, "detect_slides_callback": 107, "attempt": 107, "reextract_cached_slid": 107, "compute_single_image_fingerprint": 107, "compute_slide_set_fingerprint": 107, "compute_slide_fingerprint_callback": 107, "retrieve_slide_fingerprint_callback": 107, "ignore_slide_fingerprint_results_callback": 107, "ignore_audio_fingerprint_results_callback": 107, "retrieve_audio_fingerprint_callback": 107, "retrieve_video_fingerprint_callback": 107, "ignore_video_fingerprint_results_callback": 107, "ignore_single_image_fingerprint_results_callback": 107, "retrieve_video_file_from_generic_url": 108, "retrieve_file_from_kaltura": 108, "m3u8": 108, "kaltura": 108, "playlist": 108, "retrieve_file_from_youtub": 108, "youtub": 108, "retrieve_file_from_any_sourc": 108, "create_video_filename_using_url_format": 108, "perform_slow_audio_prob": 108, "slower": 108, "ffmpeg": 108, "generate_symbolic_token": 108, "symbol": 108, "itself": 108, "detect_audio_dur": 108, "durat": 108, "ogg": 108, "input_token": 108, "generate_audio_token": 108, "extract_audio_from_video": 108, "extract_fram": 108, "output_folder_with_path": 108, "output_fold": 108, "frame": 108, "generate_frame_sample_indic": 108, "input_folder_with_path": 108, "12": 108, "we": 108, "our": 108, "read_txt_gz_fil": 108, "txt": 108, "gz": 108, "write_txt_gz_fil": 108, "read_json_gz_fil": 108, "tesseract_ocr_or_get_cach": 108, "ocr_path": 108, "langaug": 108, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 108, "nlpmodel": 108, "load_nlp_model": 108, "lazi": [108, 110], "nlp": 108, "get_word": 108, "valid_onli": 108, "get_text_word_vector": 108, "get_text_word_vector_using_word": 108, "get_cosine_sim": 108, "frame_ocr_dist": 108, "frame_hash_similar": 108, "compute_ocr_noise_level": 108, "frame_sample_indic": 108, "nois": 108, "sampl": [108, 110], "identifi": 108, "compute_ocr_threshold": 108, "distance_list": 108, "default_threshold": 108, "05": [108, 120], "subsequ": 108, "empti": 108, "check_ocr_and_hash_threshold": 108, "k_l": 108, "k_r": 108, "ocr_dist_threshold": 108, "hash_similarity_threshold": 108, "frame_ocr_transit": 108, "transit": 108, "binari": 108, "frame_format": 108, "leftmost": 108, "rightmost": 108, "distinct": 108, "compute_video_ocr_transit": 108, "hash_dist_threshold": 108, "keep_first": 108, "transitori": 108, "transcrib": 109, "whispertranscriptionmodel": 110, "load_model_whisp": 110, "whisper": 110, "memori": 110, "43200": 110, "get_silence_threshold": 110, "detect_audio_segment_lang_whisp": 110, "transcribe_audio_whisp": 110, "force_lang": 110, "verbos": 110, "explicitli": 110, "feed": 110, "transcript": 110, "silenc": 110, "strict": 110, "lenient": 110, "affect": 110, "logprob": 110, "speech": 110, "like": 110, "subtitl": 110, "extract_media_seg": 110, "detect_language_retrieve_from_db_and_split": 110, "segment_length": 110, "detect_language_parallel": 110, "tokens_dict": 110, "detect_language_callback": 110, "transcribe_audio_to_text": 110, "transcribe_callback": 110, "cache_lookup_audio_transcript": 110, "cache_lookup_audio_fingerprint": 110, "cache_lookup_audio_languag": 110, "invest": 112, "aggregate_recent_past": 113, "check_unit": 113, "compute_fundraisers_unit": 113, "compute_investors_unit": 113, "compute_investors_units_2": 113, "compute_jaccard_index": 113, "concept_configur": 113, "create_investments_graph": 113, "detect_fundraisers_concept": 113, "toy_exampl": 113, "compute_year_coeffici": 114, "recent_past": 114, "rescale_scor": 114, "year": 114, "aggregate_year": 114, "groupby_column": [114, 121], "normalize_scor": 114, "score_column": 114, "01": 114, "show_trend": 115, "unit_id": 115, "unit_concept": 115, "show_matchmaking_list_view": 115, "investors_concepts_jaccard": 115, "investors_concept": 115, "unit_concept_id": 115, "show_matchmaking_chart_view": 115, "unit_investor": 115, "time_window": 115, "pageid": 120, "investorid": 120, "sqrt": 120, "sum_": 120, "o": 120, "divid": 120, "henc": 120, "min_ratio": 120, "sourcepageid": 120, "targetpageid": 120, "kept": 120, "product": 120, "ball": 120, "loop": 120, "normalise_graph": 120, "add": 120, "revers": 120, "vertex": 120, "associ": 120, "key_x": 120, "key_i": 120, "geometr": 120, "compute_affin": 120, "mix_x": 120, "mix_i": 120, "normalise_befor": 120, "recommend": 120, "euclidean": 120, "notic": 120, "faster": 120, "inf": 120, "typic": 120, "higher": 120, "unus": 120, "u": 120, "equival": 120, "scalar": 120, "tanh": 120, "denot": 120, "get_fr": 121, "db": 121, "get_investors_fr": 121, "fr_id": 121, "get_frs_fundrais": 121, "get_fundraisers_concept": 121, "fundraiser_id": 121, "derive_yearly_data": 121, "date_column": 121, "amount_column": 121, "creation": 124, "build_prefix": 124, "1_old": 126, "2_new": 126, "3_slide": 126, "startup": 130}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [35, 0, 0, "-", "celery"], [66, 0, 0, "-", "core"], [111, 0, 0, "-", "definitions"], [112, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "auth"], [6, 0, 0, "-", "common"], [9, 0, 0, "-", "embedding"], [12, 0, 0, "-", "image"], [15, 0, 0, "-", "main"], [17, 0, 0, "-", "ontology"], [20, 0, 0, "-", "scraping"], [23, 0, 0, "-", "text"], [26, 0, 0, "-", "translation"], [29, 0, 0, "-", "video"], [32, 0, 0, "-", "voice"]], "graphai.api.auth": [[3, 0, 0, "-", "auth_utils"], [4, 0, 0, "-", "log"], [5, 0, 0, "-", "router"]], "graphai.api.auth.auth_utils": [[3, 1, 1, "", "Token"], [3, 1, 1, "", "TokenData"], [3, 1, 1, "", "User"], [3, 1, 1, "", "UserInDB"], [3, 3, 1, "", "authenticate_user"], [3, 3, 1, "", "extract_username_and_scopes"], [3, 3, 1, "", "extract_username_sync"], [3, 3, 1, "", "generate_random_password_string"], [3, 3, 1, "", "get_password_hash"], [3, 3, 1, "", "get_ratelimit_values"], [3, 3, 1, "", "get_user"], [3, 3, 1, "", "get_user_ratelimit_overrides"], [3, 3, 1, "", "verify_password"]], "graphai.api.auth.auth_utils.Token": [[3, 2, 1, "", "access_token"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "token_type"]], "graphai.api.auth.auth_utils.TokenData": [[3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.User": [[3, 2, 1, "", "disabled"], [3, 2, 1, "", "email"], [3, 2, 1, "", "full_name"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.UserInDB": [[3, 2, 1, "", "hashed_password"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"]], "graphai.api.auth.log": [[4, 1, 1, "", "LoggerMiddleware"], [4, 3, 1, "", "get_user_agent"], [4, 3, 1, "", "log_request"]], "graphai.api.auth.log.LoggerMiddleware": [[4, 4, 1, "", "dispatch"]], "graphai.api.auth.router": [[5, 3, 1, "", "create_access_token"], [5, 3, 1, "", "get_active_user_dummy"], [5, 3, 1, "", "get_current_active_user"], [5, 3, 1, "", "get_current_user"], [5, 3, 1, "", "get_user_for_rate_limiter"], [5, 3, 1, "", "login_for_access_token"], [5, 3, 1, "", "read_users_me"]], "graphai.api.common": [[7, 0, 0, "-", "schemas"], [8, 0, 0, "-", "utils"]], "graphai.api.common.schemas": [[7, 1, 1, "", "FileRequest"], [7, 1, 1, "", "TaskIDResponse"], [7, 1, 1, "", "TaskStatusResponse"], [7, 1, 1, "", "TokenStatus"]], "graphai.api.common.schemas.FileRequest": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "token"]], "graphai.api.common.schemas.TaskIDResponse": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "task_id"]], "graphai.api.common.schemas.TaskStatusResponse": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "task_id"], [7, 2, 1, "", "task_name"], [7, 2, 1, "", "task_result"], [7, 2, 1, "", "task_status"]], "graphai.api.common.schemas.TokenStatus": [[7, 2, 1, "", "active"], [7, 2, 1, "", "fingerprinted"], [7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"]], "graphai.api.common.utils": [[8, 3, 1, "", "format_api_results"]], "graphai.api.text": [[24, 0, 0, "-", "router"], [25, 0, 0, "-", "schemas"]], "graphai.api.text.router": [[24, 3, 1, "", "generate_exercise"], [24, 3, 1, "", "keywords"], [24, 3, 1, "", "wikify"], [24, 3, 1, "", "wikify_graph_svg"], [24, 3, 1, "", "wikify_ontology_svg"]], "graphai.api.text.schemas": [[25, 1, 1, "", "GenerateLectureExerciseRequest"], [25, 1, 1, "", "GenerateTextExerciseRequest"], [25, 1, 1, "", "KeywordsRequest"], [25, 1, 1, "", "WikifyFromKeywordsRequest"], [25, 1, 1, "", "WikifyFromRawTextRequest"], [25, 1, 1, "", "WikifyResponseElem"]], "graphai.api.text.schemas.GenerateLectureExerciseRequest": [[25, 2, 1, "", "bloom_level"], [25, 2, 1, "", "description"], [25, 2, 1, "", "include_solution"], [25, 2, 1, "", "lecture_id"], [25, 2, 1, "", "llm_model"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "openai_api_key"], [25, 2, 1, "", "output_format"]], "graphai.api.text.schemas.GenerateTextExerciseRequest": [[25, 2, 1, "", "bloom_level"], [25, 2, 1, "", "description"], [25, 2, 1, "", "include_solution"], [25, 2, 1, "", "llm_model"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "openai_api_key"], [25, 2, 1, "", "output_format"], [25, 2, 1, "", "text"]], "graphai.api.text.schemas.KeywordsRequest": [[25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyFromKeywordsRequest": [[25, 2, 1, "", "keywords"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"]], "graphai.api.text.schemas.WikifyFromRawTextRequest": [[25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyResponseElem": [[25, 2, 1, "", "concept_id"], [25, 2, 1, "", "concept_name"], [25, 2, 1, "", "embedding_global_score"], [25, 2, 1, "", "embedding_keywords_score"], [25, 2, 1, "", "embedding_local_score"], [25, 2, 1, "", "graph_keywords_score"], [25, 2, 1, "", "graph_score"], [25, 2, 1, "", "levenshtein_score"], [25, 2, 1, "", "mixed_score"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "ontology_global_score"], [25, 2, 1, "", "ontology_keywords_score"], [25, 2, 1, "", "ontology_local_score"], [25, 2, 1, "", "search_score"]], "graphai.celery": [[36, 0, 0, "-", "common"], [42, 0, 0, "-", "embedding"], [45, 0, 0, "-", "image"], [48, 0, 0, "-", "ontology"], [51, 0, 0, "-", "scraping"], [54, 0, 0, "-", "text"], [57, 0, 0, "-", "translation"], [60, 0, 0, "-", "video"], [63, 0, 0, "-", "voice"]], "graphai.celery.common": [[37, 0, 0, "-", "celery_config"], [38, 0, 0, "-", "celery_tools"], [39, 0, 0, "-", "jobs"], [40, 0, 0, "-", "log"], [41, 0, 0, "-", "tasks"]], "graphai.celery.common.celery_config": [[37, 1, 1, "", "BaseConfig"], [37, 1, 1, "", "DevelopmentConfig"], [37, 3, 1, "", "create_celery"], [37, 3, 1, "", "get_celery_task"], [37, 3, 1, "", "get_settings"], [37, 3, 1, "", "get_task_info"], [37, 3, 1, "", "route_task"]], "graphai.celery.common.celery_tools": [[38, 3, 1, "", "get_n_celery_workers"]], "graphai.celery.common.jobs": [[39, 3, 1, "", "direct_lookup_generic_job"]], "graphai.celery.common.log": [[40, 3, 1, "", "log"]], "graphai.celery.embedding": [[43, 0, 0, "-", "jobs"], [44, 0, 0, "-", "tasks"]], "graphai.celery.embedding.jobs": [[43, 3, 1, "", "embedding_job"], [43, 3, 1, "", "fingerprint_compute_job"], [43, 3, 1, "", "fingerprint_job"], [43, 3, 1, "", "fingerprint_lookup_job"], [43, 3, 1, "", "get_embedding_text_fingerprint_chain_list"]], "graphai.celery.image": [[46, 0, 0, "-", "jobs"], [47, 0, 0, "-", "tasks"]], "graphai.celery.image.jobs": [[46, 3, 1, "", "fingerprint_job"], [46, 3, 1, "", "fingerprint_lookup_job"], [46, 3, 1, "", "ocr_job"], [46, 3, 1, "", "retrieve_image_from_url_job"]], "graphai.celery.ontology": [[49, 0, 0, "-", "jobs"], [50, 0, 0, "-", "tasks"]], "graphai.celery.ontology.jobs": [[49, 3, 1, "", "breakup_cluster_job"], [49, 3, 1, "", "category_info_job"], [49, 3, 1, "", "cluster_info_job"], [49, 3, 1, "", "cluster_nearest_category_job"], [49, 3, 1, "", "concept_info_job"], [49, 3, 1, "", "concept_nearest_category_job"], [49, 3, 1, "", "concept_nearest_concept_job"], [49, 3, 1, "", "graph_distance_job"], [49, 3, 1, "", "openalex_category_nearest_topics_job"], [49, 3, 1, "", "openalex_topic_nearest_categories_job"], [49, 3, 1, "", "recompute_clusters_job"], [49, 3, 1, "", "tree_job"]], "graphai.celery.scraping": [[52, 0, 0, "-", "jobs"], [53, 0, 0, "-", "tasks"]], "graphai.celery.scraping.jobs": [[52, 3, 1, "", "extract_content_job"], [52, 3, 1, "", "extract_sublinks_job"], [52, 3, 1, "", "sublink_lookup_job"]], "graphai.celery.text": [[55, 0, 0, "-", "jobs"], [56, 0, 0, "-", "tasks"]], "graphai.celery.text.jobs": [[55, 3, 1, "", "generate_exercise"], [55, 3, 1, "", "keywords"], [55, 3, 1, "", "wikify_graph_svg"], [55, 3, 1, "", "wikify_keywords"], [55, 3, 1, "", "wikify_ontology_svg"], [55, 3, 1, "", "wikify_text"]], "graphai.celery.translation": [[58, 0, 0, "-", "jobs"], [59, 0, 0, "-", "tasks"]], "graphai.celery.translation.jobs": [[58, 3, 1, "", "detect_text_language_job"], [58, 3, 1, "", "fingerprint_compute_job"], [58, 3, 1, "", "fingerprint_job"], [58, 3, 1, "", "fingerprint_lookup_job"], [58, 3, 1, "", "get_translation_text_fingerprint_chain_list"], [58, 3, 1, "", "translation_job"]], "graphai.celery.video": [[61, 0, 0, "-", "jobs"], [62, 0, 0, "-", "tasks"]], "graphai.celery.video.jobs": [[61, 3, 1, "", "detect_slides_job"], [61, 3, 1, "", "extract_audio_job"], [61, 3, 1, "", "fingerprint_job"], [61, 3, 1, "", "fingerprint_lookup_job"], [61, 3, 1, "", "get_audio_fingerprint_chain_list"], [61, 3, 1, "", "get_file_job"], [61, 3, 1, "", "get_slide_fingerprint_chain_list"], [61, 3, 1, "", "get_video_fingerprint_chain_list"], [61, 3, 1, "", "retrieve_url_job"]], "graphai.celery.voice": [[64, 0, 0, "-", "jobs"], [65, 0, 0, "-", "tasks"]], "graphai.celery.voice.jobs": [[64, 3, 1, "", "detect_language_job"], [64, 3, 1, "", "fingerprint_job"], [64, 3, 1, "", "fingerprint_lookup_job"], [64, 3, 1, "", "get_audio_language_detection_task_chain"], [64, 3, 1, "", "language_lookup_job"], [64, 3, 1, "", "transcribe_job"]], "graphai.core": [[67, 0, 0, "-", "common"], [74, 0, 0, "-", "embedding"], [76, 0, 0, "-", "image"], [79, 0, 0, "-", "ontology"], [84, 0, 0, "-", "scraping"], [86, 0, 0, "-", "text"], [94, 0, 0, "-", "translation"], [97, 0, 0, "-", "utils"], [106, 0, 0, "-", "video"], [109, 0, 0, "-", "voice"]], "graphai.core.common": [[68, 0, 0, "-", "caching"], [69, 0, 0, "-", "common_utils"], [70, 0, 0, "-", "config"], [71, 0, 0, "-", "fingerprinting"], [72, 0, 0, "-", "lookup"], [73, 0, 0, "-", "multimedia_utils"]], "graphai.core.common.caching": [[68, 1, 1, "", "AudioDBCachingManager"], [68, 1, 1, "", "EmbeddingDBCachingManager"], [68, 1, 1, "", "FingerprintParameters"], [68, 1, 1, "", "ScrapingDBCachingManager"], [68, 1, 1, "", "SlideDBCachingManager"], [68, 1, 1, "", "TextDBCachingManager"], [68, 1, 1, "", "VideoConfig"], [68, 1, 1, "", "VideoDBCachingManager"], [68, 3, 1, "", "create_symlink_between_paths"], [68, 3, 1, "", "delete_file"], [68, 3, 1, "", "get_token_file_status"]], "graphai.core.common.caching.AudioDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.EmbeddingDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[68, 4, 1, "", "get_min_sim_audio"], [68, 4, 1, "", "get_min_sim_image"], [68, 4, 1, "", "get_min_sim_video"], [68, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[68, 4, 1, "", "get_details_using_origin"], [68, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[68, 4, 1, "", "concat_file_path"], [68, 4, 1, "", "create_symlink"], [68, 4, 1, "", "generate_filepath"], [68, 4, 1, "", "get_audio_dir"], [68, 4, 1, "", "get_image_dir"], [68, 4, 1, "", "get_root_dir"], [68, 4, 1, "", "get_transcript_dir"], [68, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[69, 3, 1, "", "convert_list_to_text"], [69, 3, 1, "", "convert_text_back_to_list"], [69, 3, 1, "", "copy_file_within_folder"], [69, 3, 1, "", "file_exists"], [69, 3, 1, "", "format_datetime_for_mysql"], [69, 3, 1, "", "generate_random_token"], [69, 3, 1, "", "get_current_datetime"], [69, 3, 1, "", "get_file_size"], [69, 3, 1, "", "invert_dict"], [69, 3, 1, "", "is_pdf"], [69, 3, 1, "", "is_token"], [69, 3, 1, "", "is_url"], [69, 3, 1, "", "make_sure_path_exists"], [69, 3, 1, "", "parse_mysql_datetime"], [69, 3, 1, "", "read_json_file"], [69, 3, 1, "", "read_text_file"], [69, 3, 1, "", "retrieve_generic_file_from_generic_url"], [69, 3, 1, "", "strtobool"], [69, 3, 1, "", "write_json_file"], [69, 3, 1, "", "write_text_file"]], "graphai.core.common.fingerprinting": [[71, 3, 1, "", "compare_decoded_fingerprints"], [71, 3, 1, "", "compare_encoded_fingerprints"], [71, 3, 1, "", "compute_text_fingerprint"], [71, 3, 1, "", "find_closest_audio_fingerprint_from_list"], [71, 3, 1, "", "find_closest_fingerprint_for_list_from_list"], [71, 3, 1, "", "find_closest_fingerprint_from_list"], [71, 3, 1, "", "find_closest_image_fingerprint_from_list"], [71, 3, 1, "", "find_closest_text_fingerprint_from_list"], [71, 3, 1, "", "md5_text"], [71, 3, 1, "", "md5_video_or_audio"], [71, 3, 1, "", "perceptual_hash_audio"], [71, 3, 1, "", "perceptual_hash_image"], [71, 3, 1, "", "perceptual_hash_pdf"], [71, 3, 1, "", "perceptual_hash_text"]], "graphai.core.common.lookup": [[72, 3, 1, "", "cache_lookup_generic"], [72, 3, 1, "", "database_callback_generic"], [72, 3, 1, "", "fingerprint_based_text_lookup"], [72, 3, 1, "", "fingerprint_cache_lookup"], [72, 3, 1, "", "fingerprint_cache_lookup_with_most_similar"], [72, 3, 1, "", "fingerprint_lookup_callback"], [72, 3, 1, "", "fingerprint_lookup_direct"], [72, 3, 1, "", "fingerprint_lookup_parallel"], [72, 3, 1, "", "fingerprint_lookup_retrieve_from_db"], [72, 3, 1, "", "ignore_fingerprint_results_callback"], [72, 3, 1, "", "is_fingerprinted"], [72, 3, 1, "", "lookup_latest_allowed_date"], [72, 3, 1, "", "retrieve_fingerprint_callback"], [72, 3, 1, "", "token_based_text_lookup"]], "graphai.core.common.multimedia_utils": [[73, 3, 1, "", "detect_text_language"], [73, 3, 1, "", "get_audio_token_status"], [73, 3, 1, "", "get_available_streams"], [73, 3, 1, "", "get_image_token_status"], [73, 3, 1, "", "get_video_token_status"], [73, 3, 1, "", "perform_probe"], [73, 3, 1, "", "perform_tesseract_ocr"]], "graphai.core.embedding": [[75, 0, 0, "-", "embedding"]], "graphai.core.embedding.embedding": [[75, 1, 1, "", "EmbeddingModels"], [75, 3, 1, "", "compute_embedding_text_fingerprint_callback"], [75, 3, 1, "", "copy_embedding_object"], [75, 3, 1, "", "embed_text"], [75, 3, 1, "", "embedding_from_json"], [75, 3, 1, "", "embedding_text_list_embed_callback"], [75, 3, 1, "", "embedding_text_list_embed_parallel"], [75, 3, 1, "", "embedding_text_list_fingerprint_callback"], [75, 3, 1, "", "embedding_text_list_fingerprint_parallel"], [75, 3, 1, "", "embedding_to_json"], [75, 3, 1, "", "fingerprint_based_embedding_lookup"], [75, 3, 1, "", "generate_embedding_text_token"], [75, 3, 1, "", "get_text_token_count_using_model"], [75, 3, 1, "", "insert_embedding_into_db"], [75, 3, 1, "", "token_based_embedding_lookup"]], "graphai.core.embedding.embedding.EmbeddingModels": [[75, 4, 1, "", "embed"], [75, 4, 1, "", "get_device"], [75, 4, 1, "", "get_last_usage"], [75, 4, 1, "", "get_max_tokens"], [75, 4, 1, "", "get_token_count"], [75, 4, 1, "", "get_tokenizer"], [75, 4, 1, "", "load_model"], [75, 4, 1, "", "load_models"], [75, 4, 1, "", "model_loaded"], [75, 4, 1, "", "set_tokenizer"], [75, 4, 1, "", "unload_model"]], "graphai.core.image": [[77, 0, 0, "-", "image"], [78, 0, 0, "-", "ocr"]], "graphai.core.image.image": [[77, 3, 1, "", "cache_lookup_extract_slide_text"], [77, 3, 1, "", "cache_lookup_retrieve_image_from_url"], [77, 3, 1, "", "create_image_filename_using_url_format"], [77, 3, 1, "", "extract_slide_text"], [77, 3, 1, "", "extract_slide_text_callback"], [77, 3, 1, "", "retrieve_image_file_from_url"], [77, 3, 1, "", "retrieve_image_file_from_url_callback"]], "graphai.core.image.ocr": [[78, 1, 1, "", "AbstractOCRModel"], [78, 1, 1, "", "GoogleOCRModel"], [78, 1, 1, "", "ImgToBase64Converter"], [78, 1, 1, "", "OpenAIOCRModel"], [78, 3, 1, "", "get_ocr_colnames"], [78, 3, 1, "", "perform_tesseract_ocr_on_pdf"]], "graphai.core.image.ocr.AbstractOCRModel": [[78, 4, 1, "", "establish_connection"], [78, 4, 1, "", "perform_ocr"]], "graphai.core.image.ocr.GoogleOCRModel": [[78, 4, 1, "", "perform_ocr"], [78, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.image.ocr.ImgToBase64Converter": [[78, 4, 1, "", "get_base64"]], "graphai.core.image.ocr.OpenAIOCRModel": [[78, 4, 1, "", "perform_ocr"]], "graphai.core.ontology": [[79, 1, 1, "", "OntologyData"], [79, 3, 1, "", "break_up_cluster"], [80, 0, 0, "-", "clustering"], [81, 0, 0, "-", "data"], [79, 3, 1, "", "get_cluster_category_closest"], [79, 3, 1, "", "get_concept_category_closest"], [79, 3, 1, "", "get_concept_concept_closest"], [79, 3, 1, "", "get_openalex_nearest"], [82, 0, 0, "-", "ontology"], [83, 0, 0, "-", "openalex"], [79, 3, 1, "", "recompute_clusters"]], "graphai.core.ontology.OntologyData": [[79, 4, 1, "", "compute_category_anchors_using_references"], [79, 4, 1, "", "compute_precalculated_similarity_matrices"], [79, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [79, 4, 1, "", "generate_category_concept_dict"], [79, 4, 1, "", "generate_tree_structure"], [79, 4, 1, "", "get_category_anchor_pages"], [79, 4, 1, "", "get_category_branch"], [79, 4, 1, "", "get_category_category_similarity"], [79, 4, 1, "", "get_category_children"], [79, 4, 1, "", "get_category_closest_category"], [79, 4, 1, "", "get_category_cluster_list"], [79, 4, 1, "", "get_category_cluster_table"], [79, 4, 1, "", "get_category_concept_list"], [79, 4, 1, "", "get_category_concept_table"], [79, 4, 1, "", "get_category_parent"], [79, 4, 1, "", "get_category_to_category"], [79, 4, 1, "", "get_cluster_category_similarity"], [79, 4, 1, "", "get_cluster_children"], [79, 4, 1, "", "get_cluster_closest_category"], [79, 4, 1, "", "get_cluster_closest_category_embedding"], [79, 4, 1, "", "get_cluster_cluster_similarity"], [79, 4, 1, "", "get_cluster_concept_list"], [79, 4, 1, "", "get_cluster_concepts"], [79, 4, 1, "", "get_cluster_parent"], [79, 4, 1, "", "get_concept_category_closest_embedding"], [79, 4, 1, "", "get_concept_category_similarity"], [79, 4, 1, "", "get_concept_closest_category"], [79, 4, 1, "", "get_concept_closest_concept"], [79, 4, 1, "", "get_concept_closest_concept_embedding"], [79, 4, 1, "", "get_concept_cluster_similarity"], [79, 4, 1, "", "get_concept_concept_graphscore_table"], [79, 4, 1, "", "get_concept_concept_similarity"], [79, 4, 1, "", "get_concept_name"], [79, 4, 1, "", "get_concept_names_list"], [79, 4, 1, "", "get_concept_parent_category"], [79, 4, 1, "", "get_concept_parent_cluster"], [79, 4, 1, "", "get_custom_cluster_closest_category"], [79, 4, 1, "", "get_custom_cluster_closest_category_embedding"], [79, 4, 1, "", "get_non_ontology_concept_names"], [79, 4, 1, "", "get_ontology_category_info"], [79, 4, 1, "", "get_ontology_category_names"], [79, 4, 1, "", "get_ontology_concept_names_table"], [79, 4, 1, "", "get_root_category"], [79, 4, 1, "", "get_test_category_concept"], [79, 4, 1, "", "get_test_cluster_concept"], [79, 4, 1, "", "get_test_concept_names"], [79, 4, 1, "", "load_anchor_page_dict"], [79, 4, 1, "", "load_category_category"], [79, 4, 1, "", "load_category_concept"], [79, 4, 1, "", "load_concept_concept_graphscore"], [79, 4, 1, "", "load_data"], [79, 4, 1, "", "load_non_ontology_concept_names"], [79, 4, 1, "", "load_ontology_categories"], [79, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.ontology.clustering": [[80, 3, 1, "", "arithmetic_mean_laplacians"], [80, 3, 1, "", "assign_to_categories_using_existing"], [80, 3, 1, "", "cluster_and_reassign_outliers"], [80, 3, 1, "", "cluster_using_embedding"], [80, 3, 1, "", "combine_and_embed_laplacian"], [80, 3, 1, "", "combine_laplacians"], [80, 3, 1, "", "compute_all_graphs_from_scratch"], [80, 3, 1, "", "convert_cluster_labels_to_dict"], [80, 3, 1, "", "davies_bouldin_eval"], [80, 3, 1, "", "get_laplacian"], [80, 3, 1, "", "group_clustered"], [80, 3, 1, "", "normalize_features"], [80, 3, 1, "", "perform_PCA"], [80, 3, 1, "", "perform_constrained_agglomerative"], [80, 3, 1, "", "precompute_clustering_metric"], [80, 3, 1, "", "reassign_outliers"], [80, 3, 1, "", "spec_embed_on_laplacian"], [80, 3, 1, "", "sum_laplacians"], [80, 3, 1, "", "variance_ratio_eval"]], "graphai.core.ontology.data": [[81, 1, 1, "", "OntologyData"], [81, 3, 1, "", "adjusted_exp"], [81, 3, 1, "", "adjusted_exp_slope_1_point"], [81, 3, 1, "", "average_and_combine"], [81, 3, 1, "", "combine_concept_and_anchor_scores"], [81, 3, 1, "", "compute_average"], [81, 3, 1, "", "compute_average_of_df"], [81, 3, 1, "", "convert_to_csr_matrix"], [81, 3, 1, "", "create_graph_from_df"], [81, 3, 1, "", "db_results_to_pandas_df"], [81, 3, 1, "", "derive_col_to_col_graph"], [81, 3, 1, "", "embeddings_table_exists"], [81, 3, 1, "", "ensure_nonzero_denominator"], [81, 3, 1, "", "execute_multi_entity_concepts_and_anchors_query"], [81, 3, 1, "", "execute_single_entity_concepts_and_anchors_query"], [81, 3, 1, "", "get_col_to_col_dict"], [81, 3, 1, "", "get_id_dict"], [81, 3, 1, "", "make_adj_undirected"], [81, 3, 1, "", "remove_invalid_pairs"], [81, 3, 1, "", "return_chosen_indices"], [81, 3, 1, "", "to_ndarray_and_flatten"]], "graphai.core.ontology.data.OntologyData": [[81, 4, 1, "", "compute_category_anchors_using_references"], [81, 4, 1, "", "compute_precalculated_similarity_matrices"], [81, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [81, 4, 1, "", "generate_category_concept_dict"], [81, 4, 1, "", "generate_tree_structure"], [81, 4, 1, "", "get_category_anchor_pages"], [81, 4, 1, "", "get_category_branch"], [81, 4, 1, "", "get_category_category_similarity"], [81, 4, 1, "", "get_category_children"], [81, 4, 1, "", "get_category_closest_category"], [81, 4, 1, "", "get_category_cluster_list"], [81, 4, 1, "", "get_category_cluster_table"], [81, 4, 1, "", "get_category_concept_list"], [81, 4, 1, "", "get_category_concept_table"], [81, 4, 1, "", "get_category_parent"], [81, 4, 1, "", "get_category_to_category"], [81, 4, 1, "", "get_cluster_category_similarity"], [81, 4, 1, "", "get_cluster_children"], [81, 4, 1, "", "get_cluster_closest_category"], [81, 4, 1, "", "get_cluster_closest_category_embedding"], [81, 4, 1, "", "get_cluster_cluster_similarity"], [81, 4, 1, "", "get_cluster_concept_list"], [81, 4, 1, "", "get_cluster_concepts"], [81, 4, 1, "", "get_cluster_parent"], [81, 4, 1, "", "get_concept_category_closest_embedding"], [81, 4, 1, "", "get_concept_category_similarity"], [81, 4, 1, "", "get_concept_closest_category"], [81, 4, 1, "", "get_concept_closest_concept"], [81, 4, 1, "", "get_concept_closest_concept_embedding"], [81, 4, 1, "", "get_concept_cluster_similarity"], [81, 4, 1, "", "get_concept_concept_graphscore_table"], [81, 4, 1, "", "get_concept_concept_similarity"], [81, 4, 1, "", "get_concept_name"], [81, 4, 1, "", "get_concept_names_list"], [81, 4, 1, "", "get_concept_parent_category"], [81, 4, 1, "", "get_concept_parent_cluster"], [81, 4, 1, "", "get_custom_cluster_closest_category"], [81, 4, 1, "", "get_custom_cluster_closest_category_embedding"], [81, 4, 1, "", "get_non_ontology_concept_names"], [81, 4, 1, "", "get_ontology_category_info"], [81, 4, 1, "", "get_ontology_category_names"], [81, 4, 1, "", "get_ontology_concept_names_table"], [81, 4, 1, "", "get_root_category"], [81, 4, 1, "", "get_test_category_concept"], [81, 4, 1, "", "get_test_cluster_concept"], [81, 4, 1, "", "get_test_concept_names"], [81, 4, 1, "", "load_anchor_page_dict"], [81, 4, 1, "", "load_category_category"], [81, 4, 1, "", "load_category_concept"], [81, 4, 1, "", "load_concept_concept_graphscore"], [81, 4, 1, "", "load_data"], [81, 4, 1, "", "load_non_ontology_concept_names"], [81, 4, 1, "", "load_ontology_categories"], [81, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.ontology.ontology": [[82, 3, 1, "", "break_up_cluster"], [82, 3, 1, "", "get_category_info"], [82, 3, 1, "", "get_cluster_category_closest"], [82, 3, 1, "", "get_cluster_info"], [82, 3, 1, "", "get_concept_category_closest"], [82, 3, 1, "", "get_concept_concept_closest"], [82, 3, 1, "", "get_concept_info"], [82, 3, 1, "", "recompute_clusters"]], "graphai.core.ontology.openalex": [[83, 3, 1, "", "get_openalex_nearest"]], "graphai.core.scraping": [[85, 0, 0, "-", "scraping"]], "graphai.core.scraping.scraping": [[85, 3, 1, "", "cache_lookup_get_sublinks"], [85, 3, 1, "", "cache_lookup_process_all_sublinks"], [85, 3, 1, "", "check_url"], [85, 3, 1, "", "compare_strings"], [85, 3, 1, "", "create_base_url_token"], [85, 3, 1, "", "extract_scraping_content_callback"], [85, 3, 1, "", "extract_text_from_url"], [85, 3, 1, "", "find_consecutive_runs"], [85, 3, 1, "", "find_edge_patterns"], [85, 3, 1, "", "find_repeated_patterns"], [85, 3, 1, "", "find_spaces"], [85, 3, 1, "", "generate_sublink_token"], [85, 3, 1, "", "get_sublinks"], [85, 3, 1, "", "initialize_data_dict"], [85, 3, 1, "", "initialize_url"], [85, 3, 1, "", "initialize_url_and_get_sublinks"], [85, 3, 1, "", "parse_page_type"], [85, 3, 1, "", "process_all_scraping_sublinks_parallel"], [85, 3, 1, "", "process_all_sublinks"], [85, 3, 1, "", "reconstruct_data_dict"], [85, 3, 1, "", "remove_headers"], [85, 3, 1, "", "remove_junk_scraping_parallel"], [85, 3, 1, "", "remove_long_patterns"], [85, 3, 1, "", "scraping_sublinks_callback"], [85, 3, 1, "", "shift_to_max_correlation"], [85, 3, 1, "", "string_circular_shift"], [85, 3, 1, "", "sublink_parallel_processing_merge_callback"]], "graphai.core.text": [[86, 1, 1, "", "ConceptsGraph"], [86, 3, 1, "", "compute_scores"], [87, 0, 0, "-", "draw"], [86, 3, 1, "", "draw_graph"], [86, 3, 1, "", "draw_ontology"], [88, 0, 0, "-", "embeddings"], [89, 0, 0, "-", "exercises"], [86, 3, 1, "", "extract_keywords"], [86, 3, 1, "", "generate_exercise"], [90, 0, 0, "-", "graph"], [91, 0, 0, "-", "keywords"], [92, 0, 0, "-", "scores"], [93, 0, 0, "-", "wikisearch"]], "graphai.core.text.ConceptsGraph": [[86, 4, 1, "", "add_graph_score"], [86, 4, 1, "", "add_ontology_scores"], [86, 4, 1, "", "get_ontology_concepts"], [86, 4, 1, "", "load_from_db"]], "graphai.core.text.draw": [[87, 3, 1, "", "draw_graph"], [87, 3, 1, "", "draw_ontology"]], "graphai.core.text.embeddings": [[88, 1, 1, "", "ConceptEmbeddings"], [88, 3, 1, "", "compute_embedding_scores"]], "graphai.core.text.embeddings.ConceptEmbeddings": [[88, 4, 1, "", "values"]], "graphai.core.text.exercises": [[89, 3, 1, "", "generate_exercise"]], "graphai.core.text.graph": [[90, 1, 1, "", "ConceptsGraph"]], "graphai.core.text.graph.ConceptsGraph": [[90, 4, 1, "", "add_graph_score"], [90, 4, 1, "", "add_ontology_scores"], [90, 4, 1, "", "get_ontology_concepts"], [90, 4, 1, "", "load_from_db"]], "graphai.core.text.keywords": [[91, 3, 1, "", "extract_keywords"], [91, 3, 1, "", "rake_extract"], [91, 3, 1, "", "word_tokens"]], "graphai.core.text.scores": [[92, 3, 1, "", "aggregate_results"], [92, 3, 1, "", "compute_keywords_scores"], [92, 3, 1, "", "compute_levenshtein_score"], [92, 3, 1, "", "compute_mixed_score"], [92, 3, 1, "", "compute_scores"], [92, 3, 1, "", "filter_results"]], "graphai.core.text.wikisearch": [[93, 3, 1, "", "search_elasticsearch"], [93, 3, 1, "", "search_wikipedia_api"], [93, 3, 1, "", "wikisearch"]], "graphai.core.translation": [[95, 0, 0, "-", "text_utils"], [96, 0, 0, "-", "translation"]], "graphai.core.translation.text_utils": [[95, 1, 1, "", "TranslationModels"], [95, 3, 1, "", "compute_slide_tfidf_scores"], [95, 3, 1, "", "find_best_slide_subset"], [95, 3, 1, "", "find_set_cover"], [95, 3, 1, "", "generate_src_tgt_dict"], [95, 3, 1, "", "generate_translation_text_token"]], "graphai.core.translation.text_utils.TranslationModels": [[95, 4, 1, "", "get_device"], [95, 4, 1, "", "get_last_usage"], [95, 4, 1, "", "load_models"], [95, 4, 1, "", "translate"], [95, 4, 1, "", "unload_model"]], "graphai.core.translation.translation": [[96, 3, 1, "", "cache_lookup_translate_text"], [96, 3, 1, "", "cache_lookup_translation_text_using_fingerprint"], [96, 3, 1, "", "compute_translation_text_fingerprint_callback"], [96, 3, 1, "", "detect_language_translation"], [96, 3, 1, "", "translate_text"], [96, 3, 1, "", "translate_text_callback"]], "graphai.core.utils": [[98, 0, 0, "-", "breadcrumb"], [99, 0, 0, "-", "progress_bar"], [100, 0, 0, "-", "text"], [103, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[98, 1, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[98, 4, 1, "", "indent"], [98, 4, 1, "", "log"], [98, 4, 1, "", "outdent"], [98, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[99, 1, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[99, 4, 1, "", "reset"], [99, 4, 1, "", "update"]], "graphai.core.utils.text": [[101, 0, 0, "-", "clean"], [102, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[101, 1, 1, "", "HTMLCleaner"], [101, 3, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[101, 4, 1, "", "get_data"], [101, 4, 1, "", "handle_data"], [101, 4, 1, "", "handle_endtag"], [101, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[102, 1, 1, "", "Colors"], [102, 3, 1, "", "cprint"], [102, 3, 1, "", "log"], [102, 3, 1, "", "mkdir"], [102, 3, 1, "", "pprint"], [102, 3, 1, "", "read_json"], [102, 3, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[102, 2, 1, "", "codes"], [102, 2, 1, "", "pref"], [102, 2, 1, "", "reset"]], "graphai.core.utils.time": [[104, 0, 0, "-", "date"], [105, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[104, 3, 1, "", "add_years"], [104, 3, 1, "", "now"], [104, 3, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[105, 1, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[105, 4, 1, "", "delta"], [105, 4, 1, "", "report"], [105, 4, 1, "", "reset"], [105, 4, 1, "", "tick"], [105, 4, 1, "", "total"]], "graphai.core.video": [[107, 0, 0, "-", "video"], [108, 0, 0, "-", "video_utils"]], "graphai.core.video.video": [[107, 3, 1, "", "cache_lookup_detect_slides"], [107, 3, 1, "", "cache_lookup_extract_audio"], [107, 3, 1, "", "cache_lookup_retrieve_file_from_url"], [107, 3, 1, "", "compute_audio_fingerprint"], [107, 3, 1, "", "compute_audio_fingerprint_callback"], [107, 3, 1, "", "compute_noise_level_parallel"], [107, 3, 1, "", "compute_noise_threshold_callback"], [107, 3, 1, "", "compute_single_image_fingerprint"], [107, 3, 1, "", "compute_slide_fingerprint_callback"], [107, 3, 1, "", "compute_slide_set_fingerprint"], [107, 3, 1, "", "compute_slide_transitions_callback"], [107, 3, 1, "", "compute_slide_transitions_parallel"], [107, 3, 1, "", "compute_video_fingerprint"], [107, 3, 1, "", "compute_video_fingerprint_callback"], [107, 3, 1, "", "detect_slides_callback"], [107, 3, 1, "", "extract_and_sample_frames"], [107, 3, 1, "", "extract_audio"], [107, 3, 1, "", "extract_audio_callback"], [107, 3, 1, "", "ignore_audio_fingerprint_results_callback"], [107, 3, 1, "", "ignore_single_image_fingerprint_results_callback"], [107, 3, 1, "", "ignore_slide_fingerprint_results_callback"], [107, 3, 1, "", "ignore_video_fingerprint_results_callback"], [107, 3, 1, "", "reextract_cached_audio"], [107, 3, 1, "", "reextract_cached_slides"], [107, 3, 1, "", "retrieve_audio_fingerprint_callback"], [107, 3, 1, "", "retrieve_file_from_url"], [107, 3, 1, "", "retrieve_file_from_url_callback"], [107, 3, 1, "", "retrieve_slide_fingerprint_callback"], [107, 3, 1, "", "retrieve_video_fingerprint_callback"], [107, 3, 1, "", "video_id_and_duration_fp_lookup"]], "graphai.core.video.video_utils": [[108, 1, 1, "", "NLPModels"], [108, 3, 1, "", "check_ocr_and_hash_thresholds"], [108, 3, 1, "", "compute_ocr_noise_level"], [108, 3, 1, "", "compute_ocr_threshold"], [108, 3, 1, "", "compute_video_ocr_transitions"], [108, 3, 1, "", "create_video_filename_using_url_format"], [108, 3, 1, "", "detect_audio_duration"], [108, 3, 1, "", "extract_audio_from_video"], [108, 3, 1, "", "extract_frames"], [108, 3, 1, "", "frame_hash_similarity"], [108, 3, 1, "", "frame_ocr_distance"], [108, 3, 1, "", "frame_ocr_transition"], [108, 3, 1, "", "generate_audio_token"], [108, 3, 1, "", "generate_frame_sample_indices"], [108, 3, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [108, 3, 1, "", "generate_symbolic_token"], [108, 3, 1, "", "get_cosine_sim"], [108, 3, 1, "", "perform_slow_audio_probe"], [108, 3, 1, "", "read_json_gz_file"], [108, 3, 1, "", "read_txt_gz_file"], [108, 3, 1, "", "retrieve_file_from_any_source"], [108, 3, 1, "", "retrieve_file_from_kaltura"], [108, 3, 1, "", "retrieve_file_from_youtube"], [108, 3, 1, "", "retrieve_video_file_from_generic_url"], [108, 3, 1, "", "tesseract_ocr_or_get_cached"], [108, 3, 1, "", "write_txt_gz_file"]], "graphai.core.video.video_utils.NLPModels": [[108, 4, 1, "", "get_text_word_vector"], [108, 4, 1, "", "get_text_word_vector_using_words"], [108, 4, 1, "", "get_words"], [108, 4, 1, "", "load_nlp_models"]], "graphai.core.voice": [[110, 0, 0, "-", "transcribe"]], "graphai.core.voice.transcribe": [[110, 1, 1, "", "WhisperTranscriptionModel"], [110, 3, 1, "", "cache_lookup_audio_fingerprint"], [110, 3, 1, "", "cache_lookup_audio_language"], [110, 3, 1, "", "cache_lookup_audio_transcript"], [110, 3, 1, "", "detect_language_callback"], [110, 3, 1, "", "detect_language_parallel"], [110, 3, 1, "", "detect_language_retrieve_from_db_and_split"], [110, 3, 1, "", "extract_media_segment"], [110, 3, 1, "", "transcribe_audio_to_text"], [110, 3, 1, "", "transcribe_callback"]], "graphai.core.voice.transcribe.WhisperTranscriptionModel": [[110, 4, 1, "", "detect_audio_segment_lang_whisper"], [110, 4, 1, "", "get_last_usage"], [110, 4, 1, "", "get_silence_thresholds"], [110, 4, 1, "", "load_model_whisper"], [110, 4, 1, "", "transcribe_audio_whisper"], [110, 4, 1, "", "unload_model"]], "graphai.pipelines": [[113, 0, 0, "-", "investment"], [126, 0, 0, "-", "validation"], [130, 0, 0, "-", "visualisation"]], "graphai.pipelines.investment": [[114, 0, 0, "-", "aggregate_recent_past"], [115, 0, 0, "-", "check_unit"], [116, 0, 0, "-", "compute_fundraisers_units"], [117, 0, 0, "-", "compute_investors_units"], [118, 0, 0, "-", "compute_investors_units_2"], [119, 0, 0, "-", "compute_jaccard_index"], [120, 0, 0, "-", "concept_configuration"], [121, 0, 0, "-", "create_investments_graph"], [122, 0, 0, "-", "detect_fundraisers_concepts"], [123, 0, 0, "-", "main"], [124, 0, 0, "-", "parameters"], [125, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[114, 3, 1, "", "aggregate_recent_past"], [114, 3, 1, "", "aggregate_years"], [114, 3, 1, "", "compute_year_coefficients"], [114, 3, 1, "", "normalize_scores"], [114, 3, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[115, 3, 1, "", "main"], [115, 3, 1, "", "show_matchmaking_chart_view"], [115, 3, 1, "", "show_matchmaking_list_view"], [115, 3, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[116, 3, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[117, 3, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[118, 3, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[119, 3, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[120, 3, 1, "", "combine"], [120, 3, 1, "", "compute_affinities"], [120, 3, 1, "", "mix"], [120, 3, 1, "", "norm"], [120, 3, 1, "", "normalise"], [120, 3, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[121, 3, 1, "", "create_investments_graph"], [121, 3, 1, "", "derive_yearly_data"], [121, 3, 1, "", "get_frs"], [121, 3, 1, "", "get_frs_fundraisers"], [121, 3, 1, "", "get_fundraisers_concepts"], [121, 3, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[122, 3, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[123, 3, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[124, 3, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[125, 3, 1, "", "base"], [125, 3, 1, "", "complete"], [125, 3, 1, "", "path"], [125, 3, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "packag": [0, 1, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 35, 36, 42, 45, 48, 51, 54, 57, 60, 63, 66, 67, 74, 76, 79, 84, 86, 94, 97, 100, 103, 106, 109, 112, 113, 126, 130], "subpackag": [0, 1, 35, 66, 97, 112], "submodul": [0, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 36, 42, 45, 48, 51, 54, 57, 60, 63, 67, 74, 76, 79, 84, 86, 94, 97, 100, 103, 106, 109, 113, 126, 130], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "auth": [2, 3, 4, 5], "auth_util": 3, "modul": [3, 4, 5, 7, 8, 10, 11, 13, 14, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134], "log": [4, 40], "router": [5, 10, 13, 18, 21, 24, 27, 30, 33], "common": [6, 7, 8, 36, 37, 38, 39, 40, 41, 67, 68, 69, 70, 71, 72, 73], "schema": [7, 11, 14, 19, 22, 25, 28, 31, 34], "util": [8, 97, 98, 99, 100, 101, 102, 103, 104, 105], "embed": [9, 10, 11, 42, 43, 44, 74, 75, 88], "imag": [12, 13, 14, 45, 46, 47, 76, 77, 78], "main": [15, 16, 123], "ontologi": [17, 18, 19, 48, 49, 50, 79, 80, 81, 82, 83], "scrape": [20, 21, 22, 51, 52, 53, 84, 85], "text": [23, 24, 25, 54, 55, 56, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102], "translat": [26, 27, 28, 57, 58, 59, 94, 95, 96], "video": [29, 30, 31, 60, 61, 62, 106, 107, 108], "voic": [32, 33, 34, 63, 64, 65, 109, 110], "celeri": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "celery_config": 37, "celery_tool": 38, "job": [39, 43, 46, 49, 52, 55, 58, 61, 64], "task": [41, 44, 47, 50, 53, 56, 59, 62, 65], "core": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "cach": 68, "common_util": 69, "config": 70, "fingerprint": 71, "lookup": 72, "multimedia_util": 73, "ocr": 78, "cluster": 80, "data": 81, "openalex": 83, "draw": 87, "exercis": 89, "graph": [90, 131, 132, 133, 134], "keyword": 91, "score": 92, "wikisearch": 93, "text_util": 95, "breadcrumb": 98, "progress_bar": 99, "clean": 101, "io": 102, "time": [103, 104, 105], "date": 104, "stopwatch": 105, "video_util": 108, "transcrib": 110, "definit": 111, "pipelin": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "invest": [113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "aggregate_recent_past": 114, "check_unit": 115, "compute_fundraisers_unit": 116, "compute_investors_unit": 117, "compute_investors_units_2": 118, "compute_jaccard_index": 119, "concept_configur": 120, "create_investments_graph": 121, "detect_fundraisers_concept": 122, "paramet": 124, "toy_exampl": 125, "valid": [126, 127, 128, 129], "1_old": 127, "2_new": 128, "3_slide": 129, "visualis": [130, 131, 132, 133, 134], "startup": [131, 132, 133, 134], "2": 132, "3": 133, "4": 134}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [35, "subpackages"], [66, "subpackages"], [97, "subpackages"], [112, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [6, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"], [17, "submodules"], [20, "submodules"], [23, "submodules"], [26, "submodules"], [29, "submodules"], [32, "submodules"], [36, "submodules"], [42, "submodules"], [45, "submodules"], [48, "submodules"], [51, "submodules"], [54, "submodules"], [57, "submodules"], [60, "submodules"], [63, "submodules"], [67, "submodules"], [74, "submodules"], [76, "submodules"], [79, "submodules"], [84, "submodules"], [86, "submodules"], [94, "submodules"], [97, "submodules"], [100, "submodules"], [103, "submodules"], [106, "submodules"], [109, "submodules"], [113, "submodules"], [126, "submodules"], [130, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.auth package": [[2, "module-graphai.api.auth"]], "graphai.api.auth.auth_utils module": [[3, "module-graphai.api.auth.auth_utils"]], "graphai.api.auth.log module": [[4, "module-graphai.api.auth.log"]], "graphai.api.auth.router module": [[5, "module-graphai.api.auth.router"]], "graphai.api.common package": [[6, "module-graphai.api.common"]], "graphai.api.common.schemas module": [[7, "module-graphai.api.common.schemas"]], "graphai.api.common.utils module": [[8, "module-graphai.api.common.utils"]], "graphai.api.embedding package": [[9, "module-graphai.api.embedding"]], "graphai.api.embedding.router module": [[10, "graphai-api-embedding-router-module"]], "graphai.api.embedding.schemas module": [[11, "graphai-api-embedding-schemas-module"]], "graphai.api.image package": [[12, "module-graphai.api.image"]], "graphai.api.image.router module": [[13, "graphai-api-image-router-module"]], "graphai.api.image.schemas module": [[14, "graphai-api-image-schemas-module"]], "graphai.api.main package": [[15, "module-graphai.api.main"]], "graphai.api.main.main module": [[16, "graphai-api-main-main-module"]], "graphai.api.ontology package": [[17, "module-graphai.api.ontology"]], "graphai.api.ontology.router module": [[18, "graphai-api-ontology-router-module"]], "graphai.api.ontology.schemas module": [[19, "graphai-api-ontology-schemas-module"]], "graphai.api.scraping package": [[20, "module-graphai.api.scraping"]], "graphai.api.scraping.router module": [[21, "graphai-api-scraping-router-module"]], "graphai.api.scraping.schemas module": [[22, "graphai-api-scraping-schemas-module"]], "graphai.api.text package": [[23, "module-graphai.api.text"]], "graphai.api.text.router module": [[24, "module-graphai.api.text.router"]], "graphai.api.text.schemas module": [[25, "module-graphai.api.text.schemas"]], "graphai.api.translation package": [[26, "module-graphai.api.translation"]], "graphai.api.translation.router module": [[27, "graphai-api-translation-router-module"]], "graphai.api.translation.schemas module": [[28, "graphai-api-translation-schemas-module"]], "graphai.api.video package": [[29, "module-graphai.api.video"]], "graphai.api.video.router module": [[30, "graphai-api-video-router-module"]], "graphai.api.video.schemas module": [[31, "graphai-api-video-schemas-module"]], "graphai.api.voice package": [[32, "module-graphai.api.voice"]], "graphai.api.voice.router module": [[33, "graphai-api-voice-router-module"]], "graphai.api.voice.schemas module": [[34, "graphai-api-voice-schemas-module"]], "graphai.celery package": [[35, "module-graphai.celery"]], "graphai.celery.common package": [[36, "module-graphai.celery.common"]], "graphai.celery.common.celery_config module": [[37, "module-graphai.celery.common.celery_config"]], "graphai.celery.common.celery_tools module": [[38, "module-graphai.celery.common.celery_tools"]], "graphai.celery.common.jobs module": [[39, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log module": [[40, "module-graphai.celery.common.log"]], "graphai.celery.common.tasks module": [[41, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding package": [[42, "module-graphai.celery.embedding"]], "graphai.celery.embedding.jobs module": [[43, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks module": [[44, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image package": [[45, "module-graphai.celery.image"]], "graphai.celery.image.jobs module": [[46, "module-graphai.celery.image.jobs"]], "graphai.celery.image.tasks module": [[47, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology package": [[48, "module-graphai.celery.ontology"]], "graphai.celery.ontology.jobs module": [[49, "module-graphai.celery.ontology.jobs"]], "graphai.celery.ontology.tasks module": [[50, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping package": [[51, "module-graphai.celery.scraping"]], "graphai.celery.scraping.jobs module": [[52, "module-graphai.celery.scraping.jobs"]], "graphai.celery.scraping.tasks module": [[53, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text package": [[54, "module-graphai.celery.text"]], "graphai.celery.text.jobs module": [[55, "module-graphai.celery.text.jobs"]], "graphai.celery.text.tasks module": [[56, "module-graphai.celery.text.tasks"]], "graphai.celery.translation package": [[57, "module-graphai.celery.translation"]], "graphai.celery.translation.jobs module": [[58, "module-graphai.celery.translation.jobs"]], "graphai.celery.translation.tasks module": [[59, "module-graphai.celery.translation.tasks"]], "graphai.celery.video package": [[60, "module-graphai.celery.video"]], "graphai.celery.video.jobs module": [[61, "module-graphai.celery.video.jobs"]], "graphai.celery.video.tasks module": [[62, "module-graphai.celery.video.tasks"]], "graphai.celery.voice package": [[63, "module-graphai.celery.voice"]], "graphai.celery.voice.jobs module": [[64, "module-graphai.celery.voice.jobs"]], "graphai.celery.voice.tasks module": [[65, "module-graphai.celery.voice.tasks"]], "graphai.core package": [[66, "module-graphai.core"]], "graphai.core.common package": [[67, "module-graphai.core.common"]], "graphai.core.common.caching module": [[68, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[69, "module-graphai.core.common.common_utils"]], "graphai.core.common.config module": [[70, "module-graphai.core.common.config"]], "graphai.core.common.fingerprinting module": [[71, "module-graphai.core.common.fingerprinting"]], "graphai.core.common.lookup module": [[72, "module-graphai.core.common.lookup"]], "graphai.core.common.multimedia_utils module": [[73, "module-graphai.core.common.multimedia_utils"]], "graphai.core.embedding package": [[74, "module-graphai.core.embedding"]], "graphai.core.embedding.embedding module": [[75, "module-graphai.core.embedding.embedding"]], "graphai.core.image package": [[76, "module-graphai.core.image"]], "graphai.core.image.image module": [[77, "module-graphai.core.image.image"]], "graphai.core.image.ocr module": [[78, "module-graphai.core.image.ocr"]], "graphai.core.ontology package": [[79, "module-graphai.core.ontology"]], "graphai.core.ontology.clustering module": [[80, "module-graphai.core.ontology.clustering"]], "graphai.core.ontology.data module": [[81, "module-graphai.core.ontology.data"]], "graphai.core.ontology.ontology module": [[82, "module-graphai.core.ontology.ontology"]], "graphai.core.ontology.openalex module": [[83, "module-graphai.core.ontology.openalex"]], "graphai.core.scraping package": [[84, "module-graphai.core.scraping"]], "graphai.core.scraping.scraping module": [[85, "module-graphai.core.scraping.scraping"]], "graphai.core.text package": [[86, "module-graphai.core.text"]], "graphai.core.text.draw module": [[87, "module-graphai.core.text.draw"]], "graphai.core.text.embeddings module": [[88, "module-graphai.core.text.embeddings"]], "graphai.core.text.exercises module": [[89, "module-graphai.core.text.exercises"]], "graphai.core.text.graph module": [[90, "module-graphai.core.text.graph"]], "graphai.core.text.keywords module": [[91, "module-graphai.core.text.keywords"]], "graphai.core.text.scores module": [[92, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch module": [[93, "module-graphai.core.text.wikisearch"]], "graphai.core.translation package": [[94, "module-graphai.core.translation"]], "graphai.core.translation.text_utils module": [[95, "module-graphai.core.translation.text_utils"]], "graphai.core.translation.translation module": [[96, "module-graphai.core.translation.translation"]], "graphai.core.utils package": [[97, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[98, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[99, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[100, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[101, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[102, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[103, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[104, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[105, "module-graphai.core.utils.time.stopwatch"]], "graphai.core.video package": [[106, "module-graphai.core.video"]], "graphai.core.video.video module": [[107, "module-graphai.core.video.video"]], "graphai.core.video.video_utils module": [[108, "module-graphai.core.video.video_utils"]], "graphai.core.voice package": [[109, "module-graphai.core.voice"]], "graphai.core.voice.transcribe module": [[110, "module-graphai.core.voice.transcribe"]], "graphai.definitions module": [[111, "module-graphai.definitions"]], "graphai.pipelines package": [[112, "module-graphai.pipelines"]], "graphai.pipelines.investment package": [[113, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[114, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[115, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[116, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[117, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[118, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[119, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[120, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[121, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[122, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[123, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[124, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[125, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[126, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[127, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[128, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[129, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[130, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[131, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[132, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[133, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[134, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.auth"], [3, "module-graphai.api.auth.auth_utils"], [4, "module-graphai.api.auth.log"], [5, "module-graphai.api.auth.router"], [6, "module-graphai.api.common"], [7, "module-graphai.api.common.schemas"], [8, "module-graphai.api.common.utils"], [9, "module-graphai.api.embedding"], [12, "module-graphai.api.image"], [15, "module-graphai.api.main"], [17, "module-graphai.api.ontology"], [20, "module-graphai.api.scraping"], [23, "module-graphai.api.text"], [24, "module-graphai.api.text.router"], [25, "module-graphai.api.text.schemas"], [26, "module-graphai.api.translation"], [29, "module-graphai.api.video"], [32, "module-graphai.api.voice"], [35, "module-graphai.celery"], [36, "module-graphai.celery.common"], [37, "module-graphai.celery.common.celery_config"], [38, "module-graphai.celery.common.celery_tools"], [39, "module-graphai.celery.common.jobs"], [40, "module-graphai.celery.common.log"], [41, "module-graphai.celery.common.tasks"], [42, "module-graphai.celery.embedding"], [43, "module-graphai.celery.embedding.jobs"], [44, "module-graphai.celery.embedding.tasks"], [45, "module-graphai.celery.image"], [46, "module-graphai.celery.image.jobs"], [47, "module-graphai.celery.image.tasks"], [48, "module-graphai.celery.ontology"], [49, "module-graphai.celery.ontology.jobs"], [50, "module-graphai.celery.ontology.tasks"], [51, "module-graphai.celery.scraping"], [52, "module-graphai.celery.scraping.jobs"], [53, "module-graphai.celery.scraping.tasks"], [54, "module-graphai.celery.text"], [55, "module-graphai.celery.text.jobs"], [56, "module-graphai.celery.text.tasks"], [57, "module-graphai.celery.translation"], [58, "module-graphai.celery.translation.jobs"], [59, "module-graphai.celery.translation.tasks"], [60, "module-graphai.celery.video"], [61, "module-graphai.celery.video.jobs"], [62, "module-graphai.celery.video.tasks"], [63, "module-graphai.celery.voice"], [64, "module-graphai.celery.voice.jobs"], [65, "module-graphai.celery.voice.tasks"], [66, "module-graphai.core"], [67, "module-graphai.core.common"], [68, "module-graphai.core.common.caching"], [69, "module-graphai.core.common.common_utils"], [70, "module-graphai.core.common.config"], [71, "module-graphai.core.common.fingerprinting"], [72, "module-graphai.core.common.lookup"], [73, "module-graphai.core.common.multimedia_utils"], [74, "module-graphai.core.embedding"], [75, "module-graphai.core.embedding.embedding"], [76, "module-graphai.core.image"], [77, "module-graphai.core.image.image"], [78, "module-graphai.core.image.ocr"], [79, "module-graphai.core.ontology"], [80, "module-graphai.core.ontology.clustering"], [81, "module-graphai.core.ontology.data"], [82, "module-graphai.core.ontology.ontology"], [83, "module-graphai.core.ontology.openalex"], [84, "module-graphai.core.scraping"], [85, "module-graphai.core.scraping.scraping"], [86, "module-graphai.core.text"], [87, "module-graphai.core.text.draw"], [88, "module-graphai.core.text.embeddings"], [89, "module-graphai.core.text.exercises"], [90, "module-graphai.core.text.graph"], [91, "module-graphai.core.text.keywords"], [92, "module-graphai.core.text.scores"], [93, "module-graphai.core.text.wikisearch"], [94, "module-graphai.core.translation"], [95, "module-graphai.core.translation.text_utils"], [96, "module-graphai.core.translation.translation"], [97, "module-graphai.core.utils"], [98, "module-graphai.core.utils.breadcrumb"], [99, "module-graphai.core.utils.progress_bar"], [100, "module-graphai.core.utils.text"], [101, "module-graphai.core.utils.text.clean"], [102, "module-graphai.core.utils.text.io"], [103, "module-graphai.core.utils.time"], [104, "module-graphai.core.utils.time.date"], [105, "module-graphai.core.utils.time.stopwatch"], [106, "module-graphai.core.video"], [107, "module-graphai.core.video.video"], [108, "module-graphai.core.video.video_utils"], [109, "module-graphai.core.voice"], [110, "module-graphai.core.voice.transcribe"], [111, "module-graphai.definitions"], [112, "module-graphai.pipelines"], [113, "module-graphai.pipelines.investment"], [114, "module-graphai.pipelines.investment.aggregate_recent_past"], [115, "module-graphai.pipelines.investment.check_unit"], [116, "module-graphai.pipelines.investment.compute_fundraisers_units"], [117, "module-graphai.pipelines.investment.compute_investors_units"], [118, "module-graphai.pipelines.investment.compute_investors_units_2"], [119, "module-graphai.pipelines.investment.compute_jaccard_index"], [120, "module-graphai.pipelines.investment.concept_configuration"], [121, "module-graphai.pipelines.investment.create_investments_graph"], [122, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [123, "module-graphai.pipelines.investment.main"], [124, "module-graphai.pipelines.investment.parameters"], [125, "module-graphai.pipelines.investment.toy_example"], [126, "module-graphai.pipelines.validation"], [130, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.auth": [[2, "module-graphai.api.auth"]], "token (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.Token"]], "tokendata (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.TokenData"]], "user (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.User"]], "userindb (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.UserInDB"]], "access_token (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.authenticate_user"]], "disabled (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.disabled"]], "email (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.email"]], "extract_username_and_scopes() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.extract_username_and_scopes"]], "extract_username_sync() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.extract_username_sync"]], "full_name (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_password_hash"]], "get_ratelimit_values() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_ratelimit_values"]], "get_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user"]], "get_user_ratelimit_overrides() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user_ratelimit_overrides"]], "graphai.api.auth.auth_utils": [[3, "module-graphai.api.auth.auth_utils"]], "hashed_password (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.hashed_password"]], "model_computed_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_computed_fields"]], "model_config (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_config"]], "model_config (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_config"]], "model_config (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_config"]], "model_config (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_config"]], "model_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_fields"]], "model_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_fields"]], "model_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_fields"]], "model_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_fields"]], "scopes (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.scopes"]], "scopes (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.scopes"]], "token_type (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.token_type"]], "username (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.username"]], "username (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.username"]], "verify_password() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.verify_password"]], "loggermiddleware (class in graphai.api.auth.log)": [[4, "graphai.api.auth.log.LoggerMiddleware"]], "dispatch() (graphai.api.auth.log.loggermiddleware method)": [[4, "graphai.api.auth.log.LoggerMiddleware.dispatch"]], "get_user_agent() (in module graphai.api.auth.log)": [[4, "graphai.api.auth.log.get_user_agent"]], "graphai.api.auth.log": [[4, "module-graphai.api.auth.log"]], "log_request() (in module graphai.api.auth.log)": [[4, "graphai.api.auth.log.log_request"]], "create_access_token() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.create_access_token"]], "get_active_user_dummy() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_current_active_user"]], "get_current_user() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_current_user"]], "get_user_for_rate_limiter() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_user_for_rate_limiter"]], "graphai.api.auth.router": [[5, "module-graphai.api.auth.router"]], "login_for_access_token() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.login_for_access_token"]], "read_users_me() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.read_users_me"]], "graphai.api.common": [[6, "module-graphai.api.common"]], "filerequest (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.FileRequest"]], "taskidresponse (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TaskStatusResponse"]], "tokenstatus (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TokenStatus"]], "active (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.active"]], "fingerprinted (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.fingerprinted"]], "graphai.api.common.schemas": [[7, "module-graphai.api.common.schemas"]], "model_computed_fields (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_computed_fields"]], "model_config (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_config"]], "model_config (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_config"]], "model_config (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_config"]], "model_config (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_config"]], "model_fields (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_fields"]], "model_fields (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_fields"]], "model_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_fields"]], "model_fields (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_fields"]], "task_id (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.task_id"]], "task_id (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_id"]], "task_name (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_name"]], "task_result (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_result"]], "task_status (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_status"]], "token (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.token"]], "format_api_results() (in module graphai.api.common.utils)": [[8, "graphai.api.common.utils.format_api_results"]], "graphai.api.common.utils": [[8, "module-graphai.api.common.utils"]], "graphai.api.embedding": [[9, "module-graphai.api.embedding"]], "graphai.api.image": [[12, "module-graphai.api.image"]], "graphai.api.main": [[15, "module-graphai.api.main"]], "graphai.api.ontology": [[17, "module-graphai.api.ontology"]], "graphai.api.scraping": [[20, "module-graphai.api.scraping"]], "graphai.api.text": [[23, "module-graphai.api.text"]], "generate_exercise() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.generate_exercise"]], "graphai.api.text.router": [[24, "module-graphai.api.text.router"]], "keywords() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.keywords"]], "wikify() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify"]], "wikify_graph_svg() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify_ontology_svg"]], "generatelectureexerciserequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest"]], "generatetextexerciserequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest"]], "keywordsrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.KeywordsRequest"]], "wikifyfromkeywordsrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyResponseElem"]], "bloom_level (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.bloom_level"]], "bloom_level (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.bloom_level"]], "concept_id (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.concept_id"]], "concept_name (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.concept_name"]], "description (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.description"]], "description (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.description"]], "embedding_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_global_score"]], "embedding_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_keywords_score"]], "embedding_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_local_score"]], "graph_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.graph_keywords_score"]], "graph_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.graph_score"]], "graphai.api.text.schemas": [[25, "module-graphai.api.text.schemas"]], "include_solution (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.include_solution"]], "include_solution (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.include_solution"]], "keywords (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.keywords"]], "lecture_id (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.lecture_id"]], "levenshtein_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.levenshtein_score"]], "llm_model (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.llm_model"]], "llm_model (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.llm_model"]], "mixed_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.mixed_score"]], "model_computed_fields (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_computed_fields"]], "model_config (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_config"]], "model_config (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_config"]], "model_config (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_config"]], "model_fields (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_fields"]], "model_fields (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_fields"]], "model_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_fields"]], "ontology_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_global_score"]], "ontology_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_keywords_score"]], "ontology_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_local_score"]], "openai_api_key (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.openai_api_key"]], "openai_api_key (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.openai_api_key"]], "output_format (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.output_format"]], "output_format (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.output_format"]], "raw_text (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.raw_text"]], "raw_text (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.raw_text"]], "search_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.search_score"]], "text (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.text"]], "graphai.api.translation": [[26, "module-graphai.api.translation"]], "graphai.api.video": [[29, "module-graphai.api.video"]], "graphai.api.voice": [[32, "module-graphai.api.voice"]], "graphai.celery": [[35, "module-graphai.celery"]], "graphai.celery.common": [[36, "module-graphai.celery.common"]], "baseconfig (class in graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.BaseConfig"]], "developmentconfig (class in graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.create_celery"]], "get_celery_task() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_celery_task"]], "get_settings() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_settings"]], "get_task_info() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_task_info"]], "graphai.celery.common.celery_config": [[37, "module-graphai.celery.common.celery_config"]], "route_task() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.route_task"]], "get_n_celery_workers() (in module graphai.celery.common.celery_tools)": [[38, "graphai.celery.common.celery_tools.get_n_celery_workers"]], "graphai.celery.common.celery_tools": [[38, "module-graphai.celery.common.celery_tools"]], "direct_lookup_generic_job() (in module graphai.celery.common.jobs)": [[39, "graphai.celery.common.jobs.direct_lookup_generic_job"]], "graphai.celery.common.jobs": [[39, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log": [[40, "module-graphai.celery.common.log"]], "log() (in module graphai.celery.common.log)": [[40, "graphai.celery.common.log.log"]], "graphai.celery.common.tasks": [[41, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding": [[42, "module-graphai.celery.embedding"]], "embedding_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.embedding_job"]], "fingerprint_compute_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_lookup_job"]], "get_embedding_text_fingerprint_chain_list() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.get_embedding_text_fingerprint_chain_list"]], "graphai.celery.embedding.jobs": [[43, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks": [[44, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image": [[45, "module-graphai.celery.image"]], "fingerprint_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.fingerprint_lookup_job"]], "graphai.celery.image.jobs": [[46, "module-graphai.celery.image.jobs"]], "ocr_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.ocr_job"]], "retrieve_image_from_url_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.retrieve_image_from_url_job"]], "graphai.celery.image.tasks": [[47, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology": [[48, "module-graphai.celery.ontology"]], "breakup_cluster_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.breakup_cluster_job"]], "category_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.category_info_job"]], "cluster_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.cluster_info_job"]], "cluster_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.cluster_nearest_category_job"]], "concept_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_info_job"]], "concept_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_nearest_category_job"]], "concept_nearest_concept_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_nearest_concept_job"]], "graph_distance_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.graph_distance_job"]], "graphai.celery.ontology.jobs": [[49, "module-graphai.celery.ontology.jobs"]], "openalex_category_nearest_topics_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.openalex_category_nearest_topics_job"]], "openalex_topic_nearest_categories_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.openalex_topic_nearest_categories_job"]], "recompute_clusters_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.recompute_clusters_job"]], "tree_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.tree_job"]], "graphai.celery.ontology.tasks": [[50, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping": [[51, "module-graphai.celery.scraping"]], "extract_content_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.extract_content_job"]], "extract_sublinks_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.extract_sublinks_job"]], "graphai.celery.scraping.jobs": [[52, "module-graphai.celery.scraping.jobs"]], "sublink_lookup_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.sublink_lookup_job"]], "graphai.celery.scraping.tasks": [[53, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text": [[54, "module-graphai.celery.text"]], "generate_exercise() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.generate_exercise"]], "graphai.celery.text.jobs": [[55, "module-graphai.celery.text.jobs"]], "keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.keywords"]], "wikify_graph_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_graph_svg"]], "wikify_keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_keywords"]], "wikify_ontology_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_ontology_svg"]], "wikify_text() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_text"]], "graphai.celery.text.tasks": [[56, "module-graphai.celery.text.tasks"]], "graphai.celery.translation": [[57, "module-graphai.celery.translation"]], "detect_text_language_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.detect_text_language_job"]], "fingerprint_compute_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_lookup_job"]], "get_translation_text_fingerprint_chain_list() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.get_translation_text_fingerprint_chain_list"]], "graphai.celery.translation.jobs": [[58, "module-graphai.celery.translation.jobs"]], "translation_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.translation_job"]], "graphai.celery.translation.tasks": [[59, "module-graphai.celery.translation.tasks"]], "graphai.celery.video": [[60, "module-graphai.celery.video"]], "detect_slides_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.detect_slides_job"]], "extract_audio_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.extract_audio_job"]], "fingerprint_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.fingerprint_lookup_job"]], "get_audio_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_audio_fingerprint_chain_list"]], "get_file_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_file_job"]], "get_slide_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_slide_fingerprint_chain_list"]], "get_video_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_video_fingerprint_chain_list"]], "graphai.celery.video.jobs": [[61, "module-graphai.celery.video.jobs"]], "retrieve_url_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.retrieve_url_job"]], "graphai.celery.video.tasks": [[62, "module-graphai.celery.video.tasks"]], "graphai.celery.voice": [[63, "module-graphai.celery.voice"]], "detect_language_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.detect_language_job"]], "fingerprint_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.fingerprint_lookup_job"]], "get_audio_language_detection_task_chain() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.get_audio_language_detection_task_chain"]], "graphai.celery.voice.jobs": [[64, "module-graphai.celery.voice.jobs"]], "language_lookup_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.language_lookup_job"]], "transcribe_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.transcribe_job"]], "graphai.celery.voice.tasks": [[65, "module-graphai.celery.voice.tasks"]], "graphai.core": [[66, "module-graphai.core"]], "graphai.core.common": [[67, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.AudioDBCachingManager"]], "embeddingdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.EmbeddingDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_token_file_status() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.get_token_file_status"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[68, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[68, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.embeddingdbcachingmanager method)": [[68, "graphai.core.common.caching.EmbeddingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[68, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[68, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[68, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.load_values"]], "convert_list_to_text() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.convert_list_to_text"]], "convert_text_back_to_list() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.convert_text_back_to_list"]], "copy_file_within_folder() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.copy_file_within_folder"]], "file_exists() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "generate_random_token() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.generate_random_token"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.get_current_datetime"]], "get_file_size() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.get_file_size"]], "graphai.core.common.common_utils": [[69, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.invert_dict"]], "is_pdf() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.is_pdf"]], "is_token() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.is_token"]], "is_url() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.is_url"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.read_text_file"]], "retrieve_generic_file_from_generic_url() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.retrieve_generic_file_from_generic_url"]], "strtobool() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.write_text_file"]], "graphai.core.common.config": [[70, "module-graphai.core.common.config"]], "compare_decoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compare_encoded_fingerprints"]], "compute_text_fingerprint() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compute_text_fingerprint"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_for_list_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_fingerprint_for_list_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_image_fingerprint_from_list"]], "find_closest_text_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_text_fingerprint_from_list"]], "graphai.core.common.fingerprinting": [[71, "module-graphai.core.common.fingerprinting"]], "md5_text() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_image"]], "perceptual_hash_pdf() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_pdf"]], "perceptual_hash_text() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_text"]], "cache_lookup_generic() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.cache_lookup_generic"]], "database_callback_generic() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.database_callback_generic"]], "fingerprint_based_text_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_based_text_lookup"]], "fingerprint_cache_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_cache_lookup"]], "fingerprint_cache_lookup_with_most_similar() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_cache_lookup_with_most_similar"]], "fingerprint_lookup_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_retrieve_from_db"]], "graphai.core.common.lookup": [[72, "module-graphai.core.common.lookup"]], "ignore_fingerprint_results_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.ignore_fingerprint_results_callback"]], "is_fingerprinted() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.is_fingerprinted"]], "lookup_latest_allowed_date() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.lookup_latest_allowed_date"]], "retrieve_fingerprint_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.retrieve_fingerprint_callback"]], "token_based_text_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.token_based_text_lookup"]], "detect_text_language() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.detect_text_language"]], "get_audio_token_status() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.get_audio_token_status"]], "get_available_streams() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.get_available_streams"]], "get_image_token_status() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.get_image_token_status"]], "get_video_token_status() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.get_video_token_status"]], "graphai.core.common.multimedia_utils": [[73, "module-graphai.core.common.multimedia_utils"]], "perform_probe() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.multimedia_utils)": [[73, "graphai.core.common.multimedia_utils.perform_tesseract_ocr"]], "graphai.core.embedding": [[74, "module-graphai.core.embedding"]], "embeddingmodels (class in graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.EmbeddingModels"]], "compute_embedding_text_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.compute_embedding_text_fingerprint_callback"]], "copy_embedding_object() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.copy_embedding_object"]], "embed() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.embed"]], "embed_text() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embed_text"]], "embedding_from_json() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_from_json"]], "embedding_text_list_embed_callback() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_text_list_embed_callback"]], "embedding_text_list_embed_parallel() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_text_list_embed_parallel"]], "embedding_text_list_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_callback"]], "embedding_text_list_fingerprint_parallel() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_parallel"]], "embedding_to_json() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.embedding_to_json"]], "fingerprint_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.fingerprint_based_embedding_lookup"]], "generate_embedding_text_token() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.generate_embedding_text_token"]], "get_device() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.get_device"]], "get_last_usage() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.get_last_usage"]], "get_max_tokens() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.get_max_tokens"]], "get_text_token_count_using_model() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.get_text_token_count_using_model"]], "get_token_count() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.get_token_count"]], "get_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.get_tokenizer"]], "graphai.core.embedding.embedding": [[75, "module-graphai.core.embedding.embedding"]], "insert_embedding_into_db() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.insert_embedding_into_db"]], "load_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.load_model"]], "load_models() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.load_models"]], "model_loaded() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.model_loaded"]], "set_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.set_tokenizer"]], "token_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[75, "graphai.core.embedding.embedding.token_based_embedding_lookup"]], "unload_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[75, "graphai.core.embedding.embedding.EmbeddingModels.unload_model"]], "graphai.core.image": [[76, "module-graphai.core.image"]], "cache_lookup_extract_slide_text() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.cache_lookup_extract_slide_text"]], "cache_lookup_retrieve_image_from_url() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.cache_lookup_retrieve_image_from_url"]], "create_image_filename_using_url_format() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.create_image_filename_using_url_format"]], "extract_slide_text() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.extract_slide_text"]], "extract_slide_text_callback() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.extract_slide_text_callback"]], "graphai.core.image.image": [[77, "module-graphai.core.image.image"]], "retrieve_image_file_from_url() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.retrieve_image_file_from_url"]], "retrieve_image_file_from_url_callback() (in module graphai.core.image.image)": [[77, "graphai.core.image.image.retrieve_image_file_from_url_callback"]], "abstractocrmodel (class in graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.AbstractOCRModel"]], "googleocrmodel (class in graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.GoogleOCRModel"]], "imgtobase64converter (class in graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.ImgToBase64Converter"]], "openaiocrmodel (class in graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.OpenAIOCRModel"]], "establish_connection() (graphai.core.image.ocr.abstractocrmodel method)": [[78, "graphai.core.image.ocr.AbstractOCRModel.establish_connection"]], "get_base64() (graphai.core.image.ocr.imgtobase64converter method)": [[78, "graphai.core.image.ocr.ImgToBase64Converter.get_base64"]], "get_ocr_colnames() (in module graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.get_ocr_colnames"]], "graphai.core.image.ocr": [[78, "module-graphai.core.image.ocr"]], "perform_ocr() (graphai.core.image.ocr.abstractocrmodel method)": [[78, "graphai.core.image.ocr.AbstractOCRModel.perform_ocr"]], "perform_ocr() (graphai.core.image.ocr.googleocrmodel method)": [[78, "graphai.core.image.ocr.GoogleOCRModel.perform_ocr"]], "perform_ocr() (graphai.core.image.ocr.openaiocrmodel method)": [[78, "graphai.core.image.ocr.OpenAIOCRModel.perform_ocr"]], "perform_tesseract_ocr_on_pdf() (in module graphai.core.image.ocr)": [[78, "graphai.core.image.ocr.perform_tesseract_ocr_on_pdf"]], "wait_for_ocr_results() (graphai.core.image.ocr.googleocrmodel method)": [[78, "graphai.core.image.ocr.GoogleOCRModel.wait_for_ocr_results"]], "ontologydata (class in graphai.core.ontology)": [[79, "graphai.core.ontology.OntologyData"]], "break_up_cluster() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.break_up_cluster"]], "compute_category_anchors_using_references() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.compute_symmetric_concept_concept_matrix"]], "generate_category_concept_dict() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_anchor_pages"]], "get_category_branch() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_branch"]], "get_category_category_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_category_to_category"]], "get_cluster_category_closest() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.get_cluster_category_closest"]], "get_cluster_category_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_closest_category"]], "get_cluster_closest_category_embedding() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_closest_category_embedding"]], "get_cluster_cluster_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_cluster_parent"]], "get_concept_category_closest() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.get_concept_category_closest"]], "get_concept_category_closest_embedding() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_category_closest_embedding"]], "get_concept_category_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_closest_category"]], "get_concept_closest_concept() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_closest_concept"]], "get_concept_closest_concept_embedding() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_closest_concept_embedding"]], "get_concept_cluster_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_closest() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.get_concept_concept_closest"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_name"]], "get_concept_names_list() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_names_list"]], "get_concept_parent_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_custom_cluster_closest_category"]], "get_custom_cluster_closest_category_embedding() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_custom_cluster_closest_category_embedding"]], "get_non_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_ontology_concept_names_table"]], "get_openalex_nearest() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.get_openalex_nearest"]], "get_root_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.get_test_concept_names"]], "graphai.core.ontology": [[79, "module-graphai.core.ontology"]], "load_anchor_page_dict() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[79, "graphai.core.ontology.OntologyData.load_ontology_concept_names"]], "recompute_clusters() (in module graphai.core.ontology)": [[79, "graphai.core.ontology.recompute_clusters"]], "arithmetic_mean_laplacians() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.get_laplacian"]], "graphai.core.ontology.clustering": [[80, "module-graphai.core.ontology.clustering"]], "group_clustered() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.group_clustered"]], "normalize_features() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.normalize_features"]], "perform_pca() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.ontology.clustering)": [[80, "graphai.core.ontology.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.OntologyData"]], "adjusted_exp() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.average_and_combine"]], "combine_concept_and_anchor_scores() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.combine_concept_and_anchor_scores"]], "compute_average() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.compute_average"]], "compute_average_of_df() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.compute_average_of_df"]], "compute_category_anchors_using_references() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.derive_col_to_col_graph"]], "embeddings_table_exists() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.embeddings_table_exists"]], "ensure_nonzero_denominator() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.ensure_nonzero_denominator"]], "execute_multi_entity_concepts_and_anchors_query() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.execute_multi_entity_concepts_and_anchors_query"]], "execute_single_entity_concepts_and_anchors_query() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.execute_single_entity_concepts_and_anchors_query"]], "generate_category_concept_dict() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_anchor_pages"]], "get_category_branch() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_branch"]], "get_category_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category"]], "get_cluster_closest_category_embedding() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category_embedding"]], "get_cluster_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.get_col_to_col_dict"]], "get_concept_category_closest_embedding() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_category_closest_embedding"]], "get_concept_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_concept() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept"]], "get_concept_closest_concept_embedding() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept_embedding"]], "get_concept_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_name"]], "get_concept_names_list() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_names_list"]], "get_concept_parent_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category"]], "get_custom_cluster_closest_category_embedding() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category_embedding"]], "get_id_dict() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_ontology_concept_names_table"]], "get_root_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.get_test_concept_names"]], "graphai.core.ontology.data": [[81, "module-graphai.core.ontology.data"]], "load_anchor_page_dict() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[81, "graphai.core.ontology.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.ontology.data)": [[81, "graphai.core.ontology.data.to_ndarray_and_flatten"]], "break_up_cluster() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.break_up_cluster"]], "get_category_info() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_category_info"]], "get_cluster_category_closest() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_cluster_category_closest"]], "get_cluster_info() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_cluster_info"]], "get_concept_category_closest() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_concept_category_closest"]], "get_concept_concept_closest() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_concept_concept_closest"]], "get_concept_info() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.get_concept_info"]], "graphai.core.ontology.ontology": [[82, "module-graphai.core.ontology.ontology"]], "recompute_clusters() (in module graphai.core.ontology.ontology)": [[82, "graphai.core.ontology.ontology.recompute_clusters"]], "get_openalex_nearest() (in module graphai.core.ontology.openalex)": [[83, "graphai.core.ontology.openalex.get_openalex_nearest"]], "graphai.core.ontology.openalex": [[83, "module-graphai.core.ontology.openalex"]], "graphai.core.scraping": [[84, "module-graphai.core.scraping"]], "cache_lookup_get_sublinks() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.cache_lookup_get_sublinks"]], "cache_lookup_process_all_sublinks() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.cache_lookup_process_all_sublinks"]], "check_url() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.check_url"]], "compare_strings() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.create_base_url_token"]], "extract_scraping_content_callback() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.extract_scraping_content_callback"]], "extract_text_from_url() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.get_sublinks"]], "graphai.core.scraping.scraping": [[85, "module-graphai.core.scraping.scraping"]], "initialize_data_dict() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.initialize_url"]], "initialize_url_and_get_sublinks() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.initialize_url_and_get_sublinks"]], "parse_page_type() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.parse_page_type"]], "process_all_scraping_sublinks_parallel() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.process_all_scraping_sublinks_parallel"]], "process_all_sublinks() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.remove_headers"]], "remove_junk_scraping_parallel() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.remove_junk_scraping_parallel"]], "remove_long_patterns() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.remove_long_patterns"]], "scraping_sublinks_callback() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.scraping_sublinks_callback"]], "shift_to_max_correlation() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.string_circular_shift"]], "sublink_parallel_processing_merge_callback() (in module graphai.core.scraping.scraping)": [[85, "graphai.core.scraping.scraping.sublink_parallel_processing_merge_callback"]], "conceptsgraph (class in graphai.core.text)": [[86, "graphai.core.text.ConceptsGraph"]], "add_graph_score() (graphai.core.text.conceptsgraph method)": [[86, "graphai.core.text.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.conceptsgraph method)": [[86, "graphai.core.text.ConceptsGraph.add_ontology_scores"]], "compute_scores() (in module graphai.core.text)": [[86, "graphai.core.text.compute_scores"]], "draw_graph() (in module graphai.core.text)": [[86, "graphai.core.text.draw_graph"]], "draw_ontology() (in module graphai.core.text)": [[86, "graphai.core.text.draw_ontology"]], "extract_keywords() (in module graphai.core.text)": [[86, "graphai.core.text.extract_keywords"]], "generate_exercise() (in module graphai.core.text)": [[86, "graphai.core.text.generate_exercise"]], "get_ontology_concepts() (graphai.core.text.conceptsgraph method)": [[86, "graphai.core.text.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text": [[86, "module-graphai.core.text"]], "load_from_db() (graphai.core.text.conceptsgraph method)": [[86, "graphai.core.text.ConceptsGraph.load_from_db"]], "wikisearch() (in module graphai.core.text)": [[86, "graphai.core.text.wikisearch"]], "draw_graph() (in module graphai.core.text.draw)": [[87, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[87, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[87, "module-graphai.core.text.draw"]], "conceptembeddings (class in graphai.core.text.embeddings)": [[88, "graphai.core.text.embeddings.ConceptEmbeddings"]], "compute_embedding_scores() (in module graphai.core.text.embeddings)": [[88, "graphai.core.text.embeddings.compute_embedding_scores"]], "graphai.core.text.embeddings": [[88, "module-graphai.core.text.embeddings"]], "values() (graphai.core.text.embeddings.conceptembeddings method)": [[88, "graphai.core.text.embeddings.ConceptEmbeddings.values"]], "generate_exercise() (in module graphai.core.text.exercises)": [[89, "graphai.core.text.exercises.generate_exercise"]], "graphai.core.text.exercises": [[89, "module-graphai.core.text.exercises"]], "conceptsgraph (class in graphai.core.text.graph)": [[90, "graphai.core.text.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.text.graph.conceptsgraph method)": [[90, "graphai.core.text.graph.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.graph.conceptsgraph method)": [[90, "graphai.core.text.graph.ConceptsGraph.add_ontology_scores"]], "get_ontology_concepts() (graphai.core.text.graph.conceptsgraph method)": [[90, "graphai.core.text.graph.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text.graph": [[90, "module-graphai.core.text.graph"]], "load_from_db() (graphai.core.text.graph.conceptsgraph method)": [[90, "graphai.core.text.graph.ConceptsGraph.load_from_db"]], "extract_keywords() (in module graphai.core.text.keywords)": [[91, "graphai.core.text.keywords.extract_keywords"]], "graphai.core.text.keywords": [[91, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[91, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[91, "graphai.core.text.keywords.word_tokens"]], "aggregate_results() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.aggregate_results"]], "compute_keywords_scores() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.compute_keywords_scores"]], "compute_levenshtein_score() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.compute_levenshtein_score"]], "compute_mixed_score() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.compute_mixed_score"]], "compute_scores() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.compute_scores"]], "filter_results() (in module graphai.core.text.scores)": [[92, "graphai.core.text.scores.filter_results"]], "graphai.core.text.scores": [[92, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch": [[93, "module-graphai.core.text.wikisearch"]], "search_elasticsearch() (in module graphai.core.text.wikisearch)": [[93, "graphai.core.text.wikisearch.search_elasticsearch"]], "search_wikipedia_api() (in module graphai.core.text.wikisearch)": [[93, "graphai.core.text.wikisearch.search_wikipedia_api"]], "wikisearch() (in module graphai.core.text.wikisearch)": [[93, "graphai.core.text.wikisearch.wikisearch"]], "graphai.core.translation": [[94, "module-graphai.core.translation"]], "translationmodels (class in graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.TranslationModels"]], "compute_slide_tfidf_scores() (in module graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.compute_slide_tfidf_scores"]], "find_best_slide_subset() (in module graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.find_set_cover"]], "generate_src_tgt_dict() (in module graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.generate_src_tgt_dict"]], "generate_translation_text_token() (in module graphai.core.translation.text_utils)": [[95, "graphai.core.translation.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.translation.text_utils.translationmodels method)": [[95, "graphai.core.translation.text_utils.TranslationModels.get_device"]], "get_last_usage() (graphai.core.translation.text_utils.translationmodels method)": [[95, "graphai.core.translation.text_utils.TranslationModels.get_last_usage"]], "graphai.core.translation.text_utils": [[95, "module-graphai.core.translation.text_utils"]], "load_models() (graphai.core.translation.text_utils.translationmodels method)": [[95, "graphai.core.translation.text_utils.TranslationModels.load_models"]], "translate() (graphai.core.translation.text_utils.translationmodels method)": [[95, "graphai.core.translation.text_utils.TranslationModels.translate"]], "unload_model() (graphai.core.translation.text_utils.translationmodels method)": [[95, "graphai.core.translation.text_utils.TranslationModels.unload_model"]], "cache_lookup_translate_text() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.cache_lookup_translate_text"]], "cache_lookup_translation_text_using_fingerprint() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.cache_lookup_translation_text_using_fingerprint"]], "compute_translation_text_fingerprint_callback() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.compute_translation_text_fingerprint_callback"]], "detect_language_translation() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.detect_language_translation"]], "graphai.core.translation.translation": [[96, "module-graphai.core.translation.translation"]], "translate_text() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.translate_text"]], "translate_text_callback() (in module graphai.core.translation.translation)": [[96, "graphai.core.translation.translation.translate_text_callback"]], "graphai.core.utils": [[97, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[98, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[98, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[98, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[98, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[98, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[98, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[99, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[99, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[99, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[99, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[100, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[101, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[101, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[101, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[101, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[101, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[101, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[101, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[102, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[102, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[102, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[102, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[102, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[103, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[104, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[104, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[104, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[104, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[105, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[105, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.core.video": [[106, "module-graphai.core.video"]], "cache_lookup_detect_slides() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.cache_lookup_detect_slides"]], "cache_lookup_extract_audio() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.cache_lookup_extract_audio"]], "cache_lookup_retrieve_file_from_url() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.cache_lookup_retrieve_file_from_url"]], "compute_audio_fingerprint() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_audio_fingerprint"]], "compute_audio_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_audio_fingerprint_callback"]], "compute_noise_level_parallel() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_noise_level_parallel"]], "compute_noise_threshold_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_noise_threshold_callback"]], "compute_single_image_fingerprint() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_single_image_fingerprint"]], "compute_slide_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_slide_fingerprint_callback"]], "compute_slide_set_fingerprint() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_slide_set_fingerprint"]], "compute_slide_transitions_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_slide_transitions_callback"]], "compute_slide_transitions_parallel() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_slide_transitions_parallel"]], "compute_video_fingerprint() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_video_fingerprint"]], "compute_video_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.compute_video_fingerprint_callback"]], "detect_slides_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.detect_slides_callback"]], "extract_and_sample_frames() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.extract_and_sample_frames"]], "extract_audio() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.extract_audio"]], "extract_audio_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.extract_audio_callback"]], "graphai.core.video.video": [[107, "module-graphai.core.video.video"]], "ignore_audio_fingerprint_results_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.ignore_audio_fingerprint_results_callback"]], "ignore_single_image_fingerprint_results_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.ignore_single_image_fingerprint_results_callback"]], "ignore_slide_fingerprint_results_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.ignore_slide_fingerprint_results_callback"]], "ignore_video_fingerprint_results_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.ignore_video_fingerprint_results_callback"]], "reextract_cached_audio() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.reextract_cached_audio"]], "reextract_cached_slides() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.reextract_cached_slides"]], "retrieve_audio_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.retrieve_audio_fingerprint_callback"]], "retrieve_file_from_url() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.retrieve_file_from_url"]], "retrieve_file_from_url_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.retrieve_file_from_url_callback"]], "retrieve_slide_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.retrieve_slide_fingerprint_callback"]], "retrieve_video_fingerprint_callback() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.retrieve_video_fingerprint_callback"]], "video_id_and_duration_fp_lookup() (in module graphai.core.video.video)": [[107, "graphai.core.video.video.video_id_and_duration_fp_lookup"]], "nlpmodels (class in graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.NLPModels"]], "check_ocr_and_hash_thresholds() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.check_ocr_and_hash_thresholds"]], "compute_ocr_noise_level() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.compute_video_ocr_transitions"]], "create_video_filename_using_url_format() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.create_video_filename_using_url_format"]], "detect_audio_duration() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.detect_audio_duration"]], "extract_audio_from_video() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.extract_audio_from_video"]], "extract_frames() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.extract_frames"]], "frame_hash_similarity() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.frame_ocr_transition"]], "generate_audio_token() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.generate_audio_token"]], "generate_frame_sample_indices() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_symbolic_token() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.generate_symbolic_token"]], "get_cosine_sim() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.get_cosine_sim"]], "get_text_word_vector() (graphai.core.video.video_utils.nlpmodels method)": [[108, "graphai.core.video.video_utils.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.video.video_utils.nlpmodels method)": [[108, "graphai.core.video.video_utils.NLPModels.get_text_word_vector_using_words"]], "get_words() (graphai.core.video.video_utils.nlpmodels method)": [[108, "graphai.core.video.video_utils.NLPModels.get_words"]], "graphai.core.video.video_utils": [[108, "module-graphai.core.video.video_utils"]], "load_nlp_models() (graphai.core.video.video_utils.nlpmodels method)": [[108, "graphai.core.video.video_utils.NLPModels.load_nlp_models"]], "perform_slow_audio_probe() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.perform_slow_audio_probe"]], "read_json_gz_file() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.read_txt_gz_file"]], "retrieve_file_from_any_source() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.retrieve_file_from_any_source"]], "retrieve_file_from_kaltura() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.retrieve_file_from_kaltura"]], "retrieve_file_from_youtube() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.retrieve_file_from_youtube"]], "retrieve_video_file_from_generic_url() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.retrieve_video_file_from_generic_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.tesseract_ocr_or_get_cached"]], "write_txt_gz_file() (in module graphai.core.video.video_utils)": [[108, "graphai.core.video.video_utils.write_txt_gz_file"]], "graphai.core.voice": [[109, "module-graphai.core.voice"]], "whispertranscriptionmodel (class in graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel"]], "cache_lookup_audio_fingerprint() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.cache_lookup_audio_fingerprint"]], "cache_lookup_audio_language() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.cache_lookup_audio_language"]], "cache_lookup_audio_transcript() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.cache_lookup_audio_transcript"]], "detect_audio_segment_lang_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_language_callback() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.detect_language_callback"]], "detect_language_parallel() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.detect_language_parallel"]], "detect_language_retrieve_from_db_and_split() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.detect_language_retrieve_from_db_and_split"]], "extract_media_segment() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.extract_media_segment"]], "get_last_usage() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_last_usage"]], "get_silence_thresholds() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_silence_thresholds"]], "graphai.core.voice.transcribe": [[110, "module-graphai.core.voice.transcribe"]], "load_model_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.load_model_whisper"]], "transcribe_audio_to_text() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.transcribe_audio_to_text"]], "transcribe_audio_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.transcribe_audio_whisper"]], "transcribe_callback() (in module graphai.core.voice.transcribe)": [[110, "graphai.core.voice.transcribe.transcribe_callback"]], "unload_model() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[110, "graphai.core.voice.transcribe.WhisperTranscriptionModel.unload_model"]], "graphai.definitions": [[111, "module-graphai.definitions"]], "graphai.pipelines": [[112, "module-graphai.pipelines"]], "graphai.pipelines.investment": [[113, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[114, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[114, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[114, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[114, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[114, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[114, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[115, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[115, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[115, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[115, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[115, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[116, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[116, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[117, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[117, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[118, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[118, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[119, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[119, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[120, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[120, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[121, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[121, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[122, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[122, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[123, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[123, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[124, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[124, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[125, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[125, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[125, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[125, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[125, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[126, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[130, "module-graphai.pipelines.visualisation"]]}})