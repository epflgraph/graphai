Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.auth", "graphai.api.auth.auth_utils", "graphai.api.auth.log", "graphai.api.auth.router", "graphai.api.common", "graphai.api.common.schemas", "graphai.api.common.utils", "graphai.api.embedding", "graphai.api.embedding.router", "graphai.api.embedding.schemas", "graphai.api.image", "graphai.api.image.router", "graphai.api.image.schemas", "graphai.api.main", "graphai.api.main.main", "graphai.api.ontology", "graphai.api.ontology.router", "graphai.api.ontology.schemas", "graphai.api.scraping", "graphai.api.scraping.router", "graphai.api.scraping.schemas", "graphai.api.text", "graphai.api.text.router", "graphai.api.text.schemas", "graphai.api.translation", "graphai.api.translation.router", "graphai.api.translation.schemas", "graphai.api.video", "graphai.api.video.router", "graphai.api.video.schemas", "graphai.api.voice", "graphai.api.voice.router", "graphai.api.voice.schemas", "graphai.celery", "graphai.celery.common", "graphai.celery.common.celery_config", "graphai.celery.common.celery_tools", "graphai.celery.common.jobs", "graphai.celery.common.log", "graphai.celery.common.tasks", "graphai.celery.embedding", "graphai.celery.embedding.jobs", "graphai.celery.embedding.tasks", "graphai.celery.image", "graphai.celery.image.jobs", "graphai.celery.image.tasks", "graphai.celery.ontology", "graphai.celery.ontology.jobs", "graphai.celery.ontology.tasks", "graphai.celery.scraping", "graphai.celery.scraping.jobs", "graphai.celery.scraping.tasks", "graphai.celery.text", "graphai.celery.text.jobs", "graphai.celery.text.tasks", "graphai.celery.translation", "graphai.celery.translation.jobs", "graphai.celery.translation.tasks", "graphai.celery.video", "graphai.celery.video.jobs", "graphai.celery.video.tasks", "graphai.celery.voice", "graphai.celery.voice.jobs", "graphai.celery.voice.tasks", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.config", "graphai.core.common.fingerprinting", "graphai.core.common.lookup", "graphai.core.embedding", "graphai.core.embedding.embedding", "graphai.core.image", "graphai.core.image.image", "graphai.core.image.ocr", "graphai.core.ontology", "graphai.core.ontology.clustering", "graphai.core.ontology.data", "graphai.core.ontology.ontology", "graphai.core.ontology.openalex", "graphai.core.scraping", "graphai.core.scraping.scraping", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.embeddings", "graphai.core.text.exercises", "graphai.core.text.graph", "graphai.core.text.keywords", "graphai.core.text.scores", "graphai.core.text.wikisearch", "graphai.core.translation", "graphai.core.translation.text_utils", "graphai.core.translation.translation", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.core.video", "graphai.core.video.video", "graphai.core.voice", "graphai.core.voice.transcribe", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.auth.rst", "graphai.api.auth.auth_utils.rst", "graphai.api.auth.log.rst", "graphai.api.auth.router.rst", "graphai.api.common.rst", "graphai.api.common.schemas.rst", "graphai.api.common.utils.rst", "graphai.api.embedding.rst", "graphai.api.embedding.router.rst", "graphai.api.embedding.schemas.rst", "graphai.api.image.rst", "graphai.api.image.router.rst", "graphai.api.image.schemas.rst", "graphai.api.main.rst", "graphai.api.main.main.rst", "graphai.api.ontology.rst", "graphai.api.ontology.router.rst", "graphai.api.ontology.schemas.rst", "graphai.api.scraping.rst", "graphai.api.scraping.router.rst", "graphai.api.scraping.schemas.rst", "graphai.api.text.rst", "graphai.api.text.router.rst", "graphai.api.text.schemas.rst", "graphai.api.translation.rst", "graphai.api.translation.router.rst", "graphai.api.translation.schemas.rst", "graphai.api.video.rst", "graphai.api.video.router.rst", "graphai.api.video.schemas.rst", "graphai.api.voice.rst", "graphai.api.voice.router.rst", "graphai.api.voice.schemas.rst", "graphai.celery.rst", "graphai.celery.common.rst", "graphai.celery.common.celery_config.rst", "graphai.celery.common.celery_tools.rst", "graphai.celery.common.jobs.rst", "graphai.celery.common.log.rst", "graphai.celery.common.tasks.rst", "graphai.celery.embedding.rst", "graphai.celery.embedding.jobs.rst", "graphai.celery.embedding.tasks.rst", "graphai.celery.image.rst", "graphai.celery.image.jobs.rst", "graphai.celery.image.tasks.rst", "graphai.celery.ontology.rst", "graphai.celery.ontology.jobs.rst", "graphai.celery.ontology.tasks.rst", "graphai.celery.scraping.rst", "graphai.celery.scraping.jobs.rst", "graphai.celery.scraping.tasks.rst", "graphai.celery.text.rst", "graphai.celery.text.jobs.rst", "graphai.celery.text.tasks.rst", "graphai.celery.translation.rst", "graphai.celery.translation.jobs.rst", "graphai.celery.translation.tasks.rst", "graphai.celery.video.rst", "graphai.celery.video.jobs.rst", "graphai.celery.video.tasks.rst", "graphai.celery.voice.rst", "graphai.celery.voice.jobs.rst", "graphai.celery.voice.tasks.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.config.rst", "graphai.core.common.fingerprinting.rst", "graphai.core.common.lookup.rst", "graphai.core.embedding.rst", "graphai.core.embedding.embedding.rst", "graphai.core.image.rst", "graphai.core.image.image.rst", "graphai.core.image.ocr.rst", "graphai.core.ontology.rst", "graphai.core.ontology.clustering.rst", "graphai.core.ontology.data.rst", "graphai.core.ontology.ontology.rst", "graphai.core.ontology.openalex.rst", "graphai.core.scraping.rst", "graphai.core.scraping.scraping.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.embeddings.rst", "graphai.core.text.exercises.rst", "graphai.core.text.graph.rst", "graphai.core.text.keywords.rst", "graphai.core.text.scores.rst", "graphai.core.text.wikisearch.rst", "graphai.core.translation.rst", "graphai.core.translation.text_utils.rst", "graphai.core.translation.translation.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.core.video.rst", "graphai.core.video.video.rst", "graphai.core.voice.rst", "graphai.core.voice.transcribe.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.auth package", "graphai.api.auth.auth_utils module", "graphai.api.auth.log module", "graphai.api.auth.router module", "graphai.api.common package", "graphai.api.common.schemas module", "graphai.api.common.utils module", "graphai.api.embedding package", "graphai.api.embedding.router module", "graphai.api.embedding.schemas module", "graphai.api.image package", "graphai.api.image.router module", "graphai.api.image.schemas module", "graphai.api.main package", "graphai.api.main.main module", "graphai.api.ontology package", "graphai.api.ontology.router module", "graphai.api.ontology.schemas module", "graphai.api.scraping package", "graphai.api.scraping.router module", "graphai.api.scraping.schemas module", "graphai.api.text package", "graphai.api.text.router module", "graphai.api.text.schemas module", "graphai.api.translation package", "graphai.api.translation.router module", "graphai.api.translation.schemas module", "graphai.api.video package", "graphai.api.video.router module", "graphai.api.video.schemas module", "graphai.api.voice package", "graphai.api.voice.router module", "graphai.api.voice.schemas module", "graphai.celery package", "graphai.celery.common package", "graphai.celery.common.celery_config module", "graphai.celery.common.celery_tools module", "graphai.celery.common.jobs module", "graphai.celery.common.log module", "graphai.celery.common.tasks module", "graphai.celery.embedding package", "graphai.celery.embedding.jobs module", "graphai.celery.embedding.tasks module", "graphai.celery.image package", "graphai.celery.image.jobs module", "graphai.celery.image.tasks module", "graphai.celery.ontology package", "graphai.celery.ontology.jobs module", "graphai.celery.ontology.tasks module", "graphai.celery.scraping package", "graphai.celery.scraping.jobs module", "graphai.celery.scraping.tasks module", "graphai.celery.text package", "graphai.celery.text.jobs module", "graphai.celery.text.tasks module", "graphai.celery.translation package", "graphai.celery.translation.jobs module", "graphai.celery.translation.tasks module", "graphai.celery.video package", "graphai.celery.video.jobs module", "graphai.celery.video.tasks module", "graphai.celery.voice package", "graphai.celery.voice.jobs module", "graphai.celery.voice.tasks module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.config module", "graphai.core.common.fingerprinting module", "graphai.core.common.lookup module", "graphai.core.embedding package", "graphai.core.embedding.embedding module", "graphai.core.image package", "graphai.core.image.image module", "graphai.core.image.ocr module", "graphai.core.ontology package", "graphai.core.ontology.clustering module", "graphai.core.ontology.data module", "graphai.core.ontology.ontology module", "graphai.core.ontology.openalex module", "graphai.core.scraping package", "graphai.core.scraping.scraping module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.embeddings module", "graphai.core.text.exercises module", "graphai.core.text.graph module", "graphai.core.text.keywords module", "graphai.core.text.scores module", "graphai.core.text.wikisearch module", "graphai.core.translation package", "graphai.core.translation.text_utils module", "graphai.core.translation.translation module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.core.video package", "graphai.core.video.video module", "graphai.core.voice package", "graphai.core.voice.transcribe module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 7, 25, 39, 68, 69, 71, 72, 74, 79, 80, 84, 85, 86, 91, 92, 94, 98, 104, 106, 108, 118], "contain": [0, 25, 37, 69, 72, 79, 80, 84, 85, 89, 90, 92, 108, 118], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 24, 25, 79, 80, 85, 86, 91, 118, 128], "project": 0, "ai": 0, "base": [0, 3, 4, 7, 24, 25, 37, 68, 74, 77, 78, 79, 80, 84, 85, 87, 89, 91, 92, 94, 97, 98, 100, 101, 104, 106, 108, 118, 123], "util": [0, 6, 66], "api": [0, 77, 85, 88, 92], "celeri": [0, 8], "core": 0, "pipelin": 0, "definit": [0, 118], "modul": [0, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 36, 42, 45, 48, 51, 54, 57, 60, 63, 67, 73, 75, 78, 83, 85, 93, 96, 99, 102, 105, 107, 111, 124, 128], "auth": 1, "common": [1, 35, 66], "embed": [1, 24, 25, 35, 66, 79, 85], "imag": [1, 35, 66, 71, 72, 106], "main": [1, 80, 111, 113], "ontologi": [1, 7, 24, 25, 35, 66, 85, 86, 89, 91], "scrape": [1, 35, 66], "text": [1, 35, 43, 58, 66, 69, 71, 72, 74, 77, 84, 94, 95, 96, 106, 108], "translat": [1, 35, 66, 72, 90, 108], "video": [1, 35, 66, 71, 72, 108], "voic": [1, 35, 66], "auth_util": 2, "log": [2, 36, 78, 80, 97, 101], "router": [2, 9, 12, 17, 20, 23, 26, 29, 32], "get_ratelimit_valu": 3, "class": [3, 4, 7, 25, 37, 68, 74, 77, 78, 80, 85, 87, 89, 94, 97, 98, 100, 101, 104, 106, 108], "token": [3, 5, 7, 39, 43, 46, 52, 58, 61, 64, 68, 71, 72, 74, 76, 84, 90, 94, 95, 106, 108], "access_token": 3, "str": [3, 4, 5, 7, 24, 25, 85, 90, 92, 100, 101, 104, 118], "token_typ": 3, "basemodel": [3, 7, 25], "model_computed_field": [3, 7, 25], "classvar": [3, 7, 25], "dict": [3, 4, 5, 7, 25, 68, 72, 79, 84, 94, 101, 106, 108], "computedfieldinfo": [3, 7, 25], "A": [3, 7, 24, 25, 80, 85, 86, 89, 90, 91, 92, 108], "dictionari": [3, 7, 8, 25, 69, 72, 78, 79, 80, 84, 92, 94, 101, 108], "comput": [3, 7, 24, 25, 71, 72, 79, 85, 87, 89, 91, 106, 118], "field": [3, 7, 25, 84], "name": [3, 7, 8, 25, 37, 68, 79, 101, 106], "correspond": [3, 7, 25, 71, 79], "object": [3, 7, 25, 37, 68, 72, 74, 77, 78, 80, 85, 86, 87, 89, 91, 94, 97, 98, 101, 103, 104, 106, 108], "model_config": [3, 7, 25], "configdict": [3, 7, 25], "configur": [3, 7, 25, 118], "model": [3, 7, 25, 74, 79, 94, 106, 108], "should": [3, 7, 25, 68, 101], "conform": [3, 7, 25], "pydant": [3, 7, 25], "config": [3, 7, 25, 67], "model_field": [3, 7, 25], "fieldinfo": [3, 7, 25], "annot": [3, 7, 25], "requir": [3, 7, 25, 118], "true": [3, 7, 24, 25, 39, 43, 58, 69, 71, 72, 74, 77, 78, 79, 80, 84, 85, 89, 90, 91, 94, 97, 101, 104, 106, 118], "metadata": [3, 7, 25], "about": [3, 7, 25, 85, 90], "defin": [3, 7, 25, 118, 122], "map": [3, 7, 25, 79, 80, 84, 103], "thi": [3, 7, 24, 25, 71, 72, 79, 98, 118], "replac": [3, 7, 25, 104, 118], "__fields__": [3, 7, 25], "from": [3, 7, 8, 24, 25, 68, 71, 72, 79, 84, 85, 89, 90, 91, 100, 106, 118], "v1": [3, 7, 25, 106], "tokendata": 3, "usernam": 3, "none": [3, 4, 5, 7, 24, 25, 37, 39, 40, 46, 61, 64, 68, 69, 71, 72, 74, 76, 78, 79, 80, 82, 84, 94, 97, 98, 101, 106, 108, 118, 119], "scope": 3, "list": [3, 24, 25, 68, 71, 72, 74, 78, 79, 80, 84, 85, 90, 92, 106, 118], "fals": [3, 7, 24, 25, 39, 40, 43, 46, 49, 52, 58, 61, 64, 68, 69, 72, 74, 76, 77, 78, 79, 80, 81, 84, 85, 90, 91, 94, 95, 101, 104, 106, 108, 118], "default": [3, 7, 24, 25, 37, 68, 74, 79, 84, 85, 86, 89, 90, 91, 92, 104, 106], "union": [3, 7], "nonetyp": [3, 7], "user": [3, 5], "email": [3, 100], "full_nam": 3, "disabl": 3, "bool": [3, 7, 24, 25, 85, 89, 90, 91, 101, 118], "userindb": 3, "hashed_password": 3, "generate_random_password_str": 3, "length": [3, 25, 40, 71, 84, 108], "32": [3, 84], "verify_password": 3, "plain_password": 3, "get_password_hash": 3, "password": 3, "get_us": 3, "get_user_ratelimit_overrid": 3, "path": [3, 5, 68, 69, 71, 77, 106, 108, 123], "authenticate_us": 3, "async": [3, 4, 5, 24], "extract_username_and_scop": 3, "extract_username_sync": 3, "get_user_ag": 4, "request": [4, 7, 24, 79, 84, 85, 88], "log_request": 4, "request_data": 4, "loggermiddlewar": 4, "app": [4, 37], "callabl": 4, "mutablemap": 4, "ani": [4, 24, 25, 85, 90, 91, 118], "await": 4, "basehttpmiddlewar": 4, "dispatch": 4, "call_next": 4, "respons": [4, 7], "create_access_token": 5, "data": [5, 24, 55, 72, 78, 79, 84, 85, 87, 88, 101], "expires_delta": 5, "timedelta": 5, "get_current_us": 5, "security_scop": 5, "securityscop": 5, "get_current_active_us": 5, "current_us": 5, "get_active_user_dummi": 5, "get_user_for_rate_limit": 5, "header": [5, 52, 84], "login_for_access_token": 5, "form_data": 5, "oauth2passwordrequestform": 5, "read_users_m": 5, "schema": [6, 9, 12, 17, 20, 23, 26, 29, 32], "taskidrespons": 7, "task_id": [7, 37], "repres": [7, 24, 25, 80, 90, 98, 104], "output": [7, 8, 25, 106, 108], "tree": [7, 79, 106], "endpoint": 7, "titl": [7, 25], "task": [7, 8, 36, 37, 39, 42, 45, 48, 51, 54, 57, 60, 63, 72, 98, 104], "id": [7, 8, 25, 37, 39, 68, 78, 79, 80, 84], "descript": [7, 24, 25], "creat": [7, 37, 68, 69, 78, 80, 84, 94, 101, 104], "an": [7, 24, 25, 68, 71, 74, 79, 80, 85, 88, 94, 101, 106, 108], "taskstatusrespons": 7, "task_nam": 7, "task_statu": 7, "task_result": [7, 37], "abc": 7, "json": [7, 69, 101, 106, 108], "statu": [7, 8, 37, 84], "filerequest": 7, "file": [7, 24, 68, 69, 71, 77, 85, 86, 101, 106, 108], "download": [7, 106], "receiv": 7, "anoth": [7, 25, 80], "tokenstatu": 7, "activ": 7, "fingerprint": [7, 67, 68, 72], "whether": [7, 24, 25, 68, 69, 71, 78, 79, 80, 84, 85, 89, 90, 91, 104, 106, 108, 118], "": [7, 24, 68, 69, 71, 74, 84, 85, 91, 94], "i": [7, 24, 25, 68, 69, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 90, 91, 92, 98, 104, 106, 108, 118], "avail": 7, "which": [7, 25, 68, 72, 80, 84, 85, 86, 90, 92, 106, 108, 118], "make": [7, 24, 25, 77, 80, 85, 88], "calcul": [7, 79, 106], "possibl": [7, 90], "otherwis": [7, 69, 74, 77, 85, 90, 106, 108, 118], "onli": [7, 24, 72, 80, 85, 92, 101, 106, 118], "cach": [7, 39, 67, 72, 106], "result": [7, 8, 24, 25, 37, 39, 55, 71, 72, 74, 76, 77, 79, 80, 84, 85, 86, 87, 89, 91, 92, 95, 106, 108, 118], "can": [7, 24, 25, 71, 72, 85, 92, 104, 108], "return": [7, 8, 24, 25, 37, 39, 68, 69, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 89, 90, 91, 92, 94, 100, 101, 103, 104, 106, 108, 118], "ha": [7, 25, 74, 118], "databas": [7, 72], "format_api_result": 8, "format": [8, 25, 69, 103, 106], "come": 8, "param": [8, 37, 39, 68, 69, 71, 72, 74, 77, 78, 79, 80, 84, 94, 106, 108, 112, 114, 115, 116, 117, 119, 120], "appropri": 8, "keyword": [24, 25, 55, 85, 89, 91, 92], "keywordsrequest": [24, 25], "use_nltk": [24, 55, 85, 90], "process": [24, 84, 85, 92], "raw": [24, 25, 100], "e": [24, 79, 84, 85, 91, 92, 106, 108], "g": [24, 79, 80, 85, 92, 108], "abstract": 24, "public": 24, "cours": 24, "lectur": [24, 25], "slide": [24, 106], "wikifi": [24, 25, 85, 86], "wikifyfromrawtextrequest": [24, 25], "wikifyfromkeywordsrequest": [24, 25], "method": [24, 46, 55, 76, 77, 78, 79, 80, 85, 92, 118], "restrict_to_ontologi": [24, 55, 85, 91], "score_smooth": [24, 55, 85, 91], "aggregation_coef": [24, 55, 85, 91], "float": [24, 25, 85, 86, 90, 91, 104, 118], "0": [24, 25, 69, 71, 74, 80, 84, 85, 86, 89, 91, 92, 94, 101, 103, 104, 106, 108, 112, 118], "5": [24, 25, 78, 80, 85, 89, 91, 104, 108], "filtering_threshold": [24, 55, 85, 91], "15": [24, 64, 85, 91], "refresh_scor": [24, 55, 85, 91], "concept": [24, 25, 78, 79, 80, 85, 86, 87, 89, 91, 92, 113, 118], "wikipedia": [24, 25, 80, 85, 92], "page": [24, 25, 78, 80, 84, 85, 91, 92], "ar": [24, 25, 39, 69, 71, 78, 80, 84, 85, 86, 90, 91, 103, 106, 118], "relev": [24, 25, 72, 85, 92], "each": [24, 25, 69, 78, 79, 80, 84, 85, 91, 92, 98, 104, 118], "set": [24, 25, 37, 69, 74, 85, 86, 92, 118], "score": [24, 25, 71, 78, 79, 80, 85, 86, 89, 90, 92, 94, 108, 118], "1": [24, 25, 69, 71, 78, 80, 84, 85, 91, 92, 94, 103, 104, 106, 118], "quantifi": 24, "done": [24, 72], "follow": [24, 98, 104, 106, 118], "extract": [24, 25, 84, 85, 90, 106, 108], "automat": [24, 68, 108], "omit": 24, "string": [24, 69, 71, 74, 84, 90, 94, 106], "provid": [24, 37, 78, 79, 80, 84, 85, 89, 94, 106], "input": [24, 25, 71, 77, 84, 106, 108], "under": 24, "instead": [24, 39, 68], "raw_text": [24, 25, 55], "wikisearch": [24, 85, 91], "For": [24, 25, 71, 118], "most": [24, 71], "10": [24, 78, 80, 85, 90, 92, 118], "retriev": [24, 68, 72, 84, 85, 92, 104, 106], "through": [24, 78, 80, 106], "elasticsearch": [24, 85, 92], "pair": [24, 80, 90, 104, 118], "sever": [24, 25, 85, 91, 104], "deriv": [24, 80], "take": [24, 80, 85, 91, 118], "account": 24, "vector": [24, 25, 79, 87], "among": [24, 72], "other": [24, 25, 80, 85, 91, 92, 104], "aggreg": [24, 25, 72, 79, 85, 91], "filter": [24, 85, 86, 90, 91], "accord": [24, 25, 79, 84, 118], "some": [24, 25, 85, 91, 98, 104, 118], "rule": 24, "keep": [24, 80, 91, 98], "argument": 24, "pass": [24, 74], "have": [24, 74, 118], "more": [24, 85, 90, 91, 98, 104], "precis": 24, "control": [24, 85, 91, 118], "It": [24, 25, 85, 90, 92, 118], "either": [24, 85, 92], "us": [24, 25, 68, 72, 74, 77, 78, 79, 80, 84, 85, 90, 91, 92, 104, 106, 108, 118], "one": [24, 25, 71, 79, 80, 85, 90, 92, 98, 104, 118], "appli": [24, 85, 89, 91], "transform": [24, 74, 79, 85, 89, 91], "distribut": [24, 85, 91], "them": [24, 71, 84, 85, 91], "evenli": [24, 85, 91], "number": [24, 72, 77, 78, 79, 80, 84, 85, 91, 92, 98, 101, 106, 118], "how": [24, 79, 84, 85, 90, 91, 94], "valu": [24, 68, 69, 71, 80, 84, 85, 87, 91, 106, 118], "sum": [24, 25, 79, 85, 91], "over": [24, 85, 91, 118], "normalis": [24, 85, 90, 91, 118], "max": [24, 85, 91], "between": [24, 68, 71, 78, 79, 80, 91, 103, 104, 106, 118], "linearli": [24, 91, 103], "interpol": [24, 91], "those": [24, 71, 80, 91], "two": [24, 25, 71, 72, 77, 78, 80, 84, 91, 106], "approach": [24, 91], "threshold": [24, 68, 72, 85, 86, 90, 91, 106, 108], "all": [24, 25, 71, 74, 79, 84, 85, 90, 91, 104, 106, 118], "decid": [24, 85, 91], "good": [24, 85, 91], "enough": [24, 74, 85, 91], "perspect": [24, 85, 91], "recomput": [24, 85, 91], "after": [24, 79, 85, 90, 91], "wikify_ontology_svg": [24, 55], "wikifyresponseelem": [24, 25], "level": [24, 25, 55, 79, 85, 86], "int": [24, 25, 85, 86, 92, 98, 101], "2": [24, 25, 71, 78, 80, 85, 92, 94, 104, 106, 118, 128], "svg": [24, 85, 86], "subgraph": 24, "induc": [24, 80, 85, 86], "wikify_graph_svg": [24, 55], "concept_score_threshold": [24, 55, 85, 86], "3": [24, 25, 78, 79, 80, 85, 86, 92, 104, 128], "edge_threshold": [24, 55, 85, 86], "min_component_s": [24, 55, 85, 86], "generate_exercis": [24, 55, 85, 88], "generatetextexerciserequest": [24, 25], "generatelectureexerciserequest": [24, 25], "chatbot": [24, 85, 88], "gener": [24, 25, 68, 74, 84, 85, 88, 90, 94, 106], "exercis": [24, 25, 85], "exampl": [25, 85, 90, 118], "To": 25, "draw": [25, 85], "straight": 25, "line": [25, 71, 79, 101, 108, 118], "point": [25, 79, 84], "nto": 25, "produc": 25, "finit": 25, "continu": 25, "describ": 25, "circl": 25, "center": 25, "radiu": 25, "nthat": 25, "right": 25, "angl": 25, "equal": [25, 72, 84], "fall": 25, "interior": 25, "same": [25, 72, 84, 91, 106, 118], "side": 25, "less": 25, "than": [25, 71, 90, 118], "indefinit": 25, "meet": 25, "concept_id": [25, 49, 78, 80, 81, 85, 86, 87, 89, 91, 92], "concept_nam": [25, 79, 85, 86, 91, 92], "search_scor": [25, 85, 86, 91, 92], "levenshtein_scor": [25, 85, 86], "embedding_local_scor": 25, "embedding_global_scor": 25, "graph_scor": [25, 85, 86, 89], "ontology_local_scor": [25, 85, 86, 89], "ontology_global_scor": [25, 85, 86, 89], "embedding_keywords_scor": 25, "graph_keywords_scor": 25, "ontology_keywords_scor": 25, "mixed_scor": [25, 85, 86, 91], "consist": 25, "measur": 25, "degre": 25, "respect": [25, 80, 103, 118], "json_schema_extra": 25, "1196": 25, "9447807640350212": 25, "936190393844887": 25, "9806112066572416": 25, "7920787642145825": 25, "995049504950495": 25, "974893873592604": 25, "9821428571428572": 25, "12401488": 25, "triangl": 25, "6047569988500392": 25, "18117340257708767": 25, "5498335395955196": 25, "22692356368077668": 25, "30184919393927595": 25, "4680631523928115": 25, "3889476967863415": 25, "6666666666666666": 25, "18009831669894236": 25, "3392857142857143": 25, "13295107": 25, "transvers": 25, "geometri": 25, "7783132229139607": 25, "8541509524253893": 25, "7899500675092881": 25, "8158838242881319": 25, "079490218003065": 25, "2110192540065071": 25, "6477110513680882": 25, "8333333333333333": 25, "8540145985401459": 25, "7178571428571429": 25, "146689": 25, "earth": 25, "6191743554865394": 25, "3393292344705985": 25, "6058537722364034": 25, "32094309692256273": 25, "04560562055085982": 25, "5850789404910146": 25, "2747973601576835": 25, "0006414535135995178": 25, "18025826114750698": 25, "2222222222222222": 25, "475": 25, "152547": 25, "bisect": 25, "5829791653941659": 25, "6658021950254382": 25, "5916531383849596": 25, "6072448552560294": 25, "3652836360342975": 25, "2470772552749216": 25, "49403585288280044": 25, "6649784001191716": 25, "27142857142857146": 25, "161243": 25, "nine": 25, "5954070757052229": 25, "6252501137210749": 25, "6128662674658956": 25, "6809346631686672": 25, "23567484697484573": 25, "3974121105221985": 25, "5454425715474266": 25, "6234172501117234": 25, "5428571428571429": 25, "165487": 25, "world": 25, "5875702591903744": 25, "32915926499040604": 25, "5557247926738698": 25, "35937866385263295": 25, "018301492693509606": 25, "20854298868986648": 25, "35381073854308764": 25, "3324892000595859": 25, "1780815": 25, "6123892146782264": 25, "40341637127911656": 25, "7313486756137682": 25, "43983570252851467": 25, "6785714285714286": 25, "1896705": 25, "oscul": 25, "6001356168702854": 25, "6095596040570643": 25, "15095693713821154": 25, "44197078056376315": 25, "06785714285714284": 25, "1898401": 25, "arc": 25, "6206023872446591": 25, "45726985451624325": 25, "6214735523605726": 25, "5967180832515523": 25, "37885045617052326": 25, "09530697673156802": 25, "429472346018896": 25, "41496111506273836": 25, "6075750180441352": 25, "1975821": 25, "skew": 25, "6071866898797716": 25, "453132323677798": 25, "5926923831317541": 25, "6342079203068262": 25, "1467272460558672": 25, "4842714203388464": 25, "4997033279190881": 25, "4571726500819306": 25, "201359": 25, "squar": [25, 118], "6094673983855882": 25, "6228894106876862": 25, "1853365490872417": 25, "33646712232710085": 25, "4634098506722587": 25, "2035714285714286": 25, "22634860": 25, "segment": [25, 94, 108], "6015345514255728": 25, "44397434138761116": 25, "6289329297461709": 25, "6463107906576082": 25, "5940970321127149": 25, "1325957938789834": 25, "47811753398436485": 25, "250265": 25, "rhumb": 25, "7314235936190492": 25, "5403307788136165": 25, "7146040614704057": 25, "7244902789723203": 25, "10852920758292811": 25, "36085995785542146": 25, "49088968517023296": 25, "5297660279561411": 25, "48877312914546234": 25, "4848520041529702": 25, "7678571428571428": 25, "31482": 25, "tangent": 25, "59976908308104": 25, "4963883113854736": 25, "1724878951919264": 25, "35549687067330726": 25, "3307757": 25, "simson": 25, "578947689005502": 25, "6270069103429565": 25, "013581124397822893": 25, "43210300146756936": 25, "462730": 25, "inscrib": 25, "768343013064605": 25, "7717801666974846": 25, "12482171404042144": 25, "6445516077439113": 25, "6622740540324344": 25, "44285714285714284": 25, "48082": 25, "great": 25, "6151678032679938": 25, "6194506424602977": 25, "5237975686048405": 25, "5752620110628913": 25, "40714285714285714": 25, "524003": 25, "intern": 25, "extern": 25, "9544700262181692": 25, "9547191776223249": 25, "06348267860292894": 25, "6012700464524801": 25, "8358244891138791": 25, "9464285714285714": 25, "5407025": 25, "7428783723631838": 25, "7502904601610197": 25, "006235350315249621": 25, "39303319759855243": 25, "6026876561381135": 25, "3928571428571429": 25, "6220": 25, "6044584589208712": 25, "6247087590356082": 25, "5495989056289238": 25, "6404968907479984": 25, "6107142857142858": 25, "664497": 25, "parallel": [25, 72], "6220133585096995": 25, "6017217718876411": 25, "40095604092651027": 25, "06793369410635872": 25, "3948184056141364": 25, "76956": 25, "7548885234150651": 25, "8246343320198054": 25, "7571720795352108": 25, "8192570426095808": 25, "3076508249923096": 25, "5768412624599064": 25, "7030698606760027": 25, "8248175182481752": 25, "65": 25, "89246": 25, "curv": 25, "6058837846959582": 25, "6061010985898527": 25, "6010512105924976": 25, "009984282260938813": 25, "4660368744333562": 25, "91111": 25, "trisect": 25, "7222511927302219": 25, "7114737175075206": 25, "42053296186769257": 25, "5472899496445176": 25, "7163539488698042": 25, "6821428571428572": 25, "946975": 25, "8476721575861583": 25, "653131668312657": 25, "9162572314594017": 25, "9426016455778317": 25, "2862599599983249": 25, "7850418748754415": 25, "6514226203690341": 25, "9778406317665507": 25, "wikipag": 25, "global": 25, "given": [25, 37, 68, 69, 71, 78, 79, 80, 84, 85, 86, 90, 92, 100, 101, 103, 106, 108, 118], "found": [25, 106], "local": [25, 106], "levenshtein": 25, "similar": [25, 71, 72, 78, 80, 106, 118], "mix": [25, 118], "weight": [25, 80, 85, 91, 118], "averag": [25, 78, 79, 80, 85, 91, 118], "search": [25, 84, 85, 92, 106], "bloom_level": 25, "liter": 25, "4": [25, 78, 80, 104, 128], "6": [25, 77, 104], "include_solut": 25, "output_format": 25, "plain": 25, "markdown": 25, "latex": 25, "llm_model": 25, "gpt": 25, "4o": 25, "mini": 25, "openai_api_kei": 25, "llm": 25, "desir": 25, "bloom": 25, "taxonomi": 25, "languag": [25, 61, 94, 106, 108], "sent": 25, "what": [25, 79, 85, 90], "involv": 25, "inclin": 25, "plane": 25, "friction": 25, "ask": 25, "solut": 25, "along": 25, "kei": [25, 80, 92, 108, 118], "openai": 25, "foo": 25, "bar": [25, 98], "factual": 25, "content": [25, 69, 84, 101, 106], "upon": 25, "bodi": 25, "whose": [25, 71, 80, 118], "mass": 25, "m": 25, "constant": 25, "written": 25, "form": 25, "f": [25, 69, 104], "ma": 25, "where": [25, 72, 106, 118], "forc": [25, 43, 46, 52, 58, 61, 64, 68, 72, 74, 76, 95, 106, 108], "acceler": 25, "both": [25, 71, 79, 118], "quantiti": 25, "If": [25, 39, 69, 71, 74, 78, 79, 80, 90, 94, 101, 118], "net": 25, "act": 25, "equat": 25, "lecture_id": 25, "0_mp6uyap1": 25, "celery_config": 36, "celery_tool": 36, "job": [36, 42, 45, 48, 51, 54, 57, 60, 63], "route_task": 37, "arg": [37, 39], "kwarg": [37, 72, 78, 80], "option": [37, 78, 79, 80, 84], "kw": 37, "baseconfig": 37, "developmentconfig": 37, "get_set": 37, "create_celeri": 37, "get_celery_task": 37, "asyncresult": 37, "get_task_info": 37, "info": 37, "get_n_celery_work": 38, "direct_lookup_generic_job": 39, "task_fn": 39, "return_result": [39, 43, 52, 58, 64], "timeout": 39, "40": [39, 84], "launch": 39, "direct": [39, 78, 80, 118], "lookup": [39, 67], "function": [39, 69, 71, 104, 106, 118], "look": 39, "up": [39, 80, 85, 86], "full": [39, 68, 69, 71, 77, 79, 106, 108], "just": [39, 79], "second": [39, 40, 71, 84, 104, 108], "case": [39, 69, 77, 101], "hit": 39, "miss": [39, 118], "msg": [40, 97, 101, 104], "total": [40, 72, 98, 104], "64": 40, "get_embedding_text_fingerprint_chain_list": 43, "model_typ": [43, 74], "fingerprint_lookup_job": [43, 46, 58, 61, 64], "fingerprint_compute_job": [43, 58], "asynchron": [43, 58], "fingerprint_job": [43, 46, 58, 61, 64], "embedding_job": 43, "ocr_job": 46, "googl": [46, 76, 77], "api_token": [46, 76], "tree_job": 49, "category_info_job": 49, "category_id": [49, 78, 80, 82], "cluster_info_job": 49, "cluster_id": [49, 78, 80, 81], "concept_info_job": 49, "openalex_category_nearest_topics_job": 49, "openalex_topic_nearest_categories_job": 49, "topic_id": [49, 78, 82], "recompute_clusters_job": 49, "n_cluster": [49, 78, 79, 81], "min_n": [49, 78, 79, 81], "graph_distance_job": 49, "src": [49, 58, 94, 95], "tgt": [49, 58, 94, 95], "src_type": 49, "tgt_type": 49, "avg": [49, 78, 80, 81], "coeff": [49, 78, 80, 81], "concept_nearest_category_job": 49, "top_n": [49, 78, 80, 81], "use_depth_3": [49, 78, 80, 81], "return_clust": [49, 78, 80, 81], "use_embed": [49, 78, 81], "cluster_nearest_category_job": 49, "concept_nearest_concept_job": 49, "breakup_cluster_job": 49, "sublink_lookup_job": 52, "extract_sublinks_job": 52, "url": [52, 61, 84, 100, 106], "extract_content_job": 52, "long_pattern": [52, 84], "wikify_text": 55, "wikify_keyword": 55, "keyword_list": 55, "get_translation_text_fingerprint_chain_list": 58, "translation_job": 58, "skip_sentence_segment": [58, 94, 95], "detect_text_language_job": 58, "get_video_fingerprint_chain_list": 61, "min_similar": [61, 71, 72], "n_job": 61, "8": 61, "ignore_fp_result": 61, "get_audio_fingerprint_chain_list": 61, "get_slide_fingerprint_chain_list": 61, "origin_token": [61, 68, 106], "retrieve_url_job": 61, "is_playlist": 61, "extract_audio_job": 61, "recalculate_cach": 61, "detect_slides_job": 61, "get_file_job": 61, "get_audio_language_detection_task_chain": 64, "n_div": [64, 108], "len_seg": 64, "30": [64, 108], "language_lookup_job": 64, "detect_language_job": 64, "transcribe_job": 64, "lang": [64, 72, 94, 106], "strict_sil": [64, 108], "common_util": 67, "delete_fil": 68, "file_path": [68, 69, 106], "delet": [68, 100], "create_symlink_between_path": 68, "old_path": 68, "new_path": 68, "symlink": 68, "old": 68, "real": 68, "new": [68, 77, 79, 104, 106], "videodbcachingmanag": 68, "initialize_databas": 68, "dbcachingmanagerbas": [68, 72], "init_db": 68, "audiodbcachingmanag": 68, "slidedbcachingmanag": 68, "textdbcachingmanag": 68, "scrapingdbcachingmanag": 68, "get_details_using_origin": 68, "col": [68, 72, 80], "get": [68, 80], "detail": [68, 72], "row": [68, 72, 79, 80, 91, 118], "origin": [68, 72, 79, 80, 84, 85, 89, 106], "column": [68, 79, 80, 85, 86, 89, 91, 92, 118], "embeddingdbcachingmanag": 68, "videoconfig": 68, "get_root_dir": 68, "get_image_dir": 68, "get_audio_dir": 68, "get_video_dir": 68, "get_transcript_dir": 68, "concat_file_path": 68, "filenam": [68, 69, 101], "subfold": 68, "concaten": 68, "root": [68, 106], "dir": 68, "generate_filepath": 68, "force_dir": 68, "its": [68, 71, 78, 79, 80, 84, 91, 106, 118], "particular": 68, "create_symlink": 68, "new_filenam": 68, "fingerprintparamet": 68, "load_valu": 68, "load": [68, 74, 78, 80, 94, 106, 108], "get_min_sim_imag": 68, "get_min_sim_audio": 68, "get_min_sim_video": 68, "get_token_file_statu": 68, "file_manag": [68, 76, 106, 108], "make_sure_path_exist": 69, "file_at_the_end": 69, "full_perm": 69, "recurs": [69, 106], "folder": [69, 106], "need": [69, 72, 74, 104], "exist": [69, 71, 77, 101], "thu": 69, "doesn": [69, 71], "t": [69, 71, 80, 85, 90, 101, 106], "end": [69, 71, 79, 84, 108, 118], "assign": [69, 118], "permiss": 69, "chmod": 69, "777": 69, "newli": 69, "file_exist": 69, "check": [69, 80, 84], "write_text_fil": 69, "filename_with_path": 69, "write": [69, 106], "textual": 69, "write_json_fil": 69, "d": [69, 98, 100], "read_text_fil": 69, "open": 69, "read": [69, 101, 106], "read_json_fil": 69, "format_datetime_for_mysql": 69, "dt": 69, "parse_mysql_datetim": 69, "get_current_datetim": 69, "current": [69, 103, 106], "datetim": [69, 103], "mysql": 69, "invert_dict": 69, "strtobool": 69, "val": 69, "convert": [69, 80, 100], "represent": [69, 71], "truth": 69, "y": [69, 118], "ye": 69, "n": [69, 74, 80, 85, 92, 106, 123], "off": 69, "rais": 69, "valueerror": 69, "anyth": 69, "els": 69, "insensit": 69, "copy_file_within_fold": 69, "folder_nam": 69, "src_file": 69, "dest_fil": 69, "convert_list_to_text": 69, "str_or_list": 69, "convert_text_back_to_list": 69, "return_list": [69, 95], "perceptual_hash_text": 71, "perceptu": [71, 106], "hash": [71, 106], "strong": 71, "min_window_length": 71, "minimum": [71, 72, 74, 79, 84, 106], "window": 71, "k": [71, 106, 118], "gram": 71, "max_window_length": 71, "maximum": [71, 84, 90, 92, 106, 118], "hash_len": 71, "md5_video_or_audio": 71, "input_filename_with_path": [71, 77, 106, 108], "md5": [71, 74, 94], "audio": [71, 72, 106, 108], "stream": [71, 106], "perceptual_hash_audio": 71, "max_length": [71, 84], "7200": 71, "decod": [71, 106], "perceptual_hash_imag": 71, "hash_siz": 71, "16": 71, "size": [71, 79, 85, 86, 106], "doe": [71, 80, 101], "compare_decoded_fingerprint": 71, "decoded_1": 71, "decoded_2": 71, "compar": [71, 84, 118], "fuzzi": 71, "match": [71, 72, 84, 92], "ratio": [71, 79, 118], "compare_encoded_fingerprint": 71, "f1": 71, "f2": 71, "decoder_func": 71, "hex_to_hash": 71, "encod": [71, 85, 90, 100], "indic": [71, 80, 84, 106, 108], "exact": 71, "target": [71, 72, 80, 94, 106], "so": [71, 84, 106], "find_closest_fingerprint_from_list": 71, "target_fp": 71, "fp_list": 71, "token_list": 71, "date_list": 71, "strip_underscor": 71, "candid": 71, "find": [71, 78, 80, 84, 85, 92, 106], "highest": [71, 108], "abov": [71, 103, 106, 118], "unexpect": [71, 72, 78, 79, 80, 108, 118], "indent": [71, 72, 78, 79, 80, 97, 101, 108], "lower": 71, "block": [71, 79, 101, 104, 108], "quot": [71, 79, 108], "without": [71, 79, 104, 108, 118], "blank": [71, 79, 108, 118], "unind": [71, 79, 108, 118], "paramet": [71, 79, 85, 86, 89, 90, 91, 92, 98, 100, 101, 104, 108, 111, 118], "differ": [71, 104, 118], "v": [71, 74, 80, 84, 118], "remov": [71, 84], "trail": 71, "underscor": 71, "closest": [71, 72, 78, 80], "three": [71, 108], "satisfi": 71, "criterion": 71, "find_closest_fingerprint_for_list_from_list": 71, "find_closest_audio_fingerprint_from_list": 71, "find_closest_image_fingerprint_from_list": 71, "find_closest_text_fingerprint_from_list": 71, "md5_text": 71, "compute_text_fingerprint": 71, "lookup_latest_allowed_d": 72, "fp_token": 72, "db_manag": 72, "fingerprint_lookup_retrieve_from_db": 72, "equality_condit": 72, "condit": 72, "count": 72, "sourc": [72, 79, 80, 94], "plu": [72, 80, 85, 89, 94], "fingerprint_lookup_parallel": 72, "input_dict": [72, 108], "n_total": [72, 84], "data_typ": 72, "perform": [72, 77, 79, 84, 92, 106, 118], "previou": [72, 98, 104], "step": [72, 106], "index": [72, 78, 79, 80, 84, 106, 118], "consid": [72, 79, 85, 86, 92, 106], "type": [72, 74, 84, 85, 89, 90, 91, 92, 100, 101, 108], "mode": [72, 79], "fingerprint_lookup_direct": 72, "fp_result": 72, "fingerprint_lookup_callback": 72, "results_list": [72, 108], "handl": 72, "collect": 72, "insert": 72, "retrieve_fingerprint_callback": 72, "has_origin": 72, "ignore_fingerprint_results_callback": 72, "token_status_func": 72, "is_fingerprint": 72, "fingerprint_cache_lookup": 72, "fingerprint_cache_lookup_with_most_similar": 72, "extra_col": 72, "cache_lookup_gener": 72, "database_callback_gener": 72, "values_dict": 72, "use_closest_match": 72, "token_based_text_lookup": 72, "main_col": 72, "modify_result_func": 72, "modify_result_arg": 72, "fingerprint_based_text_lookup": 72, "fp": [72, 74, 95, 106], "embedding_to_json": 74, "embedding_from_json": 74, "generate_embedding_text_token": 74, "get_text_token_count_using_model": 74, "model_token": 74, "embeddingmodel": 74, "get_devic": [74, 94], "load_model": [74, 94], "load_heavi": 74, "sentenc": [74, 90], "model_load": 74, "get_token": 74, "set_token": 74, "get_last_usag": [74, 94, 108], "unload_model": [74, 94, 108], "unload_period": [74, 94, 108], "10800": [74, 94], "unload": 74, "except": 74, "light": 74, "time": [74, 84, 96, 98, 106, 108], "sinc": 74, "last": [74, 104], "heavi": 74, "qualifi": 74, "get_token_count": 74, "get_max_token": 74, "emb": 74, "minilm": 74, "l12": 74, "v2": [74, 106], "copy_embedding_object": 74, "embedding_obj": 74, "compute_embedding_text_fingerprint_callback": 74, "token_based_embedding_lookup": 74, "fingerprint_based_embedding_lookup": 74, "embed_text": 74, "insert_embedding_into_db": 74, "embedding_text_list_fingerprint_parallel": 74, "text_list": 74, "embedding_text_list_fingerprint_callback": 74, "embedding_text_list_embed_parallel": 74, "input_list": 74, "embedding_text_list_embed_callback": 74, "ocr": [75, 106], "cache_lookup_extract_slide_text": 76, "extract_slide_text": 76, "extract_slide_text_callback": 76, "googleocrmodel": 77, "api_kei": 77, "establish_connect": 77, "lazili": 77, "connect": [77, 85, 86], "alreadi": 77, "successfulli": 77, "establish": 77, "perform_ocr": 77, "text_detect": 77, "document_text_detect": 77, "wait_for_ocr_result": 77, "image_object": 77, "dtd": 77, "retri": 77, "call": [77, 85, 90], "wait": 77, "td": 77, "detect": [77, 94, 106, 108], "document": [77, 106], "failur": 77, "get_ocr_colnam": 77, "ontologydata": [78, 80], "test_mod": [78, 80], "load_data": [78, 80], "load_ontology_concept_nam": [78, 80], "load_ontology_categori": [78, 80], "load_non_ontology_concept_nam": [78, 80], "load_concept_concept_graphscor": [78, 80], "load_category_categori": [78, 80], "load_category_concept": [78, 80], "load_anchor_page_dict": [78, 80], "categori": [78, 80, 85, 86], "anchor": [78, 80], "tabl": [78, 80, 122], "child": [78, 80], "parent": [78, 80], "relat": [78, 80], "compute_category_anchors_using_refer": [78, 80], "compute_symmetric_concept_concept_matrix": [78, 80], "matrix": [78, 79, 80], "compute_precalculated_similarity_matric": [78, 80], "precomput": [78, 80], "matric": [78, 80], "cluster": [78, 80, 92], "get_concept_concept_similar": [78, 80], "concept_1_id": [78, 80], "concept_2_id": [78, 80], "get_concept_cluster_similar": [78, 80], "linear": [78, 80], "get_cluster_cluster_similar": [78, 80], "cluster_1_id": [78, 80], "cluster_2_id": [78, 80], "get_concept_category_similar": [78, 80], "coeffici": [78, 80, 118], "get_cluster_category_similar": [78, 80], "get_category_category_similar": [78, 80], "category_1_id": [78, 80], "category_2_id": [78, 80], "get_concept_closest_concept": [78, 80], "top": [78, 80, 92], "get_concept_closest_concept_embed": [78, 80], "get_concept_closest_categori": [78, 80], "adaptive_threshold": [78, 80], "go": [78, 80], "depth": [78, 80], "directli": [78, 80], "get_concept_category_closest_embed": [78, 80], "get_cluster_closest_categori": [78, 80], "get_custom_cluster_closest_categori": [78, 80], "custom": [78, 80], "get_cluster_closest_category_embed": [78, 80], "get_custom_cluster_closest_category_embed": [78, 80], "get_category_closest_categori": [78, 80], "As": [78, 80], "compos": [78, 80], "crossov": [78, 80], "get_ontology_concept_names_t": [78, 80], "concepts_to_keep": [78, 80], "get_ontology_category_nam": [78, 80], "get_ontology_category_info": [78, 80], "cat_id": [78, 80, 81], "get_non_ontology_concept_nam": [78, 80], "get_concept_concept_graphscore_t": [78, 80], "get_category_to_categori": [78, 80], "get_category_par": [78, 80], "child_id": [78, 80], "get_category_branch": [78, 80], "get_category_children": [78, 80], "parent_id": [78, 80], "get_cluster_par": [78, 80], "get_cluster_children": [78, 80], "get_concept_parent_categori": [78, 80], "get_concept_parent_clust": [78, 80], "get_category_cluster_list": [78, 80], "get_category_concept_list": [78, 80], "get_cluster_concept_list": [78, 80], "get_category_concept_t": [78, 80], "get_category_cluster_t": [78, 80], "get_category_anchor_pag": [78, 80], "get_cluster_concept": [78, 80], "get_concept_nam": [78, 80], "get_concept_names_list": [78, 80], "get_test_concept_nam": [78, 80], "get_test_category_concept": [78, 80], "get_test_cluster_concept": [78, 80], "get_root_categori": [78, 80], "generate_tree_structur": [78, 80], "start": [78, 80, 84, 85, 92, 108], "generate_category_concept_dict": [78, 80], "recompute_clust": [78, 81], "ontology_data_obj": [78, 81], "get_concept_category_closest": [78, 81], "get_cluster_category_closest": [78, 81], "get_concept_concept_closest": [78, 81], "break_up_clust": [78, 81], "get_openalex_nearest": [78, 82], "openalex": 78, "compute_all_graphs_from_scratch": 79, "data_to_use_dict": 79, "scratch": 79, "datafram": [79, 80, 85, 86, 89, 91, 92, 118], "normalize_featur": 79, "normal": [79, 100], "l2": [79, 80], "norm": [79, 118], "dens": 79, "get_laplacian": 79, "laplacian": 79, "unnorm": 79, "adjac": [79, 80], "lil": 79, "spars": 79, "sum_laplacian": 79, "simpl": 79, "arithmetic_mean_laplacian": 79, "arithmet": [79, 118], "mean": [79, 85, 92, 118], "combine_laplacian": 79, "combin": [79, 118], "li": 79, "spec_embed_on_laplacian": 79, "seed": 79, "420": 79, "spectral": 79, "compon": [79, 85, 86], "random": [79, 106, 123], "optim": [79, 84], "combine_and_embed_laplacian": 79, "main_graph": 79, "n_dim": 79, "1000": 79, "combination_method": 79, "armean": 79, "dimens": 79, "perform_pca": 79, "n_compon": 79, "random_st": 79, "center_and_scal": 79, "pca": 79, "state": [79, 98], "dimension": 79, "reduct": 79, "precompute_clustering_metr": 79, "affin": [79, 118], "normalize_vector": 79, "perform_constrained_agglom": 79, "cosin": [79, 118], "linkag": 79, "full_comput": 79, "agglom": 79, "must": 79, "link": 79, "cannot": 79, "constraint": 79, "ndarrai": [79, 80], "ml": 79, "cl": 79, "return_model": 79, "well": [79, 104], "label": 79, "distanc": [79, 106, 118], "variance_ratio_ev": 79, "varianc": 79, "also": [79, 104], "known": 79, "calinski": 79, "harabasz": 79, "davies_bouldin_ev": 79, "davi": 79, "bouldin": 79, "cluster_using_embed": 79, "low": [79, 118], "space": [79, 84, 90, 101], "etc": [79, 85, 90], "group_clust": 79, "rows_and_col": 79, "precomputed_map": 79, "group": 79, "togeth": [79, 80], "becom": 79, "singl": [79, 106], "median": 79, "reassign_outli": 79, "reassign": 79, "outlier": 79, "non": 79, "cluster_and_reassign_outli": 79, "assign_to_categories_using_exist": 79, "category_concept": 79, "category_id_to_index": 79, "convert_cluster_labels_to_dict": 79, "cluster_label": 79, "concept_index_to_id": 79, "concept_index_to_nam": 79, "db_results_to_pandas_df": 80, "get_id_dict": 80, "make_adj_undirect": 80, "graph_adj": 80, "undirect": 80, "symmetr": 80, "derive_col_to_col_graph": 80, "orig_adj": 80, "get_col_to_col_dict": 80, "df": [80, 112, 119], "source_col": 80, "target_col": 80, "element": [80, 84], "return_chosen_indic": 80, "base_list": 80, "remove_invalid_pair": 80, "l_main": 80, "l_secondary_1": 80, "l_secondary_2": 80, "ref_dict": 80, "refer": 80, "appear": 80, "In": 80, "word": [80, 90, 106], "elimin": [80, 84], "against": 80, "l_secondari": 80, "secondari": 80, "clean": [80, 99], "order": 80, "thei": [80, 85, 90, 106], "were": 80, "create_graph_from_df": 80, "weight_col": 80, "col_dict": 80, "row_dict": 80, "pool_rows_and_col": 80, "make_symmetr": 80, "edg": [80, 84, 85, 86, 118], "turn": 80, "node": 80, "adj": 80, "pool": 80, "convert_to_csr_matrix": 80, "csr": 80, "to_ndarray_and_flatten": 80, "adjusted_exp": 80, "x": [80, 118], "overlap": 80, "adjusted_exp_slope_1_point": 80, "compute_averag": 80, "ensure_nonzero_denomin": 80, "compute_average_of_df": 80, "average_and_combin": 80, "s1": [80, 84], "s2": [80, 84], "l1": 80, "skip_empti": 80, "embeddings_table_exist": 80, "execute_single_entity_concepts_and_anchors_queri": 80, "concepts_queri": 80, "anchors_queri": 80, "entity_id": 80, "execute_multi_entity_concepts_and_anchors_queri": 80, "combine_concept_and_anchor_scor": 80, "d4_cat_id_to_index": 80, "concept_length": 80, "anchor_length": 80, "get_category_info": 81, "get_cluster_info": 81, "get_concept_info": 81, "compare_str": 84, "string1": 84, "string2": 84, "arrai": 84, "first": [84, 101, 104, 106], "charact": 84, "find_consecutive_run": 84, "min_run": 84, "consecut": [84, 104], "run": [84, 98, 104], "sequenc": [84, 106], "tupl": [84, 85, 90, 92, 118], "k1": [84, 106], "k2": [84, 106], "find_edge_pattern": 84, "content_stack": 84, "flip_str": 84, "repeat": 84, "pattern": 84, "begin": [84, 104], "webpag": 84, "flip": 84, "footer": 84, "string_circular_shift": 84, "shift": 84, "circular": 84, "mani": 84, "find_spac": 84, "everi": [84, 101, 106, 118], "shift_to_max_correl": 84, "correl": 84, "posit": [84, 85, 92], "largest": 84, "intersect": 84, "find_repeated_pattern": 84, "min_length": 84, "1024": 84, "everywher": 84, "within": 84, "substr": 84, "extract_text_from_url": 84, "request_head": 84, "tag_search_sequ": 84, "headless": 84, "browser": 84, "tag": [84, 100], "check_url": 84, "test_url": 84, "access": 84, "fulli": 84, "resolv": 84, "valid": [84, 110], "messag": [84, 104], "code": [84, 101, 108], "create_base_url_token": 84, "standard": 84, "initialize_url": 84, "base_url": 84, "initi": 84, "determin": 84, "protocol": 84, "http": 84, "correct": 84, "generate_sublink_token": 84, "base_token": 84, "validated_url": 84, "sublink": 84, "reconstruct_data_dict": 84, "page_typ": 84, "reconstruct": 84, "precalcul": 84, "initialize_data_dict": 84, "fill": 84, "pagetyp": 84, "vacant": 84, "get_sublink": 84, "later": 84, "parse_page_typ": 84, "pars": [84, 100, 106], "predefin": 84, "process_all_sublink": 84, "modifi": 84, "remove_head": 84, "remove_long_pattern": 84, "long": [84, 94], "cache_lookup_get_sublink": 84, "initialize_url_and_get_sublink": 84, "scraping_sublinks_callback": 84, "cache_lookup_process_all_sublink": 84, "process_all_scraping_sublinks_parallel": 84, "sublink_parallel_processing_merge_callback": 84, "remove_junk_scraping_parallel": 84, "extract_scraping_content_callback": 84, "conceptsgraph": [85, 86, 89, 91], "load_from_db": [85, 89], "get_ontology_concept": [85, 89], "add_graph_scor": [85, 89], "smooth": [85, 89, 91], "pd": [85, 86, 89, 91, 92, 118], "panda": [85, 86, 89, 91, 92, 103], "includ": [85, 89, 91, 104], "bump": [85, 89], "avoid": [85, 89, 101], "neg": [85, 89], "exponenti": [85, 89], "shape": [85, 89, 118], "add_ontology_scor": [85, 89], "push": [85, 89], "awai": [85, 89], "extract_keyword": [85, 90], "solv": [85, 90, 100], "problem": [85, 90, 100], "strip": [85, 90], "html": [85, 90, 100], "lowercas": [85, 90, 100], "nltk": [85, 90], "rake": [85, 90], "python": [85, 90], "join": [85, 90], "p": [85, 90], "Then": [85, 90], "crowd": [85, 90], "young": [85, 90], "boi": [85, 90], "re": [85, 90], "foolin": [85, 90], "around": [85, 90], "corner": [85, 90], "drunk": [85, 90], "dress": [85, 90], "best": [85, 90], "brown": [85, 90], "baggi": [85, 90], "platform": [85, 90], "sole": [85, 90], "don": [85, 90, 106], "give": [85, 90], "damn": [85, 90], "trumpet": [85, 90], "playin": [85, 90], "band": [85, 90], "ain": [85, 90], "rock": [85, 90], "roll": [85, 90], "keywords_list": [85, 92], "fraction": [85, 92], "interfac": [85, 92], "portion": [85, 92], "middl": [85, 92], "third": [85, 92], "searchrank": [85, 91, 92], "uniqu": [85, 91, 92, 118], "fallback": [85, 92], "compute_scor": [85, 91], "gather": [85, 91], "final": [85, 91, 104, 118], "x_score": [85, 91], "draw_ontologi": [85, 86], "neighbourhood": [85, 86], "store": [85, 86, 106], "tmp": [85, 86], "keywords_scor": [85, 86], "visualis": [85, 86, 110], "draw_graph": [85, 86], "below": [85, 86, 90, 103, 106], "out": [85, 86, 90], "conceptembed": 87, "hold": 87, "compute_embedding_scor": 87, "word_token": 90, "separ": 90, "you": 90, "rake_extract": 90, "split_word": 90, "return_scor": 90, "auto": 90, "filter_past_tenses_and_adverb": 90, "unconstrain": 90, "split": 90, "retur": 90, "minim": 90, "ignor": 90, "past": 90, "tens": 90, "participl": 90, "adverb": 90, "compute_levenshtein_scor": 91, "compute_keywords_scor": 91, "compute_mixed_scor": 91, "aggregate_result": 91, "coef": 91, "filter_result": 91, "epsilon": [91, 112], "depend": 91, "criteria": 91, "specifi": [91, 118], "subset": 91, "search_wikipedia_api": 92, "limit": 92, "queri": 92, "search_elasticsearch": 92, "elasticserch": 92, "text_util": 93, "generate_src_tgt_dict": 94, "generate_translation_text_token": 94, "detect_text_languag": 94, "compute_slide_tfidf_scor": 94, "list_of_set": 94, "min_freq": 94, "find_set_cov": 94, "coverag": 94, "find_best_slide_subset": 94, "slides_and_concept": 94, "prioriti": 94, "translationmodel": 94, "huggingfac": 94, "pysbd": 94, "en": [94, 106, 108], "fr": 94, "skip": [94, 101], "unpunctu": 94, "too": [94, 104], "flag": 94, "translate_text": 95, "translation_obj": 95, "translate_text_callback": 95, "compute_translation_text_fingerprint_callback": 95, "cache_lookup_translation_text_using_fingerprint": 95, "cache_lookup_translate_text": 95, "detect_language_transl": 95, "breadcrumb": 96, "progress_bar": 96, "debug": [97, 101], "color": [97, 101], "time_color": 97, "grai": 97, "report": [97, 104], "outdent": 97, "progressbar": 98, "n_iter": 98, "bar_length": 98, "50": 98, "progress": 98, "track": [98, 104, 106], "execut": [98, 104], "usag": [98, 104], "letter": 98, "b": 98, "c": [98, 118], "pb": 98, "len": 98, "consum": [98, 104], "updat": 98, "25": 98, "00": 98, "75": 98, "100": 98, "print": [98, 101, 103, 104], "iter": 98, "percentag": 98, "complet": [98, 104, 123], "overwrit": 98, "ban": 98, "reset": [98, 101, 104], "increment": 98, "counter": 98, "reus": [98, 104], "io": 99, "htmlcleaner": 100, "htmlparser": 100, "handle_starttag": 100, "attr": 100, "handle_endtag": 100, "handle_data": 100, "get_data": 100, "evalu": 101, "pref": 101, "x1b": 101, "0m": 101, "black": 101, "30m": 101, "blue": 101, "34m": 101, "cyan": 101, "36m": 101, "green": 101, "32m": 101, "magenta": 101, "35m": 101, "red": 101, "31m": 101, "white": 101, "37m": 101, "yellow": 101, "33m": 101, "cprint": 101, "is_bold": 101, "bold": 101, "pprint": 101, "inlin": 101, "only_first": 101, "pretti": 101, "preced": 101, "ellipsi": 101, "big": 101, "read_json": 101, "save_json": 101, "save": 101, "mkdir": 101, "dirnam": 101, "directori": 101, "date": 102, "stopwatch": 102, "now": 103, "timestamp": [103, 108], "2022": 103, "06": 103, "28": 103, "09": 103, "46": 103, "21": 103, "677968": 103, "rescal": 103, "min_dat": 103, "max_dat": 103, "seri": 103, "rang": [103, 118], "assum": [103, 118], "yyyi": 103, "mm": 103, "dd": 103, "add_year": 103, "n_year": 103, "sw": 104, "delta": 104, "284306764602661": 104, "variabl": 104, "t1": 104, "t2": 104, "yet": 104, "t3": 104, "609307289123535": 104, "849977970123291": 104, "660188913345337": 104, "preprocess": 104, "pre_tim": 104, "task_tim": 104, "postprocess": 104, "post_tim": 104, "total_tim": 104, "proport": 104, "5176954220125477": 104, "tick": 104, "partial": 104, "furthermor": 104, "19": 104, "86": 104, "lap": 104, "74": 104, "11": 104, "66": 104, "45": 104, "checkpoint": 104, "finish": 104, "summari": 104, "boolean": 104, "befor": [104, 118], "generate_random_token": 106, "get_file_s": 106, "retrieve_file_from_generic_url": 106, "output_filename_with_path": [106, 108], "output_token": [106, 108], "wget": 106, "success": [106, 108], "retrieve_file_from_kaltura": 106, "m3u8": 106, "kaltura": 106, "playlist": 106, "retrieve_file_from_youtub": 106, "youtub": 106, "retrieve_file_from_any_sourc": 106, "is_kaltura": 106, "create_filename_using_url_format": 106, "perform_prob": 106, "probe": 106, "ffprobe": 106, "see": 106, "get_available_stream": 106, "perform_slow_audio_prob": 106, "slower": 106, "ffmpeg": 106, "generate_symbolic_token": 106, "symbol": 106, "itself": 106, "detect_audio_dur": 106, "durat": 106, "ogg": 106, "input_token": 106, "generate_audio_token": 106, "extract_audio_from_video": 106, "extract_fram": 106, "output_folder_with_path": 106, "output_fold": 106, "frame": 106, "generate_frame_sample_indic": 106, "input_folder_with_path": 106, "12": 106, "we": 106, "our": 106, "read_txt_gz_fil": 106, "txt": 106, "gz": 106, "write_txt_gz_fil": 106, "read_json_gz_fil": 106, "perform_tesseract_ocr": 106, "image_path": 106, "tesseract": 106, "tesseract_ocr_or_get_cach": 106, "ocr_path": 106, "langaug": 106, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 106, "nlpmodel": 106, "load_nlp_model": 106, "lazi": [106, 108], "nlp": 106, "get_word": 106, "valid_onli": 106, "get_text_word_vector": 106, "get_text_word_vector_using_word": 106, "get_cosine_sim": 106, "frame_ocr_dist": 106, "nlp_model": 106, "frame_hash_similar": 106, "compute_ocr_noise_level": 106, "frame_sample_indic": 106, "nois": 106, "sampl": [106, 108], "identifi": 106, "compute_ocr_threshold": 106, "distance_list": 106, "default_threshold": 106, "05": [106, 118], "subsequ": 106, "empti": 106, "check_ocr_and_hash_threshold": 106, "k_l": 106, "k_r": 106, "ocr_dist_threshold": 106, "hash_similarity_threshold": 106, "frame_ocr_transit": 106, "transit": 106, "binari": 106, "frame_format": 106, "leftmost": 106, "rightmost": 106, "distinct": 106, "compute_video_ocr_transit": 106, "hash_dist_threshold": 106, "keep_first": 106, "transitori": 106, "get_video_token_statu": 106, "get_image_token_statu": 106, "get_audio_token_statu": 106, "retrieve_file_from_url": 106, "force_token": 106, "retrieve_file_from_url_callback": 106, "compute_video_fingerprint": 106, "compute_video_fingerprint_callback": 106, "video_id_and_duration_fp_lookup": 106, "cache_lookup_retrieve_file_from_url": 106, "cache_lookup_extract_audio": 106, "extract_audio": 106, "extract_audio_callback": 106, "reextract_cached_audio": 106, "compute_audio_fingerprint": 106, "compute_audio_fingerprint_callback": 106, "cache_lookup_detect_slid": 106, "extract_and_sample_fram": 106, "compute_noise_level_parallel": 106, "compute_noise_threshold_callback": 106, "hash_thresh": 106, "compute_slide_transitions_parallel": 106, "compute_slide_transitions_callback": 106, "detect_slides_callback": 106, "attempt": 106, "reextract_cached_slid": 106, "compute_slide_fingerprint": 106, "compute_slide_set_fingerprint": 106, "compute_slide_fingerprint_callback": 106, "retrieve_slide_fingerprint_callback": 106, "ignore_slide_fingerprint_results_callback": 106, "ignore_audio_fingerprint_results_callback": 106, "retrieve_audio_fingerprint_callback": 106, "retrieve_video_fingerprint_callback": 106, "ignore_video_fingerprint_results_callback": 106, "transcrib": 107, "whispertranscriptionmodel": 108, "load_model_whisp": 108, "whisper": 108, "memori": 108, "43200": 108, "get_silence_threshold": 108, "detect_audio_segment_lang_whisp": 108, "transcribe_audio_whisp": 108, "force_lang": 108, "verbos": 108, "explicitli": 108, "feed": 108, "transcript": 108, "silenc": 108, "strict": 108, "lenient": 108, "affect": 108, "logprob": 108, "speech": 108, "like": 108, "subtitl": 108, "extract_media_seg": 108, "detect_language_retrieve_from_db_and_split": 108, "segment_length": 108, "detect_language_parallel": 108, "tokens_dict": 108, "detect_language_callback": 108, "transcribe_audio_to_text": 108, "transcribe_callback": 108, "cache_lookup_audio_transcript": 108, "cache_lookup_audio_fingerprint": 108, "cache_lookup_audio_languag": 108, "invest": 110, "aggregate_recent_past": 111, "check_unit": 111, "compute_fundraisers_unit": 111, "compute_investors_unit": 111, "compute_investors_units_2": 111, "compute_jaccard_index": 111, "concept_configur": 111, "create_investments_graph": 111, "detect_fundraisers_concept": 111, "toy_exampl": 111, "compute_year_coeffici": 112, "recent_past": 112, "rescale_scor": 112, "year": 112, "aggregate_year": 112, "groupby_column": [112, 119], "normalize_scor": 112, "score_column": 112, "01": 112, "show_trend": 113, "unit_id": 113, "unit_concept": 113, "show_matchmaking_list_view": 113, "investors_concepts_jaccard": 113, "investors_concept": 113, "unit_concept_id": 113, "show_matchmaking_chart_view": 113, "unit_investor": 113, "time_window": 113, "pageid": 118, "investorid": 118, "sqrt": 118, "sum_": 118, "o": 118, "divid": 118, "henc": 118, "min_ratio": 118, "sourcepageid": 118, "targetpageid": 118, "kept": 118, "product": 118, "ball": 118, "loop": 118, "normalise_graph": 118, "add": 118, "revers": 118, "vertex": 118, "associ": 118, "key_x": 118, "key_i": 118, "geometr": 118, "compute_affin": 118, "mix_x": 118, "mix_i": 118, "normalise_befor": 118, "recommend": 118, "euclidean": 118, "notic": 118, "faster": 118, "inf": 118, "typic": 118, "higher": 118, "unus": 118, "u": 118, "equival": 118, "scalar": 118, "tanh": 118, "denot": 118, "get_fr": 119, "db": 119, "get_investors_fr": 119, "fr_id": 119, "get_frs_fundrais": 119, "get_fundraisers_concept": 119, "fundraiser_id": 119, "derive_yearly_data": 119, "date_column": 119, "amount_column": 119, "creation": 122, "build_prefix": 122, "1_old": 124, "2_new": 124, "3_slide": 124, "startup": 128}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [35, 0, 0, "-", "celery"], [66, 0, 0, "-", "core"], [109, 0, 0, "-", "definitions"], [110, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "auth"], [6, 0, 0, "-", "common"], [9, 0, 0, "-", "embedding"], [12, 0, 0, "-", "image"], [15, 0, 0, "-", "main"], [17, 0, 0, "-", "ontology"], [20, 0, 0, "-", "scraping"], [23, 0, 0, "-", "text"], [26, 0, 0, "-", "translation"], [29, 0, 0, "-", "video"], [32, 0, 0, "-", "voice"]], "graphai.api.auth": [[3, 0, 0, "-", "auth_utils"], [4, 0, 0, "-", "log"], [5, 0, 0, "-", "router"]], "graphai.api.auth.auth_utils": [[3, 1, 1, "", "Token"], [3, 1, 1, "", "TokenData"], [3, 1, 1, "", "User"], [3, 1, 1, "", "UserInDB"], [3, 3, 1, "", "authenticate_user"], [3, 3, 1, "", "extract_username_and_scopes"], [3, 3, 1, "", "extract_username_sync"], [3, 3, 1, "", "generate_random_password_string"], [3, 3, 1, "", "get_password_hash"], [3, 3, 1, "", "get_ratelimit_values"], [3, 3, 1, "", "get_user"], [3, 3, 1, "", "get_user_ratelimit_overrides"], [3, 3, 1, "", "verify_password"]], "graphai.api.auth.auth_utils.Token": [[3, 2, 1, "", "access_token"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "token_type"]], "graphai.api.auth.auth_utils.TokenData": [[3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.User": [[3, 2, 1, "", "disabled"], [3, 2, 1, "", "email"], [3, 2, 1, "", "full_name"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"], [3, 2, 1, "", "scopes"], [3, 2, 1, "", "username"]], "graphai.api.auth.auth_utils.UserInDB": [[3, 2, 1, "", "hashed_password"], [3, 2, 1, "", "model_computed_fields"], [3, 2, 1, "", "model_config"], [3, 2, 1, "", "model_fields"]], "graphai.api.auth.log": [[4, 1, 1, "", "LoggerMiddleware"], [4, 3, 1, "", "get_user_agent"], [4, 3, 1, "", "log_request"]], "graphai.api.auth.log.LoggerMiddleware": [[4, 4, 1, "", "dispatch"]], "graphai.api.auth.router": [[5, 3, 1, "", "create_access_token"], [5, 3, 1, "", "get_active_user_dummy"], [5, 3, 1, "", "get_current_active_user"], [5, 3, 1, "", "get_current_user"], [5, 3, 1, "", "get_user_for_rate_limiter"], [5, 3, 1, "", "login_for_access_token"], [5, 3, 1, "", "read_users_me"]], "graphai.api.common": [[7, 0, 0, "-", "schemas"], [8, 0, 0, "-", "utils"]], "graphai.api.common.schemas": [[7, 1, 1, "", "FileRequest"], [7, 1, 1, "", "TaskIDResponse"], [7, 1, 1, "", "TaskStatusResponse"], [7, 1, 1, "", "TokenStatus"]], "graphai.api.common.schemas.FileRequest": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "token"]], "graphai.api.common.schemas.TaskIDResponse": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "task_id"]], "graphai.api.common.schemas.TaskStatusResponse": [[7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"], [7, 2, 1, "", "task_id"], [7, 2, 1, "", "task_name"], [7, 2, 1, "", "task_result"], [7, 2, 1, "", "task_status"]], "graphai.api.common.schemas.TokenStatus": [[7, 2, 1, "", "active"], [7, 2, 1, "", "fingerprinted"], [7, 2, 1, "", "model_computed_fields"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"]], "graphai.api.common.utils": [[8, 3, 1, "", "format_api_results"]], "graphai.api.text": [[24, 0, 0, "-", "router"], [25, 0, 0, "-", "schemas"]], "graphai.api.text.router": [[24, 3, 1, "", "generate_exercise"], [24, 3, 1, "", "keywords"], [24, 3, 1, "", "wikify"], [24, 3, 1, "", "wikify_graph_svg"], [24, 3, 1, "", "wikify_ontology_svg"]], "graphai.api.text.schemas": [[25, 1, 1, "", "GenerateLectureExerciseRequest"], [25, 1, 1, "", "GenerateTextExerciseRequest"], [25, 1, 1, "", "KeywordsRequest"], [25, 1, 1, "", "WikifyFromKeywordsRequest"], [25, 1, 1, "", "WikifyFromRawTextRequest"], [25, 1, 1, "", "WikifyResponseElem"]], "graphai.api.text.schemas.GenerateLectureExerciseRequest": [[25, 2, 1, "", "bloom_level"], [25, 2, 1, "", "description"], [25, 2, 1, "", "include_solution"], [25, 2, 1, "", "lecture_id"], [25, 2, 1, "", "llm_model"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "openai_api_key"], [25, 2, 1, "", "output_format"]], "graphai.api.text.schemas.GenerateTextExerciseRequest": [[25, 2, 1, "", "bloom_level"], [25, 2, 1, "", "description"], [25, 2, 1, "", "include_solution"], [25, 2, 1, "", "llm_model"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "openai_api_key"], [25, 2, 1, "", "output_format"], [25, 2, 1, "", "text"]], "graphai.api.text.schemas.KeywordsRequest": [[25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyFromKeywordsRequest": [[25, 2, 1, "", "keywords"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"]], "graphai.api.text.schemas.WikifyFromRawTextRequest": [[25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyResponseElem": [[25, 2, 1, "", "concept_id"], [25, 2, 1, "", "concept_name"], [25, 2, 1, "", "embedding_global_score"], [25, 2, 1, "", "embedding_keywords_score"], [25, 2, 1, "", "embedding_local_score"], [25, 2, 1, "", "graph_keywords_score"], [25, 2, 1, "", "graph_score"], [25, 2, 1, "", "levenshtein_score"], [25, 2, 1, "", "mixed_score"], [25, 2, 1, "", "model_computed_fields"], [25, 2, 1, "", "model_config"], [25, 2, 1, "", "model_fields"], [25, 2, 1, "", "ontology_global_score"], [25, 2, 1, "", "ontology_keywords_score"], [25, 2, 1, "", "ontology_local_score"], [25, 2, 1, "", "search_score"]], "graphai.celery": [[36, 0, 0, "-", "common"], [42, 0, 0, "-", "embedding"], [45, 0, 0, "-", "image"], [48, 0, 0, "-", "ontology"], [51, 0, 0, "-", "scraping"], [54, 0, 0, "-", "text"], [57, 0, 0, "-", "translation"], [60, 0, 0, "-", "video"], [63, 0, 0, "-", "voice"]], "graphai.celery.common": [[37, 0, 0, "-", "celery_config"], [38, 0, 0, "-", "celery_tools"], [39, 0, 0, "-", "jobs"], [40, 0, 0, "-", "log"], [41, 0, 0, "-", "tasks"]], "graphai.celery.common.celery_config": [[37, 1, 1, "", "BaseConfig"], [37, 1, 1, "", "DevelopmentConfig"], [37, 3, 1, "", "create_celery"], [37, 3, 1, "", "get_celery_task"], [37, 3, 1, "", "get_settings"], [37, 3, 1, "", "get_task_info"], [37, 3, 1, "", "route_task"]], "graphai.celery.common.celery_tools": [[38, 3, 1, "", "get_n_celery_workers"]], "graphai.celery.common.jobs": [[39, 3, 1, "", "direct_lookup_generic_job"]], "graphai.celery.common.log": [[40, 3, 1, "", "log"]], "graphai.celery.embedding": [[43, 0, 0, "-", "jobs"], [44, 0, 0, "-", "tasks"]], "graphai.celery.embedding.jobs": [[43, 3, 1, "", "embedding_job"], [43, 3, 1, "", "fingerprint_compute_job"], [43, 3, 1, "", "fingerprint_job"], [43, 3, 1, "", "fingerprint_lookup_job"], [43, 3, 1, "", "get_embedding_text_fingerprint_chain_list"]], "graphai.celery.image": [[46, 0, 0, "-", "jobs"], [47, 0, 0, "-", "tasks"]], "graphai.celery.image.jobs": [[46, 3, 1, "", "fingerprint_job"], [46, 3, 1, "", "fingerprint_lookup_job"], [46, 3, 1, "", "ocr_job"]], "graphai.celery.ontology": [[49, 0, 0, "-", "jobs"], [50, 0, 0, "-", "tasks"]], "graphai.celery.ontology.jobs": [[49, 3, 1, "", "breakup_cluster_job"], [49, 3, 1, "", "category_info_job"], [49, 3, 1, "", "cluster_info_job"], [49, 3, 1, "", "cluster_nearest_category_job"], [49, 3, 1, "", "concept_info_job"], [49, 3, 1, "", "concept_nearest_category_job"], [49, 3, 1, "", "concept_nearest_concept_job"], [49, 3, 1, "", "graph_distance_job"], [49, 3, 1, "", "openalex_category_nearest_topics_job"], [49, 3, 1, "", "openalex_topic_nearest_categories_job"], [49, 3, 1, "", "recompute_clusters_job"], [49, 3, 1, "", "tree_job"]], "graphai.celery.scraping": [[52, 0, 0, "-", "jobs"], [53, 0, 0, "-", "tasks"]], "graphai.celery.scraping.jobs": [[52, 3, 1, "", "extract_content_job"], [52, 3, 1, "", "extract_sublinks_job"], [52, 3, 1, "", "sublink_lookup_job"]], "graphai.celery.text": [[55, 0, 0, "-", "jobs"], [56, 0, 0, "-", "tasks"]], "graphai.celery.text.jobs": [[55, 3, 1, "", "generate_exercise"], [55, 3, 1, "", "keywords"], [55, 3, 1, "", "wikify_graph_svg"], [55, 3, 1, "", "wikify_keywords"], [55, 3, 1, "", "wikify_ontology_svg"], [55, 3, 1, "", "wikify_text"]], "graphai.celery.translation": [[58, 0, 0, "-", "jobs"], [59, 0, 0, "-", "tasks"]], "graphai.celery.translation.jobs": [[58, 3, 1, "", "detect_text_language_job"], [58, 3, 1, "", "fingerprint_compute_job"], [58, 3, 1, "", "fingerprint_job"], [58, 3, 1, "", "fingerprint_lookup_job"], [58, 3, 1, "", "get_translation_text_fingerprint_chain_list"], [58, 3, 1, "", "translation_job"]], "graphai.celery.video": [[61, 0, 0, "-", "jobs"], [62, 0, 0, "-", "tasks"]], "graphai.celery.video.jobs": [[61, 3, 1, "", "detect_slides_job"], [61, 3, 1, "", "extract_audio_job"], [61, 3, 1, "", "fingerprint_job"], [61, 3, 1, "", "fingerprint_lookup_job"], [61, 3, 1, "", "get_audio_fingerprint_chain_list"], [61, 3, 1, "", "get_file_job"], [61, 3, 1, "", "get_slide_fingerprint_chain_list"], [61, 3, 1, "", "get_video_fingerprint_chain_list"], [61, 3, 1, "", "retrieve_url_job"]], "graphai.celery.voice": [[64, 0, 0, "-", "jobs"], [65, 0, 0, "-", "tasks"]], "graphai.celery.voice.jobs": [[64, 3, 1, "", "detect_language_job"], [64, 3, 1, "", "fingerprint_job"], [64, 3, 1, "", "fingerprint_lookup_job"], [64, 3, 1, "", "get_audio_language_detection_task_chain"], [64, 3, 1, "", "language_lookup_job"], [64, 3, 1, "", "transcribe_job"]], "graphai.core": [[67, 0, 0, "-", "common"], [73, 0, 0, "-", "embedding"], [75, 0, 0, "-", "image"], [78, 0, 0, "-", "ontology"], [83, 0, 0, "-", "scraping"], [85, 0, 0, "-", "text"], [93, 0, 0, "-", "translation"], [96, 0, 0, "-", "utils"], [105, 0, 0, "-", "video"], [107, 0, 0, "-", "voice"]], "graphai.core.common": [[68, 0, 0, "-", "caching"], [69, 0, 0, "-", "common_utils"], [70, 0, 0, "-", "config"], [71, 0, 0, "-", "fingerprinting"], [72, 0, 0, "-", "lookup"]], "graphai.core.common.caching": [[68, 1, 1, "", "AudioDBCachingManager"], [68, 1, 1, "", "EmbeddingDBCachingManager"], [68, 1, 1, "", "FingerprintParameters"], [68, 1, 1, "", "ScrapingDBCachingManager"], [68, 1, 1, "", "SlideDBCachingManager"], [68, 1, 1, "", "TextDBCachingManager"], [68, 1, 1, "", "VideoConfig"], [68, 1, 1, "", "VideoDBCachingManager"], [68, 3, 1, "", "create_symlink_between_paths"], [68, 3, 1, "", "delete_file"], [68, 3, 1, "", "get_token_file_status"]], "graphai.core.common.caching.AudioDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.EmbeddingDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[68, 4, 1, "", "get_min_sim_audio"], [68, 4, 1, "", "get_min_sim_image"], [68, 4, 1, "", "get_min_sim_video"], [68, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[68, 4, 1, "", "get_details_using_origin"], [68, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[68, 4, 1, "", "concat_file_path"], [68, 4, 1, "", "create_symlink"], [68, 4, 1, "", "generate_filepath"], [68, 4, 1, "", "get_audio_dir"], [68, 4, 1, "", "get_image_dir"], [68, 4, 1, "", "get_root_dir"], [68, 4, 1, "", "get_transcript_dir"], [68, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[68, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[69, 3, 1, "", "convert_list_to_text"], [69, 3, 1, "", "convert_text_back_to_list"], [69, 3, 1, "", "copy_file_within_folder"], [69, 3, 1, "", "file_exists"], [69, 3, 1, "", "format_datetime_for_mysql"], [69, 3, 1, "", "get_current_datetime"], [69, 3, 1, "", "invert_dict"], [69, 3, 1, "", "make_sure_path_exists"], [69, 3, 1, "", "parse_mysql_datetime"], [69, 3, 1, "", "read_json_file"], [69, 3, 1, "", "read_text_file"], [69, 3, 1, "", "strtobool"], [69, 3, 1, "", "write_json_file"], [69, 3, 1, "", "write_text_file"]], "graphai.core.common.fingerprinting": [[71, 3, 1, "", "compare_decoded_fingerprints"], [71, 3, 1, "", "compare_encoded_fingerprints"], [71, 3, 1, "", "compute_text_fingerprint"], [71, 3, 1, "", "find_closest_audio_fingerprint_from_list"], [71, 3, 1, "", "find_closest_fingerprint_for_list_from_list"], [71, 3, 1, "", "find_closest_fingerprint_from_list"], [71, 3, 1, "", "find_closest_image_fingerprint_from_list"], [71, 3, 1, "", "find_closest_text_fingerprint_from_list"], [71, 3, 1, "", "md5_text"], [71, 3, 1, "", "md5_video_or_audio"], [71, 3, 1, "", "perceptual_hash_audio"], [71, 3, 1, "", "perceptual_hash_image"], [71, 3, 1, "", "perceptual_hash_text"]], "graphai.core.common.lookup": [[72, 3, 1, "", "cache_lookup_generic"], [72, 3, 1, "", "database_callback_generic"], [72, 3, 1, "", "fingerprint_based_text_lookup"], [72, 3, 1, "", "fingerprint_cache_lookup"], [72, 3, 1, "", "fingerprint_cache_lookup_with_most_similar"], [72, 3, 1, "", "fingerprint_lookup_callback"], [72, 3, 1, "", "fingerprint_lookup_direct"], [72, 3, 1, "", "fingerprint_lookup_parallel"], [72, 3, 1, "", "fingerprint_lookup_retrieve_from_db"], [72, 3, 1, "", "ignore_fingerprint_results_callback"], [72, 3, 1, "", "is_fingerprinted"], [72, 3, 1, "", "lookup_latest_allowed_date"], [72, 3, 1, "", "retrieve_fingerprint_callback"], [72, 3, 1, "", "token_based_text_lookup"]], "graphai.core.embedding": [[74, 0, 0, "-", "embedding"]], "graphai.core.embedding.embedding": [[74, 1, 1, "", "EmbeddingModels"], [74, 3, 1, "", "compute_embedding_text_fingerprint_callback"], [74, 3, 1, "", "copy_embedding_object"], [74, 3, 1, "", "embed_text"], [74, 3, 1, "", "embedding_from_json"], [74, 3, 1, "", "embedding_text_list_embed_callback"], [74, 3, 1, "", "embedding_text_list_embed_parallel"], [74, 3, 1, "", "embedding_text_list_fingerprint_callback"], [74, 3, 1, "", "embedding_text_list_fingerprint_parallel"], [74, 3, 1, "", "embedding_to_json"], [74, 3, 1, "", "fingerprint_based_embedding_lookup"], [74, 3, 1, "", "generate_embedding_text_token"], [74, 3, 1, "", "get_text_token_count_using_model"], [74, 3, 1, "", "insert_embedding_into_db"], [74, 3, 1, "", "token_based_embedding_lookup"]], "graphai.core.embedding.embedding.EmbeddingModels": [[74, 4, 1, "", "embed"], [74, 4, 1, "", "get_device"], [74, 4, 1, "", "get_last_usage"], [74, 4, 1, "", "get_max_tokens"], [74, 4, 1, "", "get_token_count"], [74, 4, 1, "", "get_tokenizer"], [74, 4, 1, "", "load_model"], [74, 4, 1, "", "load_models"], [74, 4, 1, "", "model_loaded"], [74, 4, 1, "", "set_tokenizer"], [74, 4, 1, "", "unload_model"]], "graphai.core.image": [[76, 0, 0, "-", "image"], [77, 0, 0, "-", "ocr"]], "graphai.core.image.image": [[76, 3, 1, "", "cache_lookup_extract_slide_text"], [76, 3, 1, "", "extract_slide_text"], [76, 3, 1, "", "extract_slide_text_callback"]], "graphai.core.image.ocr": [[77, 1, 1, "", "GoogleOCRModel"], [77, 3, 1, "", "get_ocr_colnames"]], "graphai.core.image.ocr.GoogleOCRModel": [[77, 4, 1, "", "establish_connection"], [77, 4, 1, "", "perform_ocr"], [77, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.ontology": [[78, 1, 1, "", "OntologyData"], [78, 3, 1, "", "break_up_cluster"], [79, 0, 0, "-", "clustering"], [80, 0, 0, "-", "data"], [78, 3, 1, "", "get_cluster_category_closest"], [78, 3, 1, "", "get_concept_category_closest"], [78, 3, 1, "", "get_concept_concept_closest"], [78, 3, 1, "", "get_openalex_nearest"], [81, 0, 0, "-", "ontology"], [82, 0, 0, "-", "openalex"], [78, 3, 1, "", "recompute_clusters"]], "graphai.core.ontology.OntologyData": [[78, 4, 1, "", "compute_category_anchors_using_references"], [78, 4, 1, "", "compute_precalculated_similarity_matrices"], [78, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [78, 4, 1, "", "generate_category_concept_dict"], [78, 4, 1, "", "generate_tree_structure"], [78, 4, 1, "", "get_category_anchor_pages"], [78, 4, 1, "", "get_category_branch"], [78, 4, 1, "", "get_category_category_similarity"], [78, 4, 1, "", "get_category_children"], [78, 4, 1, "", "get_category_closest_category"], [78, 4, 1, "", "get_category_cluster_list"], [78, 4, 1, "", "get_category_cluster_table"], [78, 4, 1, "", "get_category_concept_list"], [78, 4, 1, "", "get_category_concept_table"], [78, 4, 1, "", "get_category_parent"], [78, 4, 1, "", "get_category_to_category"], [78, 4, 1, "", "get_cluster_category_similarity"], [78, 4, 1, "", "get_cluster_children"], [78, 4, 1, "", "get_cluster_closest_category"], [78, 4, 1, "", "get_cluster_closest_category_embedding"], [78, 4, 1, "", "get_cluster_cluster_similarity"], [78, 4, 1, "", "get_cluster_concept_list"], [78, 4, 1, "", "get_cluster_concepts"], [78, 4, 1, "", "get_cluster_parent"], [78, 4, 1, "", "get_concept_category_closest_embedding"], [78, 4, 1, "", "get_concept_category_similarity"], [78, 4, 1, "", "get_concept_closest_category"], [78, 4, 1, "", "get_concept_closest_concept"], [78, 4, 1, "", "get_concept_closest_concept_embedding"], [78, 4, 1, "", "get_concept_cluster_similarity"], [78, 4, 1, "", "get_concept_concept_graphscore_table"], [78, 4, 1, "", "get_concept_concept_similarity"], [78, 4, 1, "", "get_concept_name"], [78, 4, 1, "", "get_concept_names_list"], [78, 4, 1, "", "get_concept_parent_category"], [78, 4, 1, "", "get_concept_parent_cluster"], [78, 4, 1, "", "get_custom_cluster_closest_category"], [78, 4, 1, "", "get_custom_cluster_closest_category_embedding"], [78, 4, 1, "", "get_non_ontology_concept_names"], [78, 4, 1, "", "get_ontology_category_info"], [78, 4, 1, "", "get_ontology_category_names"], [78, 4, 1, "", "get_ontology_concept_names_table"], [78, 4, 1, "", "get_root_category"], [78, 4, 1, "", "get_test_category_concept"], [78, 4, 1, "", "get_test_cluster_concept"], [78, 4, 1, "", "get_test_concept_names"], [78, 4, 1, "", "load_anchor_page_dict"], [78, 4, 1, "", "load_category_category"], [78, 4, 1, "", "load_category_concept"], [78, 4, 1, "", "load_concept_concept_graphscore"], [78, 4, 1, "", "load_data"], [78, 4, 1, "", "load_non_ontology_concept_names"], [78, 4, 1, "", "load_ontology_categories"], [78, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.ontology.clustering": [[79, 3, 1, "", "arithmetic_mean_laplacians"], [79, 3, 1, "", "assign_to_categories_using_existing"], [79, 3, 1, "", "cluster_and_reassign_outliers"], [79, 3, 1, "", "cluster_using_embedding"], [79, 3, 1, "", "combine_and_embed_laplacian"], [79, 3, 1, "", "combine_laplacians"], [79, 3, 1, "", "compute_all_graphs_from_scratch"], [79, 3, 1, "", "convert_cluster_labels_to_dict"], [79, 3, 1, "", "davies_bouldin_eval"], [79, 3, 1, "", "get_laplacian"], [79, 3, 1, "", "group_clustered"], [79, 3, 1, "", "normalize_features"], [79, 3, 1, "", "perform_PCA"], [79, 3, 1, "", "perform_constrained_agglomerative"], [79, 3, 1, "", "precompute_clustering_metric"], [79, 3, 1, "", "reassign_outliers"], [79, 3, 1, "", "spec_embed_on_laplacian"], [79, 3, 1, "", "sum_laplacians"], [79, 3, 1, "", "variance_ratio_eval"]], "graphai.core.ontology.data": [[80, 1, 1, "", "OntologyData"], [80, 3, 1, "", "adjusted_exp"], [80, 3, 1, "", "adjusted_exp_slope_1_point"], [80, 3, 1, "", "average_and_combine"], [80, 3, 1, "", "combine_concept_and_anchor_scores"], [80, 3, 1, "", "compute_average"], [80, 3, 1, "", "compute_average_of_df"], [80, 3, 1, "", "convert_to_csr_matrix"], [80, 3, 1, "", "create_graph_from_df"], [80, 3, 1, "", "db_results_to_pandas_df"], [80, 3, 1, "", "derive_col_to_col_graph"], [80, 3, 1, "", "embeddings_table_exists"], [80, 3, 1, "", "ensure_nonzero_denominator"], [80, 3, 1, "", "execute_multi_entity_concepts_and_anchors_query"], [80, 3, 1, "", "execute_single_entity_concepts_and_anchors_query"], [80, 3, 1, "", "get_col_to_col_dict"], [80, 3, 1, "", "get_id_dict"], [80, 3, 1, "", "make_adj_undirected"], [80, 3, 1, "", "remove_invalid_pairs"], [80, 3, 1, "", "return_chosen_indices"], [80, 3, 1, "", "to_ndarray_and_flatten"]], "graphai.core.ontology.data.OntologyData": [[80, 4, 1, "", "compute_category_anchors_using_references"], [80, 4, 1, "", "compute_precalculated_similarity_matrices"], [80, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [80, 4, 1, "", "generate_category_concept_dict"], [80, 4, 1, "", "generate_tree_structure"], [80, 4, 1, "", "get_category_anchor_pages"], [80, 4, 1, "", "get_category_branch"], [80, 4, 1, "", "get_category_category_similarity"], [80, 4, 1, "", "get_category_children"], [80, 4, 1, "", "get_category_closest_category"], [80, 4, 1, "", "get_category_cluster_list"], [80, 4, 1, "", "get_category_cluster_table"], [80, 4, 1, "", "get_category_concept_list"], [80, 4, 1, "", "get_category_concept_table"], [80, 4, 1, "", "get_category_parent"], [80, 4, 1, "", "get_category_to_category"], [80, 4, 1, "", "get_cluster_category_similarity"], [80, 4, 1, "", "get_cluster_children"], [80, 4, 1, "", "get_cluster_closest_category"], [80, 4, 1, "", "get_cluster_closest_category_embedding"], [80, 4, 1, "", "get_cluster_cluster_similarity"], [80, 4, 1, "", "get_cluster_concept_list"], [80, 4, 1, "", "get_cluster_concepts"], [80, 4, 1, "", "get_cluster_parent"], [80, 4, 1, "", "get_concept_category_closest_embedding"], [80, 4, 1, "", "get_concept_category_similarity"], [80, 4, 1, "", "get_concept_closest_category"], [80, 4, 1, "", "get_concept_closest_concept"], [80, 4, 1, "", "get_concept_closest_concept_embedding"], [80, 4, 1, "", "get_concept_cluster_similarity"], [80, 4, 1, "", "get_concept_concept_graphscore_table"], [80, 4, 1, "", "get_concept_concept_similarity"], [80, 4, 1, "", "get_concept_name"], [80, 4, 1, "", "get_concept_names_list"], [80, 4, 1, "", "get_concept_parent_category"], [80, 4, 1, "", "get_concept_parent_cluster"], [80, 4, 1, "", "get_custom_cluster_closest_category"], [80, 4, 1, "", "get_custom_cluster_closest_category_embedding"], [80, 4, 1, "", "get_non_ontology_concept_names"], [80, 4, 1, "", "get_ontology_category_info"], [80, 4, 1, "", "get_ontology_category_names"], [80, 4, 1, "", "get_ontology_concept_names_table"], [80, 4, 1, "", "get_root_category"], [80, 4, 1, "", "get_test_category_concept"], [80, 4, 1, "", "get_test_cluster_concept"], [80, 4, 1, "", "get_test_concept_names"], [80, 4, 1, "", "load_anchor_page_dict"], [80, 4, 1, "", "load_category_category"], [80, 4, 1, "", "load_category_concept"], [80, 4, 1, "", "load_concept_concept_graphscore"], [80, 4, 1, "", "load_data"], [80, 4, 1, "", "load_non_ontology_concept_names"], [80, 4, 1, "", "load_ontology_categories"], [80, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.ontology.ontology": [[81, 3, 1, "", "break_up_cluster"], [81, 3, 1, "", "get_category_info"], [81, 3, 1, "", "get_cluster_category_closest"], [81, 3, 1, "", "get_cluster_info"], [81, 3, 1, "", "get_concept_category_closest"], [81, 3, 1, "", "get_concept_concept_closest"], [81, 3, 1, "", "get_concept_info"], [81, 3, 1, "", "recompute_clusters"]], "graphai.core.ontology.openalex": [[82, 3, 1, "", "get_openalex_nearest"]], "graphai.core.scraping": [[84, 0, 0, "-", "scraping"]], "graphai.core.scraping.scraping": [[84, 3, 1, "", "cache_lookup_get_sublinks"], [84, 3, 1, "", "cache_lookup_process_all_sublinks"], [84, 3, 1, "", "check_url"], [84, 3, 1, "", "compare_strings"], [84, 3, 1, "", "create_base_url_token"], [84, 3, 1, "", "extract_scraping_content_callback"], [84, 3, 1, "", "extract_text_from_url"], [84, 3, 1, "", "find_consecutive_runs"], [84, 3, 1, "", "find_edge_patterns"], [84, 3, 1, "", "find_repeated_patterns"], [84, 3, 1, "", "find_spaces"], [84, 3, 1, "", "generate_sublink_token"], [84, 3, 1, "", "get_sublinks"], [84, 3, 1, "", "initialize_data_dict"], [84, 3, 1, "", "initialize_url"], [84, 3, 1, "", "initialize_url_and_get_sublinks"], [84, 3, 1, "", "parse_page_type"], [84, 3, 1, "", "process_all_scraping_sublinks_parallel"], [84, 3, 1, "", "process_all_sublinks"], [84, 3, 1, "", "reconstruct_data_dict"], [84, 3, 1, "", "remove_headers"], [84, 3, 1, "", "remove_junk_scraping_parallel"], [84, 3, 1, "", "remove_long_patterns"], [84, 3, 1, "", "scraping_sublinks_callback"], [84, 3, 1, "", "shift_to_max_correlation"], [84, 3, 1, "", "string_circular_shift"], [84, 3, 1, "", "sublink_parallel_processing_merge_callback"]], "graphai.core.text": [[85, 1, 1, "", "ConceptsGraph"], [85, 3, 1, "", "compute_scores"], [86, 0, 0, "-", "draw"], [85, 3, 1, "", "draw_graph"], [85, 3, 1, "", "draw_ontology"], [87, 0, 0, "-", "embeddings"], [88, 0, 0, "-", "exercises"], [85, 3, 1, "", "extract_keywords"], [85, 3, 1, "", "generate_exercise"], [89, 0, 0, "-", "graph"], [90, 0, 0, "-", "keywords"], [91, 0, 0, "-", "scores"], [92, 0, 0, "-", "wikisearch"]], "graphai.core.text.ConceptsGraph": [[85, 4, 1, "", "add_graph_score"], [85, 4, 1, "", "add_ontology_scores"], [85, 4, 1, "", "get_ontology_concepts"], [85, 4, 1, "", "load_from_db"]], "graphai.core.text.draw": [[86, 3, 1, "", "draw_graph"], [86, 3, 1, "", "draw_ontology"]], "graphai.core.text.embeddings": [[87, 1, 1, "", "ConceptEmbeddings"], [87, 3, 1, "", "compute_embedding_scores"]], "graphai.core.text.embeddings.ConceptEmbeddings": [[87, 4, 1, "", "values"]], "graphai.core.text.exercises": [[88, 3, 1, "", "generate_exercise"]], "graphai.core.text.graph": [[89, 1, 1, "", "ConceptsGraph"]], "graphai.core.text.graph.ConceptsGraph": [[89, 4, 1, "", "add_graph_score"], [89, 4, 1, "", "add_ontology_scores"], [89, 4, 1, "", "get_ontology_concepts"], [89, 4, 1, "", "load_from_db"]], "graphai.core.text.keywords": [[90, 3, 1, "", "extract_keywords"], [90, 3, 1, "", "rake_extract"], [90, 3, 1, "", "word_tokens"]], "graphai.core.text.scores": [[91, 3, 1, "", "aggregate_results"], [91, 3, 1, "", "compute_keywords_scores"], [91, 3, 1, "", "compute_levenshtein_score"], [91, 3, 1, "", "compute_mixed_score"], [91, 3, 1, "", "compute_scores"], [91, 3, 1, "", "filter_results"]], "graphai.core.text.wikisearch": [[92, 3, 1, "", "search_elasticsearch"], [92, 3, 1, "", "search_wikipedia_api"], [92, 3, 1, "", "wikisearch"]], "graphai.core.translation": [[94, 0, 0, "-", "text_utils"], [95, 0, 0, "-", "translation"]], "graphai.core.translation.text_utils": [[94, 1, 1, "", "TranslationModels"], [94, 3, 1, "", "compute_slide_tfidf_scores"], [94, 3, 1, "", "detect_text_language"], [94, 3, 1, "", "find_best_slide_subset"], [94, 3, 1, "", "find_set_cover"], [94, 3, 1, "", "generate_src_tgt_dict"], [94, 3, 1, "", "generate_translation_text_token"]], "graphai.core.translation.text_utils.TranslationModels": [[94, 4, 1, "", "get_device"], [94, 4, 1, "", "get_last_usage"], [94, 4, 1, "", "load_models"], [94, 4, 1, "", "translate"], [94, 4, 1, "", "unload_model"]], "graphai.core.translation.translation": [[95, 3, 1, "", "cache_lookup_translate_text"], [95, 3, 1, "", "cache_lookup_translation_text_using_fingerprint"], [95, 3, 1, "", "compute_translation_text_fingerprint_callback"], [95, 3, 1, "", "detect_language_translation"], [95, 3, 1, "", "translate_text"], [95, 3, 1, "", "translate_text_callback"]], "graphai.core.utils": [[97, 0, 0, "-", "breadcrumb"], [98, 0, 0, "-", "progress_bar"], [99, 0, 0, "-", "text"], [102, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[97, 1, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[97, 4, 1, "", "indent"], [97, 4, 1, "", "log"], [97, 4, 1, "", "outdent"], [97, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[98, 1, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[98, 4, 1, "", "reset"], [98, 4, 1, "", "update"]], "graphai.core.utils.text": [[100, 0, 0, "-", "clean"], [101, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[100, 1, 1, "", "HTMLCleaner"], [100, 3, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[100, 4, 1, "", "get_data"], [100, 4, 1, "", "handle_data"], [100, 4, 1, "", "handle_endtag"], [100, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[101, 1, 1, "", "Colors"], [101, 3, 1, "", "cprint"], [101, 3, 1, "", "log"], [101, 3, 1, "", "mkdir"], [101, 3, 1, "", "pprint"], [101, 3, 1, "", "read_json"], [101, 3, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[101, 2, 1, "", "codes"], [101, 2, 1, "", "pref"], [101, 2, 1, "", "reset"]], "graphai.core.utils.time": [[103, 0, 0, "-", "date"], [104, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[103, 3, 1, "", "add_years"], [103, 3, 1, "", "now"], [103, 3, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[104, 1, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[104, 4, 1, "", "delta"], [104, 4, 1, "", "report"], [104, 4, 1, "", "reset"], [104, 4, 1, "", "tick"], [104, 4, 1, "", "total"]], "graphai.core.video": [[106, 0, 0, "-", "video"]], "graphai.core.video.video": [[106, 1, 1, "", "NLPModels"], [106, 3, 1, "", "cache_lookup_detect_slides"], [106, 3, 1, "", "cache_lookup_extract_audio"], [106, 3, 1, "", "cache_lookup_retrieve_file_from_url"], [106, 3, 1, "", "check_ocr_and_hash_thresholds"], [106, 3, 1, "", "compute_audio_fingerprint"], [106, 3, 1, "", "compute_audio_fingerprint_callback"], [106, 3, 1, "", "compute_noise_level_parallel"], [106, 3, 1, "", "compute_noise_threshold_callback"], [106, 3, 1, "", "compute_ocr_noise_level"], [106, 3, 1, "", "compute_ocr_threshold"], [106, 3, 1, "", "compute_slide_fingerprint"], [106, 3, 1, "", "compute_slide_fingerprint_callback"], [106, 3, 1, "", "compute_slide_set_fingerprint"], [106, 3, 1, "", "compute_slide_transitions_callback"], [106, 3, 1, "", "compute_slide_transitions_parallel"], [106, 3, 1, "", "compute_video_fingerprint"], [106, 3, 1, "", "compute_video_fingerprint_callback"], [106, 3, 1, "", "compute_video_ocr_transitions"], [106, 3, 1, "", "create_filename_using_url_format"], [106, 3, 1, "", "detect_audio_duration"], [106, 3, 1, "", "detect_slides_callback"], [106, 3, 1, "", "extract_and_sample_frames"], [106, 3, 1, "", "extract_audio"], [106, 3, 1, "", "extract_audio_callback"], [106, 3, 1, "", "extract_audio_from_video"], [106, 3, 1, "", "extract_frames"], [106, 3, 1, "", "frame_hash_similarity"], [106, 3, 1, "", "frame_ocr_distance"], [106, 3, 1, "", "frame_ocr_transition"], [106, 3, 1, "", "generate_audio_token"], [106, 3, 1, "", "generate_frame_sample_indices"], [106, 3, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [106, 3, 1, "", "generate_random_token"], [106, 3, 1, "", "generate_symbolic_token"], [106, 3, 1, "", "get_audio_token_status"], [106, 3, 1, "", "get_available_streams"], [106, 3, 1, "", "get_cosine_sim"], [106, 3, 1, "", "get_file_size"], [106, 3, 1, "", "get_image_token_status"], [106, 3, 1, "", "get_video_token_status"], [106, 3, 1, "", "ignore_audio_fingerprint_results_callback"], [106, 3, 1, "", "ignore_slide_fingerprint_results_callback"], [106, 3, 1, "", "ignore_video_fingerprint_results_callback"], [106, 3, 1, "", "perform_probe"], [106, 3, 1, "", "perform_slow_audio_probe"], [106, 3, 1, "", "perform_tesseract_ocr"], [106, 3, 1, "", "read_json_gz_file"], [106, 3, 1, "", "read_txt_gz_file"], [106, 3, 1, "", "reextract_cached_audio"], [106, 3, 1, "", "reextract_cached_slides"], [106, 3, 1, "", "retrieve_audio_fingerprint_callback"], [106, 3, 1, "", "retrieve_file_from_any_source"], [106, 3, 1, "", "retrieve_file_from_generic_url"], [106, 3, 1, "", "retrieve_file_from_kaltura"], [106, 3, 1, "", "retrieve_file_from_url"], [106, 3, 1, "", "retrieve_file_from_url_callback"], [106, 3, 1, "", "retrieve_file_from_youtube"], [106, 3, 1, "", "retrieve_slide_fingerprint_callback"], [106, 3, 1, "", "retrieve_video_fingerprint_callback"], [106, 3, 1, "", "tesseract_ocr_or_get_cached"], [106, 3, 1, "", "video_id_and_duration_fp_lookup"], [106, 3, 1, "", "write_txt_gz_file"]], "graphai.core.video.video.NLPModels": [[106, 4, 1, "", "get_text_word_vector"], [106, 4, 1, "", "get_text_word_vector_using_words"], [106, 4, 1, "", "get_words"], [106, 4, 1, "", "load_nlp_models"]], "graphai.core.voice": [[108, 0, 0, "-", "transcribe"]], "graphai.core.voice.transcribe": [[108, 1, 1, "", "WhisperTranscriptionModel"], [108, 3, 1, "", "cache_lookup_audio_fingerprint"], [108, 3, 1, "", "cache_lookup_audio_language"], [108, 3, 1, "", "cache_lookup_audio_transcript"], [108, 3, 1, "", "detect_language_callback"], [108, 3, 1, "", "detect_language_parallel"], [108, 3, 1, "", "detect_language_retrieve_from_db_and_split"], [108, 3, 1, "", "extract_media_segment"], [108, 3, 1, "", "transcribe_audio_to_text"], [108, 3, 1, "", "transcribe_callback"]], "graphai.core.voice.transcribe.WhisperTranscriptionModel": [[108, 4, 1, "", "detect_audio_segment_lang_whisper"], [108, 4, 1, "", "get_last_usage"], [108, 4, 1, "", "get_silence_thresholds"], [108, 4, 1, "", "load_model_whisper"], [108, 4, 1, "", "transcribe_audio_whisper"], [108, 4, 1, "", "unload_model"]], "graphai.pipelines": [[111, 0, 0, "-", "investment"], [124, 0, 0, "-", "validation"], [128, 0, 0, "-", "visualisation"]], "graphai.pipelines.investment": [[112, 0, 0, "-", "aggregate_recent_past"], [113, 0, 0, "-", "check_unit"], [114, 0, 0, "-", "compute_fundraisers_units"], [115, 0, 0, "-", "compute_investors_units"], [116, 0, 0, "-", "compute_investors_units_2"], [117, 0, 0, "-", "compute_jaccard_index"], [118, 0, 0, "-", "concept_configuration"], [119, 0, 0, "-", "create_investments_graph"], [120, 0, 0, "-", "detect_fundraisers_concepts"], [121, 0, 0, "-", "main"], [122, 0, 0, "-", "parameters"], [123, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[112, 3, 1, "", "aggregate_recent_past"], [112, 3, 1, "", "aggregate_years"], [112, 3, 1, "", "compute_year_coefficients"], [112, 3, 1, "", "normalize_scores"], [112, 3, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[113, 3, 1, "", "main"], [113, 3, 1, "", "show_matchmaking_chart_view"], [113, 3, 1, "", "show_matchmaking_list_view"], [113, 3, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[114, 3, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[115, 3, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[116, 3, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[117, 3, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[118, 3, 1, "", "combine"], [118, 3, 1, "", "compute_affinities"], [118, 3, 1, "", "mix"], [118, 3, 1, "", "norm"], [118, 3, 1, "", "normalise"], [118, 3, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[119, 3, 1, "", "create_investments_graph"], [119, 3, 1, "", "derive_yearly_data"], [119, 3, 1, "", "get_frs"], [119, 3, 1, "", "get_frs_fundraisers"], [119, 3, 1, "", "get_fundraisers_concepts"], [119, 3, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[120, 3, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[121, 3, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[122, 3, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[123, 3, 1, "", "base"], [123, 3, 1, "", "complete"], [123, 3, 1, "", "path"], [123, 3, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "packag": [0, 1, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 35, 36, 42, 45, 48, 51, 54, 57, 60, 63, 66, 67, 73, 75, 78, 83, 85, 93, 96, 99, 102, 105, 107, 110, 111, 124, 128], "subpackag": [0, 1, 35, 66, 96, 110], "submodul": [0, 2, 6, 9, 12, 15, 17, 20, 23, 26, 29, 32, 36, 42, 45, 48, 51, 54, 57, 60, 63, 67, 73, 75, 78, 83, 85, 93, 96, 99, 102, 105, 107, 111, 124, 128], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "auth": [2, 3, 4, 5], "auth_util": 3, "modul": [3, 4, 5, 7, 8, 10, 11, 13, 14, 16, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132], "log": [4, 40], "router": [5, 10, 13, 18, 21, 24, 27, 30, 33], "common": [6, 7, 8, 36, 37, 38, 39, 40, 41, 67, 68, 69, 70, 71, 72], "schema": [7, 11, 14, 19, 22, 25, 28, 31, 34], "util": [8, 96, 97, 98, 99, 100, 101, 102, 103, 104], "embed": [9, 10, 11, 42, 43, 44, 73, 74, 87], "imag": [12, 13, 14, 45, 46, 47, 75, 76, 77], "main": [15, 16, 121], "ontologi": [17, 18, 19, 48, 49, 50, 78, 79, 80, 81, 82], "scrape": [20, 21, 22, 51, 52, 53, 83, 84], "text": [23, 24, 25, 54, 55, 56, 85, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101], "translat": [26, 27, 28, 57, 58, 59, 93, 94, 95], "video": [29, 30, 31, 60, 61, 62, 105, 106], "voic": [32, 33, 34, 63, 64, 65, 107, 108], "celeri": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "celery_config": 37, "celery_tool": 38, "job": [39, 43, 46, 49, 52, 55, 58, 61, 64], "task": [41, 44, 47, 50, 53, 56, 59, 62, 65], "core": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "cach": 68, "common_util": 69, "config": 70, "fingerprint": 71, "lookup": 72, "ocr": 77, "cluster": 79, "data": 80, "openalex": 82, "draw": 86, "exercis": 88, "graph": [89, 129, 130, 131, 132], "keyword": 90, "score": 91, "wikisearch": 92, "text_util": 94, "breadcrumb": 97, "progress_bar": 98, "clean": 100, "io": 101, "time": [102, 103, 104], "date": 103, "stopwatch": 104, "transcrib": 108, "definit": 109, "pipelin": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "invest": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "aggregate_recent_past": 112, "check_unit": 113, "compute_fundraisers_unit": 114, "compute_investors_unit": 115, "compute_investors_units_2": 116, "compute_jaccard_index": 117, "concept_configur": 118, "create_investments_graph": 119, "detect_fundraisers_concept": 120, "paramet": 122, "toy_exampl": 123, "valid": [124, 125, 126, 127], "1_old": 125, "2_new": 126, "3_slide": 127, "visualis": [128, 129, 130, 131, 132], "startup": [129, 130, 131, 132], "2": 130, "3": 131, "4": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [35, "subpackages"], [66, "subpackages"], [96, "subpackages"], [110, "subpackages"]], "Submodules": [[0, "submodules"], [2, "submodules"], [6, "submodules"], [9, "submodules"], [12, "submodules"], [15, "submodules"], [17, "submodules"], [20, "submodules"], [23, "submodules"], [26, "submodules"], [29, "submodules"], [32, "submodules"], [36, "submodules"], [42, "submodules"], [45, "submodules"], [48, "submodules"], [51, "submodules"], [54, "submodules"], [57, "submodules"], [60, "submodules"], [63, "submodules"], [67, "submodules"], [73, "submodules"], [75, "submodules"], [78, "submodules"], [83, "submodules"], [85, "submodules"], [93, "submodules"], [96, "submodules"], [99, "submodules"], [102, "submodules"], [105, "submodules"], [107, "submodules"], [111, "submodules"], [124, "submodules"], [128, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.auth package": [[2, "module-graphai.api.auth"]], "graphai.api.auth.auth_utils module": [[3, "module-graphai.api.auth.auth_utils"]], "graphai.api.auth.log module": [[4, "module-graphai.api.auth.log"]], "graphai.api.auth.router module": [[5, "module-graphai.api.auth.router"]], "graphai.api.common package": [[6, "module-graphai.api.common"]], "graphai.api.common.schemas module": [[7, "module-graphai.api.common.schemas"]], "graphai.api.common.utils module": [[8, "module-graphai.api.common.utils"]], "graphai.api.embedding package": [[9, "module-graphai.api.embedding"]], "graphai.api.embedding.router module": [[10, "graphai-api-embedding-router-module"]], "graphai.api.embedding.schemas module": [[11, "graphai-api-embedding-schemas-module"]], "graphai.api.image package": [[12, "module-graphai.api.image"]], "graphai.api.image.router module": [[13, "graphai-api-image-router-module"]], "graphai.api.image.schemas module": [[14, "graphai-api-image-schemas-module"]], "graphai.api.main package": [[15, "module-graphai.api.main"]], "graphai.api.main.main module": [[16, "graphai-api-main-main-module"]], "graphai.api.ontology package": [[17, "module-graphai.api.ontology"]], "graphai.api.ontology.router module": [[18, "graphai-api-ontology-router-module"]], "graphai.api.ontology.schemas module": [[19, "graphai-api-ontology-schemas-module"]], "graphai.api.scraping package": [[20, "module-graphai.api.scraping"]], "graphai.api.scraping.router module": [[21, "graphai-api-scraping-router-module"]], "graphai.api.scraping.schemas module": [[22, "graphai-api-scraping-schemas-module"]], "graphai.api.text package": [[23, "module-graphai.api.text"]], "graphai.api.text.router module": [[24, "module-graphai.api.text.router"]], "graphai.api.text.schemas module": [[25, "module-graphai.api.text.schemas"]], "graphai.api.translation package": [[26, "module-graphai.api.translation"]], "graphai.api.translation.router module": [[27, "graphai-api-translation-router-module"]], "graphai.api.translation.schemas module": [[28, "graphai-api-translation-schemas-module"]], "graphai.api.video package": [[29, "module-graphai.api.video"]], "graphai.api.video.router module": [[30, "graphai-api-video-router-module"]], "graphai.api.video.schemas module": [[31, "graphai-api-video-schemas-module"]], "graphai.api.voice package": [[32, "module-graphai.api.voice"]], "graphai.api.voice.router module": [[33, "graphai-api-voice-router-module"]], "graphai.api.voice.schemas module": [[34, "graphai-api-voice-schemas-module"]], "graphai.celery package": [[35, "module-graphai.celery"]], "graphai.celery.common package": [[36, "module-graphai.celery.common"]], "graphai.celery.common.celery_config module": [[37, "module-graphai.celery.common.celery_config"]], "graphai.celery.common.celery_tools module": [[38, "module-graphai.celery.common.celery_tools"]], "graphai.celery.common.jobs module": [[39, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log module": [[40, "module-graphai.celery.common.log"]], "graphai.celery.common.tasks module": [[41, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding package": [[42, "module-graphai.celery.embedding"]], "graphai.celery.embedding.jobs module": [[43, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks module": [[44, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image package": [[45, "module-graphai.celery.image"]], "graphai.celery.image.jobs module": [[46, "module-graphai.celery.image.jobs"]], "graphai.celery.image.tasks module": [[47, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology package": [[48, "module-graphai.celery.ontology"]], "graphai.celery.ontology.jobs module": [[49, "module-graphai.celery.ontology.jobs"]], "graphai.celery.ontology.tasks module": [[50, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping package": [[51, "module-graphai.celery.scraping"]], "graphai.celery.scraping.jobs module": [[52, "module-graphai.celery.scraping.jobs"]], "graphai.celery.scraping.tasks module": [[53, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text package": [[54, "module-graphai.celery.text"]], "graphai.celery.text.jobs module": [[55, "module-graphai.celery.text.jobs"]], "graphai.celery.text.tasks module": [[56, "module-graphai.celery.text.tasks"]], "graphai.celery.translation package": [[57, "module-graphai.celery.translation"]], "graphai.celery.translation.jobs module": [[58, "module-graphai.celery.translation.jobs"]], "graphai.celery.translation.tasks module": [[59, "module-graphai.celery.translation.tasks"]], "graphai.celery.video package": [[60, "module-graphai.celery.video"]], "graphai.celery.video.jobs module": [[61, "module-graphai.celery.video.jobs"]], "graphai.celery.video.tasks module": [[62, "module-graphai.celery.video.tasks"]], "graphai.celery.voice package": [[63, "module-graphai.celery.voice"]], "graphai.celery.voice.jobs module": [[64, "module-graphai.celery.voice.jobs"]], "graphai.celery.voice.tasks module": [[65, "module-graphai.celery.voice.tasks"]], "graphai.core package": [[66, "module-graphai.core"]], "graphai.core.common package": [[67, "module-graphai.core.common"]], "graphai.core.common.caching module": [[68, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[69, "module-graphai.core.common.common_utils"]], "graphai.core.common.config module": [[70, "module-graphai.core.common.config"]], "graphai.core.common.fingerprinting module": [[71, "module-graphai.core.common.fingerprinting"]], "graphai.core.common.lookup module": [[72, "module-graphai.core.common.lookup"]], "graphai.core.embedding package": [[73, "module-graphai.core.embedding"]], "graphai.core.embedding.embedding module": [[74, "module-graphai.core.embedding.embedding"]], "graphai.core.image package": [[75, "module-graphai.core.image"]], "graphai.core.image.image module": [[76, "module-graphai.core.image.image"]], "graphai.core.image.ocr module": [[77, "module-graphai.core.image.ocr"]], "graphai.core.ontology package": [[78, "module-graphai.core.ontology"]], "graphai.core.ontology.clustering module": [[79, "module-graphai.core.ontology.clustering"]], "graphai.core.ontology.data module": [[80, "module-graphai.core.ontology.data"]], "graphai.core.ontology.ontology module": [[81, "module-graphai.core.ontology.ontology"]], "graphai.core.ontology.openalex module": [[82, "module-graphai.core.ontology.openalex"]], "graphai.core.scraping package": [[83, "module-graphai.core.scraping"]], "graphai.core.scraping.scraping module": [[84, "module-graphai.core.scraping.scraping"]], "graphai.core.text package": [[85, "module-graphai.core.text"]], "graphai.core.text.draw module": [[86, "module-graphai.core.text.draw"]], "graphai.core.text.embeddings module": [[87, "module-graphai.core.text.embeddings"]], "graphai.core.text.exercises module": [[88, "module-graphai.core.text.exercises"]], "graphai.core.text.graph module": [[89, "module-graphai.core.text.graph"]], "graphai.core.text.keywords module": [[90, "module-graphai.core.text.keywords"]], "graphai.core.text.scores module": [[91, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch module": [[92, "module-graphai.core.text.wikisearch"]], "graphai.core.translation package": [[93, "module-graphai.core.translation"]], "graphai.core.translation.text_utils module": [[94, "module-graphai.core.translation.text_utils"]], "graphai.core.translation.translation module": [[95, "module-graphai.core.translation.translation"]], "graphai.core.utils package": [[96, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[97, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[98, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[99, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[100, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[101, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[102, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[103, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[104, "module-graphai.core.utils.time.stopwatch"]], "graphai.core.video package": [[105, "module-graphai.core.video"]], "graphai.core.video.video module": [[106, "module-graphai.core.video.video"]], "graphai.core.voice package": [[107, "module-graphai.core.voice"]], "graphai.core.voice.transcribe module": [[108, "module-graphai.core.voice.transcribe"]], "graphai.definitions module": [[109, "module-graphai.definitions"]], "graphai.pipelines package": [[110, "module-graphai.pipelines"]], "graphai.pipelines.investment package": [[111, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[112, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[113, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[114, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[115, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[116, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[117, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[118, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[119, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[120, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[121, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[122, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[123, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[124, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[125, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[126, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[127, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[128, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[129, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[130, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[131, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[132, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.auth"], [3, "module-graphai.api.auth.auth_utils"], [4, "module-graphai.api.auth.log"], [5, "module-graphai.api.auth.router"], [6, "module-graphai.api.common"], [7, "module-graphai.api.common.schemas"], [8, "module-graphai.api.common.utils"], [9, "module-graphai.api.embedding"], [12, "module-graphai.api.image"], [15, "module-graphai.api.main"], [17, "module-graphai.api.ontology"], [20, "module-graphai.api.scraping"], [23, "module-graphai.api.text"], [24, "module-graphai.api.text.router"], [25, "module-graphai.api.text.schemas"], [26, "module-graphai.api.translation"], [29, "module-graphai.api.video"], [32, "module-graphai.api.voice"], [35, "module-graphai.celery"], [36, "module-graphai.celery.common"], [37, "module-graphai.celery.common.celery_config"], [38, "module-graphai.celery.common.celery_tools"], [39, "module-graphai.celery.common.jobs"], [40, "module-graphai.celery.common.log"], [41, "module-graphai.celery.common.tasks"], [42, "module-graphai.celery.embedding"], [43, "module-graphai.celery.embedding.jobs"], [44, "module-graphai.celery.embedding.tasks"], [45, "module-graphai.celery.image"], [46, "module-graphai.celery.image.jobs"], [47, "module-graphai.celery.image.tasks"], [48, "module-graphai.celery.ontology"], [49, "module-graphai.celery.ontology.jobs"], [50, "module-graphai.celery.ontology.tasks"], [51, "module-graphai.celery.scraping"], [52, "module-graphai.celery.scraping.jobs"], [53, "module-graphai.celery.scraping.tasks"], [54, "module-graphai.celery.text"], [55, "module-graphai.celery.text.jobs"], [56, "module-graphai.celery.text.tasks"], [57, "module-graphai.celery.translation"], [58, "module-graphai.celery.translation.jobs"], [59, "module-graphai.celery.translation.tasks"], [60, "module-graphai.celery.video"], [61, "module-graphai.celery.video.jobs"], [62, "module-graphai.celery.video.tasks"], [63, "module-graphai.celery.voice"], [64, "module-graphai.celery.voice.jobs"], [65, "module-graphai.celery.voice.tasks"], [66, "module-graphai.core"], [67, "module-graphai.core.common"], [68, "module-graphai.core.common.caching"], [69, "module-graphai.core.common.common_utils"], [70, "module-graphai.core.common.config"], [71, "module-graphai.core.common.fingerprinting"], [72, "module-graphai.core.common.lookup"], [73, "module-graphai.core.embedding"], [74, "module-graphai.core.embedding.embedding"], [75, "module-graphai.core.image"], [76, "module-graphai.core.image.image"], [77, "module-graphai.core.image.ocr"], [78, "module-graphai.core.ontology"], [79, "module-graphai.core.ontology.clustering"], [80, "module-graphai.core.ontology.data"], [81, "module-graphai.core.ontology.ontology"], [82, "module-graphai.core.ontology.openalex"], [83, "module-graphai.core.scraping"], [84, "module-graphai.core.scraping.scraping"], [85, "module-graphai.core.text"], [86, "module-graphai.core.text.draw"], [87, "module-graphai.core.text.embeddings"], [88, "module-graphai.core.text.exercises"], [89, "module-graphai.core.text.graph"], [90, "module-graphai.core.text.keywords"], [91, "module-graphai.core.text.scores"], [92, "module-graphai.core.text.wikisearch"], [93, "module-graphai.core.translation"], [94, "module-graphai.core.translation.text_utils"], [95, "module-graphai.core.translation.translation"], [96, "module-graphai.core.utils"], [97, "module-graphai.core.utils.breadcrumb"], [98, "module-graphai.core.utils.progress_bar"], [99, "module-graphai.core.utils.text"], [100, "module-graphai.core.utils.text.clean"], [101, "module-graphai.core.utils.text.io"], [102, "module-graphai.core.utils.time"], [103, "module-graphai.core.utils.time.date"], [104, "module-graphai.core.utils.time.stopwatch"], [105, "module-graphai.core.video"], [106, "module-graphai.core.video.video"], [107, "module-graphai.core.voice"], [108, "module-graphai.core.voice.transcribe"], [109, "module-graphai.definitions"], [110, "module-graphai.pipelines"], [111, "module-graphai.pipelines.investment"], [112, "module-graphai.pipelines.investment.aggregate_recent_past"], [113, "module-graphai.pipelines.investment.check_unit"], [114, "module-graphai.pipelines.investment.compute_fundraisers_units"], [115, "module-graphai.pipelines.investment.compute_investors_units"], [116, "module-graphai.pipelines.investment.compute_investors_units_2"], [117, "module-graphai.pipelines.investment.compute_jaccard_index"], [118, "module-graphai.pipelines.investment.concept_configuration"], [119, "module-graphai.pipelines.investment.create_investments_graph"], [120, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [121, "module-graphai.pipelines.investment.main"], [122, "module-graphai.pipelines.investment.parameters"], [123, "module-graphai.pipelines.investment.toy_example"], [124, "module-graphai.pipelines.validation"], [128, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.auth": [[2, "module-graphai.api.auth"]], "token (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.Token"]], "tokendata (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.TokenData"]], "user (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.User"]], "userindb (class in graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.UserInDB"]], "access_token (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.authenticate_user"]], "disabled (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.disabled"]], "email (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.email"]], "extract_username_and_scopes() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.extract_username_and_scopes"]], "extract_username_sync() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.extract_username_sync"]], "full_name (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_password_hash"]], "get_ratelimit_values() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_ratelimit_values"]], "get_user() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user"]], "get_user_ratelimit_overrides() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.get_user_ratelimit_overrides"]], "graphai.api.auth.auth_utils": [[3, "module-graphai.api.auth.auth_utils"]], "hashed_password (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.hashed_password"]], "model_computed_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_computed_fields"]], "model_computed_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_computed_fields"]], "model_config (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_config"]], "model_config (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_config"]], "model_config (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_config"]], "model_config (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_config"]], "model_fields (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.model_fields"]], "model_fields (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.model_fields"]], "model_fields (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.model_fields"]], "model_fields (graphai.api.auth.auth_utils.userindb attribute)": [[3, "graphai.api.auth.auth_utils.UserInDB.model_fields"]], "scopes (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.scopes"]], "scopes (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.scopes"]], "token_type (graphai.api.auth.auth_utils.token attribute)": [[3, "graphai.api.auth.auth_utils.Token.token_type"]], "username (graphai.api.auth.auth_utils.tokendata attribute)": [[3, "graphai.api.auth.auth_utils.TokenData.username"]], "username (graphai.api.auth.auth_utils.user attribute)": [[3, "graphai.api.auth.auth_utils.User.username"]], "verify_password() (in module graphai.api.auth.auth_utils)": [[3, "graphai.api.auth.auth_utils.verify_password"]], "loggermiddleware (class in graphai.api.auth.log)": [[4, "graphai.api.auth.log.LoggerMiddleware"]], "dispatch() (graphai.api.auth.log.loggermiddleware method)": [[4, "graphai.api.auth.log.LoggerMiddleware.dispatch"]], "get_user_agent() (in module graphai.api.auth.log)": [[4, "graphai.api.auth.log.get_user_agent"]], "graphai.api.auth.log": [[4, "module-graphai.api.auth.log"]], "log_request() (in module graphai.api.auth.log)": [[4, "graphai.api.auth.log.log_request"]], "create_access_token() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.create_access_token"]], "get_active_user_dummy() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_current_active_user"]], "get_current_user() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_current_user"]], "get_user_for_rate_limiter() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.get_user_for_rate_limiter"]], "graphai.api.auth.router": [[5, "module-graphai.api.auth.router"]], "login_for_access_token() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.login_for_access_token"]], "read_users_me() (in module graphai.api.auth.router)": [[5, "graphai.api.auth.router.read_users_me"]], "graphai.api.common": [[6, "module-graphai.api.common"]], "filerequest (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.FileRequest"]], "taskidresponse (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TaskStatusResponse"]], "tokenstatus (class in graphai.api.common.schemas)": [[7, "graphai.api.common.schemas.TokenStatus"]], "active (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.active"]], "fingerprinted (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.fingerprinted"]], "graphai.api.common.schemas": [[7, "module-graphai.api.common.schemas"]], "model_computed_fields (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_computed_fields"]], "model_computed_fields (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_computed_fields"]], "model_config (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_config"]], "model_config (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_config"]], "model_config (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_config"]], "model_config (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_config"]], "model_fields (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.model_fields"]], "model_fields (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.model_fields"]], "model_fields (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.model_fields"]], "model_fields (graphai.api.common.schemas.tokenstatus attribute)": [[7, "graphai.api.common.schemas.TokenStatus.model_fields"]], "task_id (graphai.api.common.schemas.taskidresponse attribute)": [[7, "graphai.api.common.schemas.TaskIDResponse.task_id"]], "task_id (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_id"]], "task_name (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_name"]], "task_result (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_result"]], "task_status (graphai.api.common.schemas.taskstatusresponse attribute)": [[7, "graphai.api.common.schemas.TaskStatusResponse.task_status"]], "token (graphai.api.common.schemas.filerequest attribute)": [[7, "graphai.api.common.schemas.FileRequest.token"]], "format_api_results() (in module graphai.api.common.utils)": [[8, "graphai.api.common.utils.format_api_results"]], "graphai.api.common.utils": [[8, "module-graphai.api.common.utils"]], "graphai.api.embedding": [[9, "module-graphai.api.embedding"]], "graphai.api.image": [[12, "module-graphai.api.image"]], "graphai.api.main": [[15, "module-graphai.api.main"]], "graphai.api.ontology": [[17, "module-graphai.api.ontology"]], "graphai.api.scraping": [[20, "module-graphai.api.scraping"]], "graphai.api.text": [[23, "module-graphai.api.text"]], "generate_exercise() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.generate_exercise"]], "graphai.api.text.router": [[24, "module-graphai.api.text.router"]], "keywords() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.keywords"]], "wikify() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify"]], "wikify_graph_svg() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.text.router)": [[24, "graphai.api.text.router.wikify_ontology_svg"]], "generatelectureexerciserequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest"]], "generatetextexerciserequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest"]], "keywordsrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.KeywordsRequest"]], "wikifyfromkeywordsrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.text.schemas)": [[25, "graphai.api.text.schemas.WikifyResponseElem"]], "bloom_level (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.bloom_level"]], "bloom_level (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.bloom_level"]], "concept_id (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.concept_id"]], "concept_name (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.concept_name"]], "description (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.description"]], "description (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.description"]], "embedding_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_global_score"]], "embedding_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_keywords_score"]], "embedding_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.embedding_local_score"]], "graph_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.graph_keywords_score"]], "graph_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.graph_score"]], "graphai.api.text.schemas": [[25, "module-graphai.api.text.schemas"]], "include_solution (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.include_solution"]], "include_solution (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.include_solution"]], "keywords (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.keywords"]], "lecture_id (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.lecture_id"]], "levenshtein_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.levenshtein_score"]], "llm_model (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.llm_model"]], "llm_model (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.llm_model"]], "mixed_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.mixed_score"]], "model_computed_fields (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_computed_fields"]], "model_config (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_config"]], "model_config (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_config"]], "model_config (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_config"]], "model_fields (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.model_fields"]], "model_fields (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.model_fields"]], "model_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.model_fields"]], "ontology_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_global_score"]], "ontology_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_keywords_score"]], "ontology_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.ontology_local_score"]], "openai_api_key (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.openai_api_key"]], "openai_api_key (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.openai_api_key"]], "output_format (graphai.api.text.schemas.generatelectureexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateLectureExerciseRequest.output_format"]], "output_format (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.output_format"]], "raw_text (graphai.api.text.schemas.keywordsrequest attribute)": [[25, "graphai.api.text.schemas.KeywordsRequest.raw_text"]], "raw_text (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[25, "graphai.api.text.schemas.WikifyFromRawTextRequest.raw_text"]], "search_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[25, "graphai.api.text.schemas.WikifyResponseElem.search_score"]], "text (graphai.api.text.schemas.generatetextexerciserequest attribute)": [[25, "graphai.api.text.schemas.GenerateTextExerciseRequest.text"]], "graphai.api.translation": [[26, "module-graphai.api.translation"]], "graphai.api.video": [[29, "module-graphai.api.video"]], "graphai.api.voice": [[32, "module-graphai.api.voice"]], "graphai.celery": [[35, "module-graphai.celery"]], "graphai.celery.common": [[36, "module-graphai.celery.common"]], "baseconfig (class in graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.BaseConfig"]], "developmentconfig (class in graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.create_celery"]], "get_celery_task() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_celery_task"]], "get_settings() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_settings"]], "get_task_info() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.get_task_info"]], "graphai.celery.common.celery_config": [[37, "module-graphai.celery.common.celery_config"]], "route_task() (in module graphai.celery.common.celery_config)": [[37, "graphai.celery.common.celery_config.route_task"]], "get_n_celery_workers() (in module graphai.celery.common.celery_tools)": [[38, "graphai.celery.common.celery_tools.get_n_celery_workers"]], "graphai.celery.common.celery_tools": [[38, "module-graphai.celery.common.celery_tools"]], "direct_lookup_generic_job() (in module graphai.celery.common.jobs)": [[39, "graphai.celery.common.jobs.direct_lookup_generic_job"]], "graphai.celery.common.jobs": [[39, "module-graphai.celery.common.jobs"]], "graphai.celery.common.log": [[40, "module-graphai.celery.common.log"]], "log() (in module graphai.celery.common.log)": [[40, "graphai.celery.common.log.log"]], "graphai.celery.common.tasks": [[41, "module-graphai.celery.common.tasks"]], "graphai.celery.embedding": [[42, "module-graphai.celery.embedding"]], "embedding_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.embedding_job"]], "fingerprint_compute_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.fingerprint_lookup_job"]], "get_embedding_text_fingerprint_chain_list() (in module graphai.celery.embedding.jobs)": [[43, "graphai.celery.embedding.jobs.get_embedding_text_fingerprint_chain_list"]], "graphai.celery.embedding.jobs": [[43, "module-graphai.celery.embedding.jobs"]], "graphai.celery.embedding.tasks": [[44, "module-graphai.celery.embedding.tasks"]], "graphai.celery.image": [[45, "module-graphai.celery.image"]], "fingerprint_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.fingerprint_lookup_job"]], "graphai.celery.image.jobs": [[46, "module-graphai.celery.image.jobs"]], "ocr_job() (in module graphai.celery.image.jobs)": [[46, "graphai.celery.image.jobs.ocr_job"]], "graphai.celery.image.tasks": [[47, "module-graphai.celery.image.tasks"]], "graphai.celery.ontology": [[48, "module-graphai.celery.ontology"]], "breakup_cluster_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.breakup_cluster_job"]], "category_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.category_info_job"]], "cluster_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.cluster_info_job"]], "cluster_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.cluster_nearest_category_job"]], "concept_info_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_info_job"]], "concept_nearest_category_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_nearest_category_job"]], "concept_nearest_concept_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.concept_nearest_concept_job"]], "graph_distance_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.graph_distance_job"]], "graphai.celery.ontology.jobs": [[49, "module-graphai.celery.ontology.jobs"]], "openalex_category_nearest_topics_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.openalex_category_nearest_topics_job"]], "openalex_topic_nearest_categories_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.openalex_topic_nearest_categories_job"]], "recompute_clusters_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.recompute_clusters_job"]], "tree_job() (in module graphai.celery.ontology.jobs)": [[49, "graphai.celery.ontology.jobs.tree_job"]], "graphai.celery.ontology.tasks": [[50, "module-graphai.celery.ontology.tasks"]], "graphai.celery.scraping": [[51, "module-graphai.celery.scraping"]], "extract_content_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.extract_content_job"]], "extract_sublinks_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.extract_sublinks_job"]], "graphai.celery.scraping.jobs": [[52, "module-graphai.celery.scraping.jobs"]], "sublink_lookup_job() (in module graphai.celery.scraping.jobs)": [[52, "graphai.celery.scraping.jobs.sublink_lookup_job"]], "graphai.celery.scraping.tasks": [[53, "module-graphai.celery.scraping.tasks"]], "graphai.celery.text": [[54, "module-graphai.celery.text"]], "generate_exercise() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.generate_exercise"]], "graphai.celery.text.jobs": [[55, "module-graphai.celery.text.jobs"]], "keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.keywords"]], "wikify_graph_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_graph_svg"]], "wikify_keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_keywords"]], "wikify_ontology_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_ontology_svg"]], "wikify_text() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_text"]], "graphai.celery.text.tasks": [[56, "module-graphai.celery.text.tasks"]], "graphai.celery.translation": [[57, "module-graphai.celery.translation"]], "detect_text_language_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.detect_text_language_job"]], "fingerprint_compute_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.fingerprint_lookup_job"]], "get_translation_text_fingerprint_chain_list() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.get_translation_text_fingerprint_chain_list"]], "graphai.celery.translation.jobs": [[58, "module-graphai.celery.translation.jobs"]], "translation_job() (in module graphai.celery.translation.jobs)": [[58, "graphai.celery.translation.jobs.translation_job"]], "graphai.celery.translation.tasks": [[59, "module-graphai.celery.translation.tasks"]], "graphai.celery.video": [[60, "module-graphai.celery.video"]], "detect_slides_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.detect_slides_job"]], "extract_audio_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.extract_audio_job"]], "fingerprint_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.fingerprint_lookup_job"]], "get_audio_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_audio_fingerprint_chain_list"]], "get_file_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_file_job"]], "get_slide_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_slide_fingerprint_chain_list"]], "get_video_fingerprint_chain_list() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.get_video_fingerprint_chain_list"]], "graphai.celery.video.jobs": [[61, "module-graphai.celery.video.jobs"]], "retrieve_url_job() (in module graphai.celery.video.jobs)": [[61, "graphai.celery.video.jobs.retrieve_url_job"]], "graphai.celery.video.tasks": [[62, "module-graphai.celery.video.tasks"]], "graphai.celery.voice": [[63, "module-graphai.celery.voice"]], "detect_language_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.detect_language_job"]], "fingerprint_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.fingerprint_lookup_job"]], "get_audio_language_detection_task_chain() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.get_audio_language_detection_task_chain"]], "graphai.celery.voice.jobs": [[64, "module-graphai.celery.voice.jobs"]], "language_lookup_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.language_lookup_job"]], "transcribe_job() (in module graphai.celery.voice.jobs)": [[64, "graphai.celery.voice.jobs.transcribe_job"]], "graphai.celery.voice.tasks": [[65, "module-graphai.celery.voice.tasks"]], "graphai.core": [[66, "module-graphai.core"]], "graphai.core.common": [[67, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.AudioDBCachingManager"]], "embeddingdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.EmbeddingDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[68, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_token_file_status() (in module graphai.core.common.caching)": [[68, "graphai.core.common.caching.get_token_file_status"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[68, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[68, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[68, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.embeddingdbcachingmanager method)": [[68, "graphai.core.common.caching.EmbeddingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[68, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[68, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[68, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[68, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[68, "graphai.core.common.caching.FingerprintParameters.load_values"]], "convert_list_to_text() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.convert_list_to_text"]], "convert_text_back_to_list() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.convert_text_back_to_list"]], "copy_file_within_folder() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.copy_file_within_folder"]], "file_exists() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[69, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[69, "graphai.core.common.common_utils.write_text_file"]], "graphai.core.common.config": [[70, "module-graphai.core.common.config"]], "compare_decoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compare_encoded_fingerprints"]], "compute_text_fingerprint() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.compute_text_fingerprint"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_for_list_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_fingerprint_for_list_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_image_fingerprint_from_list"]], "find_closest_text_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.find_closest_text_fingerprint_from_list"]], "graphai.core.common.fingerprinting": [[71, "module-graphai.core.common.fingerprinting"]], "md5_text() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.fingerprinting)": [[71, "graphai.core.common.fingerprinting.perceptual_hash_text"]], "cache_lookup_generic() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.cache_lookup_generic"]], "database_callback_generic() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.database_callback_generic"]], "fingerprint_based_text_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_based_text_lookup"]], "fingerprint_cache_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_cache_lookup"]], "fingerprint_cache_lookup_with_most_similar() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_cache_lookup_with_most_similar"]], "fingerprint_lookup_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.fingerprint_lookup_retrieve_from_db"]], "graphai.core.common.lookup": [[72, "module-graphai.core.common.lookup"]], "ignore_fingerprint_results_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.ignore_fingerprint_results_callback"]], "is_fingerprinted() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.is_fingerprinted"]], "lookup_latest_allowed_date() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.lookup_latest_allowed_date"]], "retrieve_fingerprint_callback() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.retrieve_fingerprint_callback"]], "token_based_text_lookup() (in module graphai.core.common.lookup)": [[72, "graphai.core.common.lookup.token_based_text_lookup"]], "graphai.core.embedding": [[73, "module-graphai.core.embedding"]], "embeddingmodels (class in graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.EmbeddingModels"]], "compute_embedding_text_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.compute_embedding_text_fingerprint_callback"]], "copy_embedding_object() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.copy_embedding_object"]], "embed() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.embed"]], "embed_text() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embed_text"]], "embedding_from_json() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_from_json"]], "embedding_text_list_embed_callback() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_text_list_embed_callback"]], "embedding_text_list_embed_parallel() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_text_list_embed_parallel"]], "embedding_text_list_fingerprint_callback() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_callback"]], "embedding_text_list_fingerprint_parallel() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_text_list_fingerprint_parallel"]], "embedding_to_json() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.embedding_to_json"]], "fingerprint_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.fingerprint_based_embedding_lookup"]], "generate_embedding_text_token() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.generate_embedding_text_token"]], "get_device() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.get_device"]], "get_last_usage() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.get_last_usage"]], "get_max_tokens() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.get_max_tokens"]], "get_text_token_count_using_model() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.get_text_token_count_using_model"]], "get_token_count() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.get_token_count"]], "get_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.get_tokenizer"]], "graphai.core.embedding.embedding": [[74, "module-graphai.core.embedding.embedding"]], "insert_embedding_into_db() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.insert_embedding_into_db"]], "load_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.load_model"]], "load_models() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.load_models"]], "model_loaded() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.model_loaded"]], "set_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.set_tokenizer"]], "token_based_embedding_lookup() (in module graphai.core.embedding.embedding)": [[74, "graphai.core.embedding.embedding.token_based_embedding_lookup"]], "unload_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[74, "graphai.core.embedding.embedding.EmbeddingModels.unload_model"]], "graphai.core.image": [[75, "module-graphai.core.image"]], "cache_lookup_extract_slide_text() (in module graphai.core.image.image)": [[76, "graphai.core.image.image.cache_lookup_extract_slide_text"]], "extract_slide_text() (in module graphai.core.image.image)": [[76, "graphai.core.image.image.extract_slide_text"]], "extract_slide_text_callback() (in module graphai.core.image.image)": [[76, "graphai.core.image.image.extract_slide_text_callback"]], "graphai.core.image.image": [[76, "module-graphai.core.image.image"]], "googleocrmodel (class in graphai.core.image.ocr)": [[77, "graphai.core.image.ocr.GoogleOCRModel"]], "establish_connection() (graphai.core.image.ocr.googleocrmodel method)": [[77, "graphai.core.image.ocr.GoogleOCRModel.establish_connection"]], "get_ocr_colnames() (in module graphai.core.image.ocr)": [[77, "graphai.core.image.ocr.get_ocr_colnames"]], "graphai.core.image.ocr": [[77, "module-graphai.core.image.ocr"]], "perform_ocr() (graphai.core.image.ocr.googleocrmodel method)": [[77, "graphai.core.image.ocr.GoogleOCRModel.perform_ocr"]], "wait_for_ocr_results() (graphai.core.image.ocr.googleocrmodel method)": [[77, "graphai.core.image.ocr.GoogleOCRModel.wait_for_ocr_results"]], "ontologydata (class in graphai.core.ontology)": [[78, "graphai.core.ontology.OntologyData"]], "break_up_cluster() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.break_up_cluster"]], "compute_category_anchors_using_references() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.compute_symmetric_concept_concept_matrix"]], "generate_category_concept_dict() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_anchor_pages"]], "get_category_branch() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_branch"]], "get_category_category_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_category_to_category"]], "get_cluster_category_closest() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.get_cluster_category_closest"]], "get_cluster_category_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_closest_category"]], "get_cluster_closest_category_embedding() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_closest_category_embedding"]], "get_cluster_cluster_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_cluster_parent"]], "get_concept_category_closest() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.get_concept_category_closest"]], "get_concept_category_closest_embedding() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_category_closest_embedding"]], "get_concept_category_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_closest_category"]], "get_concept_closest_concept() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_closest_concept"]], "get_concept_closest_concept_embedding() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_closest_concept_embedding"]], "get_concept_cluster_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_closest() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.get_concept_concept_closest"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_name"]], "get_concept_names_list() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_names_list"]], "get_concept_parent_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_custom_cluster_closest_category"]], "get_custom_cluster_closest_category_embedding() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_custom_cluster_closest_category_embedding"]], "get_non_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_ontology_concept_names_table"]], "get_openalex_nearest() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.get_openalex_nearest"]], "get_root_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.get_test_concept_names"]], "graphai.core.ontology": [[78, "module-graphai.core.ontology"]], "load_anchor_page_dict() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.ontologydata method)": [[78, "graphai.core.ontology.OntologyData.load_ontology_concept_names"]], "recompute_clusters() (in module graphai.core.ontology)": [[78, "graphai.core.ontology.recompute_clusters"]], "arithmetic_mean_laplacians() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.get_laplacian"]], "graphai.core.ontology.clustering": [[79, "module-graphai.core.ontology.clustering"]], "group_clustered() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.group_clustered"]], "normalize_features() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.normalize_features"]], "perform_pca() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.ontology.clustering)": [[79, "graphai.core.ontology.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.OntologyData"]], "adjusted_exp() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.average_and_combine"]], "combine_concept_and_anchor_scores() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.combine_concept_and_anchor_scores"]], "compute_average() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.compute_average"]], "compute_average_of_df() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.compute_average_of_df"]], "compute_category_anchors_using_references() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.derive_col_to_col_graph"]], "embeddings_table_exists() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.embeddings_table_exists"]], "ensure_nonzero_denominator() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.ensure_nonzero_denominator"]], "execute_multi_entity_concepts_and_anchors_query() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.execute_multi_entity_concepts_and_anchors_query"]], "execute_single_entity_concepts_and_anchors_query() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.execute_single_entity_concepts_and_anchors_query"]], "generate_category_concept_dict() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_anchor_pages"]], "get_category_branch() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_branch"]], "get_category_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category"]], "get_cluster_closest_category_embedding() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category_embedding"]], "get_cluster_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.get_col_to_col_dict"]], "get_concept_category_closest_embedding() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_category_closest_embedding"]], "get_concept_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_concept() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept"]], "get_concept_closest_concept_embedding() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept_embedding"]], "get_concept_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_name"]], "get_concept_names_list() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_names_list"]], "get_concept_parent_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category"]], "get_custom_cluster_closest_category_embedding() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category_embedding"]], "get_id_dict() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_ontology_concept_names_table"]], "get_root_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.get_test_concept_names"]], "graphai.core.ontology.data": [[80, "module-graphai.core.ontology.data"]], "load_anchor_page_dict() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[80, "graphai.core.ontology.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.ontology.data)": [[80, "graphai.core.ontology.data.to_ndarray_and_flatten"]], "break_up_cluster() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.break_up_cluster"]], "get_category_info() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_category_info"]], "get_cluster_category_closest() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_cluster_category_closest"]], "get_cluster_info() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_cluster_info"]], "get_concept_category_closest() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_concept_category_closest"]], "get_concept_concept_closest() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_concept_concept_closest"]], "get_concept_info() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.get_concept_info"]], "graphai.core.ontology.ontology": [[81, "module-graphai.core.ontology.ontology"]], "recompute_clusters() (in module graphai.core.ontology.ontology)": [[81, "graphai.core.ontology.ontology.recompute_clusters"]], "get_openalex_nearest() (in module graphai.core.ontology.openalex)": [[82, "graphai.core.ontology.openalex.get_openalex_nearest"]], "graphai.core.ontology.openalex": [[82, "module-graphai.core.ontology.openalex"]], "graphai.core.scraping": [[83, "module-graphai.core.scraping"]], "cache_lookup_get_sublinks() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.cache_lookup_get_sublinks"]], "cache_lookup_process_all_sublinks() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.cache_lookup_process_all_sublinks"]], "check_url() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.check_url"]], "compare_strings() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.create_base_url_token"]], "extract_scraping_content_callback() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.extract_scraping_content_callback"]], "extract_text_from_url() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.get_sublinks"]], "graphai.core.scraping.scraping": [[84, "module-graphai.core.scraping.scraping"]], "initialize_data_dict() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.initialize_url"]], "initialize_url_and_get_sublinks() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.initialize_url_and_get_sublinks"]], "parse_page_type() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.parse_page_type"]], "process_all_scraping_sublinks_parallel() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.process_all_scraping_sublinks_parallel"]], "process_all_sublinks() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.remove_headers"]], "remove_junk_scraping_parallel() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.remove_junk_scraping_parallel"]], "remove_long_patterns() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.remove_long_patterns"]], "scraping_sublinks_callback() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.scraping_sublinks_callback"]], "shift_to_max_correlation() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.string_circular_shift"]], "sublink_parallel_processing_merge_callback() (in module graphai.core.scraping.scraping)": [[84, "graphai.core.scraping.scraping.sublink_parallel_processing_merge_callback"]], "conceptsgraph (class in graphai.core.text)": [[85, "graphai.core.text.ConceptsGraph"]], "add_graph_score() (graphai.core.text.conceptsgraph method)": [[85, "graphai.core.text.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.conceptsgraph method)": [[85, "graphai.core.text.ConceptsGraph.add_ontology_scores"]], "compute_scores() (in module graphai.core.text)": [[85, "graphai.core.text.compute_scores"]], "draw_graph() (in module graphai.core.text)": [[85, "graphai.core.text.draw_graph"]], "draw_ontology() (in module graphai.core.text)": [[85, "graphai.core.text.draw_ontology"]], "extract_keywords() (in module graphai.core.text)": [[85, "graphai.core.text.extract_keywords"]], "generate_exercise() (in module graphai.core.text)": [[85, "graphai.core.text.generate_exercise"]], "get_ontology_concepts() (graphai.core.text.conceptsgraph method)": [[85, "graphai.core.text.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text": [[85, "module-graphai.core.text"]], "load_from_db() (graphai.core.text.conceptsgraph method)": [[85, "graphai.core.text.ConceptsGraph.load_from_db"]], "wikisearch() (in module graphai.core.text)": [[85, "graphai.core.text.wikisearch"]], "draw_graph() (in module graphai.core.text.draw)": [[86, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[86, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[86, "module-graphai.core.text.draw"]], "conceptembeddings (class in graphai.core.text.embeddings)": [[87, "graphai.core.text.embeddings.ConceptEmbeddings"]], "compute_embedding_scores() (in module graphai.core.text.embeddings)": [[87, "graphai.core.text.embeddings.compute_embedding_scores"]], "graphai.core.text.embeddings": [[87, "module-graphai.core.text.embeddings"]], "values() (graphai.core.text.embeddings.conceptembeddings method)": [[87, "graphai.core.text.embeddings.ConceptEmbeddings.values"]], "generate_exercise() (in module graphai.core.text.exercises)": [[88, "graphai.core.text.exercises.generate_exercise"]], "graphai.core.text.exercises": [[88, "module-graphai.core.text.exercises"]], "conceptsgraph (class in graphai.core.text.graph)": [[89, "graphai.core.text.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.text.graph.conceptsgraph method)": [[89, "graphai.core.text.graph.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.graph.conceptsgraph method)": [[89, "graphai.core.text.graph.ConceptsGraph.add_ontology_scores"]], "get_ontology_concepts() (graphai.core.text.graph.conceptsgraph method)": [[89, "graphai.core.text.graph.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text.graph": [[89, "module-graphai.core.text.graph"]], "load_from_db() (graphai.core.text.graph.conceptsgraph method)": [[89, "graphai.core.text.graph.ConceptsGraph.load_from_db"]], "extract_keywords() (in module graphai.core.text.keywords)": [[90, "graphai.core.text.keywords.extract_keywords"]], "graphai.core.text.keywords": [[90, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[90, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[90, "graphai.core.text.keywords.word_tokens"]], "aggregate_results() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.aggregate_results"]], "compute_keywords_scores() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.compute_keywords_scores"]], "compute_levenshtein_score() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.compute_levenshtein_score"]], "compute_mixed_score() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.compute_mixed_score"]], "compute_scores() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.compute_scores"]], "filter_results() (in module graphai.core.text.scores)": [[91, "graphai.core.text.scores.filter_results"]], "graphai.core.text.scores": [[91, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch": [[92, "module-graphai.core.text.wikisearch"]], "search_elasticsearch() (in module graphai.core.text.wikisearch)": [[92, "graphai.core.text.wikisearch.search_elasticsearch"]], "search_wikipedia_api() (in module graphai.core.text.wikisearch)": [[92, "graphai.core.text.wikisearch.search_wikipedia_api"]], "wikisearch() (in module graphai.core.text.wikisearch)": [[92, "graphai.core.text.wikisearch.wikisearch"]], "graphai.core.translation": [[93, "module-graphai.core.translation"]], "translationmodels (class in graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.TranslationModels"]], "compute_slide_tfidf_scores() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.compute_slide_tfidf_scores"]], "detect_text_language() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.detect_text_language"]], "find_best_slide_subset() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.find_set_cover"]], "generate_src_tgt_dict() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.generate_src_tgt_dict"]], "generate_translation_text_token() (in module graphai.core.translation.text_utils)": [[94, "graphai.core.translation.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.translation.text_utils.translationmodels method)": [[94, "graphai.core.translation.text_utils.TranslationModels.get_device"]], "get_last_usage() (graphai.core.translation.text_utils.translationmodels method)": [[94, "graphai.core.translation.text_utils.TranslationModels.get_last_usage"]], "graphai.core.translation.text_utils": [[94, "module-graphai.core.translation.text_utils"]], "load_models() (graphai.core.translation.text_utils.translationmodels method)": [[94, "graphai.core.translation.text_utils.TranslationModels.load_models"]], "translate() (graphai.core.translation.text_utils.translationmodels method)": [[94, "graphai.core.translation.text_utils.TranslationModels.translate"]], "unload_model() (graphai.core.translation.text_utils.translationmodels method)": [[94, "graphai.core.translation.text_utils.TranslationModels.unload_model"]], "cache_lookup_translate_text() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.cache_lookup_translate_text"]], "cache_lookup_translation_text_using_fingerprint() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.cache_lookup_translation_text_using_fingerprint"]], "compute_translation_text_fingerprint_callback() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.compute_translation_text_fingerprint_callback"]], "detect_language_translation() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.detect_language_translation"]], "graphai.core.translation.translation": [[95, "module-graphai.core.translation.translation"]], "translate_text() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.translate_text"]], "translate_text_callback() (in module graphai.core.translation.translation)": [[95, "graphai.core.translation.translation.translate_text_callback"]], "graphai.core.utils": [[96, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[97, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[97, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[97, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[97, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[97, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[97, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[98, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[98, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[98, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[98, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[99, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[100, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[100, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[100, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[100, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[100, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[100, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[100, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[101, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[101, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[101, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[101, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[101, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[102, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[103, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[103, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[103, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[103, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[104, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[104, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.core.video": [[105, "module-graphai.core.video"]], "nlpmodels (class in graphai.core.video.video)": [[106, "graphai.core.video.video.NLPModels"]], "cache_lookup_detect_slides() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.cache_lookup_detect_slides"]], "cache_lookup_extract_audio() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.cache_lookup_extract_audio"]], "cache_lookup_retrieve_file_from_url() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.cache_lookup_retrieve_file_from_url"]], "check_ocr_and_hash_thresholds() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.check_ocr_and_hash_thresholds"]], "compute_audio_fingerprint() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_audio_fingerprint"]], "compute_audio_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_audio_fingerprint_callback"]], "compute_noise_level_parallel() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_noise_level_parallel"]], "compute_noise_threshold_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_noise_threshold_callback"]], "compute_ocr_noise_level() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_ocr_threshold"]], "compute_slide_fingerprint() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_slide_fingerprint"]], "compute_slide_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_slide_fingerprint_callback"]], "compute_slide_set_fingerprint() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_slide_set_fingerprint"]], "compute_slide_transitions_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_slide_transitions_callback"]], "compute_slide_transitions_parallel() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_slide_transitions_parallel"]], "compute_video_fingerprint() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_video_fingerprint"]], "compute_video_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_video_fingerprint_callback"]], "compute_video_ocr_transitions() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.compute_video_ocr_transitions"]], "create_filename_using_url_format() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.create_filename_using_url_format"]], "detect_audio_duration() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.detect_audio_duration"]], "detect_slides_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.detect_slides_callback"]], "extract_and_sample_frames() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.extract_and_sample_frames"]], "extract_audio() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.extract_audio"]], "extract_audio_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.extract_audio_callback"]], "extract_audio_from_video() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.extract_frames"]], "frame_hash_similarity() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.frame_ocr_transition"]], "generate_audio_token() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.generate_audio_token"]], "generate_frame_sample_indices() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.generate_symbolic_token"]], "get_audio_token_status() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_audio_token_status"]], "get_available_streams() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_available_streams"]], "get_cosine_sim() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_cosine_sim"]], "get_file_size() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_file_size"]], "get_image_token_status() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_image_token_status"]], "get_text_word_vector() (graphai.core.video.video.nlpmodels method)": [[106, "graphai.core.video.video.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.video.video.nlpmodels method)": [[106, "graphai.core.video.video.NLPModels.get_text_word_vector_using_words"]], "get_video_token_status() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.get_video_token_status"]], "get_words() (graphai.core.video.video.nlpmodels method)": [[106, "graphai.core.video.video.NLPModels.get_words"]], "graphai.core.video.video": [[106, "module-graphai.core.video.video"]], "ignore_audio_fingerprint_results_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.ignore_audio_fingerprint_results_callback"]], "ignore_slide_fingerprint_results_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.ignore_slide_fingerprint_results_callback"]], "ignore_video_fingerprint_results_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.ignore_video_fingerprint_results_callback"]], "load_nlp_models() (graphai.core.video.video.nlpmodels method)": [[106, "graphai.core.video.video.NLPModels.load_nlp_models"]], "perform_probe() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.read_txt_gz_file"]], "reextract_cached_audio() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.reextract_cached_audio"]], "reextract_cached_slides() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.reextract_cached_slides"]], "retrieve_audio_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_audio_fingerprint_callback"]], "retrieve_file_from_any_source() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_any_source"]], "retrieve_file_from_generic_url() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_url"]], "retrieve_file_from_url_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_url_callback"]], "retrieve_file_from_youtube() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_file_from_youtube"]], "retrieve_slide_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_slide_fingerprint_callback"]], "retrieve_video_fingerprint_callback() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.retrieve_video_fingerprint_callback"]], "tesseract_ocr_or_get_cached() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.tesseract_ocr_or_get_cached"]], "video_id_and_duration_fp_lookup() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.video_id_and_duration_fp_lookup"]], "write_txt_gz_file() (in module graphai.core.video.video)": [[106, "graphai.core.video.video.write_txt_gz_file"]], "graphai.core.voice": [[107, "module-graphai.core.voice"]], "whispertranscriptionmodel (class in graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel"]], "cache_lookup_audio_fingerprint() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.cache_lookup_audio_fingerprint"]], "cache_lookup_audio_language() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.cache_lookup_audio_language"]], "cache_lookup_audio_transcript() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.cache_lookup_audio_transcript"]], "detect_audio_segment_lang_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_language_callback() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.detect_language_callback"]], "detect_language_parallel() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.detect_language_parallel"]], "detect_language_retrieve_from_db_and_split() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.detect_language_retrieve_from_db_and_split"]], "extract_media_segment() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.extract_media_segment"]], "get_last_usage() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_last_usage"]], "get_silence_thresholds() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.get_silence_thresholds"]], "graphai.core.voice.transcribe": [[108, "module-graphai.core.voice.transcribe"]], "load_model_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.load_model_whisper"]], "transcribe_audio_to_text() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.transcribe_audio_to_text"]], "transcribe_audio_whisper() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.transcribe_audio_whisper"]], "transcribe_callback() (in module graphai.core.voice.transcribe)": [[108, "graphai.core.voice.transcribe.transcribe_callback"]], "unload_model() (graphai.core.voice.transcribe.whispertranscriptionmodel method)": [[108, "graphai.core.voice.transcribe.WhisperTranscriptionModel.unload_model"]], "graphai.definitions": [[109, "module-graphai.definitions"]], "graphai.pipelines": [[110, "module-graphai.pipelines"]], "graphai.pipelines.investment": [[111, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[112, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[112, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[112, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[112, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[112, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[112, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[113, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[113, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[113, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[113, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[113, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[114, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[114, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[115, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[115, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[116, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[116, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[117, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[117, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[118, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[118, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[119, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[119, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[120, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[120, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[121, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[121, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[122, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[122, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[123, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[123, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[123, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[123, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[123, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[124, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[128, "module-graphai.pipelines.visualisation"]]}})