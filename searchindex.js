Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.completion", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.completion", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.completion", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.gpt_message_presets", "graphai.core.common.graph", "graphai.core.common.json_repair", "graphai.core.common.json_repair.json_repair", "graphai.core.common.json_repair.json_repair_error", "graphai.core.common.json_repair.string_utils", "graphai.core.common.ontology", "graphai.core.common.scraping", "graphai.core.common.text_utils", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.config_loader", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.completion.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.completion.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.completion.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.gpt_message_presets.rst", "graphai.core.common.graph.rst", "graphai.core.common.json_repair.rst", "graphai.core.common.json_repair.json_repair.rst", "graphai.core.common.json_repair.json_repair_error.rst", "graphai.core.common.json_repair.string_utils.rst", "graphai.core.common.ontology.rst", "graphai.core.common.scraping.rst", "graphai.core.common.text_utils.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.config_loader.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.completion module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.completion module", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.completion module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.gpt_message_presets module", "graphai.core.common.graph module", "graphai.core.common.json_repair package", "graphai.core.common.json_repair.json_repair module", "graphai.core.common.json_repair.json_repair_error module", "graphai.core.common.json_repair.string_utils module", "graphai.core.common.ontology module", "graphai.core.common.scraping module", "graphai.core.common.text_utils module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.config_loader module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 41, 42, 44, 50, 51, 52, 59, 63, 69, 82], "contain": [0, 3, 35, 42, 50, 51, 52, 54, 60, 74, 82], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 12, 25, 35, 40, 59, 74, 82, 92], "project": 0, "ai": 0, "base": [0, 8, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 47, 49, 50, 51, 52, 54, 56, 57, 62, 63, 65, 66, 69, 82, 87], "util": [0, 39], "api": [0, 51, 52, 57], "core": 0, "pipelin": 0, "definit": [0, 82], "modul": [0, 1, 2, 12, 20, 29, 40, 45, 53, 58, 61, 64, 67, 72, 75, 88, 92], "celery_task": 1, "common": [1, 2, 29, 39], "router": 1, "schema": [1, 74], "main": [1, 75, 77], "complet": [2, 20, 29, 63, 69, 87], "imag": [2, 3, 20, 29, 52], "ontologi": [2, 12, 20, 25, 29, 30, 40, 59], "scrape": [2, 20, 29, 40], "text": [2, 3, 20, 21, 26, 29, 31, 32, 36, 39, 42, 46, 48, 50, 51, 52, 56, 57, 61], "translat": [2, 3, 12, 20, 29, 51, 52, 60], "video": [2, 3, 12, 20, 29, 40], "voic": [2, 20, 29], "format_api_result": 3, "id": [3, 35, 41, 44, 50, 54], "name": [3, 31, 41, 52, 54, 66, 74], "statu": [3, 50, 54], "result": [3, 8, 25, 31, 32, 35, 36, 37, 38, 44, 49, 51, 52, 54, 56, 57, 59, 82], "format": [3, 42, 52, 56, 68, 74], "come": [3, 51, 74], "from": [3, 25, 41, 44, 49, 50, 51, 52, 59, 60, 65, 74, 82], "celeri": [3, 54, 59], "output": [3, 30, 33, 52], "param": [3, 41, 42, 50, 51, 52, 54, 76, 78, 79, 80, 81, 83, 84], "task": [3, 54, 59, 63, 69], "return": [3, 8, 25, 41, 42, 44, 49, 50, 51, 52, 54, 56, 57, 59, 60, 65, 66, 68, 69, 82], "appropri": 3, "dictionari": [3, 42, 50, 51, 52, 56, 66], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 21, 22, 26, 27, 28, 30, 31, 32, 34, 37, 38, 41, 50, 51, 52, 60], "forc": [3, 21, 22, 26, 27, 28, 31, 32, 34, 36, 37, 38, 41], "fals": [3, 15, 21, 22, 25, 26, 27, 28, 31, 32, 34, 36, 37, 38, 42, 48, 50, 51, 52, 60, 66, 69, 82], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": 3, "none": [3, 15, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 50, 51, 52, 54, 55, 56, 62, 63, 66, 82, 83], "retriev": [3, 25, 41, 50, 52, 56, 69], "number": [3, 8, 31, 44, 50, 51, 52, 56, 57, 63, 66, 82], "cach": [3, 40, 52], "row": [3, 41, 82], "relev": [3, 25, 35], "fingerprint": [3, 41, 52], "lookup": 3, "dict": [3, 31, 34, 37, 41, 44, 50, 51, 52, 56, 59, 66], "comput": [3, 8, 44, 49, 51, 52, 82], "dbcachingmanagerbas": [3, 41], "object": [3, 30, 33, 35, 41, 44, 49, 51, 52, 54, 56, 57, 59, 62, 63, 66, 68, 69], "equal": [3, 50], "condit": 3, "count": [3, 48, 51], "onli": [3, 25, 52, 66, 74, 82], "us": [3, 8, 41, 50, 51, 52, 56, 60, 65, 69, 74, 82], "unexpect": [3, 52, 82], "indent": [3, 52, 62, 66], "where": [3, 52, 82], "need": [3, 42, 69], "done": [3, 25], "among": [3, 25], "same": [3, 50, 52, 82], "sourc": [3, 36, 44, 51], "target": [3, 36, 44, 51, 52], "lang": [3, 51], "origin": [3, 41, 44, 49, 50, 52], "plu": [3, 44, 49, 51, 52], "fingerprint_lookup_parallel": 3, "input_dict": [3, 51], "i": [3, 8, 25, 41, 42, 44, 46, 50, 52, 59, 60, 63, 65, 69, 82], "n_total": 3, "min_similar": [3, 21, 22, 26, 27, 28, 52], "data_typ": 3, "audio": [3, 52], "perform": [3, 50, 52, 56, 57, 82], "parallel": 3, "previou": [3, 63, 69], "step": [3, 52], "index": [3, 50, 52, 56, 74, 82], "thi": [3, 8, 25, 52, 63, 74, 82], "total": [3, 15, 63, 69], "minimum": [3, 50, 51, 52], "similar": [3, 41, 52, 82], "threshold": [3, 8, 28, 38, 41, 52, 59, 60], "two": [3, 8, 44, 50, 52], "consid": [3, 51, 52], "match": [3, 50, 52, 56], "type": [3, 8, 44, 49, 50, 52, 56, 57, 59, 60, 65, 66], "data": [3, 21, 22, 24, 25, 26, 27, 28, 34, 50, 66, 74], "can": [3, 25, 51, 52, 69, 74], "mode": 3, "detail": [3, 41, 52], "closest": [3, 52], "which": [3, 35, 41, 50, 51, 52, 59, 60, 82], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 8, 25], "databas": 3, "insert": 3, "list": [3, 25, 31, 32, 33, 34, 35, 36, 41, 44, 50, 52, 59, 60, 82], "aggregate_result": 8, "coef": 8, "0": [8, 25, 31, 35, 38, 44, 49, 50, 51, 52, 59, 66, 68, 69, 76, 82], "5": [8, 25, 35, 49, 69], "panda": [8, 44, 49, 56, 57, 59, 68], "datafram": [8, 44, 49, 56, 57, 59, 82], "intermedi": [8, 44, 49], "wikifi": [8, 25, 35, 44, 49, 59], "uniqu": [8, 56, 57, 82], "keyword": [8, 21, 25, 31, 35, 44, 49, 56, 57, 58], "pageid": [8, 35, 44, 49, 56, 57, 59, 82], "final": [8, 69, 82], "Then": [8, 60], "mixedscor": [8, 35, 59], "everi": [8, 50, 52, 66, 82], "page": [8, 25, 35, 44, 50], "convex": 8, "combin": [8, 82], "other": [8, 25, 69], "score": [8, 25, 35, 44, 49, 51, 52, 59, 60, 82], "paramet": [8, 44, 49, 52, 56, 57, 59, 60, 63, 65, 66, 69, 75, 82], "pd": [8, 44, 49, 56, 57, 82], "A": [8, 44, 49, 52, 56, 57, 59, 60], "column": [8, 41, 44, 49, 56, 57, 59, 82], "pagetitl": [8, 35, 44, 49, 56, 57, 59], "searchscor": [8, 35, 44, 49, 56, 57, 59], "levenshteinscor": [8, 35, 44, 49, 59], "graphscor": [8, 35, 44, 59], "ontologylocalscor": [8, 35, 49, 59], "ontologyglobalscor": [8, 35, 49, 59], "keywordsscor": [8, 35, 59], "float": [8, 25, 31, 35, 37, 38, 44, 59, 60, 69, 82], "1": [8, 25, 31, 35, 44, 50, 51, 52, 68, 69, 82], "control": [8, 82], "how": [8, 50, 51, 59, 60], "ar": [8, 25, 50, 51, 52, 59, 60, 68, 82], "valu": [8, 41, 50, 52, 82], "take": [8, 25, 82], "sum": 8, "over": [8, 82], "normalis": [8, 82], "max": [8, 44], "default": [8, 41, 44, 48, 49, 50, 51, 52, 54, 59, 60, 69], "ani": [8, 60, 74, 82], "between": [8, 41, 52, 68, 69, 82], "linearli": [8, 68], "interpol": 8, "those": [8, 52], "approach": 8, "filter_result": 8, "epsilon": [8, 76], "min_vot": 8, "filter": [8, 25, 56, 59, 60], "depend": 8, "some": [8, 25, 63, 69, 82], "criteria": 8, "specifi": [8, 82], "all": [8, 44, 50, 52, 56, 60, 69, 74, 82], "decid": 8, "whether": [8, 41, 42, 44, 49, 50, 51, 52, 59, 60, 69, 82], "good": 8, "enough": 8, "least": 8, "amount": 8, "int": [8, 25, 31, 33, 35, 37, 44, 56, 57, 59, 63, 66], "exclud": 8, "kept": [8, 82], "iff": 8, "celery_tool": 12, "log": [12, 62, 66], "get_n_celery_work": 13, "msg": [15, 62, 66, 69], "second": [15, 50, 52, 69], "length": [15, 50, 51, 52], "64": 15, "async": [19, 21, 22, 23, 24, 25, 26, 27, 28], "init": 19, "redirect_doc": 19, "populate_academic_entity_dict": 21, "populate_slide_concepts_dict": 21, "slide": [21, 25, 31, 51, 52], "get_completion_text_fingerprint_chain_list": 21, "text_typ": [21, 31, 51], "completion_typ": [21, 31, 51], "n_job": [21, 22, 26, 27, 28], "8": [21, 22, 26, 27, 28, 52], "ignore_fp_result": [21, 22, 26, 27, 28], "results_to_return": [21, 22, 26, 27, 28], "get_completion_task_chain": 21, "result_typ": [21, 31], "true": [21, 25, 37, 42, 44, 49, 50, 51, 52, 60, 62, 66, 69, 82], "skip_token": 21, "debug": [21, 31, 62, 66], "get_cleanup_task_chain": 21, "cleanup": [21, 31], "calculate_summary_text_fingerprint": 21, "summaryfingerprintrequest": [21, 31], "calculate_summary_text_fingerprint_statu": 21, "task_id": [21, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 54], "summarize_lectur": [21, 51], "lecturesummarizationrequest": [21, 31], "summarize_academic_ent": [21, 51], "academicentitysummarizationrequest": [21, 31], "summarize_text": 21, "genericsummarizationrequest": [21, 31], "clean_up": 21, "cleanuprequest": [21, 31], "summarize_statu": 21, "choose_best_subset": 21, "slidesubsetrequest": [21, 31], "get_slide_fingerprint_chain_list": 22, "calculate_slide_fingerprint": 22, "imagefingerprintrequest": [22, 32], "calculate_slide_fingerprint_statu": 22, "extract_text": 22, "extracttextrequest": [22, 32], "extract_text_statu": 22, "detect_ocr_language_statu": 22, "ontology_tree_response_handl": 23, "id_and_result": 23, "tree": [23, 30, 33, 52], "parent": 23, "category_id": [23, 49], "children": 23, "extract_sublink": 24, "getsublinksrequest": [24, 34], "extract_sublinks_statu": 24, "extract_page_cont": 24, "extractcontentrequest": [24, 34], "extract_page_content_statu": 24, "keywordsrequest": [25, 35], "use_nltk": [25, 60], "bool": [25, 31, 32, 34, 36, 37, 38, 44, 49, 56, 59, 60, 66, 82], "process": [25, 50], "raw": [25, 35, 60, 65], "e": [25, 50, 52, 53], "g": [25, 52], "an": [25, 41, 51, 52, 66, 74], "abstract": 25, "public": 25, "cours": 25, "descript": 25, "lectur": [25, 31], "wikifyrequest": [25, 35], "method": [25, 32, 52, 82], "str": [25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 56, 57, 60, 65, 66, 69, 82], "restrict_to_ontologi": 25, "graph_score_smooth": 25, "ontology_score_smooth": 25, "keywords_score_smooth": 25, "normalisation_coef": 25, "filtering_threshold": 25, "filtering_min_vot": 25, "refresh_scor": 25, "concept": [25, 31, 59, 74, 77, 82], "wikipedia": [25, 35, 57], "each": [25, 35, 44, 50, 52, 63, 69, 82], "set": [25, 35, 41, 51, 54, 56, 57, 59, 82], "quantifi": 25, "follow": [25, 52, 56, 63, 65, 69, 82], "extract": [25, 35, 50, 52, 60], "automat": [25, 41, 52], "omit": 25, "keyword_list": 25, "provid": [25, 44, 49, 50, 51, 52, 54], "input": [25, 50, 51, 52], "instead": [25, 41], "raw_text": [25, 35], "wikisearch": [25, 56, 57], "For": [25, 82], "10": [25, 51, 56, 57, 60, 82], "through": [25, 52], "request": [25, 50], "elasticsearch": [25, 56, 71], "pair": [25, 44, 60, 69, 82], "sever": [25, 35, 69], "deriv": 25, "account": 25, "accord": [25, 50, 82], "rule": 25, "keep": [25, 63], "most": [25, 52], "wikify_ontology_svg": 25, "wikifyresponseelem": [25, 35], "level": [25, 59], "2": [25, 31, 51, 52, 69, 82, 92], "svg": [25, 59], "file": [25, 41, 42, 52, 59, 66], "repres": [25, 30, 33, 35, 60, 63, 69], "subgraph": 25, "induc": [25, 59], "wikify_graph_svg": 25, "concept_score_threshold": [25, 59], "3": [25, 51, 59, 65, 69, 92], "edge_threshold": [25, 59], "min_component_s": [25, 59], "priority_test_text": 25, "get_translation_text_fingerprint_chain_list": 26, "src": [26, 51], "tgt": [26, 51], "calculate_translation_text_fingerprint": 26, "textfingerprintrequest": [26, 36], "calculate_translation_text_fingerprint_statu": 26, "translationrequest": [26, 36], "translate_statu": 26, "text_detect_languag": 26, "textdetectlanguagerequest": [26, 36], "text_detect_language_statu": 26, "get_video_fingerprint_chain_list": 27, "retrieve_fil": 27, "retrieveurlrequest": [27, 37], "get_retrieve_file_statu": 27, "calculate_video_fingerprint": 27, "videofingerprintrequest": [27, 37], "calculate_video_fingerprint_statu": 27, "get_fil": 27, "filerequest": [27, 30], "extract_audio": 27, "extractaudiorequest": [27, 37], "extract_audio_statu": 27, "detect_slid": 27, "detectslidesrequest": [27, 37], "detect_slides_statu": 27, "get_audio_fingerprint_chain_list": 28, "remove_sil": [28, 38], "calculate_audio_fingerprint": 28, "audiofingerprintrequest": [28, 38], "calculate_audio_fingerprint_statu": 28, "transcrib": [28, 52], "audiotranscriptionrequest": [28, 38], "transcribe_statu": 28, "detect_languag": 28, "audiodetectlanguagerequest": [28, 38], "priority_test": 28, "detect_language_statu": 28, "class": [30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 49, 51, 52, 54, 56, 57, 62, 63, 65, 66, 69], "taskidrespons": 30, "basemodel": [30, 31, 32, 33, 34, 35, 36, 37, 38], "endpoint": [30, 33], "taskstatusrespons": [30, 31, 32, 33, 34, 36, 37, 38], "task_nam": [30, 31, 32, 33, 34, 36, 37, 38], "task_statu": [30, 31, 32, 33, 34, 36, 37, 38], "task_result": [30, 31, 32, 33, 34, 36, 37, 38, 54], "jsonwrappervalu": 30, "abc": [30, 31], "slideconceptsmap": 31, "completionrequestbas": 31, "simul": [31, 51], "academicentitydescriptor": 31, "entiti": 31, "liter": [31, 32, 36, 37], "unit": 31, "person": 31, "subtyp": 31, "possible_subtyp": 31, "categori": 31, "cleanupresponsedict": 31, "subject": 31, "for_wikifi": 31, "summaryresponsedict": 31, "summary_long": 31, "summary_short": 31, "titl": [31, 56], "academicentitysummaryresponsedict": 31, "inferred_subtyp": 31, "top_3_categori": 31, "completiontaskresponsebas": 31, "summari": [31, 51, 69], "text_too_larg": [31, 36], "success": [31, 32, 34, 36, 37, 38, 52], "fresh": [31, 32, 34, 36, 37, 38], "approx_cost": 31, "debug_messag": 31, "summarytaskrespons": 31, "academicentitysummarytaskrespons": 31, "cleanuptaskrespons": 31, "summaryrespons": 31, "academicentitysummaryrespons": 31, "cleanuprespons": 31, "coverag": [31, 51], "min_freq": [31, 51], "slidesubsetrespons": 31, "subset": 31, "academic_ent": 31, "summaryfingerprinttaskrespons": 31, "closest_token": [31, 32, 36, 37, 38], "summaryfingerprintrespons": 31, "imagefingerprinttaskrespons": 32, "closest_token_origin": [32, 38], "imagefingerprintrespons": 32, "googl": [32, 52], "tesseract": [32, 52], "individualocrresult": 32, "extracttexttaskrespons": 32, "languag": [32, 36, 37, 38, 51, 52], "extracttextrespons": 32, "detectocrlanguagetaskrespons": 32, "detectocrlanguagerespons": 32, "treeresponseelem": 33, "childcategoryid": 33, "parentcategoryid": 33, "treerespons": 33, "url": [34, 37, 50, 52, 65], "getsublinkstaskrespons": 34, "validated_url": [34, 50], "sublink": [34, 50], "status_msg": 34, "getsublinksrespons": 34, "remove_head": [34, 50], "remove_long_pattern": [34, 50], "extractcontenttaskrespons": 34, "extractcontentrespons": 34, "inform": [35, 56], "anchor": 35, "defin": [35, 82, 86], "search": [35, 50, 52, 56, 57], "space": [35, 50, 60, 66], "It": [35, 60, 65, 82], "consist": [35, 52], "measur": 35, "degre": 35, "respect": [35, 68, 82], "config": 35, "schema_extra": 35, "exampl": [35, 44, 60, 65, 82], "1196": [35, 44], "angl": 35, "8055555555555556": 35, "44735199351890065": 35, "9058463104630012": 35, "152547": 35, "bisect": 35, "3333333333333333": 35, "16661245633224378": 35, "22717425120724127": 35, "6666666666666667": 35, "609271523178808": 35, "44715741719086977": 35, "23972889": 35, "distance_from_a_point_to_a_lin": 35, "16666666666666669": 35, "2134432477817427": 35, "003590346636521923": 35, "21885521885521886": 35, "19791666666666666": 35, "19828593689131283": 35, "17781458572659029": 35, "946975": [35, 44], "line_": 35, "geometri": 35, "33567080901262164": 35, "8232323232323234": 35, "7916666666666666": 35, "7855473315153876": 35, "7886663359580247": 35, "22634860": 35, "line_seg": 35, "5555555555555556": 35, "3582111602475977": 35, "42461810549112244": 35, "43097643097643096": 35, "75": [35, 63], "6026490066225165": 35, "5277457623305826": 35, "2175469": 35, "non": [35, 56], "line": [35, 51, 52, 66, 82], "sight_propag": 35, "19444444444444448": 35, "39019342923035233": 35, "01572170017309725": 35, "21212121212121213": 35, "11647727272727273": 35, "5087650954421504": 35, "2950855110143057": 35, "133496": 35, "parallelogram": 35, "3055555555555556": 35, "13627674782665528": 35, "14484503981375635": 35, "4288185842201275": 35, "76944": 35, "perpendicular": 35, "19444444444444445": 35, "039652736888335365": 35, "15017752515904018": 35, "25": [35, 63], "2584729255940787": 35, "19421461143444865": 35, "25278": 35, "quadrilater": 35, "02777777777777779": 35, "15367913840285474": 35, "12360559235107477": 35, "36363636363636365": 35, "3307362680171406": 35, "21973432050168798": 35, "76956": 35, "right_angl": 35, "4166666666666667": 35, "4451948682556247": 35, "12678424818870415": 35, "42424242424242425": 35, "4107908063887807": 35, "3996645939435453": 35, "94102": 35, "solid_angl": 35, "3888888888888889": 35, "6912823774628103": 35, "08695255651117278": 35, "196969696969697": 35, "15909090909090912": 35, "7415270744059212": 35, "4580780578246384": 35, "31482": 35, "tangent": 35, "4722222222222222": 35, "29631455223594527": 35, "3573397570845174": 35, "6414141414141414": 35, "59375": 35, "48284225283305426": 35, "30654": 35, "triangl": 35, "5717479784842091": 35, "2535403349997643": 35, "47723102055958355": 35, "en": [36, 37, 51, 52], "fr": [36, 37, 51], "de": 36, "textfingerprinttaskrespons": 36, "textfingerprintrespons": 36, "translationtaskrespons": 36, "devic": 36, "translationrespons": 36, "textdetectlanguagetaskrespons": 36, "textdetectlanguagerespons": 36, "playlist": [37, 52], "retrieveurlresponseinn": 37, "retrieveurlrespons": 37, "videofingerprinttaskrespons": 37, "videofingerprintrespons": 37, "force_non_self": 37, "extractaudiotaskrespons": 37, "durat": [37, 38, 52], "extractaudiorespons": 37, "slidetokenandtimestamp": 37, "timestamp": [37, 52, 68], "detectslidestaskrespons": 37, "slide_token": 37, "detectslidesrespons": 37, "audiofingerprinttaskrespons": 38, "fp_nosil": 38, "audiofingerprintrespons": 38, "audiodetectlanguagetaskrespons": 38, "audiodetectlanguagerespons": 38, "force_lang": [38, 52], "audiotranscriptiontaskrespons": 38, "transcript_result": 38, "subtitle_result": 38, "json": [38, 42, 52, 66], "audiotranscriptionrespons": 38, "interfac": 39, "json_repair": 40, "common_util": 40, "gpt_message_preset": 40, "text_util": 40, "delete_fil": 41, "file_path": [41, 42], "delet": [41, 56, 65], "full": [41, 42, 52], "path": [41, 42, 44, 52, 87], "create_symlink_between_path": 41, "old_path": 41, "new_path": 41, "creat": [41, 42, 50, 51, 54, 56, 66, 69], "symlink": 41, "old": 41, "real": 41, "new": [41, 52, 69], "videodbcachingmanag": 41, "init_db": 41, "audiodbcachingmanag": 41, "slidedbcachingmanag": 41, "textdbcachingmanag": 41, "completiondbcachingmanag": 41, "scrapingdbcachingmanag": 41, "get_details_using_origin": 41, "origin_token": 41, "col": 41, "get": [41, 65], "": [41, 44, 50, 51, 65], "videoconfig": 41, "get_root_dir": 41, "get_image_dir": 41, "get_audio_dir": 41, "get_video_dir": 41, "get_transcript_dir": 41, "concat_file_path": 41, "filenam": [41, 42, 52, 66], "subfold": 41, "concaten": 41, "root": [41, 52], "dir": 41, "given": [41, 42, 50, 51, 52, 54, 56, 57, 59, 60, 65, 66, 68, 82], "should": [41, 56, 66, 74], "generate_filepath": 41, "force_dir": 41, "gener": [41, 50, 51, 52, 60], "its": [41, 50, 52, 82], "particular": 41, "create_symlink": 41, "new_filenam": 41, "fingerprintparamet": 41, "load_valu": 41, "load": [41, 51, 52], "fail": 41, "them": [41, 50, 52], "get_min_sim_text": 41, "get_min_sim_imag": 41, "get_min_sim_audio": 41, "get_min_sim_video": 41, "make_sure_path_exist": 42, "file_at_the_end": 42, "full_perm": 42, "recurs": [42, 52], "folder": [42, 52], "exist": [42, 51, 52, 66], "thu": 42, "doesn": [42, 52], "t": [42, 44, 51, 52, 60, 66], "end": [42, 50, 52, 74, 82], "file_exist": 42, "check": [42, 50], "otherwis": [42, 52, 60, 82], "write_text_fil": 42, "filename_with_path": 42, "content": [42, 50, 52, 66], "write": [42, 52], "textual": 42, "write_json_fil": 42, "d": [42, 63, 65], "read_text_fil": 42, "open": 42, "read": [42, 52, 66], "read_json_fil": 42, "format_datetime_for_mysql": 42, "dt": 42, "parse_mysql_datetim": 42, "get_current_datetim": 42, "current": [42, 52, 68], "datetim": [42, 68], "mysql": 42, "string": [42, 50, 51, 52, 60], "generate_lecture_summary_messag": 43, "long_len": [43, 51], "short_len": [43, 51], "title_len": [43, 51], "generate_generic_summary_messag": 43, "generate_academic_entity_summary_messag": 43, "conceptsgraph": [44, 59], "fetch_from_db": [44, 49], "old_compute_scor": 44, "source_page_id": 44, "target_page_id": 44, "possibl": [44, 60], "displaystyl": 44, "frac": 44, "ln": 44, "rebound": 44, "out": [44, 59, 60], "min": 44, "element": [44, 50], "ha": [44, 82], "kei": [44, 51, 52, 82], "cg": 44, "compute_scor": 44, "6220": 44, "18973446": 44, "9417": 44, "5193576613841849": 44, "4740698357575134": 44, "3591100561928845": 44, "5343247664351338": 44, "530184349205493": 44, "40043881227279876": 44, "add_graph_scor": 44, "smooth": [44, 49], "includ": [44, 49, 69], "appli": [44, 49], "transform": [44, 49], "bump": 44, "avoid": [44, 66], "neg": 44, "exponenti": 44, "shape": [44, 82], "json_repair_error": 45, "string_util": 45, "repair_json": 46, "at_end_of_block_com": 46, "except": 47, "jsonrepairerror": 47, "messag": [47, 50, 51, 69], "posit": [47, 50], "is_hex": 48, "code": [48, 50, 52, 66], "is_digit": 48, "is_valid_string_charact": 48, "is_delimit": 48, "char": 48, "is_start_of_valu": 48, "is_control_charact": 48, "is_whitespac": 48, "is_special_whitespac": 48, "is_quot": 48, "is_double_quote_lik": 48, "is_double_quot": 48, "is_single_quote_lik": 48, "is_single_quot": 48, "strip_last_occurr": 48, "text_to_strip": 48, "strip_remaining_text": 48, "insert_before_last_whitespac": 48, "text_to_insert": 48, "remove_at_index": 48, "start": [48, 50, 52], "ends_with_comma_or_newlin": 48, "next_non_white_space_charact": 48, "char_code_at": 48, "ind": 48, "char_at": 48, "get_concept_categori": 49, "page_id": 49, "get_predefined_tre": 49, "get_category_par": 49, "get_category_children": 49, "add_concepts_categori": 49, "add_categories_categori": 49, "filter_concept": 49, "add_ontology_scor": 49, "push": 49, "awai": 49, "compare_str": 50, "string1": 50, "string2": 50, "compar": [50, 52, 82], "arrai": 50, "first": [50, 52, 66, 69], "indic": [50, 51, 52, 56], "charact": 50, "find_consecutive_run": 50, "v": [50, 52, 82], "min_run": 50, "32": [50, 51], "find": [50, 52], "consecut": [50, 69], "run": [50, 63, 69, 74], "sequenc": [50, 52], "40": 50, "time": [50, 52, 61, 63], "tupl": [50, 60, 82], "k1": [50, 52], "k2": [50, 52], "find_edge_pattern": 50, "content_stack": 50, "flip_str": 50, "repeat": 50, "pattern": 50, "edg": [50, 59, 82], "begin": [50, 52, 69], "webpag": 50, "flip": 50, "footer": 50, "header": 50, "string_circular_shift": 50, "shift": 50, "circular": 50, "mani": [50, 51, 59], "find_spac": 50, "point": [50, 74], "shift_to_max_correl": 50, "s1": 50, "s2": 50, "maximum": [50, 51, 52, 56, 57, 60, 82], "correl": 50, "largest": 50, "optim": 50, "intersect": 50, "find_repeated_pattern": 50, "min_length": 50, "1024": 50, "everywher": 50, "within": 50, "substr": 50, "extract_text_from_url": 50, "request_head": 50, "max_length": [50, 52], "tag_search_sequ": 50, "headless": 50, "browser": 50, "tag": [50, 65], "check_url": 50, "test_url": 50, "access": 50, "fulli": 50, "resolv": 50, "so": [50, 52, 74], "valid": [50, 71], "create_base_url_token": 50, "standard": 50, "initialize_url": 50, "base_url": 50, "initi": 50, "determin": [50, 51], "protocol": 50, "http": 50, "correct": 50, "generate_sublink_token": 50, "base_token": 50, "reconstruct_data_dict": 50, "page_typ": 50, "reconstruct": 50, "precalcul": 50, "option": [50, 54], "initialize_data_dict": 50, "fill": 50, "pagetyp": 50, "field": [50, 56], "vacant": 50, "get_sublink": 50, "map": [50, 56, 68], "later": 50, "parse_page_typ": 50, "pars": [50, 52, 65], "predefin": 50, "process_all_sublink": 50, "modifi": 50, "remov": [50, 52], "elimin": 50, "long": [50, 51], "translation_list_to_text": 51, "str_or_list": 51, "translation_text_back_to_list": 51, "return_list": 51, "md5_text": 51, "md5": [51, 52], "hash": [51, 52], "generate_src_tgt_dict": 51, "generate_translation_text_token": 51, "perceptual_hash_text": 51, "perceptu": [51, 52], "strong": [51, 65], "min_window_length": 51, "window": 51, "k": [51, 82], "gram": 51, "max_window_length": 51, "hash_len": 51, "detect_text_languag": 51, "detect": [51, 52, 74], "compute_slide_tfidf_scor": 51, "list_of_set": 51, "find_set_cov": 51, "find_best_slide_subset": 51, "slides_and_concept": 51, "prioriti": 51, "count_tokens_for_openai": 51, "model": [51, 52], "cl100k_base": 51, "openai": 51, "force_dict_to_text": 51, "generate_summary_text_token": 51, "summary_typ": 51, "generate_completion_type_dict": 51, "convert_text_or_dict_to_text": 51, "text_or_dict": 51, "update_token_count": 51, "old_token_count": 51, "token_count": 51, "compute_chatgpt_request_cost": 51, "model_typ": [51, 52], "chatgptsummar": 51, "establish_connect": [51, 52], "ensur": 51, "boolean": [51, 69], "wa": 51, "found": [51, 52], "200": 51, "temperatur": 51, "top_p": 51, "summarize_gener": 51, "slide_to_concept": 51, "make_sure_json_is_valid": 51, "system_messag": 51, "n_retri": 51, "cleanup_text": 51, "handwrit": 51, "clean": [51, 64], "up": [51, 59], "dirti": 51, "typo": 51, "unnecessari": 51, "break": 51, "one": [51, 52, 60, 63, 69, 82], "ocr": [51, 52], "gpt": 51, "creativ": 51, "top": 51, "p": [51, 60, 65], "part": [51, 56], "distribut": 51, "just": 51, "cost": 51, "system": 51, "sent": 51, "were": 51, "too": [51, 69], "translationmodel": 51, "load_model": 51, "huggingfac": 51, "pysbd": 51, "segment": [51, 52], "get_devic": 51, "unpunctu": 51, "flag": 51, "generate_random_token": 52, "random": [52, 87], "retrieve_file_from_url": 52, "output_filename_with_path": 52, "output_token": 52, "wget": 52, "store": [52, 59], "local": 52, "retrieve_file_from_kaltura": 52, "m3u8": 52, "kaltura": 52, "perform_prob": 52, "input_filename_with_path": 52, "probe": 52, "ffprobe": 52, "see": 52, "document": [52, 56], "generate_symbolic_token": 52, "symbol": 52, "itself": 52, "md5_video_or_audio": 52, "stream": 52, "detect_audio_format_and_dur": 52, "input_token": 52, "track": [52, 63, 69], "ogg": 52, "extract_audio_from_video": 52, "extract_media_seg": 52, "find_beginning_and_ending_sil": 52, "distance_from_end_tol": 52, "01": [52, 76], "noise_thresh": 52, "0001": 52, "silenc": 52, "toler": 52, "distanc": [52, 82], "nois": 52, "remove_silence_doublesid": 52, "without": [52, 69, 82], "unsuccess": 52, "perceptual_hash_audio": 52, "7200": 52, "represent": 52, "decod": 52, "both": [52, 82], "perceptual_hash_imag": 52, "hash_siz": 52, "16": 52, "size": [52, 59], "doe": [52, 66], "compare_decoded_fingerprint": 52, "decoded_1": 52, "decoded_2": 52, "fuzzi": 52, "ratio": [52, 82], "compare_encoded_fingerprint": 52, "f1": 52, "f2": 52, "decoder_func": 52, "function": [52, 69, 82], "decode_fingerprint": 52, "encod": [52, 65], "exact": 52, "find_closest_fingerprint_from_list": 52, "target_fp": 52, "fp_list": 52, "token_list": 52, "date_list": 52, "candid": 52, "highest": 52, "whose": [52, 82], "abov": [52, 68, 82], "correspond": 52, "If": [52, 60, 66, 82], "lower": 52, "than": [52, 60, 82], "block": [52, 66, 69], "quot": 52, "blank": [52, 82], "unind": [52, 82], "differ": [52, 69, 82], "three": 52, "satisfi": 52, "criterion": 52, "find_closest_audio_fingerprint_from_list": 52, "find_closest_image_fingerprint_from_list": 52, "extract_fram": 52, "output_folder_with_path": 52, "output_fold": 52, "frame": 52, "generate_frame_sample_indic": 52, "input_folder_with_path": 52, "12": 52, "we": 52, "don": [52, 60], "singl": 52, "our": 52, "calcul": 52, "read_txt_gz_fil": 52, "fp": 52, "txt": 52, "gz": 52, "write_txt_gz_fil": 52, "read_json_gz_fil": 52, "perform_tesseract_ocr": 52, "image_path": 52, "tesseract_ocr_or_get_cach": 52, "ocr_path": 52, "langaug": 52, "frame_ocr_dist": 52, "nlp_model": 52, "nlp": 52, "frame_hash_similar": 52, "compute_ocr_noise_level": 52, "frame_sample_indic": 52, "sampl": 52, "identifi": 52, "below": [52, 59, 60, 68], "compute_ocr_threshold": 52, "distance_list": 52, "default_threshold": 52, "subsequ": 52, "empti": 52, "check_ocr_and_hash_threshold": 52, "k_l": 52, "k_r": 52, "ocr_dist_threshold": 52, "hash_similarity_threshold": 52, "frame_ocr_transit": 52, "transit": 52, "binari": 52, "thei": [52, 60], "frame_format": 52, "leftmost": 52, "rightmost": 52, "distinct": 52, "compute_video_ocr_transit": 52, "hash_dist_threshold": 52, "keep_first": 52, "transitori": 52, "whispertranscriptionmodel": 52, "load_model_whisp": 52, "lazi": 52, "whisper": 52, "memori": 52, "doc": [52, 56, 74], "detect_audio_segment_lang_whisp": 52, "30": 52, "transcribe_audio_whisp": 52, "verbos": 52, "explicitli": 52, "feed": [52, 65], "transcript": 52, "like": 52, "subtitl": 52, "nlpmodel": 52, "get_nlp_model": 52, "googleocrmodel": 52, "lazili": 52, "connect": [52, 59], "alreadi": 52, "successfulli": 52, "establish": 52, "perform_ocr": 52, "text_detect": 52, "document_text_detect": 52, "wait_for_ocr_result": 52, "image_object": 52, "dtd": 52, "retri": 52, "6": [52, 69], "make": 52, "call": [52, 60], "wait": 52, "td": 52, "case": [52, 66], "failur": 52, "celery_config": 53, "config_load": 53, "wp": 53, "route_task": 54, "arg": 54, "kwarg": 54, "kw": 54, "baseconfig": 54, "developmentconfig": 54, "get_set": 54, "create_celeri": 54, "app": 54, "get_celery_task": 54, "asyncresult": 54, "get_task_info": 54, "info": 54, "load_db_config": 55, "config_dir": 55, "load_schema_nam": 55, "es_bool": 56, "must": 56, "must_not": 56, "build": 56, "claus": 56, "argument": 56, "es_match": 56, "boost": 56, "oper": 56, "es_multi_match": 56, "minimum_should_match": 56, "multi_match": 56, "es_dis_max": 56, "queri": [56, 57], "dis_max": 56, "commun": [56, 57], "epflgraph": 56, "instanc": 56, "limit": [56, 57], "searchrank": [56, 57], "search_mediawiki": 56, "mediawiki": [56, 74], "structur": 56, "search_mediawiki_no_rescor": 56, "skip": [56, 66], "rescor": 56, "search_mediawiki_no_plain": 56, "restrict": 56, "plain": 56, "search_mediawiki_restrict_4": 56, "head": 56, "opening_text": 56, "search_mediawiki_restrict_2": 56, "about": [56, 60], "respons": 56, "index_doc": [56, 74], "create_index": [56, 72], "delete_index": 56, "refresh": 56, "draw": 58, "draw_ontologi": 59, "neighbourhood": 59, "tmp": 59, "serialis": 59, "orient": 59, "record": 59, "go": 59, "succeed": 59, "draw_graph": 59, "compon": 59, "word_token": 60, "word": 60, "sentenc": 60, "separ": 60, "you": [60, 65], "rake_extract": 60, "split_word": 60, "return_scor": 60, "auto": 60, "filter_past_tenses_and_adverb": 60, "unconstrain": 60, "python": 60, "rake": 60, "nltk": 60, "more": [60, 63, 69], "split": 60, "retur": 60, "minim": 60, "ignor": 60, "past": 60, "tens": 60, "participl": 60, "adverb": 60, "join": [60, 65], "crowd": 60, "young": 60, "boi": 60, "re": 60, "foolin": 60, "around": 60, "corner": 60, "drunk": 60, "dress": 60, "best": 60, "brown": 60, "baggi": 60, "platform": 60, "sole": 60, "give": 60, "damn": 60, "trumpet": 60, "playin": 60, "band": 60, "ain": 60, "what": 60, "rock": 60, "roll": 60, "get_keyword": 60, "normal": [60, 65], "breadcrumb": 61, "progress_bar": 61, "color": [62, 66], "time_color": 62, "grai": 62, "report": [62, 69], "outdent": 62, "progressbar": 63, "n_iter": 63, "bar_length": 63, "50": 63, "progress": 63, "bar": 63, "execut": [63, 69], "usag": [63, 69], "letter": 63, "b": 63, "c": [63, 65, 82], "pb": 63, "len": 63, "consum": [63, 69], "updat": 63, "00": 63, "100": 63, "print": [63, 65, 66, 68, 69], "iter": 63, "percentag": 63, "overwrit": 63, "state": 63, "ban": 63, "reset": [63, 66, 69], "increment": 63, "counter": 63, "reus": [63, 69], "io": 64, "htmlcleaner": 65, "htmlparser": 65, "html": 65, "shiver": 65, "dark": 65, "br": 65, "rain": 65, "park": 65, "meantim": 65, "get_data": 65, "handle_starttag": 65, "attr": 65, "handle_endtag": 65, "handle_data": 65, "solv": 65, "problem": 65, "email": 65, "convert": 65, "lowercas": 65, "u2018rain": 65, "u2019": 65, "lt": 65, "evalu": 66, "pref": 66, "x1b": 66, "0m": 66, "black": 66, "30m": 66, "blue": 66, "34m": 66, "cyan": 66, "36m": 66, "green": 66, "32m": 66, "magenta": 66, "35m": 66, "red": 66, "31m": 66, "white": 66, "37m": 66, "yellow": 66, "33m": 66, "cprint": 66, "is_bold": 66, "bold": 66, "pprint": 66, "inlin": 66, "only_first": 66, "pretti": 66, "preced": 66, "ellipsi": 66, "big": 66, "read_json": 66, "save_json": 66, "save": 66, "mkdir": 66, "dirnam": 66, "directori": 66, "date": [67, 74], "stopwatch": 67, "now": 68, "2022": 68, "06": 68, "28": 68, "09": 68, "46": 68, "21": 68, "677968": 68, "rescal": 68, "min_dat": 68, "max_dat": 68, "seri": 68, "rang": [68, 82], "assum": [68, 82], "yyyi": 68, "mm": 68, "dd": 68, "add_year": 68, "n_year": 68, "sw": 69, "delta": 69, "4": [69, 92], "284306764602661": 69, "variabl": 69, "well": 69, "t1": 69, "t2": 69, "yet": 69, "t3": 69, "609307289123535": 69, "849977970123291": 69, "660188913345337": 69, "also": 69, "preprocess": 69, "pre_tim": 69, "task_tim": 69, "postprocess": 69, "post_tim": 69, "total_tim": 69, "f": 69, "proport": 69, "5176954220125477": 69, "tick": 69, "replac": [69, 82], "partial": 69, "furthermor": 69, "19": 69, "86": 69, "lap": 69, "74": 69, "11": 69, "66": 69, "45": 69, "checkpoint": 69, "finish": 69, "last": 69, "befor": [69, 82], "invest": 71, "visualis": 71, "populate_index": 72, "script": 74, "popul": 74, "aitor_concepts_": 74, "directli": 74, "campus_analyt": 74, "after": 74, "creation": [74, 86], "said": 74, "could": 74, "veri": 74, "aggregate_recent_past": 75, "check_unit": 75, "compute_fundraisers_unit": 75, "compute_investors_unit": 75, "compute_investors_units_2": 75, "compute_jaccard_index": 75, "concept_configur": 75, "create_investments_graph": 75, "detect_fundraisers_concept": 75, "toy_exampl": 75, "compute_year_coeffici": 76, "recent_past": 76, "rescale_scor": 76, "df": [76, 83], "year": 76, "aggregate_year": 76, "groupby_column": [76, 83], "normalize_scor": 76, "score_column": 76, "show_trend": 77, "unit_id": 77, "unit_concept": 77, "show_matchmaking_list_view": 77, "investors_concepts_jaccard": 77, "investors_concept": 77, "unit_concept_id": 77, "show_matchmaking_chart_view": 77, "unit_investor": 77, "time_window": 77, "norm": 82, "x": 82, "configur": 82, "investorid": 82, "sqrt": 82, "sum_": 82, "o": 82, "divid": 82, "henc": 82, "have": 82, "mix": 82, "min_ratio": 82, "05": 82, "sourcepageid": 82, "targetpageid": 82, "weight": 82, "arithmet": 82, "mean": 82, "product": 82, "ball": 82, "loop": 82, "normalise_graph": 82, "add": 82, "miss": 82, "revers": 82, "averag": 82, "vertex": 82, "direct": 82, "y": 82, "associ": 82, "key_x": 82, "key_i": 82, "geometr": 82, "compute_affin": 82, "mix_x": 82, "mix_i": 82, "normalise_befor": 82, "cosin": 82, "affin": 82, "requir": 82, "recommend": 82, "low": 82, "euclidean": 82, "notic": 82, "faster": 82, "coeffici": 82, "inf": 82, "typic": 82, "higher": 82, "assign": 82, "unus": 82, "u": 82, "squar": 82, "equival": 82, "scalar": 82, "tanh": 82, "denot": 82, "get_fr": 83, "db": 83, "get_investors_fr": 83, "fr_id": 83, "get_frs_fundrais": 83, "get_fundraisers_concept": 83, "fundraiser_id": 83, "derive_yearly_data": 83, "date_column": 83, "amount_column": 83, "tabl": 86, "build_prefix": 86, "n": 87, "1_old": 88, "2_new": 88, "3_slide": 88, "startup": 92}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [39, 0, 0, "-", "core"], [70, 0, 0, "-", "definitions"], [71, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "main"], [20, 0, 0, "-", "routers"], [29, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "completion"], [5, 0, 0, "-", "image"], [6, 0, 0, "-", "ontology"], [7, 0, 0, "-", "scraping"], [8, 0, 0, "-", "text"], [9, 0, 0, "-", "translation"], [10, 0, 0, "-", "video"], [11, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[8, 1, 1, "", "aggregate_results"], [8, 1, 1, "", "filter_results"]], "graphai.api.common": [[13, 0, 0, "-", "celery_tools"], [14, 0, 0, "-", "graph"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "translation"], [18, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[13, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[15, 1, 1, "", "log"]], "graphai.api.main": [[19, 1, 1, "", "init"], [19, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[21, 0, 0, "-", "completion"], [22, 0, 0, "-", "image"], [23, 0, 0, "-", "ontology"], [24, 0, 0, "-", "scraping"], [25, 0, 0, "-", "text"], [26, 0, 0, "-", "translation"], [27, 0, 0, "-", "video"], [28, 0, 0, "-", "voice"]], "graphai.api.routers.completion": [[21, 1, 1, "", "calculate_summary_text_fingerprint"], [21, 1, 1, "", "calculate_summary_text_fingerprint_status"], [21, 1, 1, "", "choose_best_subset"], [21, 1, 1, "", "clean_up"], [21, 1, 1, "", "get_cleanup_task_chain"], [21, 1, 1, "", "get_completion_task_chain"], [21, 1, 1, "", "get_completion_text_fingerprint_chain_list"], [21, 1, 1, "", "populate_academic_entity_dict"], [21, 1, 1, "", "populate_slide_concepts_dict"], [21, 1, 1, "", "summarize_academic_entity"], [21, 1, 1, "", "summarize_lecture"], [21, 1, 1, "", "summarize_status"], [21, 1, 1, "", "summarize_text"]], "graphai.api.routers.image": [[22, 1, 1, "", "calculate_slide_fingerprint"], [22, 1, 1, "", "calculate_slide_fingerprint_status"], [22, 1, 1, "", "detect_ocr_language_status"], [22, 1, 1, "", "extract_text"], [22, 1, 1, "", "extract_text_status"], [22, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[23, 1, 1, "", "children"], [23, 1, 1, "", "ontology_tree_response_handler"], [23, 1, 1, "", "parent"], [23, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[24, 1, 1, "", "extract_page_content"], [24, 1, 1, "", "extract_page_content_status"], [24, 1, 1, "", "extract_sublinks"], [24, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.text": [[25, 1, 1, "", "keywords"], [25, 1, 1, "", "priority_test_text"], [25, 1, 1, "", "wikify"], [25, 1, 1, "", "wikify_graph_svg"], [25, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[26, 1, 1, "", "calculate_translation_text_fingerprint"], [26, 1, 1, "", "calculate_translation_text_fingerprint_status"], [26, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [26, 1, 1, "", "text_detect_language"], [26, 1, 1, "", "text_detect_language_status"], [26, 1, 1, "", "translate"], [26, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[27, 1, 1, "", "calculate_video_fingerprint"], [27, 1, 1, "", "calculate_video_fingerprint_status"], [27, 1, 1, "", "detect_slides"], [27, 1, 1, "", "detect_slides_status"], [27, 1, 1, "", "extract_audio"], [27, 1, 1, "", "extract_audio_status"], [27, 1, 1, "", "get_file"], [27, 1, 1, "", "get_retrieve_file_status"], [27, 1, 1, "", "get_video_fingerprint_chain_list"], [27, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[28, 1, 1, "", "calculate_audio_fingerprint"], [28, 1, 1, "", "calculate_audio_fingerprint_status"], [28, 1, 1, "", "detect_language"], [28, 1, 1, "", "detect_language_status"], [28, 1, 1, "", "get_audio_fingerprint_chain_list"], [28, 1, 1, "", "priority_test"], [28, 1, 1, "", "transcribe"], [28, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[30, 0, 0, "-", "common"], [31, 0, 0, "-", "completion"], [32, 0, 0, "-", "image"], [33, 0, 0, "-", "ontology"], [34, 0, 0, "-", "scraping"], [35, 0, 0, "-", "text"], [36, 0, 0, "-", "translation"], [37, 0, 0, "-", "video"], [38, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[30, 2, 1, "", "FileRequest"], [30, 2, 1, "", "TaskIDResponse"], [30, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[30, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[30, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[30, 3, 1, "", "task_id"], [30, 3, 1, "", "task_name"], [30, 3, 1, "", "task_result"], [30, 3, 1, "", "task_status"]], "graphai.api.schemas.completion": [[31, 2, 1, "", "AcademicEntityDescriptor"], [31, 2, 1, "", "AcademicEntitySummarizationRequest"], [31, 2, 1, "", "AcademicEntitySummaryResponse"], [31, 2, 1, "", "AcademicEntitySummaryResponseDict"], [31, 2, 1, "", "AcademicEntitySummaryTaskResponse"], [31, 2, 1, "", "CleanupRequest"], [31, 2, 1, "", "CleanupResponse"], [31, 2, 1, "", "CleanupResponseDict"], [31, 2, 1, "", "CleanupTaskResponse"], [31, 2, 1, "", "CompletionRequestBase"], [31, 2, 1, "", "CompletionTaskResponseBase"], [31, 2, 1, "", "GenericSummarizationRequest"], [31, 2, 1, "", "LectureSummarizationRequest"], [31, 2, 1, "", "SlideConceptsMap"], [31, 2, 1, "", "SlideSubsetRequest"], [31, 2, 1, "", "SlideSubsetResponse"], [31, 2, 1, "", "SummaryFingerprintRequest"], [31, 2, 1, "", "SummaryFingerprintResponse"], [31, 2, 1, "", "SummaryFingerprintTaskResponse"], [31, 2, 1, "", "SummaryResponse"], [31, 2, 1, "", "SummaryResponseDict"], [31, 2, 1, "", "SummaryTaskResponse"]], "graphai.api.schemas.completion.AcademicEntityDescriptor": [[31, 3, 1, "", "categories"], [31, 3, 1, "", "entity"], [31, 3, 1, "", "name"], [31, 3, 1, "", "possible_subtypes"], [31, 3, 1, "", "subtype"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.AcademicEntitySummarizationRequest": [[31, 3, 1, "", "debug"], [31, 3, 1, "", "force"], [31, 3, 1, "", "simulate"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict": [[31, 3, 1, "", "inferred_subtype"], [31, 3, 1, "", "top_3_categories"]], "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.completion.CleanupRequest": [[31, 3, 1, "", "text"], [31, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.CleanupResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.CleanupResponseDict": [[31, 3, 1, "", "for_wikify"], [31, 3, 1, "", "subject"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.CleanupTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.completion.CompletionRequestBase": [[31, 3, 1, "", "debug"], [31, 3, 1, "", "force"], [31, 3, 1, "", "simulate"]], "graphai.api.schemas.completion.CompletionTaskResponseBase": [[31, 3, 1, "", "approx_cost"], [31, 3, 1, "", "debug_message"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result_type"], [31, 3, 1, "", "successful"], [31, 3, 1, "", "text_too_large"], [31, 3, 1, "", "tokens"]], "graphai.api.schemas.completion.GenericSummarizationRequest": [[31, 3, 1, "", "keywords"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.LectureSummarizationRequest": [[31, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideConceptsMap": [[31, 3, 1, "", "concepts"], [31, 3, 1, "", "number"]], "graphai.api.schemas.completion.SlideSubsetRequest": [[31, 3, 1, "", "coverage"], [31, 3, 1, "", "min_freq"], [31, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideSubsetResponse": [[31, 3, 1, "", "subset"]], "graphai.api.schemas.completion.SummaryFingerprintRequest": [[31, 3, 1, "", "completion_type"], [31, 3, 1, "", "force"], [31, 3, 1, "", "text"], [31, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.SummaryFingerprintResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryFingerprintTaskResponse": [[31, 3, 1, "", "closest_token"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.completion.SummaryResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryResponseDict": [[31, 3, 1, "", "summary_long"], [31, 3, 1, "", "summary_short"], [31, 3, 1, "", "title"]], "graphai.api.schemas.completion.SummaryTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.image": [[32, 2, 1, "", "DetectOCRLanguageResponse"], [32, 2, 1, "", "DetectOCRLanguageTaskResponse"], [32, 2, 1, "", "ExtractTextRequest"], [32, 2, 1, "", "ExtractTextResponse"], [32, 2, 1, "", "ExtractTextTaskResponse"], [32, 2, 1, "", "ImageFingerprintRequest"], [32, 2, 1, "", "ImageFingerprintResponse"], [32, 2, 1, "", "ImageFingerprintTaskResponse"], [32, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "language"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "method"], [32, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "language"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[32, 3, 1, "", "closest_token"], [32, 3, 1, "", "closest_token_origin"], [32, 3, 1, "", "fresh"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[32, 3, 1, "", "method"], [32, 3, 1, "", "text"]], "graphai.api.schemas.ontology": [[33, 2, 1, "", "TreeResponse"], [33, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[33, 3, 1, "", "ChildCategoryID"], [33, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.scraping": [[34, 2, 1, "", "ExtractContentRequest"], [34, 2, 1, "", "ExtractContentResponse"], [34, 2, 1, "", "ExtractContentTaskResponse"], [34, 2, 1, "", "GetSublinksRequest"], [34, 2, 1, "", "GetSublinksResponse"], [34, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[34, 3, 1, "", "remove_headers"], [34, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[34, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[34, 3, 1, "", "fresh"], [34, 3, 1, "", "status_msg"], [34, 3, 1, "", "sublinks"], [34, 3, 1, "", "successful"], [34, 3, 1, "", "token"], [34, 3, 1, "", "validated_url"]], "graphai.api.schemas.text": [[35, 2, 1, "", "KeywordsRequest"], [35, 2, 1, "", "WikifyRequest"], [35, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[35, 2, 1, "", "Config"], [35, 3, 1, "", "GraphScore"], [35, 3, 1, "", "KeywordsScore"], [35, 3, 1, "", "LevenshteinScore"], [35, 3, 1, "", "MixedScore"], [35, 3, 1, "", "OntologyGlobalScore"], [35, 3, 1, "", "OntologyLocalScore"], [35, 3, 1, "", "PageID"], [35, 3, 1, "", "PageTitle"], [35, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[35, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[36, 2, 1, "", "TextDetectLanguageRequest"], [36, 2, 1, "", "TextDetectLanguageResponse"], [36, 2, 1, "", "TextDetectLanguageTaskResponse"], [36, 2, 1, "", "TextFingerprintRequest"], [36, 2, 1, "", "TextFingerprintResponse"], [36, 2, 1, "", "TextFingerprintTaskResponse"], [36, 2, 1, "", "TranslationRequest"], [36, 2, 1, "", "TranslationResponse"], [36, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[36, 3, 1, "", "language"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[36, 3, 1, "", "closest_token"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[36, 3, 1, "", "device"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"], [36, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[37, 2, 1, "", "DetectSlidesRequest"], [37, 2, 1, "", "DetectSlidesResponse"], [37, 2, 1, "", "DetectSlidesTaskResponse"], [37, 2, 1, "", "ExtractAudioRequest"], [37, 2, 1, "", "ExtractAudioResponse"], [37, 2, 1, "", "ExtractAudioTaskResponse"], [37, 2, 1, "", "RetrieveURLRequest"], [37, 2, 1, "", "RetrieveURLResponse"], [37, 2, 1, "", "RetrieveURLResponseInner"], [37, 2, 1, "", "SlideTokenAndTimeStamp"], [37, 2, 1, "", "VideoFingerprintRequest"], [37, 2, 1, "", "VideoFingerprintResponse"], [37, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "language"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "slide_tokens"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[37, 3, 1, "", "duration"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "playlist"], [37, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[37, 3, 1, "", "timestamp"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[37, 3, 1, "", "closest_token"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[38, 2, 1, "", "AudioDetectLanguageRequest"], [38, 2, 1, "", "AudioDetectLanguageResponse"], [38, 2, 1, "", "AudioDetectLanguageTaskResponse"], [38, 2, 1, "", "AudioFingerprintRequest"], [38, 2, 1, "", "AudioFingerprintResponse"], [38, 2, 1, "", "AudioFingerprintTaskResponse"], [38, 2, 1, "", "AudioTranscriptionRequest"], [38, 2, 1, "", "AudioTranscriptionResponse"], [38, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "remove_silence"], [38, 3, 1, "", "threshold"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[38, 3, 1, "", "closest_token"], [38, 3, 1, "", "closest_token_origin"], [38, 3, 1, "", "duration"], [38, 3, 1, "", "fp_nosilence"], [38, 3, 1, "", "fresh"], [38, 3, 1, "", "result"], [38, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "force_lang"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"], [38, 3, 1, "", "subtitle_results"], [38, 3, 1, "", "transcript_results"]], "graphai.core": [[40, 0, 0, "-", "common"], [53, 0, 0, "-", "interfaces"], [58, 0, 0, "-", "text"], [61, 0, 0, "-", "utils"]], "graphai.core.common": [[41, 0, 0, "-", "caching"], [42, 0, 0, "-", "common_utils"], [43, 0, 0, "-", "gpt_message_presets"], [44, 0, 0, "-", "graph"], [45, 0, 0, "-", "json_repair"], [49, 0, 0, "-", "ontology"], [50, 0, 0, "-", "scraping"], [51, 0, 0, "-", "text_utils"], [52, 0, 0, "-", "video"]], "graphai.core.common.caching": [[41, 2, 1, "", "AudioDBCachingManager"], [41, 2, 1, "", "CompletionDBCachingManager"], [41, 2, 1, "", "FingerprintParameters"], [41, 2, 1, "", "ScrapingDBCachingManager"], [41, 2, 1, "", "SlideDBCachingManager"], [41, 2, 1, "", "TextDBCachingManager"], [41, 2, 1, "", "VideoConfig"], [41, 2, 1, "", "VideoDBCachingManager"], [41, 1, 1, "", "create_symlink_between_paths"], [41, 1, 1, "", "delete_file"]], "graphai.core.common.caching.AudioDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.CompletionDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[41, 4, 1, "", "get_min_sim_audio"], [41, 4, 1, "", "get_min_sim_image"], [41, 4, 1, "", "get_min_sim_text"], [41, 4, 1, "", "get_min_sim_video"], [41, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[41, 4, 1, "", "get_details_using_origin"], [41, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[41, 4, 1, "", "concat_file_path"], [41, 4, 1, "", "create_symlink"], [41, 4, 1, "", "generate_filepath"], [41, 4, 1, "", "get_audio_dir"], [41, 4, 1, "", "get_image_dir"], [41, 4, 1, "", "get_root_dir"], [41, 4, 1, "", "get_transcript_dir"], [41, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[42, 1, 1, "", "file_exists"], [42, 1, 1, "", "format_datetime_for_mysql"], [42, 1, 1, "", "get_current_datetime"], [42, 1, 1, "", "make_sure_path_exists"], [42, 1, 1, "", "parse_mysql_datetime"], [42, 1, 1, "", "read_json_file"], [42, 1, 1, "", "read_text_file"], [42, 1, 1, "", "write_json_file"], [42, 1, 1, "", "write_text_file"]], "graphai.core.common.gpt_message_presets": [[43, 1, 1, "", "generate_academic_entity_summary_message"], [43, 1, 1, "", "generate_generic_summary_message"], [43, 1, 1, "", "generate_lecture_summary_message"]], "graphai.core.common.graph": [[44, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[44, 4, 1, "", "add_graph_score"], [44, 4, 1, "", "fetch_from_db"], [44, 4, 1, "", "old_compute_scores"]], "graphai.core.common.json_repair": [[46, 0, 0, "-", "json_repair"], [47, 0, 0, "-", "json_repair_error"], [48, 0, 0, "-", "string_utils"]], "graphai.core.common.json_repair.json_repair": [[46, 1, 1, "", "at_end_of_block_comment"], [46, 1, 1, "", "repair_json"]], "graphai.core.common.json_repair.json_repair_error": [[47, 5, 1, "", "JSONRepairError"]], "graphai.core.common.json_repair.string_utils": [[48, 1, 1, "", "char_at"], [48, 1, 1, "", "char_code_at"], [48, 1, 1, "", "ends_with_comma_or_newline"], [48, 1, 1, "", "insert_before_last_whitespace"], [48, 1, 1, "", "is_control_character"], [48, 1, 1, "", "is_delimiter"], [48, 1, 1, "", "is_digit"], [48, 1, 1, "", "is_double_quote"], [48, 1, 1, "", "is_double_quote_like"], [48, 1, 1, "", "is_hex"], [48, 1, 1, "", "is_quote"], [48, 1, 1, "", "is_single_quote"], [48, 1, 1, "", "is_single_quote_like"], [48, 1, 1, "", "is_special_whitespace"], [48, 1, 1, "", "is_start_of_value"], [48, 1, 1, "", "is_valid_string_character"], [48, 1, 1, "", "is_whitespace"], [48, 1, 1, "", "next_non_white_space_character"], [48, 1, 1, "", "remove_at_index"], [48, 1, 1, "", "strip_last_occurrence"]], "graphai.core.common.ontology": [[49, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[49, 4, 1, "", "add_categories_category"], [49, 4, 1, "", "add_concepts_category"], [49, 4, 1, "", "add_ontology_scores"], [49, 4, 1, "", "fetch_from_db"], [49, 4, 1, "", "filter_concepts"], [49, 4, 1, "", "get_category_children"], [49, 4, 1, "", "get_category_parent"], [49, 4, 1, "", "get_concept_category"], [49, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.scraping": [[50, 1, 1, "", "check_url"], [50, 1, 1, "", "compare_strings"], [50, 1, 1, "", "create_base_url_token"], [50, 1, 1, "", "extract_text_from_url"], [50, 1, 1, "", "find_consecutive_runs"], [50, 1, 1, "", "find_edge_patterns"], [50, 1, 1, "", "find_repeated_patterns"], [50, 1, 1, "", "find_spaces"], [50, 1, 1, "", "generate_sublink_token"], [50, 1, 1, "", "get_sublinks"], [50, 1, 1, "", "initialize_data_dict"], [50, 1, 1, "", "initialize_url"], [50, 1, 1, "", "parse_page_type"], [50, 1, 1, "", "process_all_sublinks"], [50, 1, 1, "", "reconstruct_data_dict"], [50, 1, 1, "", "remove_headers"], [50, 1, 1, "", "remove_long_patterns"], [50, 1, 1, "", "shift_to_max_correlation"], [50, 1, 1, "", "string_circular_shift"]], "graphai.core.common.text_utils": [[51, 2, 1, "", "ChatGPTSummarizer"], [51, 2, 1, "", "TranslationModels"], [51, 1, 1, "", "compute_chatgpt_request_cost"], [51, 1, 1, "", "compute_slide_tfidf_scores"], [51, 1, 1, "", "convert_text_or_dict_to_text"], [51, 1, 1, "", "count_tokens_for_openai"], [51, 1, 1, "", "detect_text_language"], [51, 1, 1, "", "find_best_slide_subset"], [51, 1, 1, "", "find_set_cover"], [51, 1, 1, "", "force_dict_to_text"], [51, 1, 1, "", "generate_completion_type_dict"], [51, 1, 1, "", "generate_src_tgt_dict"], [51, 1, 1, "", "generate_summary_text_token"], [51, 1, 1, "", "generate_translation_text_token"], [51, 1, 1, "", "md5_text"], [51, 1, 1, "", "perceptual_hash_text"], [51, 1, 1, "", "translation_list_to_text"], [51, 1, 1, "", "translation_text_back_to_list"], [51, 1, 1, "", "update_token_count"]], "graphai.core.common.text_utils.ChatGPTSummarizer": [[51, 4, 1, "", "cleanup_text"], [51, 4, 1, "", "establish_connection"], [51, 4, 1, "", "make_sure_json_is_valid"], [51, 4, 1, "", "summarize_academic_entity"], [51, 4, 1, "", "summarize_generic"], [51, 4, 1, "", "summarize_lecture"]], "graphai.core.common.text_utils.TranslationModels": [[51, 4, 1, "", "get_device"], [51, 4, 1, "", "load_models"], [51, 4, 1, "", "translate"]], "graphai.core.common.video": [[52, 2, 1, "", "GoogleOCRModel"], [52, 2, 1, "", "NLPModels"], [52, 2, 1, "", "WhisperTranscriptionModel"], [52, 1, 1, "", "check_ocr_and_hash_thresholds"], [52, 1, 1, "", "compare_decoded_fingerprints"], [52, 1, 1, "", "compare_encoded_fingerprints"], [52, 1, 1, "", "compute_ocr_noise_level"], [52, 1, 1, "", "compute_ocr_threshold"], [52, 1, 1, "", "compute_video_ocr_transitions"], [52, 1, 1, "", "detect_audio_format_and_duration"], [52, 1, 1, "", "extract_audio_from_video"], [52, 1, 1, "", "extract_frames"], [52, 1, 1, "", "extract_media_segment"], [52, 1, 1, "", "find_beginning_and_ending_silences"], [52, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [52, 1, 1, "", "find_closest_fingerprint_from_list"], [52, 1, 1, "", "find_closest_image_fingerprint_from_list"], [52, 1, 1, "", "frame_hash_similarity"], [52, 1, 1, "", "frame_ocr_distance"], [52, 1, 1, "", "frame_ocr_transition"], [52, 1, 1, "", "generate_frame_sample_indices"], [52, 1, 1, "", "generate_random_token"], [52, 1, 1, "", "generate_symbolic_token"], [52, 1, 1, "", "md5_video_or_audio"], [52, 1, 1, "", "perceptual_hash_audio"], [52, 1, 1, "", "perceptual_hash_image"], [52, 1, 1, "", "perform_probe"], [52, 1, 1, "", "perform_tesseract_ocr"], [52, 1, 1, "", "read_json_gz_file"], [52, 1, 1, "", "read_txt_gz_file"], [52, 1, 1, "", "remove_silence_doublesided"], [52, 1, 1, "", "retrieve_file_from_kaltura"], [52, 1, 1, "", "retrieve_file_from_url"], [52, 1, 1, "", "tesseract_ocr_or_get_cached"], [52, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.GoogleOCRModel": [[52, 4, 1, "", "establish_connection"], [52, 4, 1, "", "perform_ocr"], [52, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[52, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.WhisperTranscriptionModel": [[52, 4, 1, "", "detect_audio_segment_lang_whisper"], [52, 4, 1, "", "load_model_whisper"], [52, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[54, 0, 0, "-", "celery_config"], [55, 0, 0, "-", "config_loader"], [56, 0, 0, "-", "es"], [57, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[54, 2, 1, "", "BaseConfig"], [54, 2, 1, "", "DevelopmentConfig"], [54, 1, 1, "", "create_celery"], [54, 1, 1, "", "get_celery_task"], [54, 1, 1, "", "get_settings"], [54, 1, 1, "", "get_task_info"], [54, 1, 1, "", "route_task"]], "graphai.core.interfaces.config_loader": [[55, 1, 1, "", "load_db_config"], [55, 1, 1, "", "load_schema_name"]], "graphai.core.interfaces.es": [[56, 2, 1, "", "ES"], [56, 1, 1, "", "es_bool"], [56, 1, 1, "", "es_dis_max"], [56, 1, 1, "", "es_match"], [56, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[56, 4, 1, "", "create_index"], [56, 4, 1, "", "delete_index"], [56, 4, 1, "", "index_doc"], [56, 4, 1, "", "indices"], [56, 4, 1, "", "refresh"], [56, 4, 1, "", "search"], [56, 4, 1, "", "search_mediawiki"], [56, 4, 1, "", "search_mediawiki_no_plain"], [56, 4, 1, "", "search_mediawiki_no_rescore"], [56, 4, 1, "", "search_mediawiki_restrict_2"], [56, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[57, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[57, 4, 1, "", "search"]], "graphai.core.text": [[59, 0, 0, "-", "draw"], [60, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[59, 1, 1, "", "draw_graph"], [59, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[60, 1, 1, "", "get_keywords"], [60, 1, 1, "", "rake_extract"], [60, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[62, 0, 0, "-", "breadcrumb"], [63, 0, 0, "-", "progress_bar"], [64, 0, 0, "-", "text"], [67, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[62, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[62, 4, 1, "", "indent"], [62, 4, 1, "", "log"], [62, 4, 1, "", "outdent"], [62, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[63, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[63, 4, 1, "", "reset"], [63, 4, 1, "", "update"]], "graphai.core.utils.text": [[65, 0, 0, "-", "clean"], [66, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[65, 2, 1, "", "HTMLCleaner"], [65, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[65, 4, 1, "", "get_data"], [65, 4, 1, "", "handle_data"], [65, 4, 1, "", "handle_endtag"], [65, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[66, 2, 1, "", "Colors"], [66, 1, 1, "", "cprint"], [66, 1, 1, "", "log"], [66, 1, 1, "", "mkdir"], [66, 1, 1, "", "pprint"], [66, 1, 1, "", "read_json"], [66, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[66, 3, 1, "", "codes"], [66, 3, 1, "", "pref"], [66, 3, 1, "", "reset"]], "graphai.core.utils.time": [[68, 0, 0, "-", "date"], [69, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[68, 1, 1, "", "add_years"], [68, 1, 1, "", "now"], [68, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[69, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[69, 4, 1, "", "delta"], [69, 4, 1, "", "report"], [69, 4, 1, "", "reset"], [69, 4, 1, "", "tick"], [69, 4, 1, "", "total"]], "graphai.pipelines": [[72, 0, 0, "-", "elasticsearch"], [75, 0, 0, "-", "investment"], [88, 0, 0, "-", "validation"], [92, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[74, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[74, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[76, 0, 0, "-", "aggregate_recent_past"], [77, 0, 0, "-", "check_unit"], [78, 0, 0, "-", "compute_fundraisers_units"], [79, 0, 0, "-", "compute_investors_units"], [80, 0, 0, "-", "compute_investors_units_2"], [81, 0, 0, "-", "compute_jaccard_index"], [82, 0, 0, "-", "concept_configuration"], [83, 0, 0, "-", "create_investments_graph"], [84, 0, 0, "-", "detect_fundraisers_concepts"], [85, 0, 0, "-", "main"], [86, 0, 0, "-", "parameters"], [87, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[76, 1, 1, "", "aggregate_recent_past"], [76, 1, 1, "", "aggregate_years"], [76, 1, 1, "", "compute_year_coefficients"], [76, 1, 1, "", "normalize_scores"], [76, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[77, 1, 1, "", "main"], [77, 1, 1, "", "show_matchmaking_chart_view"], [77, 1, 1, "", "show_matchmaking_list_view"], [77, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[78, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[79, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[80, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[81, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[82, 1, 1, "", "combine"], [82, 1, 1, "", "compute_affinities"], [82, 1, 1, "", "mix"], [82, 1, 1, "", "norm"], [82, 1, 1, "", "normalise"], [82, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[83, 1, 1, "", "create_investments_graph"], [83, 1, 1, "", "derive_yearly_data"], [83, 1, 1, "", "get_frs"], [83, 1, 1, "", "get_frs_fundraisers"], [83, 1, 1, "", "get_fundraisers_concepts"], [83, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[84, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[85, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[86, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[87, 1, 1, "", "base"], [87, 1, 1, "", "complete"], [87, 1, 1, "", "path"], [87, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "packag": [0, 1, 2, 12, 20, 29, 39, 40, 45, 53, 58, 61, 64, 67, 71, 72, 75, 88, 92], "subpackag": [0, 1, 39, 40, 61, 71], "submodul": [0, 1, 2, 12, 20, 29, 40, 45, 53, 58, 61, 64, 67, 72, 75, 88, 92], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "common": [3, 12, 13, 14, 15, 16, 17, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 65, 66, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96], "complet": [4, 21, 31], "imag": [5, 22, 32], "ontologi": [6, 16, 23, 33, 49], "scrape": [7, 24, 34, 50], "text": [8, 25, 35, 58, 59, 60, 64, 65, 66], "translat": [9, 17, 26, 36], "video": [10, 18, 27, 37, 52], "voic": [11, 28, 38], "celery_tool": 13, "graph": [14, 44, 93, 94, 95, 96], "log": 15, "main": [19, 85], "router": [20, 21, 22, 23, 24, 25, 26, 27, 28], "schema": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "core": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "cach": 41, "common_util": 42, "gpt_message_preset": 43, "json_repair": [45, 46, 47, 48], "json_repair_error": 47, "string_util": 48, "text_util": 51, "interfac": [53, 54, 55, 56, 57], "celery_config": 54, "config_load": 55, "e": 56, "wp": 57, "draw": 59, "keyword": 60, "util": [61, 62, 63, 64, 65, 66, 67, 68, 69], "breadcrumb": 62, "progress_bar": 63, "clean": 65, "io": 66, "time": [67, 68, 69], "date": 68, "stopwatch": 69, "definit": 70, "pipelin": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "elasticsearch": [72, 73, 74], "create_index": 73, "populate_index": 74, "invest": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "aggregate_recent_past": 76, "check_unit": 77, "compute_fundraisers_unit": 78, "compute_investors_unit": 79, "compute_investors_units_2": 80, "compute_jaccard_index": 81, "concept_configur": 82, "create_investments_graph": 83, "detect_fundraisers_concept": 84, "paramet": 86, "toy_exampl": 87, "valid": [88, 89, 90, 91], "1_old": 89, "2_new": 90, "3_slide": 91, "visualis": [92, 93, 94, 95, 96], "startup": [93, 94, 95, 96], "2": 94, "3": 95, "4": 96}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [39, "subpackages"], [40, "subpackages"], [61, "subpackages"], [71, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [12, "submodules"], [20, "submodules"], [29, "submodules"], [40, "submodules"], [45, "submodules"], [53, "submodules"], [58, "submodules"], [61, "submodules"], [64, "submodules"], [67, "submodules"], [72, "submodules"], [75, "submodules"], [88, "submodules"], [92, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion module": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image module": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[7, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.text module": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[12, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[15, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[18, "module-graphai.api.common.video"]], "graphai.api.main module": [[19, "module-graphai.api.main"]], "graphai.api.routers package": [[20, "module-graphai.api.routers"]], "graphai.api.routers.completion module": [[21, "module-graphai.api.routers.completion"]], "graphai.api.routers.image module": [[22, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[23, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[24, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text module": [[25, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[26, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[27, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[28, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[29, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[30, "module-graphai.api.schemas.common"]], "graphai.api.schemas.completion module": [[31, "module-graphai.api.schemas.completion"]], "graphai.api.schemas.image module": [[32, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[33, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[34, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.text module": [[35, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[36, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[37, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[38, "module-graphai.api.schemas.voice"]], "graphai.core package": [[39, "module-graphai.core"]], "graphai.core.common package": [[40, "module-graphai.core.common"]], "graphai.core.common.caching module": [[41, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[42, "module-graphai.core.common.common_utils"]], "graphai.core.common.gpt_message_presets module": [[43, "module-graphai.core.common.gpt_message_presets"]], "graphai.core.common.graph module": [[44, "module-graphai.core.common.graph"]], "graphai.core.common.json_repair package": [[45, "module-graphai.core.common.json_repair"]], "graphai.core.common.json_repair.json_repair module": [[46, "module-graphai.core.common.json_repair.json_repair"]], "graphai.core.common.json_repair.json_repair_error module": [[47, "module-graphai.core.common.json_repair.json_repair_error"]], "graphai.core.common.json_repair.string_utils module": [[48, "module-graphai.core.common.json_repair.string_utils"]], "graphai.core.common.ontology module": [[49, "module-graphai.core.common.ontology"]], "graphai.core.common.scraping module": [[50, "module-graphai.core.common.scraping"]], "graphai.core.common.text_utils module": [[51, "module-graphai.core.common.text_utils"]], "graphai.core.common.video module": [[52, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[53, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[54, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.config_loader module": [[55, "module-graphai.core.interfaces.config_loader"]], "graphai.core.interfaces.es module": [[56, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[57, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[58, "module-graphai.core.text"]], "graphai.core.text.draw module": [[59, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[60, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[61, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[62, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[63, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[64, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[65, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[66, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[67, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[68, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[69, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[70, "module-graphai.definitions"]], "graphai.pipelines package": [[71, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[72, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[73, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[74, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[75, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[76, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[77, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[78, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[79, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[80, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[81, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[82, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[83, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[84, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[85, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[86, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[87, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[88, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[89, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[90, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[91, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[92, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[93, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[94, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[95, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[96, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.completion"], [5, "module-graphai.api.celery_tasks.image"], [6, "module-graphai.api.celery_tasks.ontology"], [7, "module-graphai.api.celery_tasks.scraping"], [8, "module-graphai.api.celery_tasks.text"], [9, "module-graphai.api.celery_tasks.translation"], [10, "module-graphai.api.celery_tasks.video"], [11, "module-graphai.api.celery_tasks.voice"], [12, "module-graphai.api.common"], [13, "module-graphai.api.common.celery_tools"], [14, "module-graphai.api.common.graph"], [15, "module-graphai.api.common.log"], [16, "module-graphai.api.common.ontology"], [17, "module-graphai.api.common.translation"], [18, "module-graphai.api.common.video"], [19, "module-graphai.api.main"], [20, "module-graphai.api.routers"], [21, "module-graphai.api.routers.completion"], [22, "module-graphai.api.routers.image"], [23, "module-graphai.api.routers.ontology"], [24, "module-graphai.api.routers.scraping"], [25, "module-graphai.api.routers.text"], [26, "module-graphai.api.routers.translation"], [27, "module-graphai.api.routers.video"], [28, "module-graphai.api.routers.voice"], [29, "module-graphai.api.schemas"], [30, "module-graphai.api.schemas.common"], [31, "module-graphai.api.schemas.completion"], [32, "module-graphai.api.schemas.image"], [33, "module-graphai.api.schemas.ontology"], [34, "module-graphai.api.schemas.scraping"], [35, "module-graphai.api.schemas.text"], [36, "module-graphai.api.schemas.translation"], [37, "module-graphai.api.schemas.video"], [38, "module-graphai.api.schemas.voice"], [39, "module-graphai.core"], [40, "module-graphai.core.common"], [41, "module-graphai.core.common.caching"], [42, "module-graphai.core.common.common_utils"], [43, "module-graphai.core.common.gpt_message_presets"], [44, "module-graphai.core.common.graph"], [45, "module-graphai.core.common.json_repair"], [46, "module-graphai.core.common.json_repair.json_repair"], [47, "module-graphai.core.common.json_repair.json_repair_error"], [48, "module-graphai.core.common.json_repair.string_utils"], [49, "module-graphai.core.common.ontology"], [50, "module-graphai.core.common.scraping"], [51, "module-graphai.core.common.text_utils"], [52, "module-graphai.core.common.video"], [53, "module-graphai.core.interfaces"], [54, "module-graphai.core.interfaces.celery_config"], [55, "module-graphai.core.interfaces.config_loader"], [56, "module-graphai.core.interfaces.es"], [57, "module-graphai.core.interfaces.wp"], [58, "module-graphai.core.text"], [59, "module-graphai.core.text.draw"], [60, "module-graphai.core.text.keywords"], [61, "module-graphai.core.utils"], [62, "module-graphai.core.utils.breadcrumb"], [63, "module-graphai.core.utils.progress_bar"], [64, "module-graphai.core.utils.text"], [65, "module-graphai.core.utils.text.clean"], [66, "module-graphai.core.utils.text.io"], [67, "module-graphai.core.utils.time"], [68, "module-graphai.core.utils.time.date"], [69, "module-graphai.core.utils.time.stopwatch"], [70, "module-graphai.definitions"], [71, "module-graphai.pipelines"], [72, "module-graphai.pipelines.elasticsearch"], [74, "module-graphai.pipelines.elasticsearch.populate_index"], [75, "module-graphai.pipelines.investment"], [76, "module-graphai.pipelines.investment.aggregate_recent_past"], [77, "module-graphai.pipelines.investment.check_unit"], [78, "module-graphai.pipelines.investment.compute_fundraisers_units"], [79, "module-graphai.pipelines.investment.compute_investors_units"], [80, "module-graphai.pipelines.investment.compute_investors_units_2"], [81, "module-graphai.pipelines.investment.compute_jaccard_index"], [82, "module-graphai.pipelines.investment.concept_configuration"], [83, "module-graphai.pipelines.investment.create_investments_graph"], [84, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [85, "module-graphai.pipelines.investment.main"], [86, "module-graphai.pipelines.investment.parameters"], [87, "module-graphai.pipelines.investment.toy_example"], [88, "module-graphai.pipelines.validation"], [92, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[7, "module-graphai.api.celery_tasks.scraping"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[12, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[13, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[15, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[15, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[18, "module-graphai.api.common.video"]], "graphai.api.main": [[19, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[19, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[19, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[20, "module-graphai.api.routers"]], "calculate_summary_text_fingerprint() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.calculate_summary_text_fingerprint"]], "calculate_summary_text_fingerprint_status() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.calculate_summary_text_fingerprint_status"]], "choose_best_subset() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.choose_best_subset"]], "clean_up() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.clean_up"]], "get_cleanup_task_chain() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_cleanup_task_chain"]], "get_completion_task_chain() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_completion_task_chain"]], "get_completion_text_fingerprint_chain_list() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_completion_text_fingerprint_chain_list"]], "graphai.api.routers.completion": [[21, "module-graphai.api.routers.completion"]], "populate_academic_entity_dict() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.populate_academic_entity_dict"]], "populate_slide_concepts_dict() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.populate_slide_concepts_dict"]], "summarize_academic_entity() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_academic_entity"]], "summarize_lecture() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_lecture"]], "summarize_status() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_status"]], "summarize_text() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_text"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[22, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[23, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[24, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text": [[25, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[26, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[27, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[28, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[29, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[30, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[30, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[30, "graphai.api.schemas.common.FileRequest.token"]], "academicentitydescriptor (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor"]], "academicentitysummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest"]], "academicentitysummaryresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponse"]], "academicentitysummaryresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict"]], "academicentitysummarytaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse"]], "cleanuprequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupRequest"]], "cleanupresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupResponse"]], "cleanupresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupResponseDict"]], "cleanuptaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupTaskResponse"]], "completionrequestbase (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CompletionRequestBase"]], "completiontaskresponsebase (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase"]], "genericsummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest"]], "lecturesummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.LectureSummarizationRequest"]], "slideconceptsmap (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideConceptsMap"]], "slidesubsetrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest"]], "slidesubsetresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideSubsetResponse"]], "summaryfingerprintrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse"]], "summaryresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryResponse"]], "summaryresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryResponseDict"]], "summarytaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryTaskResponse"]], "approx_cost (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.approx_cost"]], "categories (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.categories"]], "closest_token (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.closest_token"]], "completion_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.completion_type"]], "concepts (graphai.api.schemas.completion.slideconceptsmap attribute)": [[31, "graphai.api.schemas.completion.SlideConceptsMap.concepts"]], "coverage (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.coverage"]], "debug (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.debug"]], "debug (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.debug"]], "debug_message (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.debug_message"]], "entity (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.entity"]], "for_wikify (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.for_wikify"]], "force (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.force"]], "force (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.force"]], "force (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.fresh"]], "fresh (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.completion": [[31, "module-graphai.api.schemas.completion"]], "inferred_subtype (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.inferred_subtype"]], "keywords (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest.keywords"]], "min_freq (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.min_freq"]], "name (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.name"]], "number (graphai.api.schemas.completion.slideconceptsmap attribute)": [[31, "graphai.api.schemas.completion.SlideConceptsMap.number"]], "possible_subtypes (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.possible_subtypes"]], "result (graphai.api.schemas.completion.academicentitysummarytaskresponse attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse.result"]], "result (graphai.api.schemas.completion.cleanuptaskresponse attribute)": [[31, "graphai.api.schemas.completion.CleanupTaskResponse.result"]], "result (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.result"]], "result (graphai.api.schemas.completion.summarytaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryTaskResponse.result"]], "result_type (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.result_type"]], "simulate (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.simulate"]], "simulate (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.simulate"]], "slides (graphai.api.schemas.completion.lecturesummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.LectureSummarizationRequest.slides"]], "slides (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.slides"]], "subject (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.subject"]], "subset (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetResponse.subset"]], "subtype (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.subtype"]], "successful (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.successful"]], "successful (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.successful"]], "summary_long (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.summary_long"]], "summary_short (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.summary_short"]], "task_result (graphai.api.schemas.completion.academicentitysummaryresponse attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponse.task_result"]], "task_result (graphai.api.schemas.completion.cleanupresponse attribute)": [[31, "graphai.api.schemas.completion.CleanupResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryfingerprintresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryResponse.task_result"]], "text (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.text"]], "text (graphai.api.schemas.completion.cleanuprequest attribute)": [[31, "graphai.api.schemas.completion.CleanupRequest.text"]], "text (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.text"]], "text (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest.text"]], "text (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.text_too_large"]], "text_type (graphai.api.schemas.completion.cleanuprequest attribute)": [[31, "graphai.api.schemas.completion.CleanupRequest.text_type"]], "text_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.text_type"]], "title (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.title"]], "tokens (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.tokens"]], "top_3_categories (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.top_3_categories"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[32, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[32, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[32, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[33, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[33, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[33, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[33, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[34, "module-graphai.api.schemas.scraping"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[35, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[35, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[35, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "device (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.device"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[36, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[37, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[38, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_results"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_results"]], "graphai.core": [[39, "module-graphai.core"]], "graphai.core.common": [[40, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.AudioDBCachingManager"]], "completiondbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.CompletionDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[41, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[41, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.completiondbcachingmanager method)": [[41, "graphai.core.common.caching.CompletionDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[41, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[41, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[41, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.load_values"]], "file_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[42, "module-graphai.core.common.common_utils"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_text_file"]], "write_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_text_file"]], "generate_academic_entity_summary_message() (in module graphai.core.common.gpt_message_presets)": [[43, "graphai.core.common.gpt_message_presets.generate_academic_entity_summary_message"]], "generate_generic_summary_message() (in module graphai.core.common.gpt_message_presets)": [[43, "graphai.core.common.gpt_message_presets.generate_generic_summary_message"]], "generate_lecture_summary_message() (in module graphai.core.common.gpt_message_presets)": [[43, "graphai.core.common.gpt_message_presets.generate_lecture_summary_message"]], "graphai.core.common.gpt_message_presets": [[43, "module-graphai.core.common.gpt_message_presets"]], "conceptsgraph (class in graphai.core.common.graph)": [[44, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[44, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[44, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[44, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[44, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "graphai.core.common.json_repair": [[45, "module-graphai.core.common.json_repair"]], "at_end_of_block_comment() (in module graphai.core.common.json_repair.json_repair)": [[46, "graphai.core.common.json_repair.json_repair.at_end_of_block_comment"]], "graphai.core.common.json_repair.json_repair": [[46, "module-graphai.core.common.json_repair.json_repair"]], "repair_json() (in module graphai.core.common.json_repair.json_repair)": [[46, "graphai.core.common.json_repair.json_repair.repair_json"]], "jsonrepairerror": [[47, "graphai.core.common.json_repair.json_repair_error.JSONRepairError"]], "graphai.core.common.json_repair.json_repair_error": [[47, "module-graphai.core.common.json_repair.json_repair_error"]], "char_at() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.char_at"]], "char_code_at() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.char_code_at"]], "ends_with_comma_or_newline() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.ends_with_comma_or_newline"]], "graphai.core.common.json_repair.string_utils": [[48, "module-graphai.core.common.json_repair.string_utils"]], "insert_before_last_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.insert_before_last_whitespace"]], "is_control_character() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_control_character"]], "is_delimiter() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_delimiter"]], "is_digit() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_digit"]], "is_double_quote() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_double_quote"]], "is_double_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_double_quote_like"]], "is_hex() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_hex"]], "is_quote() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_quote"]], "is_single_quote() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_single_quote"]], "is_single_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_single_quote_like"]], "is_special_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_special_whitespace"]], "is_start_of_value() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_start_of_value"]], "is_valid_string_character() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_valid_string_character"]], "is_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.is_whitespace"]], "next_non_white_space_character() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.next_non_white_space_character"]], "remove_at_index() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.remove_at_index"]], "strip_last_occurrence() (in module graphai.core.common.json_repair.string_utils)": [[48, "graphai.core.common.json_repair.string_utils.strip_last_occurrence"]], "ontology (class in graphai.core.common.ontology)": [[49, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[49, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[49, "module-graphai.core.common.ontology"]], "check_url() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.check_url"]], "compare_strings() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.get_sublinks"]], "graphai.core.common.scraping": [[50, "module-graphai.core.common.scraping"]], "initialize_data_dict() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.common.scraping)": [[50, "graphai.core.common.scraping.string_circular_shift"]], "chatgptsummarizer (class in graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer"]], "translationmodels (class in graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.TranslationModels"]], "cleanup_text() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.cleanup_text"]], "compute_chatgpt_request_cost() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.compute_chatgpt_request_cost"]], "compute_slide_tfidf_scores() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.compute_slide_tfidf_scores"]], "convert_text_or_dict_to_text() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.convert_text_or_dict_to_text"]], "count_tokens_for_openai() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.count_tokens_for_openai"]], "detect_text_language() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.detect_text_language"]], "establish_connection() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.establish_connection"]], "find_best_slide_subset() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.find_set_cover"]], "force_dict_to_text() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.force_dict_to_text"]], "generate_completion_type_dict() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.generate_completion_type_dict"]], "generate_src_tgt_dict() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.generate_src_tgt_dict"]], "generate_summary_text_token() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.generate_summary_text_token"]], "generate_translation_text_token() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.common.text_utils.translationmodels method)": [[51, "graphai.core.common.text_utils.TranslationModels.get_device"]], "graphai.core.common.text_utils": [[51, "module-graphai.core.common.text_utils"]], "load_models() (graphai.core.common.text_utils.translationmodels method)": [[51, "graphai.core.common.text_utils.TranslationModels.load_models"]], "make_sure_json_is_valid() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.make_sure_json_is_valid"]], "md5_text() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.md5_text"]], "perceptual_hash_text() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.perceptual_hash_text"]], "summarize_academic_entity() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_academic_entity"]], "summarize_generic() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_generic"]], "summarize_lecture() (graphai.core.common.text_utils.chatgptsummarizer method)": [[51, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_lecture"]], "translate() (graphai.core.common.text_utils.translationmodels method)": [[51, "graphai.core.common.text_utils.TranslationModels.translate"]], "translation_list_to_text() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.translation_list_to_text"]], "translation_text_back_to_list() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.translation_text_back_to_list"]], "update_token_count() (in module graphai.core.common.text_utils)": [[51, "graphai.core.common.text_utils.update_token_count"]], "googleocrmodel (class in graphai.core.common.video)": [[52, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[52, "graphai.core.common.video.NLPModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[52, "graphai.core.common.video.WhisperTranscriptionModel"]], "check_ocr_and_hash_thresholds() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.check_ocr_and_hash_thresholds"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.compute_video_ocr_transitions"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[52, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[52, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.generate_symbolic_token"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[52, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[52, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[52, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.perceptual_hash_image"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[52, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[52, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[52, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[52, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[53, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[54, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.route_task"]], "graphai.core.interfaces.config_loader": [[55, "module-graphai.core.interfaces.config_loader"]], "load_db_config() (in module graphai.core.interfaces.config_loader)": [[55, "graphai.core.interfaces.config_loader.load_db_config"]], "load_schema_name() (in module graphai.core.interfaces.config_loader)": [[55, "graphai.core.interfaces.config_loader.load_schema_name"]], "es (class in graphai.core.interfaces.es)": [[56, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[56, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[56, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[56, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[56, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[56, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[56, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[57, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[57, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[57, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[58, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[59, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[59, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[59, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[60, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[60, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[60, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[60, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[61, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[62, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[62, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[62, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[62, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[62, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[62, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[63, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[63, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[63, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[63, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[64, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[65, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[65, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[65, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[65, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[65, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[65, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[65, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[66, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[66, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[66, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[66, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[66, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[67, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[68, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[68, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[68, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[68, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[69, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[69, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[70, "module-graphai.definitions"]], "graphai.pipelines": [[71, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[72, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[74, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[74, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[75, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[76, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[76, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[76, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[76, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[76, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[76, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[77, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[77, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[77, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[77, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[77, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[78, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[78, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[79, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[79, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[80, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[80, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[81, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[81, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[82, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[82, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[83, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[83, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[84, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[84, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[85, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[85, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[86, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[86, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[87, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[87, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[87, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[87, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[87, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[88, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[92, "module-graphai.pipelines.visualisation"]]}})