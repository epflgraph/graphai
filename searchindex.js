Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_jobs", "graphai.api.celery_jobs.common", "graphai.api.celery_jobs.image", "graphai.api.celery_jobs.ontology", "graphai.api.celery_jobs.scraping", "graphai.api.celery_jobs.translation", "graphai.api.celery_jobs.video", "graphai.api.celery_jobs.voice", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.completion", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.auth_utils", "graphai.api.common.celery_tools", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.auth", "graphai.api.routers.completion", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.completion", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.common_utils", "graphai.core.common.fingerprinting", "graphai.core.interfaces", "graphai.core.interfaces.caching", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.config", "graphai.core.ontology", "graphai.core.ontology.clustering", "graphai.core.ontology.data", "graphai.core.scraping", "graphai.core.scraping.scraping", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.graph", "graphai.core.text.keywords", "graphai.core.text.scores", "graphai.core.text.wikisearch", "graphai.core.translation", "graphai.core.translation.text_utils", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.core.video", "graphai.core.video.ocr", "graphai.core.video.transcribe", "graphai.core.video.video", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_jobs.rst", "graphai.api.celery_jobs.common.rst", "graphai.api.celery_jobs.image.rst", "graphai.api.celery_jobs.ontology.rst", "graphai.api.celery_jobs.scraping.rst", "graphai.api.celery_jobs.translation.rst", "graphai.api.celery_jobs.video.rst", "graphai.api.celery_jobs.voice.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.completion.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.auth_utils.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.auth.rst", "graphai.api.routers.completion.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.completion.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.fingerprinting.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.caching.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.config.rst", "graphai.core.ontology.rst", "graphai.core.ontology.clustering.rst", "graphai.core.ontology.data.rst", "graphai.core.scraping.rst", "graphai.core.scraping.scraping.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.graph.rst", "graphai.core.text.keywords.rst", "graphai.core.text.scores.rst", "graphai.core.text.wikisearch.rst", "graphai.core.translation.rst", "graphai.core.translation.text_utils.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.core.video.rst", "graphai.core.video.ocr.rst", "graphai.core.video.transcribe.rst", "graphai.core.video.video.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_jobs package", "graphai.api.celery_jobs.common module", "graphai.api.celery_jobs.image module", "graphai.api.celery_jobs.ontology module", "graphai.api.celery_jobs.scraping module", "graphai.api.celery_jobs.translation module", "graphai.api.celery_jobs.video module", "graphai.api.celery_jobs.voice module", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.completion module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.auth_utils module", "graphai.api.common.celery_tools module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.auth module", "graphai.api.routers.completion module", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.completion module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.common_utils module", "graphai.core.common.fingerprinting module", "graphai.core.interfaces package", "graphai.core.interfaces.caching module", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.config module", "graphai.core.ontology package", "graphai.core.ontology.clustering module", "graphai.core.ontology.data module", "graphai.core.scraping package", "graphai.core.scraping.scraping module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.graph module", "graphai.core.text.keywords module", "graphai.core.text.scores module", "graphai.core.text.wikisearch module", "graphai.core.translation package", "graphai.core.translation.text_utils module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.core.video package", "graphai.core.video.ocr module", "graphai.core.video.transcribe module", "graphai.core.video.video module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 11, 50, 51, 53, 57, 58, 60, 62, 65, 66, 68, 71, 77, 81, 94], "contain": [0, 11, 44, 50, 54, 57, 58, 60, 63, 64, 66, 80, 86, 94], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 34, 57, 58, 61, 62, 65, 86, 94, 104], "project": 0, "ai": 0, "base": [0, 21, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 57, 58, 60, 63, 65, 66, 68, 70, 71, 73, 74, 77, 79, 80, 81, 94, 99], "util": [0, 48], "api": [0, 66, 79], "core": 0, "pipelin": 0, "definit": [0, 94], "modul": [0, 1, 2, 10, 20, 28, 38, 49, 52, 56, 59, 61, 67, 69, 72, 75, 78, 84, 87, 100, 104], "celery_job": 1, "celery_task": 1, "common": [1, 2, 10, 38, 48], "router": 1, "schema": [1, 86], "main": [1, 58, 87, 89], "imag": [2, 10, 11, 28, 38, 51, 79, 81], "ontologi": [2, 10, 20, 28, 34, 38, 39, 48, 62, 63, 65], "scrape": [2, 10, 28, 38, 48], "translat": [2, 10, 11, 20, 28, 38, 48, 64, 80], "video": [2, 10, 11, 20, 28, 38, 48, 51], "voic": [2, 10, 28, 38], "direct_lookup_generic_job": 3, "task_fn": 3, "token": [3, 4, 6, 7, 8, 9, 21, 29, 39, 41, 43, 46, 47, 51, 53, 60, 64, 68, 81], "return_result": [3, 6, 7, 9], "fals": [3, 4, 6, 7, 8, 9, 23, 34, 39, 41, 42, 43, 45, 46, 47, 50, 53, 57, 58, 60, 64, 65, 68, 74, 77, 79, 80, 81, 94], "arg": [3, 54], "launch": 3, "direct": [3, 58, 94], "cach": [3, 11, 52, 81], "lookup": [3, 11], "job": 3, "param": [3, 11, 50, 51, 53, 54, 57, 58, 60, 68, 79, 80, 81, 88, 90, 91, 92, 93, 95, 96], "task": [3, 11, 54, 71, 77], "function": [3, 27, 50, 51, 77, 81, 94], "look": 3, "up": [3, 58, 62], "If": [3, 50, 51, 57, 58, 64, 74, 94], "true": [3, 7, 34, 50, 51, 57, 58, 60, 63, 64, 65, 68, 70, 74, 77, 79, 81, 94], "full": [3, 50, 51, 53, 57, 79, 80, 81], "result": [3, 11, 34, 41, 42, 44, 45, 46, 47, 51, 54, 57, 58, 62, 63, 65, 66, 79, 80, 81, 94], "ar": [3, 34, 50, 51, 58, 60, 62, 64, 65, 76, 81, 94], "return": [3, 11, 34, 50, 51, 53, 54, 57, 58, 60, 62, 63, 64, 65, 66, 68, 73, 74, 76, 77, 79, 80, 81, 94], "instead": [3, 34, 53], "just": [3, 57], "id": [3, 11, 42, 53, 54, 57, 58, 60], "case": [3, 50, 74, 79], "hit": 3, "none": [3, 8, 9, 11, 21, 23, 29, 34, 39, 41, 42, 43, 45, 46, 47, 50, 51, 53, 54, 57, 58, 60, 68, 70, 71, 74, 80, 81, 94, 95], "miss": [3, 94], "fingerprint_lookup_job": [4, 7, 8, 9], "fingerprint_job": [4, 7, 8, 9], "forc": [4, 6, 7, 8, 9, 41, 43, 45, 46, 47, 53], "ocr_job": 4, "method": [4, 34, 41, 57, 58, 66, 79, 81, 94], "googl": [4, 41, 79], "tree_job": 5, "category_info_job": 5, "category_id": [5, 42, 58], "category_parent_job": 5, "category_children_job": 5, "dest_typ": 5, "cluster_parent_job": 5, "cluster_id": [5, 42, 58], "cluster_children_job": 5, "recompute_clusters_job": 5, "n_cluster": [5, 42, 57], "min_n": [5, 42, 57], "graph_distance_job": 5, "src": [5, 7, 42, 68], "tgt": [5, 7, 42, 68], "src_type": [5, 42], "tgt_type": [5, 42], "avg": [5, 42, 58], "coeff": [5, 42, 58], "concept_nearest_category_job": 5, "top_n": [5, 42, 58], "use_depth_3": [5, 58], "return_clust": [5, 42, 58], "cluster_nearest_category_job": 5, "concept_nearest_concept_job": 5, "breakup_cluster_job": 5, "sublink_lookup_job": 6, "extract_sublinks_job": 6, "url": [6, 8, 43, 46, 60, 73, 81], "extract_content_job": 6, "header": [6, 60], "long_pattern": 6, "get_translation_text_fingerprint_chain_list": 7, "text": [7, 10, 11, 28, 38, 41, 45, 48, 50, 51, 60, 68, 69, 79, 80, 81], "fingerprint_compute_job": 7, "asynchron": 7, "translation_job": 7, "detect_text_language_job": 7, "get_video_fingerprint_chain_list": 8, "min_similar": [8, 11, 51], "n_job": 8, "8": [8, 51], "ignore_fp_result": 8, "get_audio_fingerprint_chain_list": 8, "get_slide_fingerprint_chain_list": 8, "origin_token": [8, 53], "retrieve_url_job": 8, "is_playlist": 8, "extract_audio_job": 8, "recalculate_cach": [8, 46], "detect_slides_job": 8, "languag": [8, 41, 45, 46, 47, 68, 80, 81], "get_file_job": 8, "get_audio_language_detection_task_chain": 9, "n_div": 9, "15": 9, "len_seg": 9, "30": [9, 80], "language_lookup_job": 9, "detect_language_job": 9, "transcribe_job": 9, "lang": [9, 11, 68, 81], "strict_sil": [9, 80], "complet": [10, 28, 38, 71, 77, 99], "lookup_latest_allowed_d": 11, "fp_token": 11, "db_manag": [11, 53], "format_api_result": 11, "name": [11, 42, 53, 54, 57, 74, 81, 86], "statu": [11, 54, 60], "format": [11, 50, 76, 81, 86], "come": [11, 86], "from": [11, 34, 51, 53, 57, 60, 63, 64, 65, 73, 81, 86, 94], "celeri": [11, 54], "output": [11, 39, 42, 81], "appropri": 11, "dictionari": [11, 50, 57, 58, 60, 66, 68, 74, 80], "fingerprint_lookup_retrieve_from_db": 11, "equality_condit": 11, "retriev": [11, 34, 53, 60, 66, 77, 81], "number": [11, 40, 57, 58, 60, 65, 66, 71, 74, 79, 81, 94], "row": [11, 53, 57, 58, 94], "relev": [11, 34, 44, 66], "fingerprint": [11, 39, 49, 53], "dict": [11, 29, 42, 43, 46, 53, 57, 60, 68, 74, 80, 81], "comput": [11, 51, 57, 63, 65, 68, 81, 94], "dbcachingmanagerbas": [11, 53], "object": [11, 27, 39, 42, 44, 53, 54, 58, 62, 63, 65, 68, 70, 71, 74, 76, 77, 79, 80, 81], "equal": [11, 60], "condit": 11, "count": 11, "onli": [11, 34, 58, 66, 74, 81, 86, 94], "us": [11, 53, 57, 58, 60, 64, 65, 66, 73, 77, 79, 80, 81, 86, 94], "unexpect": [11, 51, 57, 58, 80, 94], "indent": [11, 51, 57, 58, 70, 74, 80], "where": [11, 81, 94], "need": [11, 50, 77], "done": [11, 34], "among": [11, 34], "same": [11, 60, 81, 94], "sourc": [11, 45, 57, 58, 68], "target": [11, 45, 51, 58, 68, 81], "origin": [11, 53, 57, 58, 60, 63, 81], "plu": [11, 58, 63, 68], "fingerprint_lookup_parallel": 11, "input_dict": 11, "i": [11, 27, 34, 50, 51, 53, 57, 58, 60, 62, 64, 65, 66, 71, 73, 77, 79, 80, 81, 94], "n_total": 11, "data_typ": 11, "audio": [11, 51, 80, 81], "perform": [11, 57, 60, 66, 79, 81, 94], "parallel": 11, "previou": [11, 71, 77], "step": [11, 81], "index": [11, 57, 58, 60, 81, 86, 94], "thi": [11, 27, 34, 51, 57, 65, 71, 86, 94], "total": [11, 23, 71, 77], "minimum": [11, 51, 57, 60, 81], "similar": [11, 51, 53, 58, 81, 94], "threshold": [11, 53, 62, 64, 65, 80, 81], "two": [11, 51, 58, 60, 65, 79, 81], "consid": [11, 57, 62, 66, 81], "match": [11, 51, 60, 66], "type": [11, 60, 63, 64, 65, 66, 73, 74, 80], "data": [11, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 56, 57, 60, 74, 86], "can": [11, 27, 34, 51, 66, 77, 80, 86], "mode": [11, 57], "detail": [11, 53, 80], "closest": [11, 42, 51, 58], "which": [11, 44, 53, 58, 60, 62, 64, 65, 66, 80, 81, 94], "fingerprint_lookup_direct": 11, "fp_result": 11, "fingerprint_lookup_callback": 11, "results_list": 11, "handl": 11, "collect": 11, "aggreg": [11, 34, 57, 65], "databas": 11, "insert": 11, "list": [11, 21, 34, 40, 41, 42, 43, 44, 45, 51, 53, 57, 58, 60, 64, 66, 81, 94], "auth_util": 20, "celery_tool": 20, "log": [20, 42, 58, 70, 74], "class": [21, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 58, 63, 68, 70, 71, 73, 74, 77, 79, 80, 81], "access_token": 21, "str": [21, 29, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 64, 66, 73, 74, 77, 94], "token_typ": 21, "basemodel": [21, 39, 40, 41, 42, 43, 44, 45, 46, 47], "tokendata": 21, "usernam": 21, "scope": 21, "user": [21, 29], "email": [21, 73], "full_nam": 21, "disabl": 21, "bool": [21, 34, 39, 41, 42, 43, 45, 46, 47, 63, 64, 65, 74, 94], "userindb": 21, "hashed_password": 21, "generate_random_password_str": 21, "length": [21, 23, 51, 60, 81], "32": [21, 60], "verify_password": 21, "plain_password": 21, "get_password_hash": 21, "password": 21, "get_us": 21, "authenticate_us": 21, "get_n_celery_work": 22, "msg": [23, 70, 74, 77], "second": [23, 51, 60, 77, 80], "64": 23, "lifespan": 27, "app": [27, 54], "fastapi": 27, "ha": [27, 94], "three": [27, 51, 80], "part": 27, "befor": [27, 77, 94], "startup": [27, 104], "logic": 27, "execut": [27, 71, 77], "right": 27, "start": [27, 60, 66, 81], "here": 27, "we": [27, 81], "might": 27, "want": 27, "load": [27, 53, 58, 68, 80, 81], "big": [27, 74], "memori": [27, 80], "etc": [27, 57, 64], "yield": 27, "standard": [27, 60], "wai": 27, "pass": 27, "so": [27, 51, 60, 81, 86], "normal": [27, 57, 73], "boot": 27, "serv": 27, "request": [27, 34, 57, 60], "after": [27, 57, 64, 65, 86], "shutdown": 27, "shut": 27, "down": 27, "free": 27, "some": [27, 34, 65, 71, 77, 94], "do": 27, "cleanup": 27, "async": [27, 29, 30, 31, 32, 33, 34, 35, 36, 37], "redirect_doc": 27, "auth": 28, "create_access_token": 29, "expires_delta": 29, "timedelta": 29, "get_current_us": 29, "security_scop": 29, "securityscop": 29, "get_current_active_us": 29, "current_us": 29, "get_active_user_dummi": 29, "login_for_access_token": 29, "form_data": 29, "oauth2passwordrequestform": 29, "read_users_m": 29, "choose_best_subset": 30, "slidesubsetrequest": [30, 40], "calculate_slide_fingerprint": 31, "imagefingerprintrequest": [31, 41], "calculate_slide_fingerprint_statu": 31, "task_id": [31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 54], "extract_text": 31, "extracttextrequest": [31, 41], "extract_text_statu": 31, "detect_ocr_language_statu": 31, "tree": [32, 39, 42, 57, 81], "cat_info": 32, "categoryinforequest": [32, 42], "cat_par": 32, "cat_children": 32, "categorychildrenrequest": [32, 42], "cluster_par": 32, "clusterinforequest": [32, 42], "cluster_children": 32, "recompute_clust": 32, "recomputeclustersrequest": [32, 42], "recompute_clusters_statu": 32, "compute_graph_dist": 32, "graphdistancerequest": [32, 42], "compute_graph_concept_nearest_categori": 32, "graphconceptnearestcategoryrequest": [32, 42], "compute_graph_cluster_nearest_categori": 32, "graphclusternearestcategoryrequest": [32, 42], "compute_graph_nearest_concept": 32, "graphnearestconceptrequest": [32, 42], "break_up_clust": 32, "breakupclusterrequest": [32, 42], "extract_sublink": 33, "getsublinksrequest": [33, 43], "extract_sublinks_statu": 33, "extract_page_cont": 33, "extractcontentrequest": [33, 43], "extract_page_content_statu": 33, "keyword": [34, 44, 61, 63, 65, 66], "keywordsrequest": [34, 44], "use_nltk": [34, 64], "process": [34, 60, 66], "raw": [34, 44, 73], "e": [34, 57, 60, 65, 66, 80, 81], "g": [34, 57, 58, 66, 80], "an": [34, 51, 53, 57, 58, 68, 74, 80, 81, 86], "abstract": 34, "public": 34, "cours": 34, "descript": 34, "lectur": 34, "slide": [34, 40, 81], "wikifi": [34, 44, 62], "wikifyfromrawtextrequest": [34, 44], "wikifyfromkeywordsrequest": [34, 44], "restrict_to_ontologi": [34, 65], "graph_score_smooth": [34, 65], "ontology_score_smooth": [34, 65], "keywords_score_smooth": [34, 65], "aggregation_coef": [34, 65], "float": [34, 40, 42, 44, 46, 47, 62, 64, 65, 77, 94], "0": [34, 40, 42, 44, 50, 51, 58, 60, 62, 63, 65, 66, 68, 74, 76, 77, 81, 88, 94], "5": [34, 44, 58, 63, 65, 77], "filtering_threshold": [34, 65], "1": [34, 40, 42, 44, 50, 51, 58, 60, 65, 66, 68, 76, 77, 81, 94], "filtering_min_vot": [34, 65], "int": [34, 40, 42, 44, 46, 62, 65, 66, 71, 74], "refresh_scor": [34, 65], "concept": [34, 40, 42, 57, 58, 62, 63, 65, 66, 86, 89, 94], "wikipedia": [34, 44, 58, 66], "page": [34, 44, 58, 60, 65, 66], "each": [34, 44, 50, 57, 58, 60, 66, 71, 77, 94], "set": [34, 44, 50, 53, 54, 62, 66, 94], "score": [34, 42, 44, 51, 57, 58, 61, 62, 63, 64, 66, 68, 80, 94], "quantifi": 34, "follow": [34, 71, 73, 77, 81, 94], "extract": [34, 44, 60, 64, 81], "automat": [34, 53, 80], "omit": 34, "keyword_list": 34, "provid": [34, 54, 57, 58, 60, 63, 68, 81], "input": [34, 51, 60, 79, 80, 81], "raw_text": [34, 44], "wikisearch": [34, 61, 65], "For": [34, 51, 58, 94], "most": [34, 51], "10": [34, 42, 58, 64, 66, 94], "through": [34, 58, 81], "elasticsearch": [34, 66, 83], "pair": [34, 58, 64, 77, 94], "sever": [34, 44, 65, 77], "deriv": [34, 58], "take": [34, 58, 65, 94], "account": 34, "other": [34, 58, 66, 77], "filter": [34, 62, 64, 65], "accord": [34, 57, 60, 94], "rule": 34, "keep": [34, 58, 71], "wikify_ontology_svg": 34, "wikifyresponseelem": [34, 44], "level": [34, 57, 62], "2": [34, 40, 42, 51, 58, 66, 68, 77, 81, 94, 104], "svg": [34, 62], "file": [34, 50, 51, 53, 62, 74, 79, 80, 81], "repres": [34, 39, 42, 44, 58, 64, 71, 77], "subgraph": 34, "induc": [34, 58, 62], "wikify_graph_svg": 34, "concept_score_threshold": [34, 62], "3": [34, 42, 57, 58, 62, 66, 73, 77, 104], "edge_threshold": [34, 62], "min_component_s": [34, 62], "priority_test_text": 34, "calculate_translation_text_fingerprint": 35, "translationrequest": [35, 45], "calculate_translation_text_fingerprint_statu": 35, "translate_statu": 35, "text_detect_languag": 35, "textdetectlanguagerequest": [35, 45], "text_detect_language_statu": 35, "retrieve_fil": 36, "retrieveurlrequest": [36, 46], "get_retrieve_file_statu": 36, "calculate_video_fingerprint": 36, "videofingerprintrequest": [36, 46], "calculate_video_fingerprint_statu": 36, "get_fil": 36, "filerequest": [36, 39], "extract_audio": 36, "extractaudiorequest": [36, 46], "extract_audio_statu": 36, "detect_slid": 36, "detectslidesrequest": [36, 46], "detect_slides_statu": 36, "calculate_audio_fingerprint": 37, "audiofingerprintrequest": [37, 47], "calculate_audio_fingerprint_statu": 37, "transcrib": [37, 78], "audiotranscriptionrequest": [37, 47], "transcribe_statu": 37, "detect_languag": 37, "audiodetectlanguagerequest": [37, 47], "detect_language_statu": 37, "taskidrespons": 39, "endpoint": [39, 42], "taskstatusrespons": [39, 41, 42, 43, 45, 46, 47], "task_nam": [39, 41, 42, 43, 45, 46, 47], "task_statu": [39, 41, 42, 43, 45, 46, 47], "task_result": [39, 41, 42, 43, 45, 46, 47, 54], "jsonwrappervalu": 39, "abc": 39, "tokenstatu": [39, 46], "activ": 39, "slideconceptsmap": 40, "coverag": [40, 68], "min_freq": [40, 68], "slidesubsetrespons": 40, "subset": [40, 65], "imagefingerprinttaskrespons": 41, "fresh": [41, 43, 45, 46, 47], "closest_token": [41, 46, 47], "closest_token_origin": [41, 47], "success": [41, 42, 43, 45, 46, 47, 81], "imagefingerprintrespons": 41, "liter": [41, 42, 45, 46], "tesseract": [41, 81], "individualocrresult": 41, "extracttexttaskrespons": 41, "extracttextrespons": 41, "detectocrlanguagetaskrespons": 41, "detectocrlanguagerespons": 41, "treeresponseelem": 42, "child_id": [42, 58], "parent_id": [42, 58], "treerespons": 42, "child_to_par": 42, "categoryinforespons": 42, "depth": [42, 58], "categoryparentrespons": 42, "parent": [42, 58], "categori": [42, 58, 62], "cluster": [42, 56, 58, 66], "treechildrenrespons": 42, "children": 42, "child_typ": 42, "treeparentrespons": 42, "2200": 42, "oneconceptresponseel": 42, "recomputeclusterstaskrespons": 42, "category_assign": 42, "impurity_count": 42, "impurity_proport": 42, "recomputeclustersrespons": 42, "breakupclustersclusternumberrespons": 42, "breakupclustersrespons": 42, "linear": [42, 58], "tupl": [42, 60, 64, 66, 94], "graphdistancerespons": 42, "sim": 42, "graphnearestcategoryrequest": 42, "adapt": 42, "top_down_search": 42, "nearestclusterel": 42, "rank": 42, "nearestcategoryel": 42, "nearestcategoryelementwithclust": 42, "graphconceptnearestcategoryrespons": 42, "parent_categori": 42, "valid": [42, 60, 83], "existing_label": 42, "graphclusternearestcategoryrespons": 42, "graphnearestconceptrespons": 42, "getsublinkstaskrespons": 43, "validated_url": [43, 60], "sublink": [43, 60], "status_msg": 43, "getsublinksrespons": 43, "remove_head": [43, 60], "remove_long_pattern": [43, 60], "extractcontenttaskrespons": 43, "extractcontentrespons": 43, "pageid": [44, 94], "pagetitl": 44, "searchscor": 44, "levenshteinscor": 44, "graphscor": 44, "ontologylocalscor": 44, "ontologyglobalscor": 44, "keywordsscor": 44, "mixedscor": [44, 65], "It": [44, 64, 66, 73, 94], "consist": 44, "measur": 44, "degre": 44, "respect": [44, 58, 76, 94], "config": [44, 52], "schema_extra": 44, "exampl": [44, 64, 73, 94], "44735199351890065": 44, "9058463104630012": 44, "1196": 44, "angl": 44, "8055555555555556": 44, "22717425120724127": 44, "609271523178808": 44, "16661245633224378": 44, "44715741719086977": 44, "6666666666666667": 44, "152547": 44, "bisect": 44, "3333333333333333": 44, "003590346636521923": 44, "19828593689131283": 44, "2134432477817427": 44, "17781458572659029": 44, "19791666666666666": 44, "21885521885521886": 44, "23972889": 44, "distance_from_a_point_to_a_lin": 44, "16666666666666669": 44, "7855473315153876": 44, "33567080901262164": 44, "7886663359580247": 44, "7916666666666666": 44, "8232323232323234": 44, "946975": 44, "line_": 44, "geometri": 44, "42461810549112244": 44, "6026490066225165": 44, "3582111602475977": 44, "5277457623305826": 44, "75": [44, 71], "43097643097643096": 44, "22634860": 44, "line_seg": 44, "5555555555555556": 44, "01572170017309725": 44, "5087650954421504": 44, "39019342923035233": 44, "2950855110143057": 44, "11647727272727273": 44, "21212121212121213": 44, "2175469": 44, "non": [44, 57], "line": [44, 51, 57, 74, 80, 94], "sight_propag": 44, "19444444444444448": 44, "14484503981375635": 44, "13627674782665528": 44, "4288185842201275": 44, "133496": 44, "parallelogram": 44, "3055555555555556": 44, "15017752515904018": 44, "2584729255940787": 44, "039652736888335365": 44, "19421461143444865": 44, "25": [44, 71], "76944": 44, "perpendicular": 44, "19444444444444445": 44, "12360559235107477": 44, "3307362680171406": 44, "15367913840285474": 44, "21973432050168798": 44, "36363636363636365": 44, "25278": 44, "quadrilater": 44, "02777777777777779": 44, "12678424818870415": 44, "4107908063887807": 44, "4451948682556247": 44, "3996645939435453": 44, "42424242424242425": 44, "76956": 44, "right_angl": 44, "4166666666666667": 44, "08695255651117278": 44, "7415270744059212": 44, "6912823774628103": 44, "4580780578246384": 44, "15909090909090912": 44, "196969696969697": 44, "94102": 44, "solid_angl": 44, "3888888888888889": 44, "3573397570845174": 44, "29631455223594527": 44, "48284225283305426": 44, "59375": 44, "6414141414141414": 44, "31482": 44, "tangent": 44, "4722222222222222": 44, "2535403349997643": 44, "5717479784842091": 44, "47723102055958355": 44, "30654": 44, "triangl": 44, "textfingerprinttaskrespons": 45, "textfingerprintrespons": 45, "en": [45, 46, 68, 80, 81], "fr": [45, 46, 68], "de": 45, "translationtaskrespons": 45, "text_too_larg": 45, "devic": 45, "translationrespons": 45, "textdetectlanguagetaskrespons": 45, "textdetectlanguagerespons": 45, "playlist": [46, 81], "retrieveurlresponseinn": 46, "token_statu": 46, "token_s": 46, "retrieveurlrespons": 46, "videofingerprinttaskrespons": 46, "videofingerprintrespons": 46, "extractaudiotaskrespons": 46, "durat": [46, 47, 81], "extractaudiorespons": 46, "slidetokenandtimestamp": 46, "timestamp": [46, 76, 81], "detectslidestaskrespons": 46, "slide_token": 46, "detectslidesrespons": 46, "audiofingerprinttaskrespons": 47, "audiofingerprintrespons": 47, "audiodetectlanguagetaskrespons": 47, "audiodetectlanguagerespons": 47, "force_lang": [47, 80], "strict": [47, 80], "audiotranscriptiontaskrespons": 47, "transcript_result": 47, "subtitle_result": 47, "json": [47, 50, 74, 80, 81], "audiotranscriptionrespons": 47, "interfac": [48, 66], "common_util": 49, "make_sure_path_exist": 50, "path": [50, 51, 53, 79, 80, 81, 99], "file_at_the_end": 50, "full_perm": 50, "recurs": [50, 81], "creat": [50, 53, 54, 58, 60, 68, 74, 77], "folder": [50, 81], "exist": [50, 51, 74, 79], "thu": 50, "doesn": [50, 51], "t": [50, 51, 58, 64, 74, 81], "whether": [50, 51, 53, 57, 58, 60, 63, 64, 65, 77, 80, 81, 94], "filenam": [50, 53, 74], "end": [50, 51, 57, 60, 80, 86, 94], "assign": [50, 94], "permiss": 50, "chmod": 50, "777": 50, "newli": 50, "file_exist": 50, "file_path": [50, 53, 81], "check": [50, 58, 60], "given": [50, 51, 53, 54, 57, 58, 60, 62, 64, 66, 73, 74, 76, 81, 94], "otherwis": [50, 64, 79, 81, 94], "write_text_fil": 50, "filename_with_path": 50, "content": [50, 60, 74, 81], "write": [50, 81], "textual": 50, "write_json_fil": 50, "d": [50, 71, 73], "read_text_fil": 50, "open": 50, "read": [50, 74, 81], "read_json_fil": 50, "format_datetime_for_mysql": 50, "dt": 50, "parse_mysql_datetim": 50, "get_current_datetim": 50, "current": [50, 76, 81], "datetim": [50, 76], "mysql": 50, "string": [50, 51, 60, 64, 68, 81], "invert_dict": 50, "strtobool": 50, "val": 50, "convert": [50, 58, 73], "represent": [50, 51], "truth": 50, "valu": [50, 51, 53, 58, 60, 65, 81, 94], "y": [50, 94], "ye": 50, "n": [50, 58, 66, 99], "f": [50, 77], "off": 50, "rais": 50, "valueerror": 50, "anyth": 50, "els": 50, "insensit": 50, "copy_file_within_fold": 50, "folder_nam": 50, "src_file": 50, "dest_fil": 50, "perceptual_hash_text": 51, "": [51, 53, 60, 68, 73], "perceptu": [51, 81], "hash": [51, 68, 81], "strong": [51, 73], "min_window_length": 51, "window": 51, "k": [51, 81, 94], "gram": 51, "max_window_length": 51, "maximum": [51, 60, 64, 66, 81, 94], "hash_len": 51, "md5_video_or_audio": 51, "input_filename_with_path": [51, 79, 80, 81], "md5": [51, 68], "stream": [51, 81], "perceptual_hash_audio": 51, "max_length": [51, 60], "7200": 51, "its": [51, 53, 57, 58, 60, 81, 94], "decod": [51, 81], "both": [51, 57, 94], "perceptual_hash_imag": 51, "hash_siz": 51, "16": 51, "size": [51, 57, 62, 81], "doe": [51, 58, 74], "compare_decoded_fingerprint": 51, "decoded_1": 51, "decoded_2": 51, "compar": [51, 60, 94], "fuzzi": 51, "ratio": [51, 57, 94], "between": [51, 53, 57, 58, 65, 76, 77, 81, 94], "compare_encoded_fingerprint": 51, "f1": 51, "f2": 51, "decoder_func": 51, "hex_to_hash": 51, "encod": [51, 64, 73], "them": [51, 53, 60, 65], "indic": [51, 58, 60, 81], "exact": 51, "find_closest_fingerprint_from_list": 51, "target_fp": 51, "fp_list": 51, "token_list": 51, "date_list": 51, "strip_underscor": 51, "candid": 51, "find": [51, 58, 60, 66, 81], "one": [51, 57, 58, 64, 66, 71, 77, 94], "highest": [51, 80], "whose": [51, 58, 94], "abov": [51, 76, 81, 94], "correspond": [51, 57], "those": [51, 58, 65], "lower": 51, "than": [51, 64, 94], "block": [51, 57, 74, 77, 80], "quot": [51, 57, 80], "without": [51, 57, 77, 80, 94], "blank": [51, 57, 80, 94], "unind": [51, 57, 80, 94], "paramet": [51, 57, 62, 63, 64, 65, 66, 71, 73, 74, 77, 80, 87, 94], "differ": [51, 77, 94], "v": [51, 60, 94], "remov": [51, 60], "trail": 51, "underscor": 51, "all": [51, 57, 60, 64, 65, 77, 81, 86, 94], "satisfi": 51, "criterion": 51, "find_closest_fingerprint_for_list_from_list": 51, "find_closest_audio_fingerprint_from_list": 51, "find_closest_image_fingerprint_from_list": 51, "find_closest_text_fingerprint_from_list": 51, "celery_config": 52, "delete_fil": 53, "delet": [53, 73], "create_symlink_between_path": 53, "old_path": 53, "new_path": 53, "symlink": 53, "old": 53, "real": 53, "new": [53, 57, 77, 79, 81], "videodbcachingmanag": 53, "initialize_databas": 53, "init_db": 53, "audiodbcachingmanag": 53, "slidedbcachingmanag": 53, "textdbcachingmanag": 53, "scrapingdbcachingmanag": 53, "get_details_using_origin": 53, "col": [53, 58], "get": [53, 58, 73], "column": [53, 57, 58, 62, 63, 65, 66, 94], "videoconfig": 53, "get_root_dir": 53, "get_image_dir": 53, "get_audio_dir": 53, "get_video_dir": 53, "get_transcript_dir": 53, "concat_file_path": 53, "subfold": 53, "concaten": 53, "root": [53, 81], "dir": 53, "should": [53, 74, 86], "generate_filepath": 53, "force_dir": 53, "gener": [53, 60, 64, 68, 81], "particular": 53, "create_symlink": 53, "new_filenam": 53, "fingerprintparamet": 53, "load_valu": 53, "fail": 53, "default": [53, 54, 57, 60, 62, 63, 64, 65, 66, 77, 81], "get_min_sim_text": 53, "get_min_sim_imag": 53, "get_min_sim_audio": 53, "get_min_sim_video": 53, "get_token_file_statu": 53, "file_manag": 53, "is_fingerprint": 53, "get_video_token_statu": 53, "get_image_token_statu": 53, "get_audio_token_statu": 53, "route_task": 54, "kwarg": [54, 58], "option": [54, 57, 58, 60], "kw": 54, "baseconfig": 54, "developmentconfig": 54, "get_set": 54, "create_celeri": 54, "get_celery_task": 54, "asyncresult": 54, "get_task_info": 54, "info": 54, "compute_all_graphs_from_scratch": 57, "data_to_use_dict": 57, "concept_nam": [57, 62, 65, 66], "scratch": 57, "datafram": [57, 58, 62, 63, 65, 66, 94], "map": [57, 58, 60, 76], "matrix": [57, 58], "normalize_featur": 57, "l2": [57, 58], "norm": [57, 94], "dens": 57, "get_laplacian": 57, "laplacian": 57, "unnorm": 57, "adjac": [57, 58], "lil": 57, "spars": 57, "sum_laplacian": 57, "simpl": 57, "sum": [57, 65], "arithmetic_mean_laplacian": 57, "arithmet": [57, 94], "mean": [57, 66, 94], "combine_laplacian": 57, "combin": [57, 94], "li": 57, "spec_embed_on_laplacian": 57, "seed": 57, "420": 57, "spectral": 57, "embed": 57, "compon": [57, 62], "random": [57, 81, 99], "optim": [57, 60], "combine_and_embed_laplacian": 57, "main_graph": 57, "n_dim": 57, "1000": 57, "calcul": [57, 81], "combination_method": 57, "armean": 57, "dimens": 57, "perform_pca": 57, "n_compon": 57, "random_st": 57, "center_and_scal": 57, "pca": 57, "state": [57, 71], "dimension": 57, "reduct": 57, "precompute_clustering_metr": 57, "affin": [57, 94], "normalize_vector": 57, "perform_constrained_agglom": 57, "cosin": [57, 94], "linkag": 57, "averag": [57, 58, 94], "full_comput": 57, "agglom": 57, "must": 57, "link": 57, "cannot": 57, "constraint": 57, "ndarrai": [57, 58], "ml": 57, "cl": 57, "point": [57, 60, 86], "return_model": 57, "model": [57, 68, 80, 81], "well": [57, 77], "label": 57, "how": [57, 60, 64, 65, 68], "distanc": [57, 81, 94], "variance_ratio_ev": 57, "varianc": 57, "also": [57, 77], "known": 57, "calinski": 57, "harabasz": 57, "davies_bouldin_ev": 57, "davi": 57, "bouldin": 57, "cluster_using_embed": 57, "low": [57, 94], "space": [57, 60, 64, 74], "group_clust": 57, "rows_and_col": 57, "precomputed_map": 57, "group": 57, "togeth": [57, 58], "becom": 57, "singl": [57, 81], "what": [57, 64], "median": 57, "transform": [57, 63, 65], "reassign_outli": 57, "reassign": 57, "outlier": 57, "vector": 57, "cluster_and_reassign_outli": 57, "assign_to_categories_using_exist": 57, "category_concept": 57, "category_id_to_index": 57, "convert_cluster_labels_to_dict": 57, "cluster_label": 57, "concept_index_to_id": 57, "concept_index_to_nam": 57, "db_results_to_pandas_df": 58, "get_id_dict": 58, "make_adj_undirect": 58, "graph_adj": 58, "make": [58, 79], "undirect": 58, "symmetr": 58, "derive_col_to_col_graph": 58, "orig_adj": 58, "A": [58, 62, 63, 64, 65, 66, 80], "get_col_to_col_dict": 58, "df": [58, 88, 95], "source_col": 58, "target_col": 58, "element": [58, 60], "anoth": 58, "kei": [58, 66, 80, 94], "return_chosen_indic": 58, "base_list": 58, "remove_invalid_pair": 58, "l_main": 58, "l_secondary_1": 58, "l_secondary_2": 58, "ref_dict": 58, "refer": 58, "appear": 58, "In": 58, "word": [58, 64, 81], "elimin": [58, 60], "against": 58, "l_secondari": 58, "secondari": 58, "clean": [58, 72], "order": 58, "thei": [58, 64, 81], "were": 58, "create_graph_from_df": 58, "weight_col": 58, "col_dict": 58, "row_dict": 58, "pool_rows_and_col": 58, "make_symmetr": 58, "edg": [58, 60, 62, 94], "turn": 58, "node": 58, "weight": [58, 94], "precomput": 58, "adj": 58, "pool": 58, "convert_to_csr_matrix": 58, "csr": 58, "to_ndarray_and_flatten": 58, "adjusted_exp": 58, "x": [58, 94], "overlap": 58, "adjusted_exp_slope_1_point": 58, "compute_averag": 58, "average_and_combin": 58, "s1": [58, 60], "s2": [58, 60], "l1": 58, "skip_empti": 58, "ontologydata": 58, "test_mod": 58, "load_data": 58, "load_ontology_concept_nam": 58, "load_ontology_categori": 58, "load_non_ontology_concept_nam": 58, "load_concept_concept_graphscor": 58, "load_category_categori": 58, "load_category_concept": 58, "load_anchor_page_dict": 58, "anchor": 58, "tabl": [58, 98], "child": 58, "relat": 58, "compute_category_anchors_using_refer": 58, "compute_symmetric_concept_concept_matrix": 58, "compute_precalculated_similarity_matric": 58, "matric": 58, "get_concept_concept_similar": 58, "concept_1_id": 58, "concept_2_id": 58, "get_concept_cluster_similar": 58, "concept_id": [58, 62, 63, 65, 66], "get_cluster_cluster_similar": 58, "cluster_1_id": 58, "cluster_2_id": 58, "get_concept_category_similar": 58, "4": [58, 77, 104], "coeffici": [58, 94], "get_cluster_category_similar": 58, "get_category_category_similar": 58, "category_1_id": 58, "category_2_id": 58, "get_concept_closest_concept": 58, "top": [58, 66], "get_concept_closest_cluster_of_categori": 58, "under": 58, "term": 58, "get_concept_closest_categori": 58, "adaptive_threshold": 58, "go": 58, "directli": [58, 86], "get_cluster_closest_categori": 58, "get_custom_cluster_closest_categori": 58, "custom": 58, "get_category_closest_categori": 58, "As": 58, "compos": 58, "crossov": 58, "get_ontology_concept_names_t": 58, "concepts_to_keep": 58, "get_ontology_category_nam": 58, "get_ontology_category_info": 58, "cat_id": 58, "get_non_ontology_concept_nam": 58, "get_concept_concept_graphscore_t": 58, "get_category_to_categori": 58, "get_category_par": 58, "get_category_children": 58, "get_cluster_par": 58, "get_cluster_children": 58, "get_concept_parent_categori": 58, "get_concept_parent_clust": 58, "get_category_cluster_list": 58, "get_category_concept_list": 58, "get_cluster_concept_list": 58, "get_category_concept_t": 58, "get_category_cluster_t": 58, "get_category_anchor_pag": 58, "get_cluster_concept": 58, "get_test_concept_nam": 58, "get_test_category_concept": 58, "get_test_cluster_concept": 58, "compare_str": 60, "string1": 60, "string2": 60, "arrai": 60, "first": [60, 74, 77, 81], "charact": 60, "find_consecutive_run": 60, "min_run": 60, "consecut": [60, 77], "run": [60, 71, 77, 86], "sequenc": [60, 81], "40": 60, "time": [60, 69, 71, 81], "k1": [60, 81], "k2": [60, 81], "find_edge_pattern": 60, "content_stack": 60, "flip_str": 60, "repeat": 60, "pattern": 60, "begin": [60, 77], "webpag": 60, "flip": 60, "footer": 60, "string_circular_shift": 60, "shift": 60, "circular": 60, "mani": 60, "find_spac": 60, "everi": [60, 74, 81, 94], "shift_to_max_correl": 60, "correl": 60, "posit": [60, 66], "largest": 60, "intersect": 60, "find_repeated_pattern": 60, "min_length": 60, "1024": 60, "everywher": 60, "within": 60, "substr": 60, "extract_text_from_url": 60, "request_head": 60, "tag_search_sequ": 60, "headless": 60, "browser": 60, "tag": [60, 73], "search": [60, 66, 81], "check_url": 60, "test_url": 60, "access": 60, "fulli": 60, "resolv": 60, "messag": [60, 77], "code": [60, 74, 80], "create_base_url_token": 60, "initialize_url": 60, "base_url": 60, "initi": 60, "determin": 60, "protocol": 60, "http": 60, "correct": 60, "generate_sublink_token": 60, "base_token": 60, "reconstruct_data_dict": 60, "page_typ": 60, "reconstruct": 60, "precalcul": 60, "initialize_data_dict": 60, "fill": 60, "pagetyp": 60, "field": 60, "vacant": 60, "get_sublink": 60, "later": 60, "parse_page_typ": 60, "pars": [60, 73, 81], "predefin": 60, "process_all_sublink": 60, "modifi": 60, "long": [60, 68], "draw": 61, "draw_ontologi": 62, "neighbourhood": 62, "store": [62, 81], "tmp": 62, "pd": [62, 63, 65, 66, 94], "panda": [62, 63, 65, 66, 76], "search_scor": [62, 65, 66], "levenshtein_scor": [62, 65], "graph_scor": [62, 63, 65], "ontology_local_scor": [62, 63, 65], "ontology_global_scor": [62, 63, 65], "keywords_scor": [62, 65], "mixed_scor": [62, 65], "conceptsgraph": [62, 63, 65], "visualis": [62, 83], "draw_graph": 62, "below": [62, 64, 76, 81], "out": [62, 64], "connect": [62, 79], "load_from_db": 63, "get_ontology_concept": 63, "add_graph_scor": 63, "smooth": [63, 65], "includ": [63, 77], "appli": [63, 65], "bump": [63, 65], "avoid": [63, 65, 74], "neg": 63, "exponenti": 63, "shape": [63, 94], "add_ontology_scor": 63, "push": [63, 65], "awai": [63, 65], "word_token": 64, "possibl": 64, "sentenc": 64, "separ": 64, "you": [64, 73], "rake_extract": 64, "split_word": 64, "return_scor": 64, "auto": 64, "filter_past_tenses_and_adverb": 64, "unconstrain": 64, "python": 64, "rake": 64, "nltk": 64, "more": [64, 71, 77], "split": 64, "retur": 64, "minim": 64, "ignor": 64, "past": 64, "tens": 64, "participl": 64, "adverb": 64, "join": [64, 73], "Then": 64, "crowd": 64, "young": 64, "boi": 64, "re": 64, "foolin": 64, "around": 64, "corner": 64, "drunk": 64, "dress": 64, "best": 64, "brown": 64, "baggi": 64, "platform": 64, "sole": 64, "don": [64, 81], "give": 64, "damn": 64, "about": 64, "ani": [64, 65, 86, 94], "trumpet": 64, "playin": 64, "band": 64, "ain": 64, "call": [64, 79], "rock": 64, "roll": 64, "extract_keyword": 64, "normalis": [64, 65, 94], "solv": [64, 73], "problem": [64, 73], "strip": 64, "html": [64, 73], "lowercas": [64, 73], "p": [64, 73], "compute_levenshtein_scor": 65, "compute_keywords_scor": 65, "compute_mixed_scor": 65, "aggregate_result": 65, "coef": 65, "uniqu": [65, 66, 94], "control": [65, 94], "over": [65, 94], "max": 65, "linearli": [65, 76], "interpol": 65, "approach": 65, "filter_result": 65, "epsilon": [65, 88], "min_vot": 65, "depend": 65, "criteria": 65, "specifi": [65, 94], "decid": 65, "good": 65, "enough": 65, "least": 65, "amount": 65, "kept": [65, 94], "iff": 65, "compute_scor": 65, "gather": 65, "final": [65, 77, 94], "searchrank": [65, 66], "exclud": 65, "recomput": 65, "search_wikipedia_api": 66, "limit": 66, "queri": 66, "search_elasticsearch": 66, "elasticserch": 66, "keywords_list": 66, "fraction": 66, "portion": 66, "middl": 66, "third": 66, "either": 66, "fallback": 66, "text_util": 67, "translation_list_to_text": 68, "str_or_list": 68, "translation_text_back_to_list": 68, "return_list": 68, "md5_text": 68, "generate_src_tgt_dict": 68, "generate_translation_text_token": 68, "detect_text_languag": 68, "detect": [68, 79, 80, 81, 86], "compute_slide_tfidf_scor": 68, "list_of_set": 68, "find_set_cov": 68, "find_best_slide_subset": 68, "slides_and_concept": 68, "prioriti": 68, "translationmodel": 68, "load_model": 68, "huggingfac": 68, "pysbd": 68, "segment": [68, 80, 81], "get_devic": 68, "unpunctu": 68, "too": [68, 77], "flag": 68, "breadcrumb": 69, "progress_bar": 69, "debug": [70, 74], "color": [70, 74], "time_color": 70, "grai": 70, "report": [70, 77], "outdent": 70, "progressbar": 71, "n_iter": 71, "bar_length": 71, "50": 71, "progress": 71, "bar": 71, "track": [71, 77, 81], "usag": [71, 77], "letter": 71, "b": 71, "c": [71, 73, 94], "pb": 71, "len": 71, "consum": [71, 77], "updat": 71, "00": 71, "100": 71, "print": [71, 73, 74, 76, 77], "iter": 71, "percentag": 71, "overwrit": 71, "ban": 71, "reset": [71, 74, 77], "increment": 71, "counter": 71, "reus": [71, 77], "io": 72, "htmlcleaner": 73, "htmlparser": 73, "shiver": 73, "dark": 73, "br": 73, "rain": 73, "park": 73, "meantim": 73, "feed": [73, 80], "get_data": 73, "handle_starttag": 73, "attr": 73, "handle_endtag": 73, "handle_data": 73, "u2018rain": 73, "u2019": 73, "lt": 73, "evalu": 74, "pref": 74, "x1b": 74, "0m": 74, "black": 74, "30m": 74, "blue": 74, "34m": 74, "cyan": 74, "36m": 74, "green": 74, "32m": 74, "magenta": 74, "35m": 74, "red": 74, "31m": 74, "white": 74, "37m": 74, "yellow": 74, "33m": 74, "cprint": 74, "is_bold": 74, "bold": 74, "pprint": 74, "inlin": 74, "only_first": 74, "pretti": 74, "preced": 74, "skip": 74, "ellipsi": 74, "read_json": 74, "save_json": 74, "save": 74, "mkdir": 74, "dirnam": 74, "directori": 74, "date": [75, 86], "stopwatch": 75, "now": 76, "2022": 76, "06": 76, "28": 76, "09": 76, "46": 76, "21": 76, "677968": 76, "rescal": 76, "min_dat": 76, "max_dat": 76, "seri": 76, "rang": [76, 94], "assum": [76, 94], "yyyi": 76, "mm": 76, "dd": 76, "add_year": 76, "n_year": 76, "sw": 77, "delta": 77, "284306764602661": 77, "variabl": 77, "t1": 77, "t2": 77, "yet": 77, "t3": 77, "609307289123535": 77, "849977970123291": 77, "660188913345337": 77, "preprocess": 77, "pre_tim": 77, "task_tim": 77, "postprocess": 77, "post_tim": 77, "total_tim": 77, "proport": 77, "5176954220125477": 77, "tick": 77, "replac": [77, 94], "partial": 77, "furthermor": 77, "19": 77, "86": 77, "lap": 77, "6": [77, 79], "74": 77, "11": 77, "66": 77, "45": 77, "checkpoint": 77, "finish": 77, "summari": 77, "last": 77, "boolean": 77, "ocr": [78, 81], "googleocrmodel": 79, "establish_connect": 79, "lazili": 79, "alreadi": 79, "successfulli": 79, "establish": 79, "perform_ocr": 79, "text_detect": 79, "document_text_detect": 79, "wait_for_ocr_result": 79, "image_object": 79, "dtd": 79, "retri": 79, "wait": 79, "td": 79, "document": [79, 81], "failur": 79, "whispertranscriptionmodel": 80, "load_model_whisp": 80, "lazi": [80, 81], "whisper": 80, "model_typ": 80, "see": [80, 81], "doc": [80, 86], "get_silence_threshold": 80, "detect_audio_segment_lang_whisp": 80, "sampl": [80, 81], "transcribe_audio_whisp": 80, "verbos": 80, "explicitli": 80, "transcript": 80, "silenc": 80, "lenient": 80, "affect": 80, "logprob": 80, "speech": 80, "like": 80, "subtitl": 80, "generate_random_token": 81, "get_file_s": 81, "retrieve_file_from_generic_url": 81, "output_filename_with_path": 81, "output_token": 81, "wget": 81, "local": 81, "retrieve_file_from_kaltura": 81, "m3u8": 81, "kaltura": 81, "retrieve_file_from_youtub": 81, "download": 81, "youtub": 81, "retrieve_file_from_url": 81, "is_kaltura": 81, "create_filename_using_url_format": 81, "perform_prob": 81, "probe": 81, "ffprobe": 81, "perform_slow_audio_prob": 81, "slower": 81, "ffmpeg": 81, "generate_symbolic_token": 81, "symbol": 81, "itself": 81, "detect_audio_dur": 81, "ogg": 81, "input_token": 81, "generate_audio_token": 81, "extract_audio_from_video": 81, "extract_media_seg": 81, "extract_fram": 81, "output_folder_with_path": 81, "output_fold": 81, "frame": 81, "generate_frame_sample_indic": 81, "input_folder_with_path": 81, "12": 81, "our": 81, "read_txt_gz_fil": 81, "fp": 81, "txt": 81, "gz": 81, "write_txt_gz_fil": 81, "read_json_gz_fil": 81, "perform_tesseract_ocr": 81, "image_path": 81, "tesseract_ocr_or_get_cach": 81, "ocr_path": 81, "langaug": 81, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 81, "nlpmodel": 81, "load_nlp_model": 81, "nlp": 81, "get_word": 81, "valid_onli": 81, "get_text_word_vector": 81, "get_text_word_vector_using_word": 81, "get_cosine_sim": 81, "v1": 81, "v2": 81, "frame_ocr_dist": 81, "nlp_model": 81, "frame_hash_similar": 81, "compute_ocr_noise_level": 81, "frame_sample_indic": 81, "nois": 81, "identifi": 81, "compute_ocr_threshold": 81, "distance_list": 81, "default_threshold": 81, "subsequ": 81, "empti": 81, "check_ocr_and_hash_threshold": 81, "k_l": 81, "k_r": 81, "ocr_dist_threshold": 81, "hash_similarity_threshold": 81, "frame_ocr_transit": 81, "transit": 81, "binari": 81, "frame_format": 81, "leftmost": 81, "rightmost": 81, "distinct": 81, "found": 81, "compute_video_ocr_transit": 81, "hash_dist_threshold": 81, "keep_first": 81, "transitori": 81, "get_ocr_colnam": 81, "invest": 83, "create_index": 84, "populate_index": 84, "script": 86, "popul": 86, "aitor_concepts_": 86, "mediawiki": 86, "campus_analyt": 86, "creation": [86, 98], "said": 86, "could": 86, "veri": 86, "index_doc": 86, "aggregate_recent_past": 87, "check_unit": 87, "compute_fundraisers_unit": 87, "compute_investors_unit": 87, "compute_investors_units_2": 87, "compute_jaccard_index": 87, "concept_configur": 87, "create_investments_graph": 87, "detect_fundraisers_concept": 87, "toy_exampl": 87, "compute_year_coeffici": 88, "recent_past": 88, "rescale_scor": 88, "year": 88, "aggregate_year": 88, "groupby_column": [88, 95], "normalize_scor": 88, "score_column": 88, "01": 88, "show_trend": 89, "unit_id": 89, "unit_concept": 89, "show_matchmaking_list_view": 89, "investors_concepts_jaccard": 89, "investors_concept": 89, "unit_concept_id": 89, "show_matchmaking_chart_view": 89, "unit_investor": 89, "time_window": 89, "configur": 94, "investorid": 94, "sqrt": 94, "sum_": 94, "o": 94, "divid": 94, "henc": 94, "have": 94, "mix": 94, "min_ratio": 94, "05": 94, "sourcepageid": 94, "targetpageid": 94, "defin": [94, 98], "product": 94, "ball": 94, "loop": 94, "normalise_graph": 94, "add": 94, "revers": 94, "vertex": 94, "associ": 94, "key_x": 94, "key_i": 94, "geometr": 94, "compute_affin": 94, "mix_x": 94, "mix_i": 94, "normalise_befor": 94, "requir": 94, "recommend": 94, "euclidean": 94, "notic": 94, "faster": 94, "inf": 94, "typic": 94, "higher": 94, "unus": 94, "u": 94, "squar": 94, "equival": 94, "scalar": 94, "tanh": 94, "denot": 94, "get_fr": 95, "db": 95, "get_investors_fr": 95, "fr_id": 95, "get_frs_fundrais": 95, "get_fundraisers_concept": 95, "fundraiser_id": 95, "derive_yearly_data": 95, "date_column": 95, "amount_column": 95, "build_prefix": 98, "1_old": 100, "2_new": 100, "3_slide": 100}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [48, 0, 0, "-", "core"], [82, 0, 0, "-", "definitions"], [83, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_jobs"], [10, 0, 0, "-", "celery_tasks"], [20, 0, 0, "-", "common"], [27, 0, 0, "-", "main"], [28, 0, 0, "-", "routers"], [38, 0, 0, "-", "schemas"]], "graphai.api.celery_jobs": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "scraping"], [7, 0, 0, "-", "translation"], [8, 0, 0, "-", "video"], [9, 0, 0, "-", "voice"]], "graphai.api.celery_jobs.common": [[3, 1, 1, "", "direct_lookup_generic_job"]], "graphai.api.celery_jobs.image": [[4, 1, 1, "", "fingerprint_job"], [4, 1, 1, "", "fingerprint_lookup_job"], [4, 1, 1, "", "ocr_job"]], "graphai.api.celery_jobs.ontology": [[5, 1, 1, "", "breakup_cluster_job"], [5, 1, 1, "", "category_children_job"], [5, 1, 1, "", "category_info_job"], [5, 1, 1, "", "category_parent_job"], [5, 1, 1, "", "cluster_children_job"], [5, 1, 1, "", "cluster_nearest_category_job"], [5, 1, 1, "", "cluster_parent_job"], [5, 1, 1, "", "concept_nearest_category_job"], [5, 1, 1, "", "concept_nearest_concept_job"], [5, 1, 1, "", "graph_distance_job"], [5, 1, 1, "", "recompute_clusters_job"], [5, 1, 1, "", "tree_job"]], "graphai.api.celery_jobs.scraping": [[6, 1, 1, "", "extract_content_job"], [6, 1, 1, "", "extract_sublinks_job"], [6, 1, 1, "", "sublink_lookup_job"]], "graphai.api.celery_jobs.translation": [[7, 1, 1, "", "detect_text_language_job"], [7, 1, 1, "", "fingerprint_compute_job"], [7, 1, 1, "", "fingerprint_job"], [7, 1, 1, "", "fingerprint_lookup_job"], [7, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [7, 1, 1, "", "translation_job"]], "graphai.api.celery_jobs.video": [[8, 1, 1, "", "detect_slides_job"], [8, 1, 1, "", "extract_audio_job"], [8, 1, 1, "", "fingerprint_job"], [8, 1, 1, "", "fingerprint_lookup_job"], [8, 1, 1, "", "get_audio_fingerprint_chain_list"], [8, 1, 1, "", "get_file_job"], [8, 1, 1, "", "get_slide_fingerprint_chain_list"], [8, 1, 1, "", "get_video_fingerprint_chain_list"], [8, 1, 1, "", "retrieve_url_job"]], "graphai.api.celery_jobs.voice": [[9, 1, 1, "", "detect_language_job"], [9, 1, 1, "", "fingerprint_job"], [9, 1, 1, "", "fingerprint_lookup_job"], [9, 1, 1, "", "get_audio_language_detection_task_chain"], [9, 1, 1, "", "language_lookup_job"], [9, 1, 1, "", "transcribe_job"]], "graphai.api.celery_tasks": [[11, 0, 0, "-", "common"], [12, 0, 0, "-", "completion"], [13, 0, 0, "-", "image"], [14, 0, 0, "-", "ontology"], [15, 0, 0, "-", "scraping"], [16, 0, 0, "-", "text"], [17, 0, 0, "-", "translation"], [18, 0, 0, "-", "video"], [19, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[11, 1, 1, "", "fingerprint_lookup_callback"], [11, 1, 1, "", "fingerprint_lookup_direct"], [11, 1, 1, "", "fingerprint_lookup_parallel"], [11, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [11, 1, 1, "", "format_api_results"], [11, 1, 1, "", "lookup_latest_allowed_date"]], "graphai.api.common": [[21, 0, 0, "-", "auth_utils"], [22, 0, 0, "-", "celery_tools"], [23, 0, 0, "-", "log"], [24, 0, 0, "-", "ontology"], [25, 0, 0, "-", "translation"], [26, 0, 0, "-", "video"]], "graphai.api.common.auth_utils": [[21, 2, 1, "", "Token"], [21, 2, 1, "", "TokenData"], [21, 2, 1, "", "User"], [21, 2, 1, "", "UserInDB"], [21, 1, 1, "", "authenticate_user"], [21, 1, 1, "", "generate_random_password_string"], [21, 1, 1, "", "get_password_hash"], [21, 1, 1, "", "get_user"], [21, 1, 1, "", "verify_password"]], "graphai.api.common.auth_utils.Token": [[21, 3, 1, "", "access_token"], [21, 3, 1, "", "token_type"]], "graphai.api.common.auth_utils.TokenData": [[21, 3, 1, "", "scopes"], [21, 3, 1, "", "username"]], "graphai.api.common.auth_utils.User": [[21, 3, 1, "", "disabled"], [21, 3, 1, "", "email"], [21, 3, 1, "", "full_name"], [21, 3, 1, "", "scopes"], [21, 3, 1, "", "username"]], "graphai.api.common.auth_utils.UserInDB": [[21, 3, 1, "", "hashed_password"]], "graphai.api.common.celery_tools": [[22, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[23, 1, 1, "", "log"]], "graphai.api.main": [[27, 1, 1, "", "lifespan"], [27, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[29, 0, 0, "-", "auth"], [30, 0, 0, "-", "completion"], [31, 0, 0, "-", "image"], [32, 0, 0, "-", "ontology"], [33, 0, 0, "-", "scraping"], [34, 0, 0, "-", "text"], [35, 0, 0, "-", "translation"], [36, 0, 0, "-", "video"], [37, 0, 0, "-", "voice"]], "graphai.api.routers.auth": [[29, 1, 1, "", "create_access_token"], [29, 1, 1, "", "get_active_user_dummy"], [29, 1, 1, "", "get_current_active_user"], [29, 1, 1, "", "get_current_user"], [29, 1, 1, "", "login_for_access_token"], [29, 1, 1, "", "read_users_me"]], "graphai.api.routers.completion": [[30, 1, 1, "", "choose_best_subset"]], "graphai.api.routers.image": [[31, 1, 1, "", "calculate_slide_fingerprint"], [31, 1, 1, "", "calculate_slide_fingerprint_status"], [31, 1, 1, "", "detect_ocr_language_status"], [31, 1, 1, "", "extract_text"], [31, 1, 1, "", "extract_text_status"]], "graphai.api.routers.ontology": [[32, 1, 1, "", "break_up_cluster"], [32, 1, 1, "", "cat_children"], [32, 1, 1, "", "cat_info"], [32, 1, 1, "", "cat_parent"], [32, 1, 1, "", "cluster_children"], [32, 1, 1, "", "cluster_parent"], [32, 1, 1, "", "compute_graph_cluster_nearest_category"], [32, 1, 1, "", "compute_graph_concept_nearest_category"], [32, 1, 1, "", "compute_graph_distance"], [32, 1, 1, "", "compute_graph_nearest_concept"], [32, 1, 1, "", "recompute_clusters"], [32, 1, 1, "", "recompute_clusters_status"], [32, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[33, 1, 1, "", "extract_page_content"], [33, 1, 1, "", "extract_page_content_status"], [33, 1, 1, "", "extract_sublinks"], [33, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.text": [[34, 1, 1, "", "keywords"], [34, 1, 1, "", "priority_test_text"], [34, 1, 1, "", "wikify"], [34, 1, 1, "", "wikify_graph_svg"], [34, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[35, 1, 1, "", "calculate_translation_text_fingerprint"], [35, 1, 1, "", "calculate_translation_text_fingerprint_status"], [35, 1, 1, "", "text_detect_language"], [35, 1, 1, "", "text_detect_language_status"], [35, 1, 1, "", "translate"], [35, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[36, 1, 1, "", "calculate_video_fingerprint"], [36, 1, 1, "", "calculate_video_fingerprint_status"], [36, 1, 1, "", "detect_slides"], [36, 1, 1, "", "detect_slides_status"], [36, 1, 1, "", "extract_audio"], [36, 1, 1, "", "extract_audio_status"], [36, 1, 1, "", "get_file"], [36, 1, 1, "", "get_retrieve_file_status"], [36, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[37, 1, 1, "", "calculate_audio_fingerprint"], [37, 1, 1, "", "calculate_audio_fingerprint_status"], [37, 1, 1, "", "detect_language"], [37, 1, 1, "", "detect_language_status"], [37, 1, 1, "", "transcribe"], [37, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[39, 0, 0, "-", "common"], [40, 0, 0, "-", "completion"], [41, 0, 0, "-", "image"], [42, 0, 0, "-", "ontology"], [43, 0, 0, "-", "scraping"], [44, 0, 0, "-", "text"], [45, 0, 0, "-", "translation"], [46, 0, 0, "-", "video"], [47, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[39, 2, 1, "", "FileRequest"], [39, 2, 1, "", "TaskIDResponse"], [39, 2, 1, "", "TaskStatusResponse"], [39, 2, 1, "", "TokenStatus"]], "graphai.api.schemas.common.FileRequest": [[39, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[39, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[39, 3, 1, "", "task_id"], [39, 3, 1, "", "task_name"], [39, 3, 1, "", "task_result"], [39, 3, 1, "", "task_status"]], "graphai.api.schemas.common.TokenStatus": [[39, 3, 1, "", "active"], [39, 3, 1, "", "fingerprinted"]], "graphai.api.schemas.completion": [[40, 2, 1, "", "SlideConceptsMap"], [40, 2, 1, "", "SlideSubsetRequest"], [40, 2, 1, "", "SlideSubsetResponse"]], "graphai.api.schemas.completion.SlideConceptsMap": [[40, 3, 1, "", "concepts"], [40, 3, 1, "", "number"]], "graphai.api.schemas.completion.SlideSubsetRequest": [[40, 3, 1, "", "coverage"], [40, 3, 1, "", "min_freq"], [40, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideSubsetResponse": [[40, 3, 1, "", "subset"]], "graphai.api.schemas.image": [[41, 2, 1, "", "DetectOCRLanguageResponse"], [41, 2, 1, "", "DetectOCRLanguageTaskResponse"], [41, 2, 1, "", "ExtractTextRequest"], [41, 2, 1, "", "ExtractTextResponse"], [41, 2, 1, "", "ExtractTextTaskResponse"], [41, 2, 1, "", "ImageFingerprintRequest"], [41, 2, 1, "", "ImageFingerprintResponse"], [41, 2, 1, "", "ImageFingerprintTaskResponse"], [41, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[41, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[41, 3, 1, "", "fresh"], [41, 3, 1, "", "language"], [41, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[41, 3, 1, "", "force"], [41, 3, 1, "", "method"], [41, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[41, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[41, 3, 1, "", "fresh"], [41, 3, 1, "", "language"], [41, 3, 1, "", "result"], [41, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[41, 3, 1, "", "force"], [41, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[41, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[41, 3, 1, "", "closest_token"], [41, 3, 1, "", "closest_token_origin"], [41, 3, 1, "", "fresh"], [41, 3, 1, "", "result"], [41, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[41, 3, 1, "", "method"], [41, 3, 1, "", "text"]], "graphai.api.schemas.ontology": [[42, 2, 1, "", "BreakUpClusterRequest"], [42, 2, 1, "", "BreakUpClustersClusterNumberResponse"], [42, 2, 1, "", "BreakUpClustersResponse"], [42, 2, 1, "", "CategoryChildrenRequest"], [42, 2, 1, "", "CategoryInfoRequest"], [42, 2, 1, "", "CategoryInfoResponse"], [42, 2, 1, "", "CategoryParentResponse"], [42, 2, 1, "", "ClusterInfoRequest"], [42, 2, 1, "", "GraphClusterNearestCategoryRequest"], [42, 2, 1, "", "GraphClusterNearestCategoryResponse"], [42, 2, 1, "", "GraphConceptNearestCategoryRequest"], [42, 2, 1, "", "GraphConceptNearestCategoryResponse"], [42, 2, 1, "", "GraphDistanceRequest"], [42, 2, 1, "", "GraphDistanceResponse"], [42, 2, 1, "", "GraphNearestCategoryRequest"], [42, 2, 1, "", "GraphNearestConceptRequest"], [42, 2, 1, "", "GraphNearestConceptResponse"], [42, 2, 1, "", "NearestCategoryElement"], [42, 2, 1, "", "NearestCategoryElementWithClusters"], [42, 2, 1, "", "NearestClusterElement"], [42, 2, 1, "", "OneConceptResponseElement"], [42, 2, 1, "", "RecomputeClustersRequest"], [42, 2, 1, "", "RecomputeClustersResponse"], [42, 2, 1, "", "RecomputeClustersTaskResponse"], [42, 2, 1, "", "TreeChildrenResponse"], [42, 2, 1, "", "TreeParentResponse"], [42, 2, 1, "", "TreeResponse"], [42, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.BreakUpClusterRequest": [[42, 3, 1, "", "cluster_id"], [42, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse": [[42, 3, 1, "", "clusters"], [42, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersResponse": [[42, 3, 1, "", "results"]], "graphai.api.schemas.ontology.CategoryChildrenRequest": [[42, 3, 1, "", "category_id"], [42, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.CategoryInfoRequest": [[42, 3, 1, "", "category_id"]], "graphai.api.schemas.ontology.CategoryInfoResponse": [[42, 3, 1, "", "category_id"], [42, 3, 1, "", "depth"], [42, 3, 1, "", "id"], [42, 3, 1, "", "name"]], "graphai.api.schemas.ontology.CategoryParentResponse": [[42, 3, 1, "", "parent"]], "graphai.api.schemas.ontology.ClusterInfoRequest": [[42, 3, 1, "", "cluster_id"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest": [[42, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse": [[42, 3, 1, "", "existing_label"], [42, 3, 1, "", "parent_category"], [42, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest": [[42, 3, 1, "", "return_clusters"], [42, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse": [[42, 3, 1, "", "existing_label"], [42, 3, 1, "", "parent_category"], [42, 3, 1, "", "scores"], [42, 3, 1, "", "valid"]], "graphai.api.schemas.ontology.GraphDistanceRequest": [[42, 3, 1, "", "avg"], [42, 3, 1, "", "coeffs"], [42, 3, 1, "", "src"], [42, 3, 1, "", "src_type"], [42, 3, 1, "", "tgt"], [42, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.GraphDistanceResponse": [[42, 3, 1, "", "sim"]], "graphai.api.schemas.ontology.GraphNearestCategoryRequest": [[42, 3, 1, "", "avg"], [42, 3, 1, "", "coeffs"], [42, 3, 1, "", "top_down_search"], [42, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptRequest": [[42, 3, 1, "", "src"], [42, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptResponse": [[42, 3, 1, "", "closest"], [42, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.NearestCategoryElement": [[42, 3, 1, "", "category_id"], [42, 3, 1, "", "rank"], [42, 3, 1, "", "score"]], "graphai.api.schemas.ontology.NearestCategoryElementWithClusters": [[42, 3, 1, "", "clusters"]], "graphai.api.schemas.ontology.NearestClusterElement": [[42, 3, 1, "", "cluster_id"], [42, 3, 1, "", "rank"], [42, 3, 1, "", "score"]], "graphai.api.schemas.ontology.OneConceptResponseElement": [[42, 3, 1, "", "id"], [42, 3, 1, "", "name"]], "graphai.api.schemas.ontology.RecomputeClustersRequest": [[42, 3, 1, "", "min_n"], [42, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.RecomputeClustersResponse": [[42, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.RecomputeClustersTaskResponse": [[42, 3, 1, "", "category_assignments"], [42, 3, 1, "", "impurity_count"], [42, 3, 1, "", "impurity_proportion"], [42, 3, 1, "", "results"], [42, 3, 1, "", "successful"]], "graphai.api.schemas.ontology.TreeChildrenResponse": [[42, 3, 1, "", "child_type"], [42, 3, 1, "", "children"]], "graphai.api.schemas.ontology.TreeParentResponse": [[42, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponse": [[42, 3, 1, "", "child_to_parent"]], "graphai.api.schemas.ontology.TreeResponseElem": [[42, 3, 1, "", "child_id"], [42, 3, 1, "", "parent_id"]], "graphai.api.schemas.scraping": [[43, 2, 1, "", "ExtractContentRequest"], [43, 2, 1, "", "ExtractContentResponse"], [43, 2, 1, "", "ExtractContentTaskResponse"], [43, 2, 1, "", "GetSublinksRequest"], [43, 2, 1, "", "GetSublinksResponse"], [43, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[43, 3, 1, "", "remove_headers"], [43, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[43, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[43, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[43, 3, 1, "", "force"], [43, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[43, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[43, 3, 1, "", "fresh"], [43, 3, 1, "", "status_msg"], [43, 3, 1, "", "sublinks"], [43, 3, 1, "", "successful"], [43, 3, 1, "", "token"], [43, 3, 1, "", "validated_url"]], "graphai.api.schemas.text": [[44, 2, 1, "", "KeywordsRequest"], [44, 2, 1, "", "WikifyFromKeywordsRequest"], [44, 2, 1, "", "WikifyFromRawTextRequest"], [44, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[44, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyFromKeywordsRequest": [[44, 3, 1, "", "keywords"]], "graphai.api.schemas.text.WikifyFromRawTextRequest": [[44, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[44, 2, 1, "", "Config"], [44, 3, 1, "", "GraphScore"], [44, 3, 1, "", "KeywordsScore"], [44, 3, 1, "", "LevenshteinScore"], [44, 3, 1, "", "MixedScore"], [44, 3, 1, "", "OntologyGlobalScore"], [44, 3, 1, "", "OntologyLocalScore"], [44, 3, 1, "", "PageID"], [44, 3, 1, "", "PageTitle"], [44, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[44, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[45, 2, 1, "", "TextDetectLanguageRequest"], [45, 2, 1, "", "TextDetectLanguageResponse"], [45, 2, 1, "", "TextDetectLanguageTaskResponse"], [45, 2, 1, "", "TextFingerprintResponse"], [45, 2, 1, "", "TextFingerprintTaskResponse"], [45, 2, 1, "", "TranslationRequest"], [45, 2, 1, "", "TranslationResponse"], [45, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[45, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[45, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[45, 3, 1, "", "language"], [45, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[45, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[45, 3, 1, "", "fresh"], [45, 3, 1, "", "result"], [45, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[45, 3, 1, "", "force"], [45, 3, 1, "", "source"], [45, 3, 1, "", "target"], [45, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[45, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[45, 3, 1, "", "device"], [45, 3, 1, "", "fresh"], [45, 3, 1, "", "result"], [45, 3, 1, "", "successful"], [45, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[46, 2, 1, "", "DetectSlidesRequest"], [46, 2, 1, "", "DetectSlidesResponse"], [46, 2, 1, "", "DetectSlidesTaskResponse"], [46, 2, 1, "", "ExtractAudioRequest"], [46, 2, 1, "", "ExtractAudioResponse"], [46, 2, 1, "", "ExtractAudioTaskResponse"], [46, 2, 1, "", "RetrieveURLRequest"], [46, 2, 1, "", "RetrieveURLResponse"], [46, 2, 1, "", "RetrieveURLResponseInner"], [46, 2, 1, "", "SlideTokenAndTimeStamp"], [46, 2, 1, "", "VideoFingerprintRequest"], [46, 2, 1, "", "VideoFingerprintResponse"], [46, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[46, 3, 1, "", "force"], [46, 3, 1, "", "language"], [46, 3, 1, "", "recalculate_cached"], [46, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[46, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[46, 3, 1, "", "fresh"], [46, 3, 1, "", "slide_tokens"], [46, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[46, 3, 1, "", "force"], [46, 3, 1, "", "recalculate_cached"], [46, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[46, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[46, 3, 1, "", "duration"], [46, 3, 1, "", "fresh"], [46, 3, 1, "", "successful"], [46, 3, 1, "", "token"], [46, 3, 1, "", "token_status"]], "graphai.api.schemas.video.RetrieveURLRequest": [[46, 3, 1, "", "force"], [46, 3, 1, "", "playlist"], [46, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[46, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[46, 3, 1, "", "fresh"], [46, 3, 1, "", "successful"], [46, 3, 1, "", "token"], [46, 3, 1, "", "token_size"], [46, 3, 1, "", "token_status"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[46, 3, 1, "", "timestamp"], [46, 3, 1, "", "token"], [46, 3, 1, "", "token_status"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[46, 3, 1, "", "force"], [46, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[46, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[46, 3, 1, "", "closest_token"], [46, 3, 1, "", "fresh"], [46, 3, 1, "", "result"], [46, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[47, 2, 1, "", "AudioDetectLanguageRequest"], [47, 2, 1, "", "AudioDetectLanguageResponse"], [47, 2, 1, "", "AudioDetectLanguageTaskResponse"], [47, 2, 1, "", "AudioFingerprintRequest"], [47, 2, 1, "", "AudioFingerprintResponse"], [47, 2, 1, "", "AudioFingerprintTaskResponse"], [47, 2, 1, "", "AudioTranscriptionRequest"], [47, 2, 1, "", "AudioTranscriptionResponse"], [47, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[47, 3, 1, "", "force"], [47, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[47, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[47, 3, 1, "", "fresh"], [47, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[47, 3, 1, "", "force"], [47, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[47, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[47, 3, 1, "", "closest_token"], [47, 3, 1, "", "closest_token_origin"], [47, 3, 1, "", "duration"], [47, 3, 1, "", "fresh"], [47, 3, 1, "", "result"], [47, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[47, 3, 1, "", "force"], [47, 3, 1, "", "force_lang"], [47, 3, 1, "", "strict"], [47, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[47, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[47, 3, 1, "", "fresh"], [47, 3, 1, "", "language"], [47, 3, 1, "", "subtitle_results"], [47, 3, 1, "", "transcript_results"]], "graphai.core": [[49, 0, 0, "-", "common"], [52, 0, 0, "-", "interfaces"], [56, 0, 0, "-", "ontology"], [59, 0, 0, "-", "scraping"], [61, 0, 0, "-", "text"], [67, 0, 0, "-", "translation"], [69, 0, 0, "-", "utils"], [78, 0, 0, "-", "video"]], "graphai.core.common": [[50, 0, 0, "-", "common_utils"], [51, 0, 0, "-", "fingerprinting"]], "graphai.core.common.common_utils": [[50, 1, 1, "", "copy_file_within_folder"], [50, 1, 1, "", "file_exists"], [50, 1, 1, "", "format_datetime_for_mysql"], [50, 1, 1, "", "get_current_datetime"], [50, 1, 1, "", "invert_dict"], [50, 1, 1, "", "make_sure_path_exists"], [50, 1, 1, "", "parse_mysql_datetime"], [50, 1, 1, "", "read_json_file"], [50, 1, 1, "", "read_text_file"], [50, 1, 1, "", "strtobool"], [50, 1, 1, "", "write_json_file"], [50, 1, 1, "", "write_text_file"]], "graphai.core.common.fingerprinting": [[51, 1, 1, "", "compare_decoded_fingerprints"], [51, 1, 1, "", "compare_encoded_fingerprints"], [51, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [51, 1, 1, "", "find_closest_fingerprint_for_list_from_list"], [51, 1, 1, "", "find_closest_fingerprint_from_list"], [51, 1, 1, "", "find_closest_image_fingerprint_from_list"], [51, 1, 1, "", "find_closest_text_fingerprint_from_list"], [51, 1, 1, "", "md5_video_or_audio"], [51, 1, 1, "", "perceptual_hash_audio"], [51, 1, 1, "", "perceptual_hash_image"], [51, 1, 1, "", "perceptual_hash_text"]], "graphai.core.interfaces": [[53, 0, 0, "-", "caching"], [54, 0, 0, "-", "celery_config"], [55, 0, 0, "-", "config"]], "graphai.core.interfaces.caching": [[53, 2, 1, "", "AudioDBCachingManager"], [53, 2, 1, "", "FingerprintParameters"], [53, 2, 1, "", "ScrapingDBCachingManager"], [53, 2, 1, "", "SlideDBCachingManager"], [53, 2, 1, "", "TextDBCachingManager"], [53, 2, 1, "", "VideoConfig"], [53, 2, 1, "", "VideoDBCachingManager"], [53, 1, 1, "", "create_symlink_between_paths"], [53, 1, 1, "", "delete_file"], [53, 1, 1, "", "get_audio_token_status"], [53, 1, 1, "", "get_image_token_status"], [53, 1, 1, "", "get_token_file_status"], [53, 1, 1, "", "get_video_token_status"], [53, 1, 1, "", "is_fingerprinted"]], "graphai.core.interfaces.caching.AudioDBCachingManager": [[53, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.FingerprintParameters": [[53, 4, 1, "", "get_min_sim_audio"], [53, 4, 1, "", "get_min_sim_image"], [53, 4, 1, "", "get_min_sim_text"], [53, 4, 1, "", "get_min_sim_video"], [53, 4, 1, "", "load_values"]], "graphai.core.interfaces.caching.ScrapingDBCachingManager": [[53, 4, 1, "", "get_details_using_origin"], [53, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.SlideDBCachingManager": [[53, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.TextDBCachingManager": [[53, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.VideoConfig": [[53, 4, 1, "", "concat_file_path"], [53, 4, 1, "", "create_symlink"], [53, 4, 1, "", "generate_filepath"], [53, 4, 1, "", "get_audio_dir"], [53, 4, 1, "", "get_image_dir"], [53, 4, 1, "", "get_root_dir"], [53, 4, 1, "", "get_transcript_dir"], [53, 4, 1, "", "get_video_dir"]], "graphai.core.interfaces.caching.VideoDBCachingManager": [[53, 4, 1, "", "init_db"]], "graphai.core.interfaces.celery_config": [[54, 2, 1, "", "BaseConfig"], [54, 2, 1, "", "DevelopmentConfig"], [54, 1, 1, "", "create_celery"], [54, 1, 1, "", "get_celery_task"], [54, 1, 1, "", "get_settings"], [54, 1, 1, "", "get_task_info"], [54, 1, 1, "", "route_task"]], "graphai.core.ontology": [[57, 0, 0, "-", "clustering"], [58, 0, 0, "-", "data"]], "graphai.core.ontology.clustering": [[57, 1, 1, "", "arithmetic_mean_laplacians"], [57, 1, 1, "", "assign_to_categories_using_existing"], [57, 1, 1, "", "cluster_and_reassign_outliers"], [57, 1, 1, "", "cluster_using_embedding"], [57, 1, 1, "", "combine_and_embed_laplacian"], [57, 1, 1, "", "combine_laplacians"], [57, 1, 1, "", "compute_all_graphs_from_scratch"], [57, 1, 1, "", "convert_cluster_labels_to_dict"], [57, 1, 1, "", "davies_bouldin_eval"], [57, 1, 1, "", "get_laplacian"], [57, 1, 1, "", "group_clustered"], [57, 1, 1, "", "normalize_features"], [57, 1, 1, "", "perform_PCA"], [57, 1, 1, "", "perform_constrained_agglomerative"], [57, 1, 1, "", "precompute_clustering_metric"], [57, 1, 1, "", "reassign_outliers"], [57, 1, 1, "", "spec_embed_on_laplacian"], [57, 1, 1, "", "sum_laplacians"], [57, 1, 1, "", "variance_ratio_eval"]], "graphai.core.ontology.data": [[58, 2, 1, "", "OntologyData"], [58, 1, 1, "", "adjusted_exp"], [58, 1, 1, "", "adjusted_exp_slope_1_point"], [58, 1, 1, "", "average_and_combine"], [58, 1, 1, "", "compute_average"], [58, 1, 1, "", "convert_to_csr_matrix"], [58, 1, 1, "", "create_graph_from_df"], [58, 1, 1, "", "db_results_to_pandas_df"], [58, 1, 1, "", "derive_col_to_col_graph"], [58, 1, 1, "", "get_col_to_col_dict"], [58, 1, 1, "", "get_id_dict"], [58, 1, 1, "", "make_adj_undirected"], [58, 1, 1, "", "remove_invalid_pairs"], [58, 1, 1, "", "return_chosen_indices"], [58, 1, 1, "", "to_ndarray_and_flatten"]], "graphai.core.ontology.data.OntologyData": [[58, 4, 1, "", "compute_category_anchors_using_references"], [58, 4, 1, "", "compute_precalculated_similarity_matrices"], [58, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [58, 4, 1, "", "get_category_anchor_pages"], [58, 4, 1, "", "get_category_category_similarity"], [58, 4, 1, "", "get_category_children"], [58, 4, 1, "", "get_category_closest_category"], [58, 4, 1, "", "get_category_cluster_list"], [58, 4, 1, "", "get_category_cluster_table"], [58, 4, 1, "", "get_category_concept_list"], [58, 4, 1, "", "get_category_concept_table"], [58, 4, 1, "", "get_category_parent"], [58, 4, 1, "", "get_category_to_category"], [58, 4, 1, "", "get_cluster_category_similarity"], [58, 4, 1, "", "get_cluster_children"], [58, 4, 1, "", "get_cluster_closest_category"], [58, 4, 1, "", "get_cluster_cluster_similarity"], [58, 4, 1, "", "get_cluster_concept_list"], [58, 4, 1, "", "get_cluster_concepts"], [58, 4, 1, "", "get_cluster_parent"], [58, 4, 1, "", "get_concept_category_similarity"], [58, 4, 1, "", "get_concept_closest_category"], [58, 4, 1, "", "get_concept_closest_cluster_of_category"], [58, 4, 1, "", "get_concept_closest_concept"], [58, 4, 1, "", "get_concept_cluster_similarity"], [58, 4, 1, "", "get_concept_concept_graphscore_table"], [58, 4, 1, "", "get_concept_concept_similarity"], [58, 4, 1, "", "get_concept_parent_category"], [58, 4, 1, "", "get_concept_parent_cluster"], [58, 4, 1, "", "get_custom_cluster_closest_category"], [58, 4, 1, "", "get_non_ontology_concept_names"], [58, 4, 1, "", "get_ontology_category_info"], [58, 4, 1, "", "get_ontology_category_names"], [58, 4, 1, "", "get_ontology_concept_names_table"], [58, 4, 1, "", "get_test_category_concept"], [58, 4, 1, "", "get_test_cluster_concept"], [58, 4, 1, "", "get_test_concept_names"], [58, 4, 1, "", "load_anchor_page_dict"], [58, 4, 1, "", "load_category_category"], [58, 4, 1, "", "load_category_concept"], [58, 4, 1, "", "load_concept_concept_graphscore"], [58, 4, 1, "", "load_data"], [58, 4, 1, "", "load_non_ontology_concept_names"], [58, 4, 1, "", "load_ontology_categories"], [58, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.scraping": [[60, 0, 0, "-", "scraping"]], "graphai.core.scraping.scraping": [[60, 1, 1, "", "check_url"], [60, 1, 1, "", "compare_strings"], [60, 1, 1, "", "create_base_url_token"], [60, 1, 1, "", "extract_text_from_url"], [60, 1, 1, "", "find_consecutive_runs"], [60, 1, 1, "", "find_edge_patterns"], [60, 1, 1, "", "find_repeated_patterns"], [60, 1, 1, "", "find_spaces"], [60, 1, 1, "", "generate_sublink_token"], [60, 1, 1, "", "get_sublinks"], [60, 1, 1, "", "initialize_data_dict"], [60, 1, 1, "", "initialize_url"], [60, 1, 1, "", "parse_page_type"], [60, 1, 1, "", "process_all_sublinks"], [60, 1, 1, "", "reconstruct_data_dict"], [60, 1, 1, "", "remove_headers"], [60, 1, 1, "", "remove_long_patterns"], [60, 1, 1, "", "shift_to_max_correlation"], [60, 1, 1, "", "string_circular_shift"]], "graphai.core.text": [[62, 0, 0, "-", "draw"], [63, 0, 0, "-", "graph"], [64, 0, 0, "-", "keywords"], [65, 0, 0, "-", "scores"], [66, 0, 0, "-", "wikisearch"]], "graphai.core.text.draw": [[62, 1, 1, "", "draw_graph"], [62, 1, 1, "", "draw_ontology"]], "graphai.core.text.graph": [[63, 2, 1, "", "ConceptsGraph"]], "graphai.core.text.graph.ConceptsGraph": [[63, 4, 1, "", "add_graph_score"], [63, 4, 1, "", "add_ontology_scores"], [63, 4, 1, "", "get_ontology_concepts"], [63, 4, 1, "", "load_from_db"]], "graphai.core.text.keywords": [[64, 1, 1, "", "extract_keywords"], [64, 1, 1, "", "rake_extract"], [64, 1, 1, "", "word_tokens"]], "graphai.core.text.scores": [[65, 1, 1, "", "aggregate_results"], [65, 1, 1, "", "compute_keywords_score"], [65, 1, 1, "", "compute_levenshtein_score"], [65, 1, 1, "", "compute_mixed_score"], [65, 1, 1, "", "compute_scores"], [65, 1, 1, "", "filter_results"]], "graphai.core.text.wikisearch": [[66, 1, 1, "", "search_elasticsearch"], [66, 1, 1, "", "search_wikipedia_api"], [66, 1, 1, "", "wikisearch"]], "graphai.core.translation": [[68, 0, 0, "-", "text_utils"]], "graphai.core.translation.text_utils": [[68, 2, 1, "", "TranslationModels"], [68, 1, 1, "", "compute_slide_tfidf_scores"], [68, 1, 1, "", "detect_text_language"], [68, 1, 1, "", "find_best_slide_subset"], [68, 1, 1, "", "find_set_cover"], [68, 1, 1, "", "generate_src_tgt_dict"], [68, 1, 1, "", "generate_translation_text_token"], [68, 1, 1, "", "md5_text"], [68, 1, 1, "", "translation_list_to_text"], [68, 1, 1, "", "translation_text_back_to_list"]], "graphai.core.translation.text_utils.TranslationModels": [[68, 4, 1, "", "get_device"], [68, 4, 1, "", "load_models"], [68, 4, 1, "", "translate"]], "graphai.core.utils": [[70, 0, 0, "-", "breadcrumb"], [71, 0, 0, "-", "progress_bar"], [72, 0, 0, "-", "text"], [75, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[70, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[70, 4, 1, "", "indent"], [70, 4, 1, "", "log"], [70, 4, 1, "", "outdent"], [70, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[71, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[71, 4, 1, "", "reset"], [71, 4, 1, "", "update"]], "graphai.core.utils.text": [[73, 0, 0, "-", "clean"], [74, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[73, 2, 1, "", "HTMLCleaner"], [73, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[73, 4, 1, "", "get_data"], [73, 4, 1, "", "handle_data"], [73, 4, 1, "", "handle_endtag"], [73, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[74, 2, 1, "", "Colors"], [74, 1, 1, "", "cprint"], [74, 1, 1, "", "log"], [74, 1, 1, "", "mkdir"], [74, 1, 1, "", "pprint"], [74, 1, 1, "", "read_json"], [74, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[74, 3, 1, "", "codes"], [74, 3, 1, "", "pref"], [74, 3, 1, "", "reset"]], "graphai.core.utils.time": [[76, 0, 0, "-", "date"], [77, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[76, 1, 1, "", "add_years"], [76, 1, 1, "", "now"], [76, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[77, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[77, 4, 1, "", "delta"], [77, 4, 1, "", "report"], [77, 4, 1, "", "reset"], [77, 4, 1, "", "tick"], [77, 4, 1, "", "total"]], "graphai.core.video": [[79, 0, 0, "-", "ocr"], [80, 0, 0, "-", "transcribe"], [81, 0, 0, "-", "video"]], "graphai.core.video.ocr": [[79, 2, 1, "", "GoogleOCRModel"]], "graphai.core.video.ocr.GoogleOCRModel": [[79, 4, 1, "", "establish_connection"], [79, 4, 1, "", "perform_ocr"], [79, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.video.transcribe": [[80, 2, 1, "", "WhisperTranscriptionModel"]], "graphai.core.video.transcribe.WhisperTranscriptionModel": [[80, 4, 1, "", "detect_audio_segment_lang_whisper"], [80, 4, 1, "", "get_silence_thresholds"], [80, 4, 1, "", "load_model_whisper"], [80, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.video.video": [[81, 2, 1, "", "NLPModels"], [81, 1, 1, "", "check_ocr_and_hash_thresholds"], [81, 1, 1, "", "compute_ocr_noise_level"], [81, 1, 1, "", "compute_ocr_threshold"], [81, 1, 1, "", "compute_video_ocr_transitions"], [81, 1, 1, "", "create_filename_using_url_format"], [81, 1, 1, "", "detect_audio_duration"], [81, 1, 1, "", "extract_audio_from_video"], [81, 1, 1, "", "extract_frames"], [81, 1, 1, "", "extract_media_segment"], [81, 1, 1, "", "frame_hash_similarity"], [81, 1, 1, "", "frame_ocr_distance"], [81, 1, 1, "", "frame_ocr_transition"], [81, 1, 1, "", "generate_audio_token"], [81, 1, 1, "", "generate_frame_sample_indices"], [81, 1, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [81, 1, 1, "", "generate_random_token"], [81, 1, 1, "", "generate_symbolic_token"], [81, 1, 1, "", "get_cosine_sim"], [81, 1, 1, "", "get_file_size"], [81, 1, 1, "", "get_ocr_colnames"], [81, 1, 1, "", "perform_probe"], [81, 1, 1, "", "perform_slow_audio_probe"], [81, 1, 1, "", "perform_tesseract_ocr"], [81, 1, 1, "", "read_json_gz_file"], [81, 1, 1, "", "read_txt_gz_file"], [81, 1, 1, "", "retrieve_file_from_generic_url"], [81, 1, 1, "", "retrieve_file_from_kaltura"], [81, 1, 1, "", "retrieve_file_from_url"], [81, 1, 1, "", "retrieve_file_from_youtube"], [81, 1, 1, "", "tesseract_ocr_or_get_cached"], [81, 1, 1, "", "write_txt_gz_file"]], "graphai.core.video.video.NLPModels": [[81, 4, 1, "", "get_text_word_vector"], [81, 4, 1, "", "get_text_word_vector_using_words"], [81, 4, 1, "", "get_words"], [81, 4, 1, "", "load_nlp_models"]], "graphai.pipelines": [[84, 0, 0, "-", "elasticsearch"], [87, 0, 0, "-", "investment"], [100, 0, 0, "-", "validation"], [104, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[86, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[86, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[88, 0, 0, "-", "aggregate_recent_past"], [89, 0, 0, "-", "check_unit"], [90, 0, 0, "-", "compute_fundraisers_units"], [91, 0, 0, "-", "compute_investors_units"], [92, 0, 0, "-", "compute_investors_units_2"], [93, 0, 0, "-", "compute_jaccard_index"], [94, 0, 0, "-", "concept_configuration"], [95, 0, 0, "-", "create_investments_graph"], [96, 0, 0, "-", "detect_fundraisers_concepts"], [97, 0, 0, "-", "main"], [98, 0, 0, "-", "parameters"], [99, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[88, 1, 1, "", "aggregate_recent_past"], [88, 1, 1, "", "aggregate_years"], [88, 1, 1, "", "compute_year_coefficients"], [88, 1, 1, "", "normalize_scores"], [88, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[89, 1, 1, "", "main"], [89, 1, 1, "", "show_matchmaking_chart_view"], [89, 1, 1, "", "show_matchmaking_list_view"], [89, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[90, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[91, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[92, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[93, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[94, 1, 1, "", "combine"], [94, 1, 1, "", "compute_affinities"], [94, 1, 1, "", "mix"], [94, 1, 1, "", "norm"], [94, 1, 1, "", "normalise"], [94, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[95, 1, 1, "", "create_investments_graph"], [95, 1, 1, "", "derive_yearly_data"], [95, 1, 1, "", "get_frs"], [95, 1, 1, "", "get_frs_fundraisers"], [95, 1, 1, "", "get_fundraisers_concepts"], [95, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[96, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[97, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[98, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[99, 1, 1, "", "base"], [99, 1, 1, "", "complete"], [99, 1, 1, "", "path"], [99, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "packag": [0, 1, 2, 10, 20, 28, 38, 48, 49, 52, 56, 59, 61, 67, 69, 72, 75, 78, 83, 84, 87, 100, 104], "subpackag": [0, 1, 48, 69, 83], "submodul": [0, 1, 2, 10, 20, 28, 38, 49, 52, 56, 59, 61, 67, 69, 72, 75, 78, 84, 87, 100, 104], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "celery_job": [2, 3, 4, 5, 6, 7, 8, 9], "common": [3, 11, 20, 21, 22, 23, 24, 25, 26, 39, 49, 50, 51], "modul": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 57, 58, 60, 62, 63, 64, 65, 66, 68, 70, 71, 73, 74, 76, 77, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108], "imag": [4, 13, 31, 41], "ontologi": [5, 14, 24, 32, 42, 56, 57, 58], "scrape": [6, 15, 33, 43, 59, 60], "translat": [7, 17, 25, 35, 45, 67, 68], "video": [8, 18, 26, 36, 46, 78, 79, 80, 81], "voic": [9, 19, 37, 47], "celery_task": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "complet": [12, 30, 40], "text": [16, 34, 44, 61, 62, 63, 64, 65, 66, 72, 73, 74], "auth_util": 21, "celery_tool": 22, "log": 23, "main": [27, 97], "router": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "auth": 29, "schema": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "core": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "common_util": 50, "fingerprint": 51, "interfac": [52, 53, 54, 55], "cach": 53, "celery_config": 54, "config": 55, "cluster": 57, "data": 58, "draw": 62, "graph": [63, 105, 106, 107, 108], "keyword": 64, "score": 65, "wikisearch": 66, "text_util": 68, "util": [69, 70, 71, 72, 73, 74, 75, 76, 77], "breadcrumb": 70, "progress_bar": 71, "clean": 73, "io": 74, "time": [75, 76, 77], "date": 76, "stopwatch": 77, "ocr": 79, "transcrib": 80, "definit": 82, "pipelin": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "elasticsearch": [84, 85, 86], "create_index": 85, "populate_index": 86, "invest": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "aggregate_recent_past": 88, "check_unit": 89, "compute_fundraisers_unit": 90, "compute_investors_unit": 91, "compute_investors_units_2": 92, "compute_jaccard_index": 93, "concept_configur": 94, "create_investments_graph": 95, "detect_fundraisers_concept": 96, "paramet": 98, "toy_exampl": 99, "valid": [100, 101, 102, 103], "1_old": 101, "2_new": 102, "3_slide": 103, "visualis": [104, 105, 106, 107, 108], "startup": [105, 106, 107, 108], "2": 106, "3": 107, "4": 108}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [48, "subpackages"], [69, "subpackages"], [83, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [10, "submodules"], [20, "submodules"], [28, "submodules"], [38, "submodules"], [49, "submodules"], [52, "submodules"], [56, "submodules"], [59, "submodules"], [61, "submodules"], [67, "submodules"], [69, "submodules"], [72, "submodules"], [75, "submodules"], [78, "submodules"], [84, "submodules"], [87, "submodules"], [100, "submodules"], [104, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_jobs package": [[2, "module-graphai.api.celery_jobs"]], "graphai.api.celery_jobs.common module": [[3, "module-graphai.api.celery_jobs.common"]], "graphai.api.celery_jobs.image module": [[4, "module-graphai.api.celery_jobs.image"]], "graphai.api.celery_jobs.ontology module": [[5, "module-graphai.api.celery_jobs.ontology"]], "graphai.api.celery_jobs.scraping module": [[6, "module-graphai.api.celery_jobs.scraping"]], "graphai.api.celery_jobs.translation module": [[7, "module-graphai.api.celery_jobs.translation"]], "graphai.api.celery_jobs.video module": [[8, "module-graphai.api.celery_jobs.video"]], "graphai.api.celery_jobs.voice module": [[9, "module-graphai.api.celery_jobs.voice"]], "graphai.api.celery_tasks package": [[10, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[11, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion module": [[12, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image module": [[13, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[14, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[15, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.text module": [[16, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[17, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[18, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[19, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[20, "module-graphai.api.common"]], "graphai.api.common.auth_utils module": [[21, "module-graphai.api.common.auth_utils"]], "graphai.api.common.celery_tools module": [[22, "module-graphai.api.common.celery_tools"]], "graphai.api.common.log module": [[23, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[24, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[25, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[26, "module-graphai.api.common.video"]], "graphai.api.main module": [[27, "module-graphai.api.main"]], "graphai.api.routers package": [[28, "module-graphai.api.routers"]], "graphai.api.routers.auth module": [[29, "module-graphai.api.routers.auth"]], "graphai.api.routers.completion module": [[30, "module-graphai.api.routers.completion"]], "graphai.api.routers.image module": [[31, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[32, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[33, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text module": [[34, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[35, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[36, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[37, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[38, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[39, "module-graphai.api.schemas.common"]], "graphai.api.schemas.completion module": [[40, "module-graphai.api.schemas.completion"]], "graphai.api.schemas.image module": [[41, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[42, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[43, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.text module": [[44, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[45, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[46, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[47, "module-graphai.api.schemas.voice"]], "graphai.core package": [[48, "module-graphai.core"]], "graphai.core.common package": [[49, "module-graphai.core.common"]], "graphai.core.common.common_utils module": [[50, "module-graphai.core.common.common_utils"]], "graphai.core.common.fingerprinting module": [[51, "module-graphai.core.common.fingerprinting"]], "graphai.core.interfaces package": [[52, "module-graphai.core.interfaces"]], "graphai.core.interfaces.caching module": [[53, "module-graphai.core.interfaces.caching"]], "graphai.core.interfaces.celery_config module": [[54, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.config module": [[55, "module-graphai.core.interfaces.config"]], "graphai.core.ontology package": [[56, "module-graphai.core.ontology"]], "graphai.core.ontology.clustering module": [[57, "module-graphai.core.ontology.clustering"]], "graphai.core.ontology.data module": [[58, "module-graphai.core.ontology.data"]], "graphai.core.scraping package": [[59, "module-graphai.core.scraping"]], "graphai.core.scraping.scraping module": [[60, "module-graphai.core.scraping.scraping"]], "graphai.core.text package": [[61, "module-graphai.core.text"]], "graphai.core.text.draw module": [[62, "module-graphai.core.text.draw"]], "graphai.core.text.graph module": [[63, "module-graphai.core.text.graph"]], "graphai.core.text.keywords module": [[64, "module-graphai.core.text.keywords"]], "graphai.core.text.scores module": [[65, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch module": [[66, "module-graphai.core.text.wikisearch"]], "graphai.core.translation package": [[67, "module-graphai.core.translation"]], "graphai.core.translation.text_utils module": [[68, "module-graphai.core.translation.text_utils"]], "graphai.core.utils package": [[69, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[70, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[71, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[72, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[73, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[74, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[75, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[76, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[77, "module-graphai.core.utils.time.stopwatch"]], "graphai.core.video package": [[78, "module-graphai.core.video"]], "graphai.core.video.ocr module": [[79, "module-graphai.core.video.ocr"]], "graphai.core.video.transcribe module": [[80, "module-graphai.core.video.transcribe"]], "graphai.core.video.video module": [[81, "module-graphai.core.video.video"]], "graphai.definitions module": [[82, "module-graphai.definitions"]], "graphai.pipelines package": [[83, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[84, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[85, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[86, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[87, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[88, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[89, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[90, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[91, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[92, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[93, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[94, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[95, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[96, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[97, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[98, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[99, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[100, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[101, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[102, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[103, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[104, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[105, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[106, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[107, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[108, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_jobs"], [3, "module-graphai.api.celery_jobs.common"], [4, "module-graphai.api.celery_jobs.image"], [5, "module-graphai.api.celery_jobs.ontology"], [6, "module-graphai.api.celery_jobs.scraping"], [7, "module-graphai.api.celery_jobs.translation"], [8, "module-graphai.api.celery_jobs.video"], [9, "module-graphai.api.celery_jobs.voice"], [10, "module-graphai.api.celery_tasks"], [11, "module-graphai.api.celery_tasks.common"], [12, "module-graphai.api.celery_tasks.completion"], [13, "module-graphai.api.celery_tasks.image"], [14, "module-graphai.api.celery_tasks.ontology"], [15, "module-graphai.api.celery_tasks.scraping"], [16, "module-graphai.api.celery_tasks.text"], [17, "module-graphai.api.celery_tasks.translation"], [18, "module-graphai.api.celery_tasks.video"], [19, "module-graphai.api.celery_tasks.voice"], [20, "module-graphai.api.common"], [21, "module-graphai.api.common.auth_utils"], [22, "module-graphai.api.common.celery_tools"], [23, "module-graphai.api.common.log"], [24, "module-graphai.api.common.ontology"], [25, "module-graphai.api.common.translation"], [26, "module-graphai.api.common.video"], [27, "module-graphai.api.main"], [28, "module-graphai.api.routers"], [29, "module-graphai.api.routers.auth"], [30, "module-graphai.api.routers.completion"], [31, "module-graphai.api.routers.image"], [32, "module-graphai.api.routers.ontology"], [33, "module-graphai.api.routers.scraping"], [34, "module-graphai.api.routers.text"], [35, "module-graphai.api.routers.translation"], [36, "module-graphai.api.routers.video"], [37, "module-graphai.api.routers.voice"], [38, "module-graphai.api.schemas"], [39, "module-graphai.api.schemas.common"], [40, "module-graphai.api.schemas.completion"], [41, "module-graphai.api.schemas.image"], [42, "module-graphai.api.schemas.ontology"], [43, "module-graphai.api.schemas.scraping"], [44, "module-graphai.api.schemas.text"], [45, "module-graphai.api.schemas.translation"], [46, "module-graphai.api.schemas.video"], [47, "module-graphai.api.schemas.voice"], [48, "module-graphai.core"], [49, "module-graphai.core.common"], [50, "module-graphai.core.common.common_utils"], [51, "module-graphai.core.common.fingerprinting"], [52, "module-graphai.core.interfaces"], [53, "module-graphai.core.interfaces.caching"], [54, "module-graphai.core.interfaces.celery_config"], [55, "module-graphai.core.interfaces.config"], [56, "module-graphai.core.ontology"], [57, "module-graphai.core.ontology.clustering"], [58, "module-graphai.core.ontology.data"], [59, "module-graphai.core.scraping"], [60, "module-graphai.core.scraping.scraping"], [61, "module-graphai.core.text"], [62, "module-graphai.core.text.draw"], [63, "module-graphai.core.text.graph"], [64, "module-graphai.core.text.keywords"], [65, "module-graphai.core.text.scores"], [66, "module-graphai.core.text.wikisearch"], [67, "module-graphai.core.translation"], [68, "module-graphai.core.translation.text_utils"], [69, "module-graphai.core.utils"], [70, "module-graphai.core.utils.breadcrumb"], [71, "module-graphai.core.utils.progress_bar"], [72, "module-graphai.core.utils.text"], [73, "module-graphai.core.utils.text.clean"], [74, "module-graphai.core.utils.text.io"], [75, "module-graphai.core.utils.time"], [76, "module-graphai.core.utils.time.date"], [77, "module-graphai.core.utils.time.stopwatch"], [78, "module-graphai.core.video"], [79, "module-graphai.core.video.ocr"], [80, "module-graphai.core.video.transcribe"], [81, "module-graphai.core.video.video"], [82, "module-graphai.definitions"], [83, "module-graphai.pipelines"], [84, "module-graphai.pipelines.elasticsearch"], [86, "module-graphai.pipelines.elasticsearch.populate_index"], [87, "module-graphai.pipelines.investment"], [88, "module-graphai.pipelines.investment.aggregate_recent_past"], [89, "module-graphai.pipelines.investment.check_unit"], [90, "module-graphai.pipelines.investment.compute_fundraisers_units"], [91, "module-graphai.pipelines.investment.compute_investors_units"], [92, "module-graphai.pipelines.investment.compute_investors_units_2"], [93, "module-graphai.pipelines.investment.compute_jaccard_index"], [94, "module-graphai.pipelines.investment.concept_configuration"], [95, "module-graphai.pipelines.investment.create_investments_graph"], [96, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [97, "module-graphai.pipelines.investment.main"], [98, "module-graphai.pipelines.investment.parameters"], [99, "module-graphai.pipelines.investment.toy_example"], [100, "module-graphai.pipelines.validation"], [104, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_jobs": [[2, "module-graphai.api.celery_jobs"]], "direct_lookup_generic_job() (in module graphai.api.celery_jobs.common)": [[3, "graphai.api.celery_jobs.common.direct_lookup_generic_job"]], "graphai.api.celery_jobs.common": [[3, "module-graphai.api.celery_jobs.common"]], "fingerprint_job() (in module graphai.api.celery_jobs.image)": [[4, "graphai.api.celery_jobs.image.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.image)": [[4, "graphai.api.celery_jobs.image.fingerprint_lookup_job"]], "graphai.api.celery_jobs.image": [[4, "module-graphai.api.celery_jobs.image"]], "ocr_job() (in module graphai.api.celery_jobs.image)": [[4, "graphai.api.celery_jobs.image.ocr_job"]], "breakup_cluster_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.breakup_cluster_job"]], "category_children_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.category_children_job"]], "category_info_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.category_info_job"]], "category_parent_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.category_parent_job"]], "cluster_children_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.cluster_children_job"]], "cluster_nearest_category_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.cluster_nearest_category_job"]], "cluster_parent_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.cluster_parent_job"]], "concept_nearest_category_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.concept_nearest_category_job"]], "concept_nearest_concept_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.concept_nearest_concept_job"]], "graph_distance_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.graph_distance_job"]], "graphai.api.celery_jobs.ontology": [[5, "module-graphai.api.celery_jobs.ontology"]], "recompute_clusters_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.recompute_clusters_job"]], "tree_job() (in module graphai.api.celery_jobs.ontology)": [[5, "graphai.api.celery_jobs.ontology.tree_job"]], "extract_content_job() (in module graphai.api.celery_jobs.scraping)": [[6, "graphai.api.celery_jobs.scraping.extract_content_job"]], "extract_sublinks_job() (in module graphai.api.celery_jobs.scraping)": [[6, "graphai.api.celery_jobs.scraping.extract_sublinks_job"]], "graphai.api.celery_jobs.scraping": [[6, "module-graphai.api.celery_jobs.scraping"]], "sublink_lookup_job() (in module graphai.api.celery_jobs.scraping)": [[6, "graphai.api.celery_jobs.scraping.sublink_lookup_job"]], "detect_text_language_job() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.detect_text_language_job"]], "fingerprint_compute_job() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.fingerprint_lookup_job"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.celery_jobs.translation": [[7, "module-graphai.api.celery_jobs.translation"]], "translation_job() (in module graphai.api.celery_jobs.translation)": [[7, "graphai.api.celery_jobs.translation.translation_job"]], "detect_slides_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.detect_slides_job"]], "extract_audio_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.extract_audio_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.fingerprint_lookup_job"]], "get_audio_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.get_audio_fingerprint_chain_list"]], "get_file_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.get_file_job"]], "get_slide_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.get_slide_fingerprint_chain_list"]], "get_video_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.get_video_fingerprint_chain_list"]], "graphai.api.celery_jobs.video": [[8, "module-graphai.api.celery_jobs.video"]], "retrieve_url_job() (in module graphai.api.celery_jobs.video)": [[8, "graphai.api.celery_jobs.video.retrieve_url_job"]], "detect_language_job() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.detect_language_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.fingerprint_lookup_job"]], "get_audio_language_detection_task_chain() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.get_audio_language_detection_task_chain"]], "graphai.api.celery_jobs.voice": [[9, "module-graphai.api.celery_jobs.voice"]], "language_lookup_job() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.language_lookup_job"]], "transcribe_job() (in module graphai.api.celery_jobs.voice)": [[9, "graphai.api.celery_jobs.voice.transcribe_job"]], "graphai.api.celery_tasks": [[10, "module-graphai.api.celery_tasks"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[11, "module-graphai.api.celery_tasks.common"]], "lookup_latest_allowed_date() (in module graphai.api.celery_tasks.common)": [[11, "graphai.api.celery_tasks.common.lookup_latest_allowed_date"]], "graphai.api.celery_tasks.completion": [[12, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image": [[13, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[14, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[15, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.text": [[16, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[17, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[18, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[19, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[20, "module-graphai.api.common"]], "token (class in graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.Token"]], "tokendata (class in graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.TokenData"]], "user (class in graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.User"]], "userindb (class in graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.UserInDB"]], "access_token (graphai.api.common.auth_utils.token attribute)": [[21, "graphai.api.common.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.authenticate_user"]], "disabled (graphai.api.common.auth_utils.user attribute)": [[21, "graphai.api.common.auth_utils.User.disabled"]], "email (graphai.api.common.auth_utils.user attribute)": [[21, "graphai.api.common.auth_utils.User.email"]], "full_name (graphai.api.common.auth_utils.user attribute)": [[21, "graphai.api.common.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.get_password_hash"]], "get_user() (in module graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.get_user"]], "graphai.api.common.auth_utils": [[21, "module-graphai.api.common.auth_utils"]], "hashed_password (graphai.api.common.auth_utils.userindb attribute)": [[21, "graphai.api.common.auth_utils.UserInDB.hashed_password"]], "scopes (graphai.api.common.auth_utils.tokendata attribute)": [[21, "graphai.api.common.auth_utils.TokenData.scopes"]], "scopes (graphai.api.common.auth_utils.user attribute)": [[21, "graphai.api.common.auth_utils.User.scopes"]], "token_type (graphai.api.common.auth_utils.token attribute)": [[21, "graphai.api.common.auth_utils.Token.token_type"]], "username (graphai.api.common.auth_utils.tokendata attribute)": [[21, "graphai.api.common.auth_utils.TokenData.username"]], "username (graphai.api.common.auth_utils.user attribute)": [[21, "graphai.api.common.auth_utils.User.username"]], "verify_password() (in module graphai.api.common.auth_utils)": [[21, "graphai.api.common.auth_utils.verify_password"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[22, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[22, "module-graphai.api.common.celery_tools"]], "graphai.api.common.log": [[23, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[23, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[24, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[25, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[26, "module-graphai.api.common.video"]], "graphai.api.main": [[27, "module-graphai.api.main"]], "lifespan() (in module graphai.api.main)": [[27, "graphai.api.main.lifespan"]], "redirect_docs() (in module graphai.api.main)": [[27, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[28, "module-graphai.api.routers"]], "create_access_token() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.create_access_token"]], "get_active_user_dummy() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.get_current_active_user"]], "get_current_user() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.get_current_user"]], "graphai.api.routers.auth": [[29, "module-graphai.api.routers.auth"]], "login_for_access_token() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.login_for_access_token"]], "read_users_me() (in module graphai.api.routers.auth)": [[29, "graphai.api.routers.auth.read_users_me"]], "choose_best_subset() (in module graphai.api.routers.completion)": [[30, "graphai.api.routers.completion.choose_best_subset"]], "graphai.api.routers.completion": [[30, "module-graphai.api.routers.completion"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[31, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[31, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[31, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[31, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[31, "graphai.api.routers.image.extract_text_status"]], "graphai.api.routers.image": [[31, "module-graphai.api.routers.image"]], "break_up_cluster() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.break_up_cluster"]], "cat_children() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.cat_children"]], "cat_info() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.cat_info"]], "cat_parent() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.cat_parent"]], "cluster_children() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.cluster_children"]], "cluster_parent() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.cluster_parent"]], "compute_graph_cluster_nearest_category() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.compute_graph_cluster_nearest_category"]], "compute_graph_concept_nearest_category() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.compute_graph_concept_nearest_category"]], "compute_graph_distance() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.compute_graph_distance"]], "compute_graph_nearest_concept() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.compute_graph_nearest_concept"]], "graphai.api.routers.ontology": [[32, "module-graphai.api.routers.ontology"]], "recompute_clusters() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.recompute_clusters"]], "recompute_clusters_status() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.recompute_clusters_status"]], "tree() (in module graphai.api.routers.ontology)": [[32, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[33, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[33, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[33, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[33, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[33, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text": [[34, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[34, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[34, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[34, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[34, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[34, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "graphai.api.routers.translation": [[35, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[35, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.get_retrieve_file_status"]], "graphai.api.routers.video": [[36, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[36, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.detect_language_status"]], "graphai.api.routers.voice": [[37, "module-graphai.api.routers.voice"]], "transcribe() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[37, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[38, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[39, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[39, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[39, "graphai.api.schemas.common.TaskStatusResponse"]], "tokenstatus (class in graphai.api.schemas.common)": [[39, "graphai.api.schemas.common.TokenStatus"]], "active (graphai.api.schemas.common.tokenstatus attribute)": [[39, "graphai.api.schemas.common.TokenStatus.active"]], "fingerprinted (graphai.api.schemas.common.tokenstatus attribute)": [[39, "graphai.api.schemas.common.TokenStatus.fingerprinted"]], "graphai.api.schemas.common": [[39, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[39, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[39, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[39, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[39, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[39, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[39, "graphai.api.schemas.common.FileRequest.token"]], "slideconceptsmap (class in graphai.api.schemas.completion)": [[40, "graphai.api.schemas.completion.SlideConceptsMap"]], "slidesubsetrequest (class in graphai.api.schemas.completion)": [[40, "graphai.api.schemas.completion.SlideSubsetRequest"]], "slidesubsetresponse (class in graphai.api.schemas.completion)": [[40, "graphai.api.schemas.completion.SlideSubsetResponse"]], "concepts (graphai.api.schemas.completion.slideconceptsmap attribute)": [[40, "graphai.api.schemas.completion.SlideConceptsMap.concepts"]], "coverage (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[40, "graphai.api.schemas.completion.SlideSubsetRequest.coverage"]], "graphai.api.schemas.completion": [[40, "module-graphai.api.schemas.completion"]], "min_freq (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[40, "graphai.api.schemas.completion.SlideSubsetRequest.min_freq"]], "number (graphai.api.schemas.completion.slideconceptsmap attribute)": [[40, "graphai.api.schemas.completion.SlideConceptsMap.number"]], "slides (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[40, "graphai.api.schemas.completion.SlideSubsetRequest.slides"]], "subset (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[40, "graphai.api.schemas.completion.SlideSubsetResponse.subset"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[41, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[41, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[41, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[41, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[41, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[41, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[41, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[41, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[41, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[41, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[41, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[41, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[41, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[41, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[41, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[41, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[41, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "breakupclusterrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.BreakUpClusterRequest"]], "breakupclustersclusternumberresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse"]], "breakupclustersresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.BreakUpClustersResponse"]], "categorychildrenrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.CategoryChildrenRequest"]], "categoryinforequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.CategoryInfoRequest"]], "categoryinforesponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.CategoryInfoResponse"]], "categoryparentresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.CategoryParentResponse"]], "clusterinforequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.ClusterInfoRequest"]], "graphclusternearestcategoryrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest"]], "graphclusternearestcategoryresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse"]], "graphconceptnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest"]], "graphconceptnearestcategoryresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse"]], "graphdistancerequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest"]], "graphdistanceresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphDistanceResponse"]], "graphnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphNearestCategoryRequest"]], "graphnearestconceptrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptRequest"]], "graphnearestconceptresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptResponse"]], "nearestcategoryelement (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.NearestCategoryElement"]], "nearestcategoryelementwithclusters (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters"]], "nearestclusterelement (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.NearestClusterElement"]], "oneconceptresponseelement (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.OneConceptResponseElement"]], "recomputeclustersrequest (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.RecomputeClustersRequest"]], "recomputeclustersresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.RecomputeClustersResponse"]], "recomputeclusterstaskresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse"]], "treechildrenresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.TreeChildrenResponse"]], "treeparentresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.TreeParentResponse"]], "treeresponse (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[42, "graphai.api.schemas.ontology.TreeResponseElem"]], "avg (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.avg"]], "avg (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.avg"]], "category_assignments (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.category_assignments"]], "category_id (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[42, "graphai.api.schemas.ontology.CategoryChildrenRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforequest attribute)": [[42, "graphai.api.schemas.ontology.CategoryInfoRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[42, "graphai.api.schemas.ontology.CategoryInfoResponse.category_id"]], "category_id (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[42, "graphai.api.schemas.ontology.NearestCategoryElement.category_id"]], "child_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[42, "graphai.api.schemas.ontology.TreeResponseElem.child_id"]], "child_to_parent (graphai.api.schemas.ontology.treeresponse attribute)": [[42, "graphai.api.schemas.ontology.TreeResponse.child_to_parent"]], "child_type (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[42, "graphai.api.schemas.ontology.TreeChildrenResponse.child_type"]], "children (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[42, "graphai.api.schemas.ontology.TreeChildrenResponse.children"]], "closest (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptResponse.closest"]], "cluster_id (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[42, "graphai.api.schemas.ontology.BreakUpClusterRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.clusterinforequest attribute)": [[42, "graphai.api.schemas.ontology.ClusterInfoRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[42, "graphai.api.schemas.ontology.NearestClusterElement.cluster_id"]], "clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[42, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.clusters"]], "clusters (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[42, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.clusters"]], "coeffs (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.coeffs"]], "coeffs (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.coeffs"]], "depth (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[42, "graphai.api.schemas.ontology.CategoryInfoResponse.depth"]], "existing_label (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.existing_label"]], "existing_label (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.existing_label"]], "graphai.api.schemas.ontology": [[42, "module-graphai.api.schemas.ontology"]], "id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[42, "graphai.api.schemas.ontology.CategoryInfoResponse.id"]], "id (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[42, "graphai.api.schemas.ontology.OneConceptResponseElement.id"]], "impurity_count (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_count"]], "impurity_proportion (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_proportion"]], "min_n (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersRequest.min_n"]], "n_clusters (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[42, "graphai.api.schemas.ontology.BreakUpClusterRequest.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[42, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersRequest.n_clusters"]], "name (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[42, "graphai.api.schemas.ontology.CategoryInfoResponse.name"]], "name (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[42, "graphai.api.schemas.ontology.OneConceptResponseElement.name"]], "parent (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[42, "graphai.api.schemas.ontology.CategoryParentResponse.parent"]], "parent_category (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.parent_category"]], "parent_category (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.parent_category"]], "parent_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[42, "graphai.api.schemas.ontology.TreeResponseElem.parent_id"]], "rank (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[42, "graphai.api.schemas.ontology.NearestCategoryElement.rank"]], "rank (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[42, "graphai.api.schemas.ontology.NearestClusterElement.rank"]], "results (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[42, "graphai.api.schemas.ontology.BreakUpClustersResponse.results"]], "results (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.results"]], "return_clusters (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.return_clusters"]], "score (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[42, "graphai.api.schemas.ontology.NearestCategoryElement.score"]], "score (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[42, "graphai.api.schemas.ontology.NearestClusterElement.score"]], "scores (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptResponse.scores"]], "sim (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceResponse.sim"]], "src (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.src"]], "src (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptRequest.src"]], "src_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.src_type"]], "successful (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.successful"]], "task_result (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[42, "graphai.api.schemas.ontology.RecomputeClustersResponse.task_result"]], "task_result (graphai.api.schemas.ontology.treeparentresponse attribute)": [[42, "graphai.api.schemas.ontology.TreeParentResponse.task_result"]], "tgt (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt"]], "tgt_type (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[42, "graphai.api.schemas.ontology.CategoryChildrenRequest.tgt_type"]], "tgt_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[42, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt_type"]], "top_down_search (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_down_search"]], "top_n (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_n"]], "top_n (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[42, "graphai.api.schemas.ontology.GraphNearestConceptRequest.top_n"]], "valid (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[42, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.valid"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[43, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[43, "module-graphai.api.schemas.scraping"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[43, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[43, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[43, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[43, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[44, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyfromkeywordsrequest (class in graphai.api.schemas.text)": [[44, "graphai.api.schemas.text.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.schemas.text)": [[44, "graphai.api.schemas.text.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[44, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[44, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[44, "module-graphai.api.schemas.text"]], "keywords (graphai.api.schemas.text.wikifyfromkeywordsrequest attribute)": [[44, "graphai.api.schemas.text.WikifyFromKeywordsRequest.keywords"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[44, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyfromrawtextrequest attribute)": [[44, "graphai.api.schemas.text.WikifyFromRawTextRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[44, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse"]], "device (graphai.api.schemas.translation.translationtaskresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse.device"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[45, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[45, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[45, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[45, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[45, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[45, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[45, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[45, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[45, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[45, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[45, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[45, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[45, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[45, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[46, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[46, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[46, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[46, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[46, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[46, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[46, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[46, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "recalculate_cached (graphai.api.schemas.video.detectslidesrequest attribute)": [[46, "graphai.api.schemas.video.DetectSlidesRequest.recalculate_cached"]], "recalculate_cached (graphai.api.schemas.video.extractaudiorequest attribute)": [[46, "graphai.api.schemas.video.ExtractAudioRequest.recalculate_cached"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[46, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[46, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[46, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[46, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[46, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[46, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[46, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[46, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "token_size (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner.token_size"]], "token_status (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[46, "graphai.api.schemas.video.ExtractAudioTaskResponse.token_status"]], "token_status (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[46, "graphai.api.schemas.video.RetrieveURLResponseInner.token_status"]], "token_status (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[46, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token_status"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[46, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[47, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[47, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "strict (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionRequest.strict"]], "subtitle_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_results"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[47, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[47, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[47, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_results"]], "graphai.core": [[48, "module-graphai.core"]], "graphai.core.common": [[49, "module-graphai.core.common"]], "copy_file_within_folder() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.copy_file_within_folder"]], "file_exists() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[50, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[50, "graphai.core.common.common_utils.write_text_file"]], "compare_decoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.compare_encoded_fingerprints"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_for_list_from_list() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.find_closest_fingerprint_for_list_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.find_closest_image_fingerprint_from_list"]], "find_closest_text_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.find_closest_text_fingerprint_from_list"]], "graphai.core.common.fingerprinting": [[51, "module-graphai.core.common.fingerprinting"]], "md5_video_or_audio() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.fingerprinting)": [[51, "graphai.core.common.fingerprinting.perceptual_hash_text"]], "graphai.core.interfaces": [[52, "module-graphai.core.interfaces"]], "audiodbcachingmanager (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.AudioDBCachingManager"]], "fingerprintparameters (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.delete_file"]], "generate_filepath() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.get_audio_dir"]], "get_audio_token_status() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.get_audio_token_status"]], "get_details_using_origin() (graphai.core.interfaces.caching.scrapingdbcachingmanager method)": [[53, "graphai.core.interfaces.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.get_image_dir"]], "get_image_token_status() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.get_image_token_status"]], "get_min_sim_audio() (graphai.core.interfaces.caching.fingerprintparameters method)": [[53, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.interfaces.caching.fingerprintparameters method)": [[53, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.interfaces.caching.fingerprintparameters method)": [[53, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.interfaces.caching.fingerprintparameters method)": [[53, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.get_root_dir"]], "get_token_file_status() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.get_token_file_status"]], "get_transcript_dir() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.interfaces.caching.videoconfig method)": [[53, "graphai.core.interfaces.caching.VideoConfig.get_video_dir"]], "get_video_token_status() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.get_video_token_status"]], "graphai.core.interfaces.caching": [[53, "module-graphai.core.interfaces.caching"]], "init_db() (graphai.core.interfaces.caching.audiodbcachingmanager method)": [[53, "graphai.core.interfaces.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.scrapingdbcachingmanager method)": [[53, "graphai.core.interfaces.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.slidedbcachingmanager method)": [[53, "graphai.core.interfaces.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.textdbcachingmanager method)": [[53, "graphai.core.interfaces.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.videodbcachingmanager method)": [[53, "graphai.core.interfaces.caching.VideoDBCachingManager.init_db"]], "is_fingerprinted() (in module graphai.core.interfaces.caching)": [[53, "graphai.core.interfaces.caching.is_fingerprinted"]], "load_values() (graphai.core.interfaces.caching.fingerprintparameters method)": [[53, "graphai.core.interfaces.caching.FingerprintParameters.load_values"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[54, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[54, "graphai.core.interfaces.celery_config.route_task"]], "graphai.core.interfaces.config": [[55, "module-graphai.core.interfaces.config"]], "graphai.core.ontology": [[56, "module-graphai.core.ontology"]], "arithmetic_mean_laplacians() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.get_laplacian"]], "graphai.core.ontology.clustering": [[57, "module-graphai.core.ontology.clustering"]], "group_clustered() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.group_clustered"]], "normalize_features() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.normalize_features"]], "perform_pca() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.ontology.clustering)": [[57, "graphai.core.ontology.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.OntologyData"]], "adjusted_exp() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.average_and_combine"]], "compute_average() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.compute_average"]], "compute_category_anchors_using_references() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.derive_col_to_col_graph"]], "get_category_anchor_pages() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_anchor_pages"]], "get_category_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category"]], "get_cluster_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.get_col_to_col_dict"]], "get_concept_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_cluster_of_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_closest_cluster_of_category"]], "get_concept_closest_concept() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept"]], "get_concept_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_concept_similarity"]], "get_concept_parent_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category"]], "get_id_dict() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_ontology_concept_names_table"]], "get_test_category_concept() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.get_test_concept_names"]], "graphai.core.ontology.data": [[58, "module-graphai.core.ontology.data"]], "load_anchor_page_dict() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[58, "graphai.core.ontology.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.ontology.data)": [[58, "graphai.core.ontology.data.to_ndarray_and_flatten"]], "graphai.core.scraping": [[59, "module-graphai.core.scraping"]], "check_url() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.check_url"]], "compare_strings() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.get_sublinks"]], "graphai.core.scraping.scraping": [[60, "module-graphai.core.scraping.scraping"]], "initialize_data_dict() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.scraping.scraping)": [[60, "graphai.core.scraping.scraping.string_circular_shift"]], "graphai.core.text": [[61, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[62, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[62, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[62, "module-graphai.core.text.draw"]], "conceptsgraph (class in graphai.core.text.graph)": [[63, "graphai.core.text.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.text.graph.conceptsgraph method)": [[63, "graphai.core.text.graph.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.graph.conceptsgraph method)": [[63, "graphai.core.text.graph.ConceptsGraph.add_ontology_scores"]], "get_ontology_concepts() (graphai.core.text.graph.conceptsgraph method)": [[63, "graphai.core.text.graph.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text.graph": [[63, "module-graphai.core.text.graph"]], "load_from_db() (graphai.core.text.graph.conceptsgraph method)": [[63, "graphai.core.text.graph.ConceptsGraph.load_from_db"]], "extract_keywords() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.extract_keywords"]], "graphai.core.text.keywords": [[64, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[64, "graphai.core.text.keywords.word_tokens"]], "aggregate_results() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.aggregate_results"]], "compute_keywords_score() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.compute_keywords_score"]], "compute_levenshtein_score() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.compute_levenshtein_score"]], "compute_mixed_score() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.compute_mixed_score"]], "compute_scores() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.compute_scores"]], "filter_results() (in module graphai.core.text.scores)": [[65, "graphai.core.text.scores.filter_results"]], "graphai.core.text.scores": [[65, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch": [[66, "module-graphai.core.text.wikisearch"]], "search_elasticsearch() (in module graphai.core.text.wikisearch)": [[66, "graphai.core.text.wikisearch.search_elasticsearch"]], "search_wikipedia_api() (in module graphai.core.text.wikisearch)": [[66, "graphai.core.text.wikisearch.search_wikipedia_api"]], "wikisearch() (in module graphai.core.text.wikisearch)": [[66, "graphai.core.text.wikisearch.wikisearch"]], "graphai.core.translation": [[67, "module-graphai.core.translation"]], "translationmodels (class in graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.TranslationModels"]], "compute_slide_tfidf_scores() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.compute_slide_tfidf_scores"]], "detect_text_language() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.detect_text_language"]], "find_best_slide_subset() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.find_set_cover"]], "generate_src_tgt_dict() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.generate_src_tgt_dict"]], "generate_translation_text_token() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.translation.text_utils.translationmodels method)": [[68, "graphai.core.translation.text_utils.TranslationModels.get_device"]], "graphai.core.translation.text_utils": [[68, "module-graphai.core.translation.text_utils"]], "load_models() (graphai.core.translation.text_utils.translationmodels method)": [[68, "graphai.core.translation.text_utils.TranslationModels.load_models"]], "md5_text() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.md5_text"]], "translate() (graphai.core.translation.text_utils.translationmodels method)": [[68, "graphai.core.translation.text_utils.TranslationModels.translate"]], "translation_list_to_text() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.translation_list_to_text"]], "translation_text_back_to_list() (in module graphai.core.translation.text_utils)": [[68, "graphai.core.translation.text_utils.translation_text_back_to_list"]], "graphai.core.utils": [[69, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[70, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[70, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[70, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[70, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[70, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[70, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[71, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[71, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[71, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[71, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[72, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[73, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[73, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[73, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[73, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[73, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[73, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[73, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[74, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[74, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[74, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[74, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[74, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[75, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[76, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[76, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[76, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[76, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[77, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[77, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.core.video": [[78, "module-graphai.core.video"]], "googleocrmodel (class in graphai.core.video.ocr)": [[79, "graphai.core.video.ocr.GoogleOCRModel"]], "establish_connection() (graphai.core.video.ocr.googleocrmodel method)": [[79, "graphai.core.video.ocr.GoogleOCRModel.establish_connection"]], "graphai.core.video.ocr": [[79, "module-graphai.core.video.ocr"]], "perform_ocr() (graphai.core.video.ocr.googleocrmodel method)": [[79, "graphai.core.video.ocr.GoogleOCRModel.perform_ocr"]], "wait_for_ocr_results() (graphai.core.video.ocr.googleocrmodel method)": [[79, "graphai.core.video.ocr.GoogleOCRModel.wait_for_ocr_results"]], "whispertranscriptionmodel (class in graphai.core.video.transcribe)": [[80, "graphai.core.video.transcribe.WhisperTranscriptionModel"]], "detect_audio_segment_lang_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[80, "graphai.core.video.transcribe.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "get_silence_thresholds() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[80, "graphai.core.video.transcribe.WhisperTranscriptionModel.get_silence_thresholds"]], "graphai.core.video.transcribe": [[80, "module-graphai.core.video.transcribe"]], "load_model_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[80, "graphai.core.video.transcribe.WhisperTranscriptionModel.load_model_whisper"]], "transcribe_audio_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[80, "graphai.core.video.transcribe.WhisperTranscriptionModel.transcribe_audio_whisper"]], "nlpmodels (class in graphai.core.video.video)": [[81, "graphai.core.video.video.NLPModels"]], "check_ocr_and_hash_thresholds() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.check_ocr_and_hash_thresholds"]], "compute_ocr_noise_level() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.compute_video_ocr_transitions"]], "create_filename_using_url_format() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.create_filename_using_url_format"]], "detect_audio_duration() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.detect_audio_duration"]], "extract_audio_from_video() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.extract_frames"]], "extract_media_segment() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.extract_media_segment"]], "frame_hash_similarity() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.frame_ocr_transition"]], "generate_audio_token() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.generate_audio_token"]], "generate_frame_sample_indices() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.generate_symbolic_token"]], "get_cosine_sim() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.get_cosine_sim"]], "get_file_size() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.get_file_size"]], "get_ocr_colnames() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.get_ocr_colnames"]], "get_text_word_vector() (graphai.core.video.video.nlpmodels method)": [[81, "graphai.core.video.video.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.video.video.nlpmodels method)": [[81, "graphai.core.video.video.NLPModels.get_text_word_vector_using_words"]], "get_words() (graphai.core.video.video.nlpmodels method)": [[81, "graphai.core.video.video.NLPModels.get_words"]], "graphai.core.video.video": [[81, "module-graphai.core.video.video"]], "load_nlp_models() (graphai.core.video.video.nlpmodels method)": [[81, "graphai.core.video.video.NLPModels.load_nlp_models"]], "perform_probe() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.read_txt_gz_file"]], "retrieve_file_from_generic_url() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.retrieve_file_from_url"]], "retrieve_file_from_youtube() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.retrieve_file_from_youtube"]], "tesseract_ocr_or_get_cached() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.tesseract_ocr_or_get_cached"]], "write_txt_gz_file() (in module graphai.core.video.video)": [[81, "graphai.core.video.video.write_txt_gz_file"]], "graphai.definitions": [[82, "module-graphai.definitions"]], "graphai.pipelines": [[83, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[84, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[86, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[86, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[87, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[88, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[88, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[88, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[88, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[88, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[88, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[89, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[89, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[89, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[89, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[89, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[90, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[90, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[91, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[91, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[92, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[92, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[93, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[93, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[94, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[94, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[95, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[95, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[96, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[96, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[97, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[97, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[98, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[98, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[99, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[99, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[99, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[99, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[99, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[100, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[104, "module-graphai.pipelines.visualisation"]]}})