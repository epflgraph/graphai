Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.completion", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.completion", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.completion", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.config", "graphai.core.common.gpt_message_presets", "graphai.core.common.graph", "graphai.core.common.json_repair", "graphai.core.common.json_repair.json_repair", "graphai.core.common.json_repair.json_repair_error", "graphai.core.common.json_repair.string_utils", "graphai.core.common.ontology", "graphai.core.common.ontology_utils", "graphai.core.common.ontology_utils.clustering", "graphai.core.common.ontology_utils.data", "graphai.core.common.scraping", "graphai.core.common.text_utils", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.completion.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.completion.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.completion.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.config.rst", "graphai.core.common.gpt_message_presets.rst", "graphai.core.common.graph.rst", "graphai.core.common.json_repair.rst", "graphai.core.common.json_repair.json_repair.rst", "graphai.core.common.json_repair.json_repair_error.rst", "graphai.core.common.json_repair.string_utils.rst", "graphai.core.common.ontology.rst", "graphai.core.common.ontology_utils.rst", "graphai.core.common.ontology_utils.clustering.rst", "graphai.core.common.ontology_utils.data.rst", "graphai.core.common.scraping.rst", "graphai.core.common.text_utils.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.completion module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.completion module", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.completion module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.config module", "graphai.core.common.gpt_message_presets module", "graphai.core.common.graph module", "graphai.core.common.json_repair package", "graphai.core.common.json_repair.json_repair module", "graphai.core.common.json_repair.json_repair_error module", "graphai.core.common.json_repair.string_utils module", "graphai.core.common.ontology module", "graphai.core.common.ontology_utils package", "graphai.core.common.ontology_utils.clustering module", "graphai.core.common.ontology_utils.data module", "graphai.core.common.scraping module", "graphai.core.common.text_utils module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 41, 42, 45, 52, 53, 54, 55, 56, 61, 65, 71, 84], "contain": [0, 3, 35, 42, 52, 53, 54, 55, 56, 58, 62, 76, 84], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 12, 25, 35, 40, 52, 53, 61, 76, 84, 94], "project": 0, "ai": 0, "base": [0, 8, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 48, 50, 52, 53, 54, 55, 56, 58, 59, 64, 65, 67, 68, 71, 84, 89], "util": [0, 39], "api": [0, 55, 56, 59], "core": 0, "pipelin": 0, "definit": [0, 84], "modul": [0, 1, 2, 12, 20, 29, 40, 46, 51, 57, 60, 63, 66, 69, 74, 77, 90, 94], "celery_task": 1, "common": [1, 2, 29, 39], "router": 1, "schema": [1, 76], "main": [1, 53, 77, 79], "complet": [2, 20, 29, 65, 71, 89], "imag": [2, 3, 20, 29, 56], "ontologi": [2, 12, 20, 25, 29, 30, 40, 61], "scrape": [2, 20, 29, 40], "text": [2, 3, 20, 21, 26, 29, 31, 32, 36, 39, 42, 47, 49, 54, 55, 56, 59, 63], "translat": [2, 3, 12, 20, 29, 55, 56, 62], "video": [2, 3, 12, 20, 29, 40], "voic": [2, 20, 29], "format_api_result": 3, "id": [3, 33, 35, 41, 45, 52, 53, 54, 58], "name": [3, 31, 33, 41, 52, 56, 58, 68, 76], "statu": [3, 54, 58], "result": [3, 8, 25, 31, 32, 33, 35, 36, 37, 38, 45, 50, 52, 53, 55, 56, 58, 59, 61, 84], "format": [3, 42, 56, 70, 76], "come": [3, 55, 76], "from": [3, 25, 41, 45, 50, 52, 54, 55, 56, 61, 62, 67, 76, 84], "celeri": [3, 58, 61], "output": [3, 30, 33, 56], "param": [3, 41, 42, 52, 53, 54, 55, 56, 58, 78, 80, 81, 82, 83, 85, 86], "task": [3, 58, 61, 65, 71], "return": [3, 8, 25, 41, 42, 45, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 68, 70, 71, 84], "appropri": 3, "dictionari": [3, 42, 52, 53, 54, 55, 56, 68], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 21, 22, 26, 27, 28, 30, 31, 32, 34, 37, 38, 41, 54, 55, 56, 62], "forc": [3, 21, 22, 26, 27, 28, 31, 32, 34, 36, 37, 38, 41], "fals": [3, 15, 21, 22, 25, 26, 27, 28, 31, 32, 34, 36, 37, 38, 42, 49, 52, 53, 54, 55, 56, 62, 68, 71, 84], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": 3, "none": [3, 15, 21, 22, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 52, 53, 54, 55, 56, 58, 64, 65, 68, 84, 85], "retriev": [3, 25, 41, 54, 56, 71], "number": [3, 8, 31, 45, 52, 54, 55, 56, 59, 65, 68, 84], "cach": [3, 40, 56], "row": [3, 41, 52, 53, 84], "relev": [3, 25, 35], "fingerprint": [3, 41, 56], "lookup": 3, "dict": [3, 31, 33, 34, 37, 41, 45, 52, 54, 55, 56, 61, 68], "comput": [3, 8, 45, 50, 52, 55, 56, 84], "dbcachingmanagerbas": [3, 41], "object": [3, 30, 33, 35, 41, 45, 50, 53, 55, 56, 58, 59, 61, 64, 65, 68, 70, 71], "equal": [3, 54], "condit": 3, "count": [3, 49, 55], "onli": [3, 25, 53, 56, 68, 76, 84], "us": [3, 8, 41, 52, 53, 54, 55, 56, 62, 67, 71, 76, 84], "unexpect": [3, 52, 56, 84], "indent": [3, 52, 56, 64, 68], "where": [3, 56, 84], "need": [3, 42, 71], "done": [3, 25], "among": [3, 25], "same": [3, 54, 56, 84], "sourc": [3, 36, 45, 52, 53, 55], "target": [3, 36, 45, 53, 55, 56], "lang": [3, 55], "origin": [3, 41, 45, 50, 52, 53, 54, 56], "plu": [3, 45, 50, 53, 55, 56], "fingerprint_lookup_parallel": 3, "input_dict": [3, 55], "i": [3, 8, 25, 41, 42, 45, 47, 52, 54, 56, 61, 62, 65, 67, 71, 84], "n_total": 3, "min_similar": [3, 21, 22, 26, 27, 28, 56], "data_typ": 3, "audio": [3, 56], "perform": [3, 52, 54, 56, 59, 84], "parallel": 3, "previou": [3, 65, 71], "step": [3, 56], "index": [3, 52, 53, 54, 56, 76, 84], "thi": [3, 8, 25, 52, 56, 65, 76, 84], "total": [3, 15, 65, 71], "minimum": [3, 52, 54, 55, 56], "similar": [3, 41, 56, 84], "threshold": [3, 8, 28, 38, 41, 56, 61, 62], "two": [3, 8, 45, 53, 54, 56], "consid": [3, 52, 55, 56], "match": [3, 54, 56], "type": [3, 8, 45, 50, 54, 56, 59, 61, 62, 67, 68], "data": [3, 21, 22, 23, 24, 25, 26, 27, 28, 34, 51, 52, 54, 68, 76], "can": [3, 25, 55, 56, 71, 76], "mode": [3, 52], "detail": [3, 41, 56], "closest": [3, 33, 56], "which": [3, 35, 41, 53, 54, 55, 56, 61, 62, 84], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 8, 25, 52], "databas": 3, "insert": 3, "list": [3, 25, 31, 32, 33, 34, 35, 36, 41, 45, 52, 53, 54, 56, 61, 62, 84], "aggregate_result": 8, "coef": 8, "0": [8, 25, 31, 33, 35, 38, 42, 45, 50, 54, 55, 56, 61, 68, 70, 71, 78, 84], "5": [8, 25, 35, 50, 71], "panda": [8, 45, 50, 59, 61, 70], "datafram": [8, 45, 50, 52, 53, 59, 61, 84], "intermedi": [8, 45, 50], "wikifi": [8, 25, 35, 45, 50, 61], "uniqu": [8, 59, 84], "keyword": [8, 21, 25, 31, 35, 45, 50, 59, 60], "pageid": [8, 35, 45, 50, 59, 61, 84], "final": [8, 71, 84], "Then": [8, 62], "mixedscor": [8, 35, 61], "everi": [8, 54, 56, 68, 84], "page": [8, 25, 35, 45, 53, 54], "convex": 8, "combin": [8, 52, 84], "other": [8, 25, 53, 71], "score": [8, 25, 33, 35, 45, 50, 52, 53, 55, 56, 61, 62, 84], "paramet": [8, 45, 50, 52, 56, 59, 61, 62, 65, 67, 68, 71, 77, 84], "pd": [8, 45, 50, 59, 84], "A": [8, 45, 50, 53, 56, 59, 61, 62], "column": [8, 41, 45, 50, 52, 53, 59, 61, 84], "pagetitl": [8, 35, 45, 50, 59, 61], "searchscor": [8, 35, 45, 50, 59, 61], "levenshteinscor": [8, 35, 45, 50, 61], "graphscor": [8, 35, 45, 61], "ontologylocalscor": [8, 35, 50, 61], "ontologyglobalscor": [8, 35, 50, 61], "keywordsscor": [8, 35, 61], "float": [8, 25, 31, 33, 35, 37, 38, 45, 61, 62, 71, 84], "1": [8, 25, 31, 33, 35, 42, 45, 53, 54, 55, 56, 70, 71, 84], "control": [8, 84], "how": [8, 52, 54, 55, 61, 62], "ar": [8, 25, 42, 54, 55, 56, 61, 62, 70, 84], "valu": [8, 41, 42, 53, 54, 56, 84], "take": [8, 25, 53, 84], "sum": [8, 52], "over": [8, 84], "normalis": [8, 84], "max": [8, 45], "default": [8, 41, 45, 49, 50, 52, 54, 55, 56, 58, 61, 62, 71], "ani": [8, 62, 76, 84], "between": [8, 41, 52, 56, 70, 71, 84], "linearli": [8, 70], "interpol": 8, "those": [8, 53, 56], "approach": 8, "filter_result": 8, "epsilon": [8, 78], "min_vot": 8, "filter": [8, 25, 61, 62], "depend": 8, "some": [8, 25, 65, 71, 84], "criteria": 8, "specifi": [8, 84], "all": [8, 45, 52, 54, 56, 62, 71, 76, 84], "decid": 8, "whether": [8, 41, 42, 45, 50, 52, 53, 54, 55, 56, 61, 62, 71, 84], "good": 8, "enough": 8, "least": 8, "amount": 8, "int": [8, 25, 31, 33, 35, 37, 45, 59, 61, 65, 68], "exclud": 8, "kept": [8, 84], "iff": 8, "celery_tool": 12, "log": [12, 33, 56, 64, 68], "get_n_celery_work": 13, "msg": [15, 64, 68, 71], "second": [15, 54, 56, 71], "length": [15, 54, 55, 56], "64": 15, "async": [19, 21, 22, 23, 24, 25, 26, 27, 28], "init": 19, "redirect_doc": 19, "populate_academic_entity_dict": 21, "populate_slide_concepts_dict": 21, "slide": [21, 25, 31, 55, 56], "get_completion_text_fingerprint_chain_list": 21, "text_typ": [21, 31, 55], "completion_typ": [21, 31, 55], "n_job": [21, 22, 26, 27, 28], "8": [21, 22, 26, 27, 28, 56], "ignore_fp_result": [21, 22, 26, 27, 28], "results_to_return": [21, 22, 26, 27, 28], "get_completion_task_chain": 21, "result_typ": [21, 31], "true": [21, 25, 33, 37, 42, 45, 50, 52, 54, 55, 56, 62, 64, 68, 71, 84], "skip_token": 21, "debug": [21, 31, 64, 68], "get_cleanup_task_chain": 21, "cleanup": [21, 31], "calculate_summary_text_fingerprint": 21, "summaryfingerprintrequest": [21, 31], "calculate_summary_text_fingerprint_statu": 21, "task_id": [21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 58], "summarize_lectur": [21, 55], "lecturesummarizationrequest": [21, 31], "summarize_academic_ent": [21, 55], "academicentitysummarizationrequest": [21, 31], "summarize_text": 21, "genericsummarizationrequest": [21, 31], "clean_up": 21, "cleanuprequest": [21, 31], "summarize_statu": 21, "choose_best_subset": 21, "slidesubsetrequest": [21, 31], "get_slide_fingerprint_chain_list": 22, "calculate_slide_fingerprint": 22, "imagefingerprintrequest": [22, 32], "calculate_slide_fingerprint_statu": 22, "extract_text": 22, "extracttextrequest": [22, 32], "extract_text_statu": 22, "detect_ocr_language_statu": 22, "tree": [23, 30, 33, 52, 56], "cat_info": 23, "categoryinforequest": [23, 33], "cat_par": 23, "cat_children": 23, "categorychildrenrequest": [23, 33], "recompute_clust": 23, "recomputeclustersrequest": [23, 33], "recompute_clusters_statu": 23, "compute_graph_dist": 23, "graphdistancerequest": [23, 33], "compute_graph_nearest_categori": 23, "graphnearestcategoryrequest": [23, 33], "compute_graph_nearest_concept": 23, "graphnearestconceptrequest": [23, 33], "break_up_clust": 23, "breakupclusterrequest": [23, 33], "break_up_cluster_statu": 23, "extract_sublink": 24, "getsublinksrequest": [24, 34], "extract_sublinks_statu": 24, "extract_page_cont": 24, "extractcontentrequest": [24, 34], "extract_page_content_statu": 24, "keywordsrequest": [25, 35], "use_nltk": [25, 62], "bool": [25, 31, 32, 33, 34, 36, 37, 38, 45, 50, 61, 62, 68, 84], "process": [25, 54], "raw": [25, 35, 62, 67], "e": [25, 52, 54, 56], "g": [25, 52, 53, 56], "an": [25, 41, 52, 53, 55, 56, 68, 76], "abstract": 25, "public": 25, "cours": 25, "descript": 25, "lectur": [25, 31], "wikifyrequest": [25, 35], "method": [25, 32, 52, 56, 84], "str": [25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 59, 62, 67, 68, 71, 84], "restrict_to_ontologi": 25, "graph_score_smooth": 25, "ontology_score_smooth": 25, "keywords_score_smooth": 25, "normalisation_coef": 25, "filtering_threshold": 25, "filtering_min_vot": 25, "refresh_scor": 25, "concept": [25, 31, 33, 52, 53, 61, 76, 79, 84], "wikipedia": [25, 35, 53, 59], "each": [25, 35, 45, 52, 54, 56, 65, 71, 84], "set": [25, 35, 41, 55, 58, 59, 61, 84], "quantifi": 25, "follow": [25, 56, 65, 67, 71, 84], "extract": [25, 35, 54, 56, 62], "automat": [25, 41, 56], "omit": 25, "keyword_list": 25, "provid": [25, 45, 50, 52, 53, 54, 55, 56, 58], "input": [25, 54, 55, 56], "instead": [25, 41], "raw_text": [25, 35], "wikisearch": [25, 59], "For": [25, 84], "10": [25, 55, 59, 62, 84], "through": [25, 53, 56], "request": [25, 52, 54], "elasticsearch": [25, 73], "pair": [25, 45, 53, 62, 71, 84], "sever": [25, 35, 71], "deriv": [25, 53], "account": 25, "accord": [25, 52, 54, 84], "rule": 25, "keep": [25, 53, 65], "most": [25, 56], "wikify_ontology_svg": 25, "wikifyresponseelem": [25, 35], "level": [25, 52, 61], "2": [25, 31, 33, 55, 56, 71, 84, 94], "svg": [25, 61], "file": [25, 41, 42, 56, 61, 68], "repres": [25, 30, 33, 35, 53, 62, 65, 71], "subgraph": 25, "induc": [25, 53, 61], "wikify_graph_svg": 25, "concept_score_threshold": [25, 61], "3": [25, 33, 52, 53, 55, 61, 67, 71, 94], "edge_threshold": [25, 61], "min_component_s": [25, 61], "priority_test_text": 25, "get_translation_text_fingerprint_chain_list": 26, "src": [26, 33, 55], "tgt": [26, 33, 55], "calculate_translation_text_fingerprint": 26, "textfingerprintrequest": [26, 36], "calculate_translation_text_fingerprint_statu": 26, "translationrequest": [26, 36], "translate_statu": 26, "text_detect_languag": 26, "textdetectlanguagerequest": [26, 36], "text_detect_language_statu": 26, "get_video_fingerprint_chain_list": 27, "retrieve_fil": 27, "retrieveurlrequest": [27, 37], "get_retrieve_file_statu": 27, "calculate_video_fingerprint": 27, "videofingerprintrequest": [27, 37], "calculate_video_fingerprint_statu": 27, "get_fil": 27, "filerequest": [27, 30], "extract_audio": 27, "extractaudiorequest": [27, 37], "extract_audio_statu": 27, "detect_slid": 27, "detectslidesrequest": [27, 37], "detect_slides_statu": 27, "get_audio_fingerprint_chain_list": 28, "remove_sil": [28, 38], "calculate_audio_fingerprint": 28, "audiofingerprintrequest": [28, 38], "calculate_audio_fingerprint_statu": 28, "transcrib": [28, 56], "audiotranscriptionrequest": [28, 38], "transcribe_statu": 28, "detect_languag": 28, "audiodetectlanguagerequest": [28, 38], "priority_test": 28, "detect_language_statu": 28, "class": [30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 50, 53, 55, 56, 58, 59, 64, 65, 67, 68, 71], "taskidrespons": 30, "basemodel": [30, 31, 32, 33, 34, 35, 36, 37, 38], "endpoint": [30, 33], "taskstatusrespons": [30, 31, 32, 33, 34, 36, 37, 38], "task_nam": [30, 31, 32, 33, 34, 36, 37, 38], "task_statu": [30, 31, 32, 33, 34, 36, 37, 38], "task_result": [30, 31, 32, 33, 34, 36, 37, 38, 58], "jsonwrappervalu": 30, "abc": [30, 31], "slideconceptsmap": 31, "completionrequestbas": 31, "simul": [31, 55], "academicentitydescriptor": 31, "entiti": 31, "liter": [31, 32, 33, 36, 37], "unit": 31, "person": 31, "subtyp": 31, "possible_subtyp": 31, "categori": [31, 33, 53], "cleanupresponsedict": 31, "subject": 31, "for_wikifi": 31, "summaryresponsedict": 31, "summary_long": 31, "summary_short": 31, "titl": 31, "academicentitysummaryresponsedict": 31, "inferred_subtyp": 31, "top_3_categori": 31, "completiontaskresponsebas": 31, "summari": [31, 55, 71], "text_too_larg": [31, 36], "success": [31, 32, 33, 34, 36, 37, 38, 56], "fresh": [31, 32, 34, 36, 37, 38], "approx_cost": 31, "debug_messag": 31, "summarytaskrespons": 31, "academicentitysummarytaskrespons": 31, "cleanuptaskrespons": 31, "summaryrespons": 31, "academicentitysummaryrespons": 31, "cleanuprespons": 31, "coverag": [31, 55], "min_freq": [31, 55], "slidesubsetrespons": 31, "subset": 31, "academic_ent": 31, "summaryfingerprinttaskrespons": 31, "closest_token": [31, 32, 36, 37, 38], "summaryfingerprintrespons": 31, "imagefingerprinttaskrespons": 32, "closest_token_origin": [32, 38], "imagefingerprintrespons": 32, "googl": [32, 56], "tesseract": [32, 56], "individualocrresult": 32, "extracttexttaskrespons": 32, "languag": [32, 36, 37, 38, 55, 56], "extracttextrespons": 32, "detectocrlanguagetaskrespons": 32, "detectocrlanguagerespons": 32, "treeresponseelem": 33, "child_id": [33, 53], "parent_id": [33, 53], "treerespons": 33, "child_to_par": 33, "category_id": [33, 50, 53], "categoryinforespons": 33, "depth": 33, "categoryparentrespons": 33, "parent": [33, 53], "tgt_type": 33, "cluster": [33, 51], "categorychildrenrespons": 33, "children": 33, "treeparentrespons": 33, "n_cluster": [33, 52], "2200": 33, "min_n": [33, 52], "oneconceptresponseel": 33, "recomputeclusterstaskrespons": 33, "category_assign": 33, "impurity_count": 33, "impurity_proport": 33, "recomputeclustersrespons": 33, "cluster_id": [33, 53], "breakupclustersclusternumberrespons": 33, "breakupclusterstaskrespons": 33, "breakupclustersrespons": 33, "src_type": 33, "avg": [33, 53], "linear": [33, 53], "coeff": [33, 53], "tupl": [33, 54, 62, 84], "graphdistancerespons": 33, "sim": 33, "top_n": [33, 53], "top_down_search": 33, "return_clust": [33, 53], "nearestclusterel": 33, "rank": 33, "nearestcategoryel": 33, "graphnearestcategoryrespons": 33, "parent_categori": 33, "graphnearestconceptrespons": 33, "url": [34, 37, 54, 56, 67], "getsublinkstaskrespons": 34, "validated_url": [34, 54], "sublink": [34, 54], "status_msg": 34, "getsublinksrespons": 34, "remove_head": [34, 54], "remove_long_pattern": [34, 54], "extractcontenttaskrespons": 34, "extractcontentrespons": 34, "inform": 35, "anchor": [35, 53], "defin": [35, 84, 88], "search": [35, 54, 56, 59], "space": [35, 52, 54, 62, 68], "It": [35, 62, 67, 84], "consist": [35, 56], "measur": 35, "degre": 35, "respect": [35, 53, 70, 84], "config": [35, 40], "schema_extra": 35, "exampl": [35, 45, 62, 67, 84], "1196": [35, 45], "angl": 35, "8055555555555556": 35, "44735199351890065": 35, "9058463104630012": 35, "152547": 35, "bisect": 35, "3333333333333333": 35, "16661245633224378": 35, "22717425120724127": 35, "6666666666666667": 35, "609271523178808": 35, "44715741719086977": 35, "23972889": 35, "distance_from_a_point_to_a_lin": 35, "16666666666666669": 35, "2134432477817427": 35, "003590346636521923": 35, "21885521885521886": 35, "19791666666666666": 35, "19828593689131283": 35, "17781458572659029": 35, "946975": [35, 45], "line_": 35, "geometri": 35, "33567080901262164": 35, "8232323232323234": 35, "7916666666666666": 35, "7855473315153876": 35, "7886663359580247": 35, "22634860": 35, "line_seg": 35, "5555555555555556": 35, "3582111602475977": 35, "42461810549112244": 35, "43097643097643096": 35, "75": [35, 65], "6026490066225165": 35, "5277457623305826": 35, "2175469": 35, "non": [35, 52], "line": [35, 52, 55, 56, 68, 84], "sight_propag": 35, "19444444444444448": 35, "39019342923035233": 35, "01572170017309725": 35, "21212121212121213": 35, "11647727272727273": 35, "5087650954421504": 35, "2950855110143057": 35, "133496": 35, "parallelogram": 35, "3055555555555556": 35, "13627674782665528": 35, "14484503981375635": 35, "4288185842201275": 35, "76944": 35, "perpendicular": 35, "19444444444444445": 35, "039652736888335365": 35, "15017752515904018": 35, "25": [35, 65], "2584729255940787": 35, "19421461143444865": 35, "25278": 35, "quadrilater": 35, "02777777777777779": 35, "15367913840285474": 35, "12360559235107477": 35, "36363636363636365": 35, "3307362680171406": 35, "21973432050168798": 35, "76956": 35, "right_angl": 35, "4166666666666667": 35, "4451948682556247": 35, "12678424818870415": 35, "42424242424242425": 35, "4107908063887807": 35, "3996645939435453": 35, "94102": 35, "solid_angl": 35, "3888888888888889": 35, "6912823774628103": 35, "08695255651117278": 35, "196969696969697": 35, "15909090909090912": 35, "7415270744059212": 35, "4580780578246384": 35, "31482": 35, "tangent": 35, "4722222222222222": 35, "29631455223594527": 35, "3573397570845174": 35, "6414141414141414": 35, "59375": 35, "48284225283305426": 35, "30654": 35, "triangl": 35, "5717479784842091": 35, "2535403349997643": 35, "47723102055958355": 35, "en": [36, 37, 55, 56], "fr": [36, 37, 55], "de": 36, "textfingerprinttaskrespons": 36, "textfingerprintrespons": 36, "translationtaskrespons": 36, "devic": 36, "translationrespons": 36, "textdetectlanguagetaskrespons": 36, "textdetectlanguagerespons": 36, "playlist": [37, 56], "retrieveurlresponseinn": 37, "retrieveurlrespons": 37, "videofingerprinttaskrespons": 37, "videofingerprintrespons": 37, "force_non_self": 37, "extractaudiotaskrespons": 37, "durat": [37, 38, 56], "extractaudiorespons": 37, "slidetokenandtimestamp": 37, "timestamp": [37, 56, 70], "detectslidestaskrespons": 37, "slide_token": 37, "detectslidesrespons": 37, "audiofingerprinttaskrespons": 38, "fp_nosil": 38, "audiofingerprintrespons": 38, "audiodetectlanguagetaskrespons": 38, "audiodetectlanguagerespons": 38, "force_lang": [38, 56], "strict": 38, "audiotranscriptiontaskrespons": 38, "transcript_result": 38, "subtitle_result": 38, "json": [38, 42, 56, 68], "audiotranscriptionrespons": 38, "interfac": 39, "json_repair": 40, "ontology_util": 40, "common_util": 40, "gpt_message_preset": 40, "text_util": 40, "delete_fil": 41, "file_path": [41, 42], "delet": [41, 67], "full": [41, 42, 52, 56], "path": [41, 42, 45, 56, 89], "create_symlink_between_path": 41, "old_path": 41, "new_path": 41, "creat": [41, 42, 54, 55, 58, 68, 71], "symlink": 41, "old": 41, "real": 41, "new": [41, 52, 56, 71], "videodbcachingmanag": 41, "init_db": 41, "audiodbcachingmanag": 41, "slidedbcachingmanag": 41, "textdbcachingmanag": 41, "completiondbcachingmanag": 41, "scrapingdbcachingmanag": 41, "get_details_using_origin": 41, "origin_token": 41, "col": [41, 53], "get": [41, 53, 67], "": [41, 45, 54, 55, 67], "videoconfig": 41, "get_root_dir": 41, "get_image_dir": 41, "get_audio_dir": 41, "get_video_dir": 41, "get_transcript_dir": 41, "concat_file_path": 41, "filenam": [41, 42, 56, 68], "subfold": 41, "concaten": 41, "root": [41, 56], "dir": 41, "given": [41, 42, 52, 53, 54, 55, 56, 58, 59, 61, 62, 67, 68, 70, 84], "should": [41, 68, 76], "generate_filepath": 41, "force_dir": 41, "gener": [41, 54, 55, 56, 62], "its": [41, 52, 53, 54, 56, 84], "particular": 41, "create_symlink": 41, "new_filenam": 41, "fingerprintparamet": 41, "load_valu": 41, "load": [41, 53, 55, 56], "fail": 41, "them": [41, 54, 56], "get_min_sim_text": 41, "get_min_sim_imag": 41, "get_min_sim_audio": 41, "get_min_sim_video": 41, "make_sure_path_exist": 42, "file_at_the_end": 42, "full_perm": 42, "recurs": [42, 56], "folder": [42, 56], "exist": [42, 55, 56, 68], "thu": 42, "doesn": [42, 56], "t": [42, 45, 53, 55, 56, 62, 68], "end": [42, 52, 54, 56, 76, 84], "file_exist": 42, "check": [42, 53, 54], "otherwis": [42, 56, 62, 84], "write_text_fil": 42, "filename_with_path": 42, "content": [42, 54, 56, 68], "write": [42, 56], "textual": 42, "write_json_fil": 42, "d": [42, 65, 67], "read_text_fil": 42, "open": 42, "read": [42, 56, 68], "read_json_fil": 42, "format_datetime_for_mysql": 42, "dt": 42, "parse_mysql_datetim": 42, "get_current_datetim": 42, "current": [42, 56, 70], "datetim": [42, 70], "mysql": 42, "string": [42, 54, 55, 56, 62], "invert_dict": 42, "strtobool": 42, "val": 42, "convert": [42, 53, 67], "represent": [42, 56], "truth": 42, "y": [42, 84], "ye": 42, "n": [42, 53, 89], "f": [42, 71], "off": 42, "rais": 42, "valueerror": 42, "anyth": 42, "els": 42, "case": [42, 56, 68], "insensit": 42, "generate_lecture_summary_messag": 44, "long_len": [44, 55], "short_len": [44, 55], "title_len": [44, 55], "generate_generic_summary_messag": 44, "generate_academic_entity_summary_messag": 44, "conceptsgraph": [45, 61], "fetch_from_db": [45, 50], "old_compute_scor": 45, "source_page_id": 45, "target_page_id": 45, "possibl": [45, 62], "displaystyl": 45, "frac": 45, "ln": 45, "rebound": 45, "out": [45, 61, 62], "min": 45, "element": [45, 53, 54], "ha": [45, 56, 84], "kei": [45, 53, 55, 56, 84], "cg": 45, "compute_scor": 45, "6220": 45, "18973446": 45, "9417": 45, "5193576613841849": 45, "4740698357575134": 45, "3591100561928845": 45, "5343247664351338": 45, "530184349205493": 45, "40043881227279876": 45, "add_graph_scor": 45, "smooth": [45, 50], "includ": [45, 50, 71], "appli": [45, 50], "transform": [45, 50, 52], "bump": 45, "avoid": [45, 68], "neg": 45, "exponenti": 45, "shape": [45, 84], "json_repair_error": 46, "string_util": 46, "repair_json": 47, "at_end_of_block_com": 47, "except": 48, "jsonrepairerror": 48, "messag": [48, 54, 55, 71], "posit": [48, 54], "is_hex": 49, "code": [49, 54, 56, 68], "is_digit": 49, "is_valid_string_charact": 49, "is_delimit": 49, "char": 49, "is_start_of_valu": 49, "is_control_charact": 49, "is_whitespac": 49, "is_special_whitespac": 49, "is_quot": 49, "is_double_quote_lik": 49, "is_double_quot": 49, "is_single_quote_lik": 49, "is_single_quot": 49, "strip_last_occurr": 49, "text_to_strip": 49, "strip_remaining_text": 49, "insert_before_last_whitespac": 49, "text_to_insert": 49, "remove_at_index": 49, "start": [49, 54, 56], "ends_with_comma_or_newlin": 49, "next_non_white_space_charact": 49, "char_code_at": 49, "ind": 49, "char_at": 49, "get_concept_categori": 50, "page_id": 50, "get_predefined_tre": 50, "get_category_par": [50, 53], "get_category_children": [50, 53], "add_concepts_categori": 50, "add_categories_categori": 50, "filter_concept": 50, "add_ontology_scor": 50, "push": 50, "awai": 50, "compute_all_graphs_from_scratch": 52, "data_to_use_dict": 52, "concept_nam": 52, "scratch": 52, "correspond": [52, 56], "map": [52, 53, 54, 70], "matrix": [52, 53], "normalize_featur": 52, "normal": [52, 62, 67], "l2": [52, 53], "norm": [52, 84], "dens": 52, "get_laplacian": 52, "laplacian": 52, "unnorm": 52, "adjac": [52, 53], "lil": 52, "spars": 52, "sum_laplacian": 52, "simpl": 52, "arithmetic_mean_laplacian": 52, "arithmet": [52, 84], "mean": [52, 84], "combine_laplacian": 52, "li": 52, "just": [52, 55], "spec_embed_on_laplacian": 52, "seed": 52, "420": 52, "spectral": 52, "embed": 52, "compon": [52, 61], "random": [52, 56, 89], "optim": [52, 54], "combine_and_embed_laplacian": 52, "main_graph": 52, "n_dim": 52, "1000": 52, "calcul": [52, 56], "combination_method": 52, "armean": 52, "dimens": 52, "perform_pca": 52, "n_compon": 52, "random_st": 52, "center_and_scal": 52, "pca": 52, "state": [52, 65], "after": [52, 76], "dimension": 52, "reduct": 52, "precompute_clustering_metr": 52, "affin": [52, 84], "normalize_vector": 52, "perform_constrained_agglom": 52, "cosin": [52, 84], "linkag": 52, "averag": [52, 84], "full_comput": 52, "agglom": 52, "must": 52, "link": 52, "cannot": 52, "constraint": 52, "ndarrai": [52, 53], "ml": 52, "cl": 52, "point": [52, 54, 76], "return_model": 52, "model": [52, 55, 56], "well": [52, 71], "label": 52, "distanc": [52, 56, 84], "option": [52, 53, 54, 58], "variance_ratio_ev": 52, "varianc": 52, "ratio": [52, 56, 84], "also": [52, 71], "known": 52, "calinski": 52, "harabasz": 52, "davies_bouldin_ev": 52, "davi": 52, "bouldin": 52, "cluster_using_embed": 52, "one": [52, 53, 55, 56, 62, 65, 71, 84], "low": [52, 56, 84], "etc": 52, "group_clust": 52, "rows_and_col": 52, "precomputed_map": 52, "group": 52, "togeth": [52, 53], "becom": 52, "singl": [52, 56], "what": [52, 62], "median": 52, "both": [52, 56, 84], "If": [52, 56, 62, 68, 84], "block": [52, 56, 68, 71], "quot": [52, 56], "without": [52, 56, 71, 84], "blank": [52, 56, 84], "unind": [52, 56, 84], "reassign_outli": 52, "reassign": 52, "outlier": 52, "vector": 52, "size": [52, 56, 61], "cluster_and_reassign_outli": 52, "assign_to_categories_using_exist": 52, "category_concept": 52, "category_id_to_index": 52, "convert_cluster_labels_to_dict": 52, "cluster_label": 52, "concept_index_to_id": 52, "concept_index_to_nam": 52, "db_results_to_pandas_df": 53, "get_id_dict": 53, "make_adj_undirect": 53, "graph_adj": 53, "make": [53, 56], "direct": [53, 84], "undirect": 53, "symmetr": 53, "derive_col_to_col_graph": 53, "orig_adj": 53, "get_col_to_col_dict": 53, "df": [53, 78, 85], "source_col": 53, "target_col": 53, "anoth": 53, "return_chosen_indic": 53, "base_list": 53, "indic": [53, 54, 55, 56], "remove_invalid_pair": 53, "l_main": 53, "l_secondary_1": 53, "l_secondary_2": 53, "ref_dict": 53, "refer": 53, "whose": [53, 56, 84], "appear": 53, "In": 53, "word": [53, 62], "elimin": [53, 54], "doe": [53, 56, 68], "against": 53, "l_secondari": 53, "secondari": 53, "clean": [53, 55, 66], "up": [53, 55, 61], "order": 53, "thei": [53, 56, 62], "were": [53, 55], "create_graph_from_df": 53, "weight_col": 53, "col_dict": 53, "row_dict": 53, "pool_rows_and_col": 53, "make_symmetr": 53, "edg": [53, 54, 61, 84], "turn": 53, "node": 53, "weight": [53, 84], "precomput": 53, "adj": 53, "pool": 53, "convert_to_csr_matrix": 53, "csr": 53, "to_ndarray_and_flatten": 53, "compute_averag": 53, "average_and_combin": 53, "s1": [53, 54], "s2": [53, 54], "l1": 53, "skip_empti": 53, "ontologydata": 53, "load_data": 53, "load_ontology_concept_nam": 53, "load_ontology_categori": 53, "load_non_ontology_concept_nam": 53, "load_concept_concept_graphscor": 53, "load_category_categori": 53, "load_category_concept": 53, "load_anchor_page_dict": 53, "tabl": [53, 88], "child": 53, "relat": 53, "compute_category_anchors_using_refer": 53, "compute_symmetric_concept_concept_matrix": 53, "compute_precalculated_similarity_matric": 53, "get_concept_concept_similar": 53, "concept_1_id": 53, "concept_2_id": 53, "get_concept_cluster_similar": 53, "concept_id": 53, "get_cluster_cluster_similar": 53, "cluster_1_id": 53, "cluster_2_id": 53, "get_concept_category_similar": 53, "4": [53, 71, 94], "get_cluster_category_similar": 53, "get_category_category_similar": 53, "category_1_id": 53, "category_2_id": 53, "get_concept_closest_concept": 53, "get_concept_closest_cluster_of_categori": 53, "get_concept_closest_categori": 53, "use_depth_3": 53, "get_ontology_concept_names_t": 53, "concepts_to_keep": 53, "get_ontology_category_nam": 53, "get_ontology_category_info": 53, "cat_id": 53, "get_non_ontology_concept_nam": 53, "get_concept_concept_graphscore_t": 53, "get_category_to_categori": 53, "get_category_cluster_list": 53, "get_category_concept_list": 53, "get_cluster_concept_list": 53, "get_category_concept_t": 53, "get_category_anchor_pag": 53, "get_cluster_concept": 53, "compare_str": 54, "string1": 54, "string2": 54, "compar": [54, 56, 84], "arrai": 54, "first": [54, 56, 68, 71], "charact": 54, "find_consecutive_run": 54, "v": [54, 56, 84], "min_run": 54, "32": [54, 55], "find": [54, 56], "consecut": [54, 71], "run": [54, 65, 71, 76], "sequenc": [54, 56], "40": 54, "time": [54, 56, 63, 65], "k1": [54, 56], "k2": [54, 56], "find_edge_pattern": 54, "content_stack": 54, "flip_str": 54, "repeat": 54, "pattern": 54, "begin": [54, 56, 71], "webpag": 54, "flip": 54, "footer": 54, "header": 54, "string_circular_shift": 54, "shift": 54, "circular": 54, "mani": [54, 55, 61], "find_spac": 54, "shift_to_max_correl": 54, "maximum": [54, 55, 56, 59, 62, 84], "correl": 54, "largest": 54, "intersect": 54, "find_repeated_pattern": 54, "min_length": 54, "1024": 54, "everywher": 54, "within": 54, "substr": 54, "extract_text_from_url": 54, "request_head": 54, "max_length": [54, 56], "tag_search_sequ": 54, "headless": 54, "browser": 54, "tag": [54, 67], "check_url": 54, "test_url": 54, "access": 54, "fulli": 54, "resolv": 54, "so": [54, 56, 76], "valid": [54, 73], "create_base_url_token": 54, "standard": 54, "initialize_url": 54, "base_url": 54, "initi": 54, "determin": [54, 55], "protocol": 54, "http": 54, "correct": 54, "generate_sublink_token": 54, "base_token": 54, "reconstruct_data_dict": 54, "page_typ": 54, "reconstruct": 54, "precalcul": 54, "initialize_data_dict": 54, "fill": 54, "pagetyp": 54, "field": 54, "vacant": 54, "get_sublink": 54, "later": 54, "parse_page_typ": 54, "pars": [54, 56, 67], "predefin": 54, "process_all_sublink": 54, "modifi": 54, "remov": [54, 56], "long": [54, 55], "translation_list_to_text": 55, "str_or_list": 55, "translation_text_back_to_list": 55, "return_list": 55, "md5_text": 55, "md5": [55, 56], "hash": [55, 56], "generate_src_tgt_dict": 55, "generate_translation_text_token": 55, "perceptual_hash_text": 55, "perceptu": [55, 56], "strong": [55, 67], "min_window_length": 55, "window": 55, "k": [55, 56, 84], "gram": 55, "max_window_length": 55, "hash_len": 55, "detect_text_languag": 55, "detect": [55, 56, 76], "compute_slide_tfidf_scor": 55, "list_of_set": 55, "find_set_cov": 55, "find_best_slide_subset": 55, "slides_and_concept": 55, "prioriti": 55, "count_tokens_for_openai": 55, "cl100k_base": 55, "openai": 55, "force_dict_to_text": 55, "generate_summary_text_token": 55, "summary_typ": 55, "generate_completion_type_dict": 55, "convert_text_or_dict_to_text": 55, "text_or_dict": 55, "update_token_count": 55, "old_token_count": 55, "token_count": 55, "compute_chatgpt_request_cost": 55, "model_typ": [55, 56], "chatgptsummar": 55, "establish_connect": [55, 56], "ensur": 55, "boolean": [55, 71], "wa": 55, "found": [55, 56], "200": 55, "temperatur": 55, "top_p": 55, "summarize_gener": 55, "slide_to_concept": 55, "make_sure_json_is_valid": 55, "system_messag": 55, "n_retri": 55, "cleanup_text": 55, "handwrit": 55, "dirti": 55, "typo": 55, "unnecessari": 55, "break": 55, "ocr": [55, 56], "gpt": 55, "creativ": 55, "top": 55, "p": [55, 62, 67], "part": 55, "distribut": 55, "cost": 55, "system": 55, "sent": 55, "too": [55, 71], "translationmodel": 55, "load_model": 55, "huggingfac": 55, "pysbd": 55, "segment": [55, 56], "get_devic": 55, "unpunctu": 55, "flag": 55, "generate_random_token": 56, "retrieve_file_from_generic_url": 56, "output_filename_with_path": 56, "output_token": 56, "wget": 56, "store": [56, 61], "local": 56, "retrieve_file_from_kaltura": 56, "m3u8": 56, "kaltura": 56, "retrieve_file_from_youtub": 56, "download": 56, "youtub": 56, "retrieve_file_from_url": 56, "perform_prob": 56, "input_filename_with_path": 56, "probe": 56, "ffprobe": 56, "see": 56, "document": 56, "perform_slow_audio_prob": 56, "slower": 56, "ffmpeg": 56, "decod": 56, "stream": 56, "generate_symbolic_token": 56, "symbol": 56, "itself": 56, "md5_video_or_audio": 56, "detect_audio_format_and_dur": 56, "input_token": 56, "track": [56, 65, 71], "ogg": 56, "extract_audio_from_video": 56, "extract_media_seg": 56, "find_beginning_and_ending_sil": 56, "distance_from_end_tol": 56, "01": [56, 78], "noise_thresh": 56, "0001": 56, "silenc": 56, "toler": 56, "nois": 56, "remove_silence_doublesid": 56, "unsuccess": 56, "perceptual_hash_audio": 56, "7200": 56, "perceptual_hash_imag": 56, "hash_siz": 56, "16": 56, "compare_decoded_fingerprint": 56, "decoded_1": 56, "decoded_2": 56, "fuzzi": 56, "compare_encoded_fingerprint": 56, "f1": 56, "f2": 56, "decoder_func": 56, "function": [56, 71, 84], "decode_fingerprint": 56, "encod": [56, 67], "exact": 56, "find_closest_fingerprint_from_list": 56, "target_fp": 56, "fp_list": 56, "token_list": 56, "date_list": 56, "candid": 56, "highest": 56, "abov": [56, 70, 84], "lower": 56, "than": [56, 62, 84], "differ": [56, 71, 84], "three": 56, "satisfi": 56, "criterion": 56, "find_closest_audio_fingerprint_from_list": 56, "find_closest_image_fingerprint_from_list": 56, "extract_fram": 56, "output_folder_with_path": 56, "output_fold": 56, "frame": 56, "generate_frame_sample_indic": 56, "input_folder_with_path": 56, "12": 56, "we": 56, "don": [56, 62], "our": 56, "read_txt_gz_fil": 56, "fp": 56, "txt": 56, "gz": 56, "write_txt_gz_fil": 56, "read_json_gz_fil": 56, "perform_tesseract_ocr": 56, "image_path": 56, "tesseract_ocr_or_get_cach": 56, "ocr_path": 56, "langaug": 56, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 56, "frame_ocr_dist": 56, "nlp_model": 56, "nlp": 56, "frame_hash_similar": 56, "compute_ocr_noise_level": 56, "frame_sample_indic": 56, "sampl": 56, "identifi": 56, "below": [56, 61, 62, 70], "compute_ocr_threshold": 56, "distance_list": 56, "default_threshold": 56, "subsequ": 56, "empti": 56, "check_ocr_and_hash_threshold": 56, "k_l": 56, "k_r": 56, "ocr_dist_threshold": 56, "hash_similarity_threshold": 56, "frame_ocr_transit": 56, "transit": 56, "binari": 56, "frame_format": 56, "leftmost": 56, "rightmost": 56, "distinct": 56, "compute_video_ocr_transit": 56, "hash_dist_threshold": 56, "keep_first": 56, "transitori": 56, "whispertranscriptionmodel": 56, "load_model_whisp": 56, "lazi": 56, "whisper": 56, "memori": 56, "doc": [56, 76], "detect_audio_segment_lang_whisp": 56, "30": 56, "transcribe_audio_whisp": 56, "verbos": 56, "no_speech_threshold": 56, "6": [56, 71], "logprob_threshold": 56, "explicitli": 56, "feed": [56, 67], "transcript": 56, "probabl": 56, "speech": 56, "predict": 56, "confid": 56, "silent": 56, "treat": 56, "like": 56, "subtitl": 56, "nlpmodel": 56, "get_nlp_model": 56, "googleocrmodel": 56, "lazili": 56, "connect": [56, 61], "alreadi": 56, "successfulli": 56, "establish": 56, "perform_ocr": 56, "text_detect": 56, "document_text_detect": 56, "wait_for_ocr_result": 56, "image_object": 56, "dtd": 56, "retri": 56, "call": [56, 62], "wait": 56, "td": 56, "failur": 56, "celery_config": 57, "wp": 57, "route_task": 58, "arg": 58, "kwarg": 58, "kw": 58, "baseconfig": 58, "developmentconfig": 58, "get_set": 58, "create_celeri": 58, "app": 58, "get_celery_task": 58, "asyncresult": 58, "get_task_info": 58, "info": 58, "commun": 59, "limit": 59, "queri": 59, "searchrank": 59, "draw": 60, "draw_ontologi": 61, "neighbourhood": 61, "tmp": 61, "serialis": 61, "orient": 61, "record": 61, "go": 61, "succeed": 61, "draw_graph": 61, "word_token": 62, "sentenc": 62, "separ": 62, "you": [62, 67], "rake_extract": 62, "split_word": 62, "return_scor": 62, "auto": 62, "filter_past_tenses_and_adverb": 62, "unconstrain": 62, "python": 62, "rake": 62, "nltk": 62, "more": [62, 65, 71], "split": 62, "retur": 62, "minim": 62, "ignor": 62, "past": 62, "tens": 62, "participl": 62, "adverb": 62, "join": [62, 67], "crowd": 62, "young": 62, "boi": 62, "re": 62, "foolin": 62, "around": 62, "corner": 62, "drunk": 62, "dress": 62, "best": 62, "brown": 62, "baggi": 62, "platform": 62, "sole": 62, "give": 62, "damn": 62, "about": 62, "trumpet": 62, "playin": 62, "band": 62, "ain": 62, "rock": 62, "roll": 62, "get_keyword": 62, "breadcrumb": 63, "progress_bar": 63, "color": [64, 68], "time_color": 64, "grai": 64, "report": [64, 71], "outdent": 64, "progressbar": 65, "n_iter": 65, "bar_length": 65, "50": 65, "progress": 65, "bar": 65, "execut": [65, 71], "usag": [65, 71], "letter": 65, "b": 65, "c": [65, 67, 84], "pb": 65, "len": 65, "consum": [65, 71], "updat": 65, "00": 65, "100": 65, "print": [65, 67, 68, 70, 71], "iter": 65, "percentag": 65, "overwrit": 65, "ban": 65, "reset": [65, 68, 71], "increment": 65, "counter": 65, "reus": [65, 71], "io": 66, "htmlcleaner": 67, "htmlparser": 67, "html": 67, "shiver": 67, "dark": 67, "br": 67, "rain": 67, "park": 67, "meantim": 67, "get_data": 67, "handle_starttag": 67, "attr": 67, "handle_endtag": 67, "handle_data": 67, "solv": 67, "problem": 67, "email": 67, "lowercas": 67, "u2018rain": 67, "u2019": 67, "lt": 67, "evalu": 68, "pref": 68, "x1b": 68, "0m": 68, "black": 68, "30m": 68, "blue": 68, "34m": 68, "cyan": 68, "36m": 68, "green": 68, "32m": 68, "magenta": 68, "35m": 68, "red": 68, "31m": 68, "white": 68, "37m": 68, "yellow": 68, "33m": 68, "cprint": 68, "is_bold": 68, "bold": 68, "pprint": 68, "inlin": 68, "only_first": 68, "pretti": 68, "preced": 68, "skip": 68, "ellipsi": 68, "big": 68, "read_json": 68, "save_json": 68, "save": 68, "mkdir": 68, "dirnam": 68, "directori": 68, "date": [69, 76], "stopwatch": 69, "now": 70, "2022": 70, "06": 70, "28": 70, "09": 70, "46": 70, "21": 70, "677968": 70, "rescal": 70, "min_dat": 70, "max_dat": 70, "seri": 70, "rang": [70, 84], "assum": [70, 84], "yyyi": 70, "mm": 70, "dd": 70, "add_year": 70, "n_year": 70, "sw": 71, "delta": 71, "284306764602661": 71, "variabl": 71, "t1": 71, "t2": 71, "yet": 71, "t3": 71, "609307289123535": 71, "849977970123291": 71, "660188913345337": 71, "preprocess": 71, "pre_tim": 71, "task_tim": 71, "postprocess": 71, "post_tim": 71, "total_tim": 71, "proport": 71, "5176954220125477": 71, "tick": 71, "replac": [71, 84], "partial": 71, "furthermor": 71, "19": 71, "86": 71, "lap": 71, "74": 71, "11": 71, "66": 71, "45": 71, "checkpoint": 71, "finish": 71, "last": 71, "befor": [71, 84], "invest": 73, "visualis": 73, "create_index": 74, "populate_index": 74, "script": 76, "popul": 76, "aitor_concepts_": 76, "mediawiki": 76, "directli": 76, "campus_analyt": 76, "creation": [76, 88], "said": 76, "could": 76, "veri": 76, "index_doc": 76, "aggregate_recent_past": 77, "check_unit": 77, "compute_fundraisers_unit": 77, "compute_investors_unit": 77, "compute_investors_units_2": 77, "compute_jaccard_index": 77, "concept_configur": 77, "create_investments_graph": 77, "detect_fundraisers_concept": 77, "toy_exampl": 77, "compute_year_coeffici": 78, "recent_past": 78, "rescale_scor": 78, "year": 78, "aggregate_year": 78, "groupby_column": [78, 85], "normalize_scor": 78, "score_column": 78, "show_trend": 79, "unit_id": 79, "unit_concept": 79, "show_matchmaking_list_view": 79, "investors_concepts_jaccard": 79, "investors_concept": 79, "unit_concept_id": 79, "show_matchmaking_chart_view": 79, "unit_investor": 79, "time_window": 79, "x": 84, "configur": 84, "investorid": 84, "sqrt": 84, "sum_": 84, "o": 84, "divid": 84, "henc": 84, "have": 84, "mix": 84, "min_ratio": 84, "05": 84, "sourcepageid": 84, "targetpageid": 84, "product": 84, "ball": 84, "loop": 84, "normalise_graph": 84, "add": 84, "miss": 84, "revers": 84, "vertex": 84, "associ": 84, "key_x": 84, "key_i": 84, "geometr": 84, "compute_affin": 84, "mix_x": 84, "mix_i": 84, "normalise_befor": 84, "requir": 84, "recommend": 84, "euclidean": 84, "notic": 84, "faster": 84, "coeffici": 84, "inf": 84, "typic": 84, "higher": 84, "assign": 84, "unus": 84, "u": 84, "squar": 84, "equival": 84, "scalar": 84, "tanh": 84, "denot": 84, "get_fr": 85, "db": 85, "get_investors_fr": 85, "fr_id": 85, "get_frs_fundrais": 85, "get_fundraisers_concept": 85, "fundraiser_id": 85, "derive_yearly_data": 85, "date_column": 85, "amount_column": 85, "build_prefix": 88, "1_old": 90, "2_new": 90, "3_slide": 90, "startup": 94}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [39, 0, 0, "-", "core"], [72, 0, 0, "-", "definitions"], [73, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "main"], [20, 0, 0, "-", "routers"], [29, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "completion"], [5, 0, 0, "-", "image"], [6, 0, 0, "-", "ontology"], [7, 0, 0, "-", "scraping"], [8, 0, 0, "-", "text"], [9, 0, 0, "-", "translation"], [10, 0, 0, "-", "video"], [11, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[8, 1, 1, "", "aggregate_results"], [8, 1, 1, "", "filter_results"]], "graphai.api.common": [[13, 0, 0, "-", "celery_tools"], [14, 0, 0, "-", "graph"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "translation"], [18, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[13, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[15, 1, 1, "", "log"]], "graphai.api.main": [[19, 1, 1, "", "init"], [19, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[21, 0, 0, "-", "completion"], [22, 0, 0, "-", "image"], [23, 0, 0, "-", "ontology"], [24, 0, 0, "-", "scraping"], [25, 0, 0, "-", "text"], [26, 0, 0, "-", "translation"], [27, 0, 0, "-", "video"], [28, 0, 0, "-", "voice"]], "graphai.api.routers.completion": [[21, 1, 1, "", "calculate_summary_text_fingerprint"], [21, 1, 1, "", "calculate_summary_text_fingerprint_status"], [21, 1, 1, "", "choose_best_subset"], [21, 1, 1, "", "clean_up"], [21, 1, 1, "", "get_cleanup_task_chain"], [21, 1, 1, "", "get_completion_task_chain"], [21, 1, 1, "", "get_completion_text_fingerprint_chain_list"], [21, 1, 1, "", "populate_academic_entity_dict"], [21, 1, 1, "", "populate_slide_concepts_dict"], [21, 1, 1, "", "summarize_academic_entity"], [21, 1, 1, "", "summarize_lecture"], [21, 1, 1, "", "summarize_status"], [21, 1, 1, "", "summarize_text"]], "graphai.api.routers.image": [[22, 1, 1, "", "calculate_slide_fingerprint"], [22, 1, 1, "", "calculate_slide_fingerprint_status"], [22, 1, 1, "", "detect_ocr_language_status"], [22, 1, 1, "", "extract_text"], [22, 1, 1, "", "extract_text_status"], [22, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[23, 1, 1, "", "break_up_cluster"], [23, 1, 1, "", "break_up_cluster_status"], [23, 1, 1, "", "cat_children"], [23, 1, 1, "", "cat_info"], [23, 1, 1, "", "cat_parent"], [23, 1, 1, "", "compute_graph_distance"], [23, 1, 1, "", "compute_graph_nearest_category"], [23, 1, 1, "", "compute_graph_nearest_concept"], [23, 1, 1, "", "recompute_clusters"], [23, 1, 1, "", "recompute_clusters_status"], [23, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[24, 1, 1, "", "extract_page_content"], [24, 1, 1, "", "extract_page_content_status"], [24, 1, 1, "", "extract_sublinks"], [24, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.text": [[25, 1, 1, "", "keywords"], [25, 1, 1, "", "priority_test_text"], [25, 1, 1, "", "wikify"], [25, 1, 1, "", "wikify_graph_svg"], [25, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[26, 1, 1, "", "calculate_translation_text_fingerprint"], [26, 1, 1, "", "calculate_translation_text_fingerprint_status"], [26, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [26, 1, 1, "", "text_detect_language"], [26, 1, 1, "", "text_detect_language_status"], [26, 1, 1, "", "translate"], [26, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[27, 1, 1, "", "calculate_video_fingerprint"], [27, 1, 1, "", "calculate_video_fingerprint_status"], [27, 1, 1, "", "detect_slides"], [27, 1, 1, "", "detect_slides_status"], [27, 1, 1, "", "extract_audio"], [27, 1, 1, "", "extract_audio_status"], [27, 1, 1, "", "get_file"], [27, 1, 1, "", "get_retrieve_file_status"], [27, 1, 1, "", "get_video_fingerprint_chain_list"], [27, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[28, 1, 1, "", "calculate_audio_fingerprint"], [28, 1, 1, "", "calculate_audio_fingerprint_status"], [28, 1, 1, "", "detect_language"], [28, 1, 1, "", "detect_language_status"], [28, 1, 1, "", "get_audio_fingerprint_chain_list"], [28, 1, 1, "", "priority_test"], [28, 1, 1, "", "transcribe"], [28, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[30, 0, 0, "-", "common"], [31, 0, 0, "-", "completion"], [32, 0, 0, "-", "image"], [33, 0, 0, "-", "ontology"], [34, 0, 0, "-", "scraping"], [35, 0, 0, "-", "text"], [36, 0, 0, "-", "translation"], [37, 0, 0, "-", "video"], [38, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[30, 2, 1, "", "FileRequest"], [30, 2, 1, "", "TaskIDResponse"], [30, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[30, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[30, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[30, 3, 1, "", "task_id"], [30, 3, 1, "", "task_name"], [30, 3, 1, "", "task_result"], [30, 3, 1, "", "task_status"]], "graphai.api.schemas.completion": [[31, 2, 1, "", "AcademicEntityDescriptor"], [31, 2, 1, "", "AcademicEntitySummarizationRequest"], [31, 2, 1, "", "AcademicEntitySummaryResponse"], [31, 2, 1, "", "AcademicEntitySummaryResponseDict"], [31, 2, 1, "", "AcademicEntitySummaryTaskResponse"], [31, 2, 1, "", "CleanupRequest"], [31, 2, 1, "", "CleanupResponse"], [31, 2, 1, "", "CleanupResponseDict"], [31, 2, 1, "", "CleanupTaskResponse"], [31, 2, 1, "", "CompletionRequestBase"], [31, 2, 1, "", "CompletionTaskResponseBase"], [31, 2, 1, "", "GenericSummarizationRequest"], [31, 2, 1, "", "LectureSummarizationRequest"], [31, 2, 1, "", "SlideConceptsMap"], [31, 2, 1, "", "SlideSubsetRequest"], [31, 2, 1, "", "SlideSubsetResponse"], [31, 2, 1, "", "SummaryFingerprintRequest"], [31, 2, 1, "", "SummaryFingerprintResponse"], [31, 2, 1, "", "SummaryFingerprintTaskResponse"], [31, 2, 1, "", "SummaryResponse"], [31, 2, 1, "", "SummaryResponseDict"], [31, 2, 1, "", "SummaryTaskResponse"]], "graphai.api.schemas.completion.AcademicEntityDescriptor": [[31, 3, 1, "", "categories"], [31, 3, 1, "", "entity"], [31, 3, 1, "", "name"], [31, 3, 1, "", "possible_subtypes"], [31, 3, 1, "", "subtype"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.AcademicEntitySummarizationRequest": [[31, 3, 1, "", "debug"], [31, 3, 1, "", "force"], [31, 3, 1, "", "simulate"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict": [[31, 3, 1, "", "inferred_subtype"], [31, 3, 1, "", "top_3_categories"]], "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.completion.CleanupRequest": [[31, 3, 1, "", "text"], [31, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.CleanupResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.CleanupResponseDict": [[31, 3, 1, "", "for_wikify"], [31, 3, 1, "", "subject"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.CleanupTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.completion.CompletionRequestBase": [[31, 3, 1, "", "debug"], [31, 3, 1, "", "force"], [31, 3, 1, "", "simulate"]], "graphai.api.schemas.completion.CompletionTaskResponseBase": [[31, 3, 1, "", "approx_cost"], [31, 3, 1, "", "debug_message"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result_type"], [31, 3, 1, "", "successful"], [31, 3, 1, "", "text_too_large"], [31, 3, 1, "", "tokens"]], "graphai.api.schemas.completion.GenericSummarizationRequest": [[31, 3, 1, "", "keywords"], [31, 3, 1, "", "text"]], "graphai.api.schemas.completion.LectureSummarizationRequest": [[31, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideConceptsMap": [[31, 3, 1, "", "concepts"], [31, 3, 1, "", "number"]], "graphai.api.schemas.completion.SlideSubsetRequest": [[31, 3, 1, "", "coverage"], [31, 3, 1, "", "min_freq"], [31, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideSubsetResponse": [[31, 3, 1, "", "subset"]], "graphai.api.schemas.completion.SummaryFingerprintRequest": [[31, 3, 1, "", "completion_type"], [31, 3, 1, "", "force"], [31, 3, 1, "", "text"], [31, 3, 1, "", "text_type"]], "graphai.api.schemas.completion.SummaryFingerprintResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryFingerprintTaskResponse": [[31, 3, 1, "", "closest_token"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.completion.SummaryResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.completion.SummaryResponseDict": [[31, 3, 1, "", "summary_long"], [31, 3, 1, "", "summary_short"], [31, 3, 1, "", "title"]], "graphai.api.schemas.completion.SummaryTaskResponse": [[31, 3, 1, "", "result"]], "graphai.api.schemas.image": [[32, 2, 1, "", "DetectOCRLanguageResponse"], [32, 2, 1, "", "DetectOCRLanguageTaskResponse"], [32, 2, 1, "", "ExtractTextRequest"], [32, 2, 1, "", "ExtractTextResponse"], [32, 2, 1, "", "ExtractTextTaskResponse"], [32, 2, 1, "", "ImageFingerprintRequest"], [32, 2, 1, "", "ImageFingerprintResponse"], [32, 2, 1, "", "ImageFingerprintTaskResponse"], [32, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "language"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "method"], [32, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "language"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[32, 3, 1, "", "closest_token"], [32, 3, 1, "", "closest_token_origin"], [32, 3, 1, "", "fresh"], [32, 3, 1, "", "result"], [32, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[32, 3, 1, "", "method"], [32, 3, 1, "", "text"]], "graphai.api.schemas.ontology": [[33, 2, 1, "", "BreakUpClusterRequest"], [33, 2, 1, "", "BreakUpClustersClusterNumberResponse"], [33, 2, 1, "", "BreakUpClustersResponse"], [33, 2, 1, "", "BreakUpClustersTaskResponse"], [33, 2, 1, "", "CategoryChildrenRequest"], [33, 2, 1, "", "CategoryChildrenResponse"], [33, 2, 1, "", "CategoryInfoRequest"], [33, 2, 1, "", "CategoryInfoResponse"], [33, 2, 1, "", "CategoryParentResponse"], [33, 2, 1, "", "GraphDistanceRequest"], [33, 2, 1, "", "GraphDistanceResponse"], [33, 2, 1, "", "GraphNearestCategoryRequest"], [33, 2, 1, "", "GraphNearestCategoryResponse"], [33, 2, 1, "", "GraphNearestConceptRequest"], [33, 2, 1, "", "GraphNearestConceptResponse"], [33, 2, 1, "", "NearestCategoryElement"], [33, 2, 1, "", "NearestClusterElement"], [33, 2, 1, "", "OneConceptResponseElement"], [33, 2, 1, "", "RecomputeClustersRequest"], [33, 2, 1, "", "RecomputeClustersResponse"], [33, 2, 1, "", "RecomputeClustersTaskResponse"], [33, 2, 1, "", "TreeParentResponse"], [33, 2, 1, "", "TreeResponse"], [33, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.BreakUpClusterRequest": [[33, 3, 1, "", "cluster_id"], [33, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse": [[33, 3, 1, "", "clusters"], [33, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.BreakUpClustersTaskResponse": [[33, 3, 1, "", "results"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.ontology.CategoryChildrenRequest": [[33, 3, 1, "", "category_id"], [33, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.CategoryChildrenResponse": [[33, 3, 1, "", "children"]], "graphai.api.schemas.ontology.CategoryInfoRequest": [[33, 3, 1, "", "category_id"]], "graphai.api.schemas.ontology.CategoryInfoResponse": [[33, 3, 1, "", "category_id"], [33, 3, 1, "", "depth"], [33, 3, 1, "", "id"], [33, 3, 1, "", "name"]], "graphai.api.schemas.ontology.CategoryParentResponse": [[33, 3, 1, "", "parent"]], "graphai.api.schemas.ontology.GraphDistanceRequest": [[33, 3, 1, "", "avg"], [33, 3, 1, "", "coeffs"], [33, 3, 1, "", "src"], [33, 3, 1, "", "src_type"], [33, 3, 1, "", "tgt"], [33, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.GraphDistanceResponse": [[33, 3, 1, "", "sim"]], "graphai.api.schemas.ontology.GraphNearestCategoryRequest": [[33, 3, 1, "", "avg"], [33, 3, 1, "", "coeffs"], [33, 3, 1, "", "return_clusters"], [33, 3, 1, "", "src"], [33, 3, 1, "", "top_down_search"], [33, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestCategoryResponse": [[33, 3, 1, "", "parent_category"], [33, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.GraphNearestConceptRequest": [[33, 3, 1, "", "src"], [33, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptResponse": [[33, 3, 1, "", "closest"], [33, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.NearestCategoryElement": [[33, 3, 1, "", "category_id"], [33, 3, 1, "", "clusters"], [33, 3, 1, "", "rank"], [33, 3, 1, "", "score"]], "graphai.api.schemas.ontology.NearestClusterElement": [[33, 3, 1, "", "cluster_id"], [33, 3, 1, "", "rank"], [33, 3, 1, "", "score"]], "graphai.api.schemas.ontology.OneConceptResponseElement": [[33, 3, 1, "", "id"], [33, 3, 1, "", "name"]], "graphai.api.schemas.ontology.RecomputeClustersRequest": [[33, 3, 1, "", "min_n"], [33, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.RecomputeClustersResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.RecomputeClustersTaskResponse": [[33, 3, 1, "", "category_assignments"], [33, 3, 1, "", "impurity_count"], [33, 3, 1, "", "impurity_proportion"], [33, 3, 1, "", "results"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.ontology.TreeParentResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponse": [[33, 3, 1, "", "child_to_parent"]], "graphai.api.schemas.ontology.TreeResponseElem": [[33, 3, 1, "", "child_id"], [33, 3, 1, "", "parent_id"]], "graphai.api.schemas.scraping": [[34, 2, 1, "", "ExtractContentRequest"], [34, 2, 1, "", "ExtractContentResponse"], [34, 2, 1, "", "ExtractContentTaskResponse"], [34, 2, 1, "", "GetSublinksRequest"], [34, 2, 1, "", "GetSublinksResponse"], [34, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[34, 3, 1, "", "remove_headers"], [34, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[34, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[34, 3, 1, "", "fresh"], [34, 3, 1, "", "status_msg"], [34, 3, 1, "", "sublinks"], [34, 3, 1, "", "successful"], [34, 3, 1, "", "token"], [34, 3, 1, "", "validated_url"]], "graphai.api.schemas.text": [[35, 2, 1, "", "KeywordsRequest"], [35, 2, 1, "", "WikifyRequest"], [35, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[35, 2, 1, "", "Config"], [35, 3, 1, "", "GraphScore"], [35, 3, 1, "", "KeywordsScore"], [35, 3, 1, "", "LevenshteinScore"], [35, 3, 1, "", "MixedScore"], [35, 3, 1, "", "OntologyGlobalScore"], [35, 3, 1, "", "OntologyLocalScore"], [35, 3, 1, "", "PageID"], [35, 3, 1, "", "PageTitle"], [35, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[35, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[36, 2, 1, "", "TextDetectLanguageRequest"], [36, 2, 1, "", "TextDetectLanguageResponse"], [36, 2, 1, "", "TextDetectLanguageTaskResponse"], [36, 2, 1, "", "TextFingerprintRequest"], [36, 2, 1, "", "TextFingerprintResponse"], [36, 2, 1, "", "TextFingerprintTaskResponse"], [36, 2, 1, "", "TranslationRequest"], [36, 2, 1, "", "TranslationResponse"], [36, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[36, 3, 1, "", "language"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[36, 3, 1, "", "closest_token"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[36, 3, 1, "", "device"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"], [36, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[37, 2, 1, "", "DetectSlidesRequest"], [37, 2, 1, "", "DetectSlidesResponse"], [37, 2, 1, "", "DetectSlidesTaskResponse"], [37, 2, 1, "", "ExtractAudioRequest"], [37, 2, 1, "", "ExtractAudioResponse"], [37, 2, 1, "", "ExtractAudioTaskResponse"], [37, 2, 1, "", "RetrieveURLRequest"], [37, 2, 1, "", "RetrieveURLResponse"], [37, 2, 1, "", "RetrieveURLResponseInner"], [37, 2, 1, "", "SlideTokenAndTimeStamp"], [37, 2, 1, "", "VideoFingerprintRequest"], [37, 2, 1, "", "VideoFingerprintResponse"], [37, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "language"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "slide_tokens"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[37, 3, 1, "", "duration"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "playlist"], [37, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[37, 3, 1, "", "timestamp"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[37, 3, 1, "", "closest_token"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[38, 2, 1, "", "AudioDetectLanguageRequest"], [38, 2, 1, "", "AudioDetectLanguageResponse"], [38, 2, 1, "", "AudioDetectLanguageTaskResponse"], [38, 2, 1, "", "AudioFingerprintRequest"], [38, 2, 1, "", "AudioFingerprintResponse"], [38, 2, 1, "", "AudioFingerprintTaskResponse"], [38, 2, 1, "", "AudioTranscriptionRequest"], [38, 2, 1, "", "AudioTranscriptionResponse"], [38, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "remove_silence"], [38, 3, 1, "", "threshold"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[38, 3, 1, "", "closest_token"], [38, 3, 1, "", "closest_token_origin"], [38, 3, 1, "", "duration"], [38, 3, 1, "", "fp_nosilence"], [38, 3, 1, "", "fresh"], [38, 3, 1, "", "result"], [38, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "force_lang"], [38, 3, 1, "", "strict"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"], [38, 3, 1, "", "subtitle_results"], [38, 3, 1, "", "transcript_results"]], "graphai.core": [[40, 0, 0, "-", "common"], [57, 0, 0, "-", "interfaces"], [60, 0, 0, "-", "text"], [63, 0, 0, "-", "utils"]], "graphai.core.common": [[41, 0, 0, "-", "caching"], [42, 0, 0, "-", "common_utils"], [43, 0, 0, "-", "config"], [44, 0, 0, "-", "gpt_message_presets"], [45, 0, 0, "-", "graph"], [46, 0, 0, "-", "json_repair"], [50, 0, 0, "-", "ontology"], [51, 0, 0, "-", "ontology_utils"], [54, 0, 0, "-", "scraping"], [55, 0, 0, "-", "text_utils"], [56, 0, 0, "-", "video"]], "graphai.core.common.caching": [[41, 2, 1, "", "AudioDBCachingManager"], [41, 2, 1, "", "CompletionDBCachingManager"], [41, 2, 1, "", "FingerprintParameters"], [41, 2, 1, "", "ScrapingDBCachingManager"], [41, 2, 1, "", "SlideDBCachingManager"], [41, 2, 1, "", "TextDBCachingManager"], [41, 2, 1, "", "VideoConfig"], [41, 2, 1, "", "VideoDBCachingManager"], [41, 1, 1, "", "create_symlink_between_paths"], [41, 1, 1, "", "delete_file"]], "graphai.core.common.caching.AudioDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.CompletionDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.FingerprintParameters": [[41, 4, 1, "", "get_min_sim_audio"], [41, 4, 1, "", "get_min_sim_image"], [41, 4, 1, "", "get_min_sim_text"], [41, 4, 1, "", "get_min_sim_video"], [41, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[41, 4, 1, "", "get_details_using_origin"], [41, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[41, 4, 1, "", "concat_file_path"], [41, 4, 1, "", "create_symlink"], [41, 4, 1, "", "generate_filepath"], [41, 4, 1, "", "get_audio_dir"], [41, 4, 1, "", "get_image_dir"], [41, 4, 1, "", "get_root_dir"], [41, 4, 1, "", "get_transcript_dir"], [41, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[42, 1, 1, "", "file_exists"], [42, 1, 1, "", "format_datetime_for_mysql"], [42, 1, 1, "", "get_current_datetime"], [42, 1, 1, "", "invert_dict"], [42, 1, 1, "", "make_sure_path_exists"], [42, 1, 1, "", "parse_mysql_datetime"], [42, 1, 1, "", "read_json_file"], [42, 1, 1, "", "read_text_file"], [42, 1, 1, "", "strtobool"], [42, 1, 1, "", "write_json_file"], [42, 1, 1, "", "write_text_file"]], "graphai.core.common.gpt_message_presets": [[44, 1, 1, "", "generate_academic_entity_summary_message"], [44, 1, 1, "", "generate_generic_summary_message"], [44, 1, 1, "", "generate_lecture_summary_message"]], "graphai.core.common.graph": [[45, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[45, 4, 1, "", "add_graph_score"], [45, 4, 1, "", "fetch_from_db"], [45, 4, 1, "", "old_compute_scores"]], "graphai.core.common.json_repair": [[47, 0, 0, "-", "json_repair"], [48, 0, 0, "-", "json_repair_error"], [49, 0, 0, "-", "string_utils"]], "graphai.core.common.json_repair.json_repair": [[47, 1, 1, "", "at_end_of_block_comment"], [47, 1, 1, "", "repair_json"]], "graphai.core.common.json_repair.json_repair_error": [[48, 5, 1, "", "JSONRepairError"]], "graphai.core.common.json_repair.string_utils": [[49, 1, 1, "", "char_at"], [49, 1, 1, "", "char_code_at"], [49, 1, 1, "", "ends_with_comma_or_newline"], [49, 1, 1, "", "insert_before_last_whitespace"], [49, 1, 1, "", "is_control_character"], [49, 1, 1, "", "is_delimiter"], [49, 1, 1, "", "is_digit"], [49, 1, 1, "", "is_double_quote"], [49, 1, 1, "", "is_double_quote_like"], [49, 1, 1, "", "is_hex"], [49, 1, 1, "", "is_quote"], [49, 1, 1, "", "is_single_quote"], [49, 1, 1, "", "is_single_quote_like"], [49, 1, 1, "", "is_special_whitespace"], [49, 1, 1, "", "is_start_of_value"], [49, 1, 1, "", "is_valid_string_character"], [49, 1, 1, "", "is_whitespace"], [49, 1, 1, "", "next_non_white_space_character"], [49, 1, 1, "", "remove_at_index"], [49, 1, 1, "", "strip_last_occurrence"]], "graphai.core.common.ontology": [[50, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[50, 4, 1, "", "add_categories_category"], [50, 4, 1, "", "add_concepts_category"], [50, 4, 1, "", "add_ontology_scores"], [50, 4, 1, "", "fetch_from_db"], [50, 4, 1, "", "filter_concepts"], [50, 4, 1, "", "get_category_children"], [50, 4, 1, "", "get_category_parent"], [50, 4, 1, "", "get_concept_category"], [50, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.ontology_utils": [[52, 0, 0, "-", "clustering"], [53, 0, 0, "-", "data"]], "graphai.core.common.ontology_utils.clustering": [[52, 1, 1, "", "arithmetic_mean_laplacians"], [52, 1, 1, "", "assign_to_categories_using_existing"], [52, 1, 1, "", "cluster_and_reassign_outliers"], [52, 1, 1, "", "cluster_using_embedding"], [52, 1, 1, "", "combine_and_embed_laplacian"], [52, 1, 1, "", "combine_laplacians"], [52, 1, 1, "", "compute_all_graphs_from_scratch"], [52, 1, 1, "", "convert_cluster_labels_to_dict"], [52, 1, 1, "", "davies_bouldin_eval"], [52, 1, 1, "", "get_laplacian"], [52, 1, 1, "", "group_clustered"], [52, 1, 1, "", "normalize_features"], [52, 1, 1, "", "perform_PCA"], [52, 1, 1, "", "perform_constrained_agglomerative"], [52, 1, 1, "", "precompute_clustering_metric"], [52, 1, 1, "", "reassign_outliers"], [52, 1, 1, "", "spec_embed_on_laplacian"], [52, 1, 1, "", "sum_laplacians"], [52, 1, 1, "", "variance_ratio_eval"]], "graphai.core.common.ontology_utils.data": [[53, 2, 1, "", "OntologyData"], [53, 1, 1, "", "average_and_combine"], [53, 1, 1, "", "compute_average"], [53, 1, 1, "", "convert_to_csr_matrix"], [53, 1, 1, "", "create_graph_from_df"], [53, 1, 1, "", "db_results_to_pandas_df"], [53, 1, 1, "", "derive_col_to_col_graph"], [53, 1, 1, "", "get_col_to_col_dict"], [53, 1, 1, "", "get_id_dict"], [53, 1, 1, "", "make_adj_undirected"], [53, 1, 1, "", "remove_invalid_pairs"], [53, 1, 1, "", "return_chosen_indices"], [53, 1, 1, "", "to_ndarray_and_flatten"]], "graphai.core.common.ontology_utils.data.OntologyData": [[53, 4, 1, "", "compute_category_anchors_using_references"], [53, 4, 1, "", "compute_precalculated_similarity_matrices"], [53, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [53, 4, 1, "", "get_category_anchor_pages"], [53, 4, 1, "", "get_category_category_similarity"], [53, 4, 1, "", "get_category_children"], [53, 4, 1, "", "get_category_cluster_list"], [53, 4, 1, "", "get_category_concept_list"], [53, 4, 1, "", "get_category_concept_table"], [53, 4, 1, "", "get_category_parent"], [53, 4, 1, "", "get_category_to_category"], [53, 4, 1, "", "get_cluster_category_similarity"], [53, 4, 1, "", "get_cluster_cluster_similarity"], [53, 4, 1, "", "get_cluster_concept_list"], [53, 4, 1, "", "get_cluster_concepts"], [53, 4, 1, "", "get_concept_category_similarity"], [53, 4, 1, "", "get_concept_closest_category"], [53, 4, 1, "", "get_concept_closest_cluster_of_category"], [53, 4, 1, "", "get_concept_closest_concept"], [53, 4, 1, "", "get_concept_cluster_similarity"], [53, 4, 1, "", "get_concept_concept_graphscore_table"], [53, 4, 1, "", "get_concept_concept_similarity"], [53, 4, 1, "", "get_non_ontology_concept_names"], [53, 4, 1, "", "get_ontology_category_info"], [53, 4, 1, "", "get_ontology_category_names"], [53, 4, 1, "", "get_ontology_concept_names_table"], [53, 4, 1, "", "load_anchor_page_dict"], [53, 4, 1, "", "load_category_category"], [53, 4, 1, "", "load_category_concept"], [53, 4, 1, "", "load_concept_concept_graphscore"], [53, 4, 1, "", "load_data"], [53, 4, 1, "", "load_non_ontology_concept_names"], [53, 4, 1, "", "load_ontology_categories"], [53, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.common.scraping": [[54, 1, 1, "", "check_url"], [54, 1, 1, "", "compare_strings"], [54, 1, 1, "", "create_base_url_token"], [54, 1, 1, "", "extract_text_from_url"], [54, 1, 1, "", "find_consecutive_runs"], [54, 1, 1, "", "find_edge_patterns"], [54, 1, 1, "", "find_repeated_patterns"], [54, 1, 1, "", "find_spaces"], [54, 1, 1, "", "generate_sublink_token"], [54, 1, 1, "", "get_sublinks"], [54, 1, 1, "", "initialize_data_dict"], [54, 1, 1, "", "initialize_url"], [54, 1, 1, "", "parse_page_type"], [54, 1, 1, "", "process_all_sublinks"], [54, 1, 1, "", "reconstruct_data_dict"], [54, 1, 1, "", "remove_headers"], [54, 1, 1, "", "remove_long_patterns"], [54, 1, 1, "", "shift_to_max_correlation"], [54, 1, 1, "", "string_circular_shift"]], "graphai.core.common.text_utils": [[55, 2, 1, "", "ChatGPTSummarizer"], [55, 2, 1, "", "TranslationModels"], [55, 1, 1, "", "compute_chatgpt_request_cost"], [55, 1, 1, "", "compute_slide_tfidf_scores"], [55, 1, 1, "", "convert_text_or_dict_to_text"], [55, 1, 1, "", "count_tokens_for_openai"], [55, 1, 1, "", "detect_text_language"], [55, 1, 1, "", "find_best_slide_subset"], [55, 1, 1, "", "find_set_cover"], [55, 1, 1, "", "force_dict_to_text"], [55, 1, 1, "", "generate_completion_type_dict"], [55, 1, 1, "", "generate_src_tgt_dict"], [55, 1, 1, "", "generate_summary_text_token"], [55, 1, 1, "", "generate_translation_text_token"], [55, 1, 1, "", "md5_text"], [55, 1, 1, "", "perceptual_hash_text"], [55, 1, 1, "", "translation_list_to_text"], [55, 1, 1, "", "translation_text_back_to_list"], [55, 1, 1, "", "update_token_count"]], "graphai.core.common.text_utils.ChatGPTSummarizer": [[55, 4, 1, "", "cleanup_text"], [55, 4, 1, "", "establish_connection"], [55, 4, 1, "", "make_sure_json_is_valid"], [55, 4, 1, "", "summarize_academic_entity"], [55, 4, 1, "", "summarize_generic"], [55, 4, 1, "", "summarize_lecture"]], "graphai.core.common.text_utils.TranslationModels": [[55, 4, 1, "", "get_device"], [55, 4, 1, "", "load_models"], [55, 4, 1, "", "translate"]], "graphai.core.common.video": [[56, 2, 1, "", "GoogleOCRModel"], [56, 2, 1, "", "NLPModels"], [56, 2, 1, "", "WhisperTranscriptionModel"], [56, 1, 1, "", "check_ocr_and_hash_thresholds"], [56, 1, 1, "", "compare_decoded_fingerprints"], [56, 1, 1, "", "compare_encoded_fingerprints"], [56, 1, 1, "", "compute_ocr_noise_level"], [56, 1, 1, "", "compute_ocr_threshold"], [56, 1, 1, "", "compute_video_ocr_transitions"], [56, 1, 1, "", "detect_audio_format_and_duration"], [56, 1, 1, "", "extract_audio_from_video"], [56, 1, 1, "", "extract_frames"], [56, 1, 1, "", "extract_media_segment"], [56, 1, 1, "", "find_beginning_and_ending_silences"], [56, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [56, 1, 1, "", "find_closest_fingerprint_from_list"], [56, 1, 1, "", "find_closest_image_fingerprint_from_list"], [56, 1, 1, "", "frame_hash_similarity"], [56, 1, 1, "", "frame_ocr_distance"], [56, 1, 1, "", "frame_ocr_transition"], [56, 1, 1, "", "generate_frame_sample_indices"], [56, 1, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [56, 1, 1, "", "generate_random_token"], [56, 1, 1, "", "generate_symbolic_token"], [56, 1, 1, "", "md5_video_or_audio"], [56, 1, 1, "", "perceptual_hash_audio"], [56, 1, 1, "", "perceptual_hash_image"], [56, 1, 1, "", "perform_probe"], [56, 1, 1, "", "perform_slow_audio_probe"], [56, 1, 1, "", "perform_tesseract_ocr"], [56, 1, 1, "", "read_json_gz_file"], [56, 1, 1, "", "read_txt_gz_file"], [56, 1, 1, "", "remove_silence_doublesided"], [56, 1, 1, "", "retrieve_file_from_generic_url"], [56, 1, 1, "", "retrieve_file_from_kaltura"], [56, 1, 1, "", "retrieve_file_from_url"], [56, 1, 1, "", "retrieve_file_from_youtube"], [56, 1, 1, "", "tesseract_ocr_or_get_cached"], [56, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.GoogleOCRModel": [[56, 4, 1, "", "establish_connection"], [56, 4, 1, "", "perform_ocr"], [56, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[56, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.WhisperTranscriptionModel": [[56, 4, 1, "", "detect_audio_segment_lang_whisper"], [56, 4, 1, "", "load_model_whisper"], [56, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[58, 0, 0, "-", "celery_config"], [59, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[58, 2, 1, "", "BaseConfig"], [58, 2, 1, "", "DevelopmentConfig"], [58, 1, 1, "", "create_celery"], [58, 1, 1, "", "get_celery_task"], [58, 1, 1, "", "get_settings"], [58, 1, 1, "", "get_task_info"], [58, 1, 1, "", "route_task"]], "graphai.core.interfaces.wp": [[59, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[59, 4, 1, "", "search"]], "graphai.core.text": [[61, 0, 0, "-", "draw"], [62, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[61, 1, 1, "", "draw_graph"], [61, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[62, 1, 1, "", "get_keywords"], [62, 1, 1, "", "rake_extract"], [62, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[64, 0, 0, "-", "breadcrumb"], [65, 0, 0, "-", "progress_bar"], [66, 0, 0, "-", "text"], [69, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[64, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[64, 4, 1, "", "indent"], [64, 4, 1, "", "log"], [64, 4, 1, "", "outdent"], [64, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[65, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[65, 4, 1, "", "reset"], [65, 4, 1, "", "update"]], "graphai.core.utils.text": [[67, 0, 0, "-", "clean"], [68, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[67, 2, 1, "", "HTMLCleaner"], [67, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[67, 4, 1, "", "get_data"], [67, 4, 1, "", "handle_data"], [67, 4, 1, "", "handle_endtag"], [67, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[68, 2, 1, "", "Colors"], [68, 1, 1, "", "cprint"], [68, 1, 1, "", "log"], [68, 1, 1, "", "mkdir"], [68, 1, 1, "", "pprint"], [68, 1, 1, "", "read_json"], [68, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[68, 3, 1, "", "codes"], [68, 3, 1, "", "pref"], [68, 3, 1, "", "reset"]], "graphai.core.utils.time": [[70, 0, 0, "-", "date"], [71, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[70, 1, 1, "", "add_years"], [70, 1, 1, "", "now"], [70, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[71, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[71, 4, 1, "", "delta"], [71, 4, 1, "", "report"], [71, 4, 1, "", "reset"], [71, 4, 1, "", "tick"], [71, 4, 1, "", "total"]], "graphai.pipelines": [[74, 0, 0, "-", "elasticsearch"], [77, 0, 0, "-", "investment"], [90, 0, 0, "-", "validation"], [94, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[76, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[76, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[78, 0, 0, "-", "aggregate_recent_past"], [79, 0, 0, "-", "check_unit"], [80, 0, 0, "-", "compute_fundraisers_units"], [81, 0, 0, "-", "compute_investors_units"], [82, 0, 0, "-", "compute_investors_units_2"], [83, 0, 0, "-", "compute_jaccard_index"], [84, 0, 0, "-", "concept_configuration"], [85, 0, 0, "-", "create_investments_graph"], [86, 0, 0, "-", "detect_fundraisers_concepts"], [87, 0, 0, "-", "main"], [88, 0, 0, "-", "parameters"], [89, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[78, 1, 1, "", "aggregate_recent_past"], [78, 1, 1, "", "aggregate_years"], [78, 1, 1, "", "compute_year_coefficients"], [78, 1, 1, "", "normalize_scores"], [78, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[79, 1, 1, "", "main"], [79, 1, 1, "", "show_matchmaking_chart_view"], [79, 1, 1, "", "show_matchmaking_list_view"], [79, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[80, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[81, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[82, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[83, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[84, 1, 1, "", "combine"], [84, 1, 1, "", "compute_affinities"], [84, 1, 1, "", "mix"], [84, 1, 1, "", "norm"], [84, 1, 1, "", "normalise"], [84, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[85, 1, 1, "", "create_investments_graph"], [85, 1, 1, "", "derive_yearly_data"], [85, 1, 1, "", "get_frs"], [85, 1, 1, "", "get_frs_fundraisers"], [85, 1, 1, "", "get_fundraisers_concepts"], [85, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[86, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[87, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[88, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[89, 1, 1, "", "base"], [89, 1, 1, "", "complete"], [89, 1, 1, "", "path"], [89, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "packag": [0, 1, 2, 12, 20, 29, 39, 40, 46, 51, 57, 60, 63, 66, 69, 73, 74, 77, 90, 94], "subpackag": [0, 1, 39, 40, 63, 73], "submodul": [0, 1, 2, 12, 20, 29, 40, 46, 51, 57, 60, 63, 66, 69, 74, 77, 90, 94], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "common": [3, 12, 13, 14, 15, 16, 17, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98], "complet": [4, 21, 31], "imag": [5, 22, 32], "ontologi": [6, 16, 23, 33, 50], "scrape": [7, 24, 34, 54], "text": [8, 25, 35, 60, 61, 62, 66, 67, 68], "translat": [9, 17, 26, 36], "video": [10, 18, 27, 37, 56], "voic": [11, 28, 38], "celery_tool": 13, "graph": [14, 45, 95, 96, 97, 98], "log": 15, "main": [19, 87], "router": [20, 21, 22, 23, 24, 25, 26, 27, 28], "schema": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "core": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "cach": 41, "common_util": 42, "config": 43, "gpt_message_preset": 44, "json_repair": [46, 47, 48, 49], "json_repair_error": 48, "string_util": 49, "ontology_util": [51, 52, 53], "cluster": 52, "data": 53, "text_util": 55, "interfac": [57, 58, 59], "celery_config": 58, "wp": 59, "draw": 61, "keyword": 62, "util": [63, 64, 65, 66, 67, 68, 69, 70, 71], "breadcrumb": 64, "progress_bar": 65, "clean": 67, "io": 68, "time": [69, 70, 71], "date": 70, "stopwatch": 71, "definit": 72, "pipelin": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "elasticsearch": [74, 75, 76], "create_index": 75, "populate_index": 76, "invest": [77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "aggregate_recent_past": 78, "check_unit": 79, "compute_fundraisers_unit": 80, "compute_investors_unit": 81, "compute_investors_units_2": 82, "compute_jaccard_index": 83, "concept_configur": 84, "create_investments_graph": 85, "detect_fundraisers_concept": 86, "paramet": 88, "toy_exampl": 89, "valid": [90, 91, 92, 93], "1_old": 91, "2_new": 92, "3_slide": 93, "visualis": [94, 95, 96, 97, 98], "startup": [95, 96, 97, 98], "2": 96, "3": 97, "4": 98}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [39, "subpackages"], [40, "subpackages"], [63, "subpackages"], [73, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [12, "submodules"], [20, "submodules"], [29, "submodules"], [40, "submodules"], [46, "submodules"], [51, "submodules"], [57, "submodules"], [60, "submodules"], [63, "submodules"], [66, "submodules"], [69, "submodules"], [74, "submodules"], [77, "submodules"], [90, "submodules"], [94, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion module": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image module": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[7, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.text module": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[12, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[15, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[18, "module-graphai.api.common.video"]], "graphai.api.main module": [[19, "module-graphai.api.main"]], "graphai.api.routers package": [[20, "module-graphai.api.routers"]], "graphai.api.routers.completion module": [[21, "module-graphai.api.routers.completion"]], "graphai.api.routers.image module": [[22, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[23, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[24, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text module": [[25, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[26, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[27, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[28, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[29, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[30, "module-graphai.api.schemas.common"]], "graphai.api.schemas.completion module": [[31, "module-graphai.api.schemas.completion"]], "graphai.api.schemas.image module": [[32, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[33, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[34, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.text module": [[35, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[36, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[37, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[38, "module-graphai.api.schemas.voice"]], "graphai.core package": [[39, "module-graphai.core"]], "graphai.core.common package": [[40, "module-graphai.core.common"]], "graphai.core.common.caching module": [[41, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[42, "module-graphai.core.common.common_utils"]], "graphai.core.common.config module": [[43, "module-graphai.core.common.config"]], "graphai.core.common.gpt_message_presets module": [[44, "module-graphai.core.common.gpt_message_presets"]], "graphai.core.common.graph module": [[45, "module-graphai.core.common.graph"]], "graphai.core.common.json_repair package": [[46, "module-graphai.core.common.json_repair"]], "graphai.core.common.json_repair.json_repair module": [[47, "module-graphai.core.common.json_repair.json_repair"]], "graphai.core.common.json_repair.json_repair_error module": [[48, "module-graphai.core.common.json_repair.json_repair_error"]], "graphai.core.common.json_repair.string_utils module": [[49, "module-graphai.core.common.json_repair.string_utils"]], "graphai.core.common.ontology module": [[50, "module-graphai.core.common.ontology"]], "graphai.core.common.ontology_utils package": [[51, "module-graphai.core.common.ontology_utils"]], "graphai.core.common.ontology_utils.clustering module": [[52, "module-graphai.core.common.ontology_utils.clustering"]], "graphai.core.common.ontology_utils.data module": [[53, "module-graphai.core.common.ontology_utils.data"]], "graphai.core.common.scraping module": [[54, "module-graphai.core.common.scraping"]], "graphai.core.common.text_utils module": [[55, "module-graphai.core.common.text_utils"]], "graphai.core.common.video module": [[56, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[57, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[58, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.wp module": [[59, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[60, "module-graphai.core.text"]], "graphai.core.text.draw module": [[61, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[62, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[63, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[64, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[65, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[66, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[67, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[68, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[69, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[70, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[71, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[72, "module-graphai.definitions"]], "graphai.pipelines package": [[73, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[74, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[75, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[76, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[77, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[78, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[79, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[80, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[81, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[82, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[83, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[84, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[85, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[86, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[87, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[88, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[89, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[90, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[91, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[92, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[93, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[94, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[95, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[96, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[97, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[98, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.completion"], [5, "module-graphai.api.celery_tasks.image"], [6, "module-graphai.api.celery_tasks.ontology"], [7, "module-graphai.api.celery_tasks.scraping"], [8, "module-graphai.api.celery_tasks.text"], [9, "module-graphai.api.celery_tasks.translation"], [10, "module-graphai.api.celery_tasks.video"], [11, "module-graphai.api.celery_tasks.voice"], [12, "module-graphai.api.common"], [13, "module-graphai.api.common.celery_tools"], [14, "module-graphai.api.common.graph"], [15, "module-graphai.api.common.log"], [16, "module-graphai.api.common.ontology"], [17, "module-graphai.api.common.translation"], [18, "module-graphai.api.common.video"], [19, "module-graphai.api.main"], [20, "module-graphai.api.routers"], [21, "module-graphai.api.routers.completion"], [22, "module-graphai.api.routers.image"], [23, "module-graphai.api.routers.ontology"], [24, "module-graphai.api.routers.scraping"], [25, "module-graphai.api.routers.text"], [26, "module-graphai.api.routers.translation"], [27, "module-graphai.api.routers.video"], [28, "module-graphai.api.routers.voice"], [29, "module-graphai.api.schemas"], [30, "module-graphai.api.schemas.common"], [31, "module-graphai.api.schemas.completion"], [32, "module-graphai.api.schemas.image"], [33, "module-graphai.api.schemas.ontology"], [34, "module-graphai.api.schemas.scraping"], [35, "module-graphai.api.schemas.text"], [36, "module-graphai.api.schemas.translation"], [37, "module-graphai.api.schemas.video"], [38, "module-graphai.api.schemas.voice"], [39, "module-graphai.core"], [40, "module-graphai.core.common"], [41, "module-graphai.core.common.caching"], [42, "module-graphai.core.common.common_utils"], [43, "module-graphai.core.common.config"], [44, "module-graphai.core.common.gpt_message_presets"], [45, "module-graphai.core.common.graph"], [46, "module-graphai.core.common.json_repair"], [47, "module-graphai.core.common.json_repair.json_repair"], [48, "module-graphai.core.common.json_repair.json_repair_error"], [49, "module-graphai.core.common.json_repair.string_utils"], [50, "module-graphai.core.common.ontology"], [51, "module-graphai.core.common.ontology_utils"], [52, "module-graphai.core.common.ontology_utils.clustering"], [53, "module-graphai.core.common.ontology_utils.data"], [54, "module-graphai.core.common.scraping"], [55, "module-graphai.core.common.text_utils"], [56, "module-graphai.core.common.video"], [57, "module-graphai.core.interfaces"], [58, "module-graphai.core.interfaces.celery_config"], [59, "module-graphai.core.interfaces.wp"], [60, "module-graphai.core.text"], [61, "module-graphai.core.text.draw"], [62, "module-graphai.core.text.keywords"], [63, "module-graphai.core.utils"], [64, "module-graphai.core.utils.breadcrumb"], [65, "module-graphai.core.utils.progress_bar"], [66, "module-graphai.core.utils.text"], [67, "module-graphai.core.utils.text.clean"], [68, "module-graphai.core.utils.text.io"], [69, "module-graphai.core.utils.time"], [70, "module-graphai.core.utils.time.date"], [71, "module-graphai.core.utils.time.stopwatch"], [72, "module-graphai.definitions"], [73, "module-graphai.pipelines"], [74, "module-graphai.pipelines.elasticsearch"], [76, "module-graphai.pipelines.elasticsearch.populate_index"], [77, "module-graphai.pipelines.investment"], [78, "module-graphai.pipelines.investment.aggregate_recent_past"], [79, "module-graphai.pipelines.investment.check_unit"], [80, "module-graphai.pipelines.investment.compute_fundraisers_units"], [81, "module-graphai.pipelines.investment.compute_investors_units"], [82, "module-graphai.pipelines.investment.compute_investors_units_2"], [83, "module-graphai.pipelines.investment.compute_jaccard_index"], [84, "module-graphai.pipelines.investment.concept_configuration"], [85, "module-graphai.pipelines.investment.create_investments_graph"], [86, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [87, "module-graphai.pipelines.investment.main"], [88, "module-graphai.pipelines.investment.parameters"], [89, "module-graphai.pipelines.investment.toy_example"], [90, "module-graphai.pipelines.validation"], [94, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion": [[4, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.image": [[5, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[6, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[7, "module-graphai.api.celery_tasks.scraping"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[12, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[13, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[15, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[15, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[18, "module-graphai.api.common.video"]], "graphai.api.main": [[19, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[19, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[19, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[20, "module-graphai.api.routers"]], "calculate_summary_text_fingerprint() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.calculate_summary_text_fingerprint"]], "calculate_summary_text_fingerprint_status() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.calculate_summary_text_fingerprint_status"]], "choose_best_subset() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.choose_best_subset"]], "clean_up() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.clean_up"]], "get_cleanup_task_chain() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_cleanup_task_chain"]], "get_completion_task_chain() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_completion_task_chain"]], "get_completion_text_fingerprint_chain_list() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.get_completion_text_fingerprint_chain_list"]], "graphai.api.routers.completion": [[21, "module-graphai.api.routers.completion"]], "populate_academic_entity_dict() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.populate_academic_entity_dict"]], "populate_slide_concepts_dict() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.populate_slide_concepts_dict"]], "summarize_academic_entity() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_academic_entity"]], "summarize_lecture() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_lecture"]], "summarize_status() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_status"]], "summarize_text() (in module graphai.api.routers.completion)": [[21, "graphai.api.routers.completion.summarize_text"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[22, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[22, "module-graphai.api.routers.image"]], "break_up_cluster() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.break_up_cluster"]], "break_up_cluster_status() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.break_up_cluster_status"]], "cat_children() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.cat_children"]], "cat_info() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.cat_info"]], "cat_parent() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.cat_parent"]], "compute_graph_distance() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.compute_graph_distance"]], "compute_graph_nearest_category() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.compute_graph_nearest_category"]], "compute_graph_nearest_concept() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.compute_graph_nearest_concept"]], "graphai.api.routers.ontology": [[23, "module-graphai.api.routers.ontology"]], "recompute_clusters() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.recompute_clusters"]], "recompute_clusters_status() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.recompute_clusters_status"]], "tree() (in module graphai.api.routers.ontology)": [[23, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[24, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[24, "module-graphai.api.routers.scraping"]], "graphai.api.routers.text": [[25, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[26, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[27, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[28, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[29, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[30, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[30, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[30, "graphai.api.schemas.common.FileRequest.token"]], "academicentitydescriptor (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor"]], "academicentitysummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest"]], "academicentitysummaryresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponse"]], "academicentitysummaryresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict"]], "academicentitysummarytaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse"]], "cleanuprequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupRequest"]], "cleanupresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupResponse"]], "cleanupresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupResponseDict"]], "cleanuptaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CleanupTaskResponse"]], "completionrequestbase (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CompletionRequestBase"]], "completiontaskresponsebase (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase"]], "genericsummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest"]], "lecturesummarizationrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.LectureSummarizationRequest"]], "slideconceptsmap (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideConceptsMap"]], "slidesubsetrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest"]], "slidesubsetresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SlideSubsetResponse"]], "summaryfingerprintrequest (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse"]], "summaryresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryResponse"]], "summaryresponsedict (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryResponseDict"]], "summarytaskresponse (class in graphai.api.schemas.completion)": [[31, "graphai.api.schemas.completion.SummaryTaskResponse"]], "approx_cost (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.approx_cost"]], "categories (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.categories"]], "closest_token (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.closest_token"]], "completion_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.completion_type"]], "concepts (graphai.api.schemas.completion.slideconceptsmap attribute)": [[31, "graphai.api.schemas.completion.SlideConceptsMap.concepts"]], "coverage (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.coverage"]], "debug (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.debug"]], "debug (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.debug"]], "debug_message (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.debug_message"]], "entity (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.entity"]], "for_wikify (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.for_wikify"]], "force (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.force"]], "force (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.force"]], "force (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.fresh"]], "fresh (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.completion": [[31, "module-graphai.api.schemas.completion"]], "inferred_subtype (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.inferred_subtype"]], "keywords (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest.keywords"]], "min_freq (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.min_freq"]], "name (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.name"]], "number (graphai.api.schemas.completion.slideconceptsmap attribute)": [[31, "graphai.api.schemas.completion.SlideConceptsMap.number"]], "possible_subtypes (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.possible_subtypes"]], "result (graphai.api.schemas.completion.academicentitysummarytaskresponse attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryTaskResponse.result"]], "result (graphai.api.schemas.completion.cleanuptaskresponse attribute)": [[31, "graphai.api.schemas.completion.CleanupTaskResponse.result"]], "result (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.result"]], "result (graphai.api.schemas.completion.summarytaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryTaskResponse.result"]], "result_type (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.result_type"]], "simulate (graphai.api.schemas.completion.academicentitysummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummarizationRequest.simulate"]], "simulate (graphai.api.schemas.completion.completionrequestbase attribute)": [[31, "graphai.api.schemas.completion.CompletionRequestBase.simulate"]], "slides (graphai.api.schemas.completion.lecturesummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.LectureSummarizationRequest.slides"]], "slides (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetRequest.slides"]], "subject (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.subject"]], "subset (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[31, "graphai.api.schemas.completion.SlideSubsetResponse.subset"]], "subtype (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.subtype"]], "successful (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.successful"]], "successful (graphai.api.schemas.completion.summaryfingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintTaskResponse.successful"]], "summary_long (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.summary_long"]], "summary_short (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.summary_short"]], "task_result (graphai.api.schemas.completion.academicentitysummaryresponse attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponse.task_result"]], "task_result (graphai.api.schemas.completion.cleanupresponse attribute)": [[31, "graphai.api.schemas.completion.CleanupResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryfingerprintresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.completion.summaryresponse attribute)": [[31, "graphai.api.schemas.completion.SummaryResponse.task_result"]], "text (graphai.api.schemas.completion.academicentitydescriptor attribute)": [[31, "graphai.api.schemas.completion.AcademicEntityDescriptor.text"]], "text (graphai.api.schemas.completion.cleanuprequest attribute)": [[31, "graphai.api.schemas.completion.CleanupRequest.text"]], "text (graphai.api.schemas.completion.cleanupresponsedict attribute)": [[31, "graphai.api.schemas.completion.CleanupResponseDict.text"]], "text (graphai.api.schemas.completion.genericsummarizationrequest attribute)": [[31, "graphai.api.schemas.completion.GenericSummarizationRequest.text"]], "text (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.text_too_large"]], "text_type (graphai.api.schemas.completion.cleanuprequest attribute)": [[31, "graphai.api.schemas.completion.CleanupRequest.text_type"]], "text_type (graphai.api.schemas.completion.summaryfingerprintrequest attribute)": [[31, "graphai.api.schemas.completion.SummaryFingerprintRequest.text_type"]], "title (graphai.api.schemas.completion.summaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.SummaryResponseDict.title"]], "tokens (graphai.api.schemas.completion.completiontaskresponsebase attribute)": [[31, "graphai.api.schemas.completion.CompletionTaskResponseBase.tokens"]], "top_3_categories (graphai.api.schemas.completion.academicentitysummaryresponsedict attribute)": [[31, "graphai.api.schemas.completion.AcademicEntitySummaryResponseDict.top_3_categories"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[32, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[32, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[32, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[32, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[32, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[32, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[32, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[32, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "breakupclusterrequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.BreakUpClusterRequest"]], "breakupclustersclusternumberresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse"]], "breakupclustersresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.BreakUpClustersResponse"]], "breakupclusterstaskresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.BreakUpClustersTaskResponse"]], "categorychildrenrequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.CategoryChildrenRequest"]], "categorychildrenresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.CategoryChildrenResponse"]], "categoryinforequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.CategoryInfoRequest"]], "categoryinforesponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.CategoryInfoResponse"]], "categoryparentresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.CategoryParentResponse"]], "graphdistancerequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest"]], "graphdistanceresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphDistanceResponse"]], "graphnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest"]], "graphnearestcategoryresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryResponse"]], "graphnearestconceptrequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptRequest"]], "graphnearestconceptresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptResponse"]], "nearestcategoryelement (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.NearestCategoryElement"]], "nearestclusterelement (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.NearestClusterElement"]], "oneconceptresponseelement (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.OneConceptResponseElement"]], "recomputeclustersrequest (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.RecomputeClustersRequest"]], "recomputeclustersresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.RecomputeClustersResponse"]], "recomputeclusterstaskresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse"]], "treeparentresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.TreeParentResponse"]], "treeresponse (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[33, "graphai.api.schemas.ontology.TreeResponseElem"]], "avg (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.avg"]], "avg (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.avg"]], "category_assignments (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.category_assignments"]], "category_id (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[33, "graphai.api.schemas.ontology.CategoryChildrenRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforequest attribute)": [[33, "graphai.api.schemas.ontology.CategoryInfoRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryInfoResponse.category_id"]], "category_id (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[33, "graphai.api.schemas.ontology.NearestCategoryElement.category_id"]], "child_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[33, "graphai.api.schemas.ontology.TreeResponseElem.child_id"]], "child_to_parent (graphai.api.schemas.ontology.treeresponse attribute)": [[33, "graphai.api.schemas.ontology.TreeResponse.child_to_parent"]], "children (graphai.api.schemas.ontology.categorychildrenresponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryChildrenResponse.children"]], "closest (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptResponse.closest"]], "cluster_id (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClusterRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[33, "graphai.api.schemas.ontology.NearestClusterElement.cluster_id"]], "clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.clusters"]], "clusters (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[33, "graphai.api.schemas.ontology.NearestCategoryElement.clusters"]], "coeffs (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.coeffs"]], "coeffs (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.coeffs"]], "depth (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryInfoResponse.depth"]], "graphai.api.schemas.ontology": [[33, "module-graphai.api.schemas.ontology"]], "id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryInfoResponse.id"]], "id (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[33, "graphai.api.schemas.ontology.OneConceptResponseElement.id"]], "impurity_count (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_count"]], "impurity_proportion (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_proportion"]], "min_n (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersRequest.min_n"]], "n_clusters (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClusterRequest.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersRequest.n_clusters"]], "name (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryInfoResponse.name"]], "name (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[33, "graphai.api.schemas.ontology.OneConceptResponseElement.name"]], "parent (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[33, "graphai.api.schemas.ontology.CategoryParentResponse.parent"]], "parent_category (graphai.api.schemas.ontology.graphnearestcategoryresponse attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryResponse.parent_category"]], "parent_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[33, "graphai.api.schemas.ontology.TreeResponseElem.parent_id"]], "rank (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[33, "graphai.api.schemas.ontology.NearestCategoryElement.rank"]], "rank (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[33, "graphai.api.schemas.ontology.NearestClusterElement.rank"]], "results (graphai.api.schemas.ontology.breakupclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClustersTaskResponse.results"]], "results (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.results"]], "return_clusters (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.return_clusters"]], "score (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[33, "graphai.api.schemas.ontology.NearestCategoryElement.score"]], "score (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[33, "graphai.api.schemas.ontology.NearestClusterElement.score"]], "scores (graphai.api.schemas.ontology.graphnearestcategoryresponse attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptResponse.scores"]], "sim (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceResponse.sim"]], "src (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.src"]], "src (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptRequest.src"]], "src_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.src_type"]], "successful (graphai.api.schemas.ontology.breakupclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClustersTaskResponse.successful"]], "successful (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.successful"]], "task_result (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[33, "graphai.api.schemas.ontology.BreakUpClustersResponse.task_result"]], "task_result (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[33, "graphai.api.schemas.ontology.RecomputeClustersResponse.task_result"]], "task_result (graphai.api.schemas.ontology.treeparentresponse attribute)": [[33, "graphai.api.schemas.ontology.TreeParentResponse.task_result"]], "tgt (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt"]], "tgt_type (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[33, "graphai.api.schemas.ontology.CategoryChildrenRequest.tgt_type"]], "tgt_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[33, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt_type"]], "top_down_search (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_down_search"]], "top_n (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_n"]], "top_n (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[33, "graphai.api.schemas.ontology.GraphNearestConceptRequest.top_n"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[34, "module-graphai.api.schemas.scraping"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[34, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[34, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[35, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[35, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[35, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "device (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.device"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[36, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[37, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[38, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "strict (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.strict"]], "subtitle_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_results"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_results"]], "graphai.core": [[39, "module-graphai.core"]], "graphai.core.common": [[40, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.AudioDBCachingManager"]], "completiondbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.CompletionDBCachingManager"]], "fingerprintparameters (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.delete_file"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[41, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[41, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.completiondbcachingmanager method)": [[41, "graphai.core.common.caching.CompletionDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[41, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[41, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[41, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.load_values"]], "file_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[42, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_text_file"]], "graphai.core.common.config": [[43, "module-graphai.core.common.config"]], "generate_academic_entity_summary_message() (in module graphai.core.common.gpt_message_presets)": [[44, "graphai.core.common.gpt_message_presets.generate_academic_entity_summary_message"]], "generate_generic_summary_message() (in module graphai.core.common.gpt_message_presets)": [[44, "graphai.core.common.gpt_message_presets.generate_generic_summary_message"]], "generate_lecture_summary_message() (in module graphai.core.common.gpt_message_presets)": [[44, "graphai.core.common.gpt_message_presets.generate_lecture_summary_message"]], "graphai.core.common.gpt_message_presets": [[44, "module-graphai.core.common.gpt_message_presets"]], "conceptsgraph (class in graphai.core.common.graph)": [[45, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[45, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[45, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[45, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[45, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "graphai.core.common.json_repair": [[46, "module-graphai.core.common.json_repair"]], "at_end_of_block_comment() (in module graphai.core.common.json_repair.json_repair)": [[47, "graphai.core.common.json_repair.json_repair.at_end_of_block_comment"]], "graphai.core.common.json_repair.json_repair": [[47, "module-graphai.core.common.json_repair.json_repair"]], "repair_json() (in module graphai.core.common.json_repair.json_repair)": [[47, "graphai.core.common.json_repair.json_repair.repair_json"]], "jsonrepairerror": [[48, "graphai.core.common.json_repair.json_repair_error.JSONRepairError"]], "graphai.core.common.json_repair.json_repair_error": [[48, "module-graphai.core.common.json_repair.json_repair_error"]], "char_at() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.char_at"]], "char_code_at() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.char_code_at"]], "ends_with_comma_or_newline() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.ends_with_comma_or_newline"]], "graphai.core.common.json_repair.string_utils": [[49, "module-graphai.core.common.json_repair.string_utils"]], "insert_before_last_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.insert_before_last_whitespace"]], "is_control_character() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_control_character"]], "is_delimiter() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_delimiter"]], "is_digit() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_digit"]], "is_double_quote() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_double_quote"]], "is_double_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_double_quote_like"]], "is_hex() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_hex"]], "is_quote() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_quote"]], "is_single_quote() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_single_quote"]], "is_single_quote_like() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_single_quote_like"]], "is_special_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_special_whitespace"]], "is_start_of_value() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_start_of_value"]], "is_valid_string_character() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_valid_string_character"]], "is_whitespace() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.is_whitespace"]], "next_non_white_space_character() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.next_non_white_space_character"]], "remove_at_index() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.remove_at_index"]], "strip_last_occurrence() (in module graphai.core.common.json_repair.string_utils)": [[49, "graphai.core.common.json_repair.string_utils.strip_last_occurrence"]], "ontology (class in graphai.core.common.ontology)": [[50, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[50, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[50, "module-graphai.core.common.ontology"]], "graphai.core.common.ontology_utils": [[51, "module-graphai.core.common.ontology_utils"]], "arithmetic_mean_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.get_laplacian"]], "graphai.core.common.ontology_utils.clustering": [[52, "module-graphai.core.common.ontology_utils.clustering"]], "group_clustered() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.group_clustered"]], "normalize_features() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.normalize_features"]], "perform_pca() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.common.ontology_utils.clustering)": [[52, "graphai.core.common.ontology_utils.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.OntologyData"]], "average_and_combine() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.average_and_combine"]], "compute_average() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.compute_average"]], "compute_category_anchors_using_references() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.derive_col_to_col_graph"]], "get_category_anchor_pages() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_anchor_pages"]], "get_category_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_children"]], "get_category_cluster_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_cluster_list"]], "get_category_concept_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_cluster_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_cluster_concepts"]], "get_col_to_col_dict() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.get_col_to_col_dict"]], "get_concept_category_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_cluster_of_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_cluster_of_category"]], "get_concept_closest_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_closest_concept"]], "get_concept_cluster_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_concept_concept_similarity"]], "get_id_dict() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.get_ontology_concept_names_table"]], "graphai.core.common.ontology_utils.data": [[53, "module-graphai.core.common.ontology_utils.data"]], "load_anchor_page_dict() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.common.ontology_utils.data.ontologydata method)": [[53, "graphai.core.common.ontology_utils.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.common.ontology_utils.data)": [[53, "graphai.core.common.ontology_utils.data.to_ndarray_and_flatten"]], "check_url() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.check_url"]], "compare_strings() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.get_sublinks"]], "graphai.core.common.scraping": [[54, "module-graphai.core.common.scraping"]], "initialize_data_dict() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.common.scraping)": [[54, "graphai.core.common.scraping.string_circular_shift"]], "chatgptsummarizer (class in graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer"]], "translationmodels (class in graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.TranslationModels"]], "cleanup_text() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.cleanup_text"]], "compute_chatgpt_request_cost() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.compute_chatgpt_request_cost"]], "compute_slide_tfidf_scores() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.compute_slide_tfidf_scores"]], "convert_text_or_dict_to_text() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.convert_text_or_dict_to_text"]], "count_tokens_for_openai() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.count_tokens_for_openai"]], "detect_text_language() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.detect_text_language"]], "establish_connection() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.establish_connection"]], "find_best_slide_subset() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.find_set_cover"]], "force_dict_to_text() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.force_dict_to_text"]], "generate_completion_type_dict() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.generate_completion_type_dict"]], "generate_src_tgt_dict() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.generate_src_tgt_dict"]], "generate_summary_text_token() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.generate_summary_text_token"]], "generate_translation_text_token() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.common.text_utils.translationmodels method)": [[55, "graphai.core.common.text_utils.TranslationModels.get_device"]], "graphai.core.common.text_utils": [[55, "module-graphai.core.common.text_utils"]], "load_models() (graphai.core.common.text_utils.translationmodels method)": [[55, "graphai.core.common.text_utils.TranslationModels.load_models"]], "make_sure_json_is_valid() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.make_sure_json_is_valid"]], "md5_text() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.md5_text"]], "perceptual_hash_text() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.perceptual_hash_text"]], "summarize_academic_entity() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_academic_entity"]], "summarize_generic() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_generic"]], "summarize_lecture() (graphai.core.common.text_utils.chatgptsummarizer method)": [[55, "graphai.core.common.text_utils.ChatGPTSummarizer.summarize_lecture"]], "translate() (graphai.core.common.text_utils.translationmodels method)": [[55, "graphai.core.common.text_utils.TranslationModels.translate"]], "translation_list_to_text() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.translation_list_to_text"]], "translation_text_back_to_list() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.translation_text_back_to_list"]], "update_token_count() (in module graphai.core.common.text_utils)": [[55, "graphai.core.common.text_utils.update_token_count"]], "googleocrmodel (class in graphai.core.common.video)": [[56, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[56, "graphai.core.common.video.NLPModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[56, "graphai.core.common.video.WhisperTranscriptionModel"]], "check_ocr_and_hash_thresholds() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.check_ocr_and_hash_thresholds"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.compute_video_ocr_transitions"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[56, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[56, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.generate_symbolic_token"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[56, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[56, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[56, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.perceptual_hash_image"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[56, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_generic_url() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.retrieve_file_from_url"]], "retrieve_file_from_youtube() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.retrieve_file_from_youtube"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[56, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[56, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[56, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[57, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[58, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[58, "graphai.core.interfaces.celery_config.route_task"]], "wp (class in graphai.core.interfaces.wp)": [[59, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[59, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[59, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[60, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[61, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[61, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[61, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[62, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[62, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[62, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[62, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[63, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[64, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[64, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[64, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[64, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[64, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[64, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[65, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[65, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[65, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[65, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[66, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[67, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[67, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[67, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[67, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[67, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[67, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[67, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[68, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[68, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[68, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[68, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[68, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[69, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[70, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[70, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[70, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[70, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[71, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[71, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[72, "module-graphai.definitions"]], "graphai.pipelines": [[73, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[74, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[76, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[76, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[77, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[78, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[78, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[78, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[78, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[78, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[78, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[79, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[79, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[79, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[79, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[79, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[80, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[80, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[81, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[81, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[82, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[82, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[83, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[83, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[84, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[84, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[85, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[85, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[86, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[86, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[87, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[87, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[88, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[88, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[89, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[89, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[89, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[89, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[89, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[90, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[94, "module-graphai.pipelines.visualisation"]]}})