Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.dummy", "graphai.pipelines.elasticsearch.populate", "graphai.pipelines.elasticsearch.populate_dummy", "graphai.pipelines.elasticsearch.search", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.dummy.rst", "graphai.pipelines.elasticsearch.populate.rst", "graphai.pipelines.elasticsearch.populate_dummy.rst", "graphai.pipelines.elasticsearch.search.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.dummy module", "graphai.pipelines.elasticsearch.populate module", "graphai.pipelines.elasticsearch.populate_dummy module", "graphai.pipelines.elasticsearch.search module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 34, 35, 37, 48, 54, 70], "contain": [0, 3, 28, 34, 37, 39, 45, 70], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 10, 20, 28, 33, 44, 70, 80], "project": 0, "ai": 0, "base": [0, 20, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 47, 48, 50, 51, 54, 70, 75], "util": [0, 32], "api": [0, 37, 42], "core": 0, "pipelin": 0, "definit": [0, 40, 70], "modul": [0, 1, 2, 10, 17, 24, 33, 38, 43, 46, 49, 52, 57, 63, 76, 80], "celery_task": 1, "common": [1, 2, 24, 32], "router": 1, "schema": [1, 40], "main": [1, 63, 65], "imag": [2, 3, 17, 24, 37], "ontologi": [2, 10, 17, 20, 24, 25, 33, 44], "text": [2, 3, 17, 21, 24, 26, 29, 32, 37, 41, 42, 46], "translat": [2, 3, 17, 24, 37], "video": [2, 3, 10, 17, 24, 33], "voic": [2, 17, 24], "format_api_result": 3, "id": [3, 28, 34, 35, 39], "name": [3, 34, 37, 39, 51], "statu": [3, 39], "result": [3, 6, 20, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 41, 42, 44, 70], "format": [3, 37, 41, 53], "come": 3, "from": [3, 20, 34, 35, 37, 45, 50, 70], "celeri": [3, 39], "output": [3, 25, 27, 37], "param": [3, 34, 37, 39, 64, 71], "task": [3, 39, 48, 54], "return": [3, 20, 34, 35, 37, 39, 41, 42, 45, 50, 51, 53, 54, 70], "appropri": 3, "dictionari": [3, 34, 37, 41, 51], "fingerprint_lookup_retrieve_from_db": 3, "db_manag": 3, "equality_condit": [3, 34], "none": [3, 13, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 34, 37, 39, 40, 41, 47, 48, 51, 70, 71], "retriev": [3, 20, 34, 37, 41, 54], "number": [3, 34, 35, 37, 41, 42, 48, 51, 70], "cach": [3, 33, 37], "row": [3, 34, 70], "relev": [3, 20, 28], "fingerprint": [3, 37], "lookup": 3, "dict": [3, 30, 34, 35, 37, 41, 51], "comput": [3, 35, 37, 70], "dbcachingmanagerbas": [3, 34], "object": [3, 25, 27, 28, 34, 35, 36, 37, 39, 40, 41, 42, 47, 48, 51, 53, 54], "equal": [3, 34], "condit": [3, 34, 40], "count": [3, 34], "onli": [3, 20, 34, 37, 51, 70], "us": [3, 34, 37, 41, 45, 50, 54, 70], "unexpect": [3, 37, 70], "indent": [3, 37, 47, 51], "where": [3, 34, 37, 70], "need": [3, 34, 54], "done": [3, 20], "among": [3, 20], "same": [3, 37, 70], "sourc": [3, 29, 35, 37], "target": [3, 29, 35, 37], "lang": [3, 37], "origin": [3, 34, 37], "plu": [3, 37], "fingerprint_lookup_parallel": 3, "input_dict": 3, "i": [3, 20, 34, 35, 37, 45, 48, 50, 54, 70], "n_total": 3, "min_similar": [3, 18, 21, 22, 23, 37], "data_typ": 3, "audio": [3, 37], "perform": [3, 37, 41, 42, 70], "parallel": 3, "previou": [3, 48, 54], "step": [3, 37], "index": [3, 37, 41, 70], "thi": [3, 20, 37, 48, 70], "total": [3, 13, 48, 54], "minimum": [3, 37], "similar": [3, 34, 37, 70], "threshold": [3, 23, 31, 37, 45], "two": [3, 34, 35, 37], "consid": [3, 37], "match": [3, 34, 37, 41], "type": [3, 34, 35, 37, 41, 42, 45, 50, 51], "data": [3, 18, 20, 21, 22, 23, 51], "can": [3, 20, 34, 37, 54], "mode": 3, "detail": [3, 34, 37], "closest": [3, 34, 37], "which": [3, 28, 34, 37, 45, 70], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 20], "databas": [3, 40], "insert": [3, 34], "list": [3, 20, 26, 27, 28, 34, 35, 37, 45, 70], "aggregate_result": 6, "coef": 6, "0": [6, 20, 28, 31, 34, 35, 37, 44, 51, 53, 54, 64, 70], "5": [6, 20, 28, 37, 54], "filter_result": 6, "epsilon": [6, 64], "1": [6, 20, 28, 34, 35, 37, 45, 53, 54, 70], "min_vot": 6, "celery_tool": 10, "log": [10, 47, 51], "get_n_celery_work": 11, "msg": [13, 47, 51, 54], "second": [13, 34, 37, 54], "fals": [13, 18, 20, 21, 22, 23, 26, 29, 30, 31, 34, 37, 40, 45, 51, 54, 70], "length": [13, 37], "64": 13, "async": [16, 18, 19, 20, 21, 22, 23], "init": 16, "redirect_doc": 16, "get_slide_fingerprint_chain_list": 18, "token": [18, 21, 22, 23, 25, 26, 30, 31, 34, 37, 45], "forc": [18, 21, 22, 23, 26, 29, 30, 31, 34], "n_job": [18, 21, 22, 23], "8": [18, 21, 22, 23, 37], "ignore_fp_result": [18, 21, 22, 23], "results_to_return": [18, 21, 22, 23], "calculate_fingerprint": [18, 21, 22], "imagefingerprintrequest": [18, 26], "calculate_fingerprint_statu": [18, 21, 22], "task_id": [18, 21, 22, 23, 25, 26, 27, 29, 30, 31, 39], "extract_text": 18, "extracttextrequest": [18, 26], "extract_text_statu": 18, "detect_ocr_language_statu": 18, "ontology_tree_response_handl": 19, "id_and_result": 19, "tree": [19, 25, 27, 37], "parent": 19, "category_id": [19, 36], "children": 19, "keyword": [20, 28, 41, 42, 43], "keywordsrequest": [20, 28], "use_nltk": [20, 45], "bool": [20, 26, 29, 30, 31, 41, 45, 51, 70], "process": 20, "raw": [20, 28, 45, 50], "e": [20, 37, 38], "g": [20, 37], "an": [20, 34, 37, 51], "abstract": [20, 34], "public": 20, "cours": 20, "descript": 20, "lectur": 20, "slide": [20, 37], "wikifi": [20, 28], "wikifyrequest": [20, 28], "method": [20, 26, 37, 70], "str": [20, 25, 26, 27, 28, 29, 30, 31, 35, 41, 42, 45, 50, 51, 54, 70], "restrict_to_ontologi": 20, "graph_score_smooth": 20, "true": [20, 30, 34, 35, 36, 37, 45, 47, 51, 54, 70], "ontology_score_smooth": 20, "keywords_score_smooth": 20, "normalisation_coef": 20, "float": [20, 28, 30, 31, 35, 45, 54, 70], "filtering_threshold": 20, "filtering_min_vot": 20, "int": [20, 27, 28, 30, 35, 41, 42, 48, 51], "refresh_scor": 20, "concept": [20, 65, 70], "wikipedia": [20, 28, 42], "page": [20, 28, 35], "ar": [20, 37, 45, 53, 70], "each": [20, 28, 35, 37, 48, 54, 70], "set": [20, 28, 37, 39, 41, 42, 70], "score": [20, 28, 35, 37, 45, 70], "quantifi": 20, "follow": [20, 37, 41, 48, 50, 54, 70], "extract": [20, 28, 37, 45], "automat": [20, 34, 37], "omit": 20, "keyword_list": 20, "provid": [20, 37, 39], "input": [20, 37], "instead": [20, 34], "raw_text": [20, 28], "wikisearch": [20, 41, 42], "For": [20, 70], "10": [20, 41, 42, 70], "through": [20, 37], "request": [20, 34], "elasticsearch": [20, 41, 56], "pair": [20, 35, 45, 54, 70], "sever": [20, 28, 54], "deriv": 20, "take": [20, 70], "account": 20, "other": [20, 54], "filter": [20, 41], "accord": [20, 70], "some": [20, 48, 54, 70], "rule": 20, "keep": [20, 48], "most": [20, 34, 37], "wikify_ontology_svg": 20, "wikifyresponseelem": [20, 28], "level": [20, 44], "2": [20, 37, 54, 70, 80], "svg": 20, "file": [20, 34, 37, 51], "repres": [20, 25, 27, 28, 45, 48, 54], "subgraph": 20, "induc": 20, "wikify_graph_svg": 20, "concept_score_threshold": [20, 44], "3": [20, 44, 50, 54, 80], "edge_threshold": [20, 44], "min_component_s": [20, 44], "priority_test_text": 20, "get_text_fingerprint_chain_list": 21, "src": [21, 37], "tgt": [21, 37], "textfingerprintrequest": [21, 29], "translationrequest": [21, 29], "translate_statu": 21, "text_detect_languag": 21, "textdetectlanguagerequest": [21, 29], "text_detect_language_statu": 21, "get_video_fingerprint_chain_list": 22, "retrieve_fil": 22, "retrieveurlrequest": [22, 30], "get_retrieve_file_statu": 22, "videofingerprintrequest": [22, 30], "get_fil": 22, "filerequest": [22, 25], "extract_audio": 22, "extractaudiorequest": [22, 30], "extract_audio_statu": 22, "detect_slid": 22, "detectslidesrequest": [22, 30], "detect_slides_statu": 22, "get_audio_fingerprint_chain_list": 23, "remove_sil": [23, 31], "calculate_audio_fingerprint": 23, "audiofingerprintrequest": [23, 31], "calculate_audio_fingerprint_statu": 23, "transcrib": [23, 37], "audiotranscriptionrequest": [23, 31], "transcribe_statu": 23, "detect_languag": 23, "audiodetectlanguagerequest": [23, 31], "priority_test": 23, "detect_language_statu": 23, "class": [25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 47, 48, 50, 51, 54], "taskidrespons": 25, "basemodel": [25, 26, 27, 28, 29, 30, 31], "endpoint": [25, 27], "taskstatusrespons": [25, 26, 27, 29, 30, 31], "task_nam": [25, 26, 27, 29, 30, 31], "task_statu": [25, 26, 27, 29, 30, 31], "task_result": [25, 26, 27, 29, 30, 31, 39], "jsonwrappervalu": 25, "abc": [25, 34], "imagefingerprinttaskrespons": 26, "fresh": [26, 29, 30, 31], "closest_token": [26, 29, 30, 31], "closest_token_origin": [26, 31], "success": [26, 29, 30, 31, 37], "imagefingerprintrespons": 26, "liter": [26, 29, 30], "googl": [26, 37], "tesseract": [26, 37], "individualocrresult": 26, "extracttexttaskrespons": 26, "languag": [26, 29, 30, 31, 37], "extracttextrespons": 26, "detectocrlanguagetaskrespons": 26, "detectocrlanguagerespons": 26, "treeresponseelem": 27, "childcategoryid": 27, "parentcategoryid": 27, "treerespons": 27, "inform": [28, 41], "anchor": 28, "defin": [28, 70, 74], "search": [28, 37, 41, 42, 57], "space": [28, 45, 51], "pageid": [28, 41, 42, 70], "pagetitl": [28, 41, 42], "searchscor": [28, 41, 42], "levenshteinscor": 28, "graphscor": 28, "ontologylocalscor": 28, "ontologyglobalscor": 28, "keywordsscor": 28, "mixedscor": 28, "It": [28, 45, 50, 70], "consist": [28, 37], "measur": 28, "degre": 28, "respect": [28, 53, 70], "config": 28, "schema_extra": 28, "exampl": [28, 35, 45, 50, 70], "1196": [28, 35], "angl": 28, "8055555555555556": 28, "44735199351890065": 28, "9058463104630012": 28, "152547": 28, "bisect": 28, "3333333333333333": 28, "16661245633224378": 28, "22717425120724127": 28, "6666666666666667": 28, "609271523178808": 28, "44715741719086977": 28, "23972889": 28, "distance_from_a_point_to_a_lin": 28, "16666666666666669": 28, "2134432477817427": 28, "003590346636521923": 28, "21885521885521886": 28, "19791666666666666": 28, "19828593689131283": 28, "17781458572659029": 28, "946975": [28, 35], "line_": 28, "geometri": 28, "33567080901262164": 28, "8232323232323234": 28, "7916666666666666": 28, "7855473315153876": 28, "7886663359580247": 28, "22634860": 28, "line_seg": 28, "5555555555555556": 28, "3582111602475977": 28, "42461810549112244": 28, "43097643097643096": 28, "75": [28, 48], "6026490066225165": 28, "5277457623305826": 28, "2175469": 28, "non": [28, 34, 41], "line": [28, 37, 51, 70], "sight_propag": 28, "19444444444444448": 28, "39019342923035233": 28, "01572170017309725": 28, "21212121212121213": 28, "11647727272727273": 28, "5087650954421504": 28, "2950855110143057": 28, "133496": 28, "parallelogram": 28, "3055555555555556": 28, "13627674782665528": 28, "14484503981375635": 28, "4288185842201275": 28, "76944": 28, "perpendicular": 28, "19444444444444445": 28, "039652736888335365": 28, "15017752515904018": 28, "25": [28, 48], "2584729255940787": 28, "19421461143444865": 28, "25278": 28, "quadrilater": 28, "02777777777777779": 28, "15367913840285474": 28, "12360559235107477": 28, "36363636363636365": 28, "3307362680171406": 28, "21973432050168798": 28, "76956": 28, "right_angl": 28, "4166666666666667": 28, "4451948682556247": 28, "12678424818870415": 28, "42424242424242425": 28, "4107908063887807": 28, "3996645939435453": 28, "94102": 28, "solid_angl": 28, "3888888888888889": 28, "6912823774628103": 28, "08695255651117278": 28, "196969696969697": 28, "15909090909090912": 28, "7415270744059212": 28, "4580780578246384": 28, "31482": 28, "tangent": 28, "4722222222222222": 28, "29631455223594527": 28, "3573397570845174": 28, "6414141414141414": 28, "59375": 28, "48284225283305426": 28, "30654": 28, "triangl": 28, "5717479784842091": 28, "2535403349997643": 28, "47723102055958355": 28, "en": [29, 30, 37], "fr": [29, 30, 37], "de": 29, "textfingerprinttaskrespons": 29, "textfingerprintrespons": 29, "translationtaskrespons": 29, "text_too_larg": 29, "translationrespons": 29, "textdetectlanguagetaskrespons": 29, "textdetectlanguagerespons": 29, "url": [30, 37, 50], "kaltura": [30, 37], "timeout": [30, 37], "240": 30, "retrieveurlresponseinn": 30, "retrieveurlrespons": 30, "videofingerprinttaskrespons": 30, "videofingerprintrespons": 30, "extractaudiotaskrespons": 30, "durat": [30, 31, 37], "extractaudiorespons": 30, "slidetokenandtimestamp": 30, "timestamp": [30, 37, 53], "detectslidestaskrespons": 30, "slide_token": 30, "detectslidesrespons": 30, "audiofingerprinttaskrespons": 31, "fp_nosil": 31, "audiofingerprintrespons": 31, "audiodetectlanguagetaskrespons": 31, "audiodetectlanguagerespons": 31, "force_lang": [31, 37], "audiotranscriptiontaskrespons": 31, "transcript_result": 31, "subtitle_result": 31, "json": [31, 37, 51], "audiotranscriptionrespons": 31, "interfac": 32, "make_sure_path_exist": 34, "path": [34, 35, 37, 75], "file_at_the_end": 34, "full_perm": 34, "recurs": [34, 37], "creat": [34, 37, 39, 41, 51, 54], "folder": [34, 37], "exist": [34, 37, 51], "thu": 34, "doesn": [34, 37], "t": [34, 35, 37, 45, 51], "whether": [34, 37, 45, 54, 70], "filenam": [34, 37, 51], "end": [34, 37, 70], "file_exist": 34, "file_path": 34, "check": 34, "given": [34, 37, 39, 41, 42, 45, 50, 51, 53, 70], "otherwis": [34, 37, 45, 70], "create_symlink_between_path": 34, "old_path": 34, "new_path": 34, "symlink": 34, "old": 34, "real": 34, "new": [34, 37, 54], "surround_with_charact": 34, "": [34, 35, 37, 50], "c": [34, 48, 50, 70], "surround": 34, "string": [34, 37, 45], "charact": 34, "escape_single_quot": 34, "escap": 34, "singl": [34, 37], "quot": [34, 37], "sql": 34, "queri": [34, 40, 41, 42], "add_where_or_and": 34, "prepar": 34, "ad": 34, "alreadi": [34, 37], "have": [34, 70], "one": [34, 37, 45, 48, 54, 70], "AND": 34, "doe": [34, 37, 51], "add_equality_condit": 34, "gener": [34, 37, 45], "A": [34, 35, 37, 41, 42, 45], "would": 34, "form": 34, "kei": [34, 35, 37, 70], "valu": [34, 37, 40, 70], "add_non_null_condit": 34, "col": 34, "null": 34, "column": [34, 41, 42, 70], "cannot": 34, "turn": 34, "NOT": 34, "cache_t": 34, "most_similar_t": 34, "init_db": 34, "delete_cache_row": 34, "id_token": 34, "delet": [34, 41, 50], "tabl": [34, 74], "insert_or_update_detail": 34, "values_to_insert": 34, "updat": [34, 48], "identifi": [34, 37], "map": [34, 41, 53], "update_details_if_exist": 34, "get_detail": 34, "using_most_similar": 34, "get": [34, 50], "resolv": 34, "chain": 34, "own": 34, "If": [34, 37, 45, 51, 70], "itself": [34, 37], "get_origin": 34, "applic": 34, "get_details_using_origin": 34, "origin_token": 34, "get_all_detail": 34, "start": [34, 37], "limit": [34, 41, 42], "exclude_token": 34, "allow_nul": 34, "earliest_d": 34, "all": [34, 35, 37, 41, 45, 54, 70], "possibli": 34, "constraint": 34, "offset": 34, "claus": [34, 41], "exclud": 34, "allow": 34, "earliest": 34, "date": [34, 52], "colnam": 34, "get_cache_count": 34, "non_null_col": 34, "enforc": 34, "satisfi": [34, 37], "insert_or_update_closest_match": 34, "get_closest_match": 34, "final": [34, 54, 70], "get_all_closest_match": 34, "videodbcachingmanag": 34, "audiodbcachingmanag": 34, "slidedbcachingmanag": 34, "textdbcachingmanag": 34, "videoconfig": 34, "concat_file_path": 34, "subfold": 34, "concaten": 34, "root": [34, 37], "dir": 34, "should": [34, 41, 51], "full": [34, 37], "generate_filepath": 34, "force_dir": 34, "its": [34, 37, 70], "particular": 34, "create_symlink": 34, "new_filenam": 34, "between": [34, 37, 53, 54, 70], "conceptsgraph": 35, "fetch_from_db": [35, 36], "compute_scor": 35, "source_page_id": 35, "target_page_id": 35, "possibl": [35, 45], "displaystyl": 35, "frac": 35, "ln": 35, "rebound": 35, "out": 35, "min": 35, "max": 35, "paramet": [35, 37, 41, 42, 45, 48, 50, 51, 54, 63, 70], "element": 35, "ha": [35, 70], "cg": 35, "6220": 35, "18973446": 35, "9417": 35, "5193576613841849": 35, "4740698357575134": 35, "3591100561928845": 35, "5343247664351338": 35, "530184349205493": 35, "40043881227279876": 35, "add_graph_scor": 35, "smooth": [35, 36], "get_concept_categori": 36, "page_id": 36, "get_predefined_tre": 36, "get_category_par": 36, "get_category_children": 36, "add_concepts_categori": 36, "add_categories_categori": 36, "filter_concept": 36, "old_add_ontology_scor": 36, "add_ontology_scor": 36, "write_text_fil": 37, "filename_with_path": 37, "content": [37, 51], "write": 37, "textual": 37, "write_json_fil": 37, "d": [37, 48, 50], "read_text_fil": 37, "open": 37, "read": [37, 51], "read_json_fil": 37, "md5_text": 37, "md5": 37, "hash": 37, "generate_random_token": 37, "random": [37, 75], "current": [37, 53], "time": [37, 46, 48], "get_current_datetim": 37, "datetim": [37, 53], "mysql": 37, "generate_src_tgt_dict": 37, "generate_text_token": 37, "retrieve_file_from_url": 37, "output_filename_with_path": 37, "output_token": 37, "wget": 37, "store": 37, "local": 37, "retrieve_file_from_kaltura": 37, "120": 37, "m3u8": 37, "playlist": 37, "download": 37, "oper": [37, 41], "perform_prob": 37, "input_filename_with_path": 37, "probe": 37, "ffprobe": 37, "see": 37, "document": [37, 41], "generate_symbolic_token": 37, "symbol": 37, "md5_video_or_audio": 37, "stream": 37, "detect_audio_format_and_dur": 37, "input_token": 37, "detect": 37, "track": [37, 48, 54], "ogg": 37, "extract_audio_from_video": 37, "extract_media_seg": 37, "segment": 37, "indic": [37, 41], "find_beginning_and_ending_sil": 37, "distance_from_end_tol": 37, "01": [37, 64], "noise_thresh": 37, "0001": 37, "silenc": 37, "begin": [37, 54], "toler": 37, "distanc": [37, 70], "nois": 37, "remov": 37, "remove_silence_doublesid": 37, "without": [37, 54, 70], "unsuccess": 37, "perceptual_hash_audio": 37, "max_length": 37, "7200": 37, "perceptu": 37, "maximum": [37, 41, 42, 70], "represent": 37, "decod": 37, "both": [37, 70], "perceptual_hash_imag": 37, "hash_siz": 37, "16": 37, "size": 37, "perceptual_hash_text": 37, "min_window_length": 37, "max_window_length": 37, "50": [37, 48], "hash_len": 37, "32": 37, "strong": [37, 50], "window": 37, "k": [37, 70], "gram": 37, "compare_decoded_fingerprint": 37, "decoded_1": 37, "decoded_2": 37, "compar": [37, 70], "fuzzi": 37, "ratio": [37, 70], "compare_encoded_fingerprint": 37, "f1": 37, "f2": 37, "decoder_func": 37, "function": [37, 54, 70], "decode_fingerprint": 37, "encod": [37, 50], "them": 37, "exact": 37, "so": 37, "find_closest_fingerprint_from_list": 37, "target_fp": 37, "fp_list": 37, "token_list": 37, "date_list": 37, "candid": 37, "find": [37, 40], "highest": 37, "whose": [37, 70], "abov": [37, 53, 70], "correspond": 37, "those": 37, "lower": 37, "than": [37, 45, 70], "block": [37, 51, 54], "blank": [37, 70], "unind": [37, 70], "differ": [37, 54, 70], "v": [37, 40, 70], "three": 37, "criterion": 37, "find_closest_audio_fingerprint_from_list": 37, "find_closest_image_fingerprint_from_list": 37, "extract_fram": 37, "output_folder_with_path": 37, "output_fold": 37, "frame": 37, "generate_frame_sample_indic": 37, "input_folder_with_path": 37, "12": 37, "we": 37, "don": [37, 45], "everi": [37, 51, 70], "our": 37, "calcul": 37, "read_txt_gz_fil": 37, "fp": 37, "txt": 37, "gz": 37, "write_txt_gz_fil": 37, "read_json_gz_fil": 37, "perform_tesseract_ocr": 37, "image_path": 37, "ocr": 37, "tesseract_ocr_or_get_cach": 37, "ocr_path": 37, "langaug": 37, "frame_ocr_dist": 37, "k1": 37, "k2": 37, "nlp_model": 37, "nlp": 37, "model": 37, "frame_hash_similar": 37, "compute_ocr_noise_level": 37, "frame_sample_indic": 37, "sequenc": 37, "sampl": 37, "below": [37, 45, 53], "default": [37, 39, 45, 54], "compute_ocr_threshold": 37, "distance_list": 37, "default_threshold": 37, "subsequ": 37, "empti": 37, "frame_ocr_transit": 37, "k_l": 37, "k_r": 37, "ocr_dist_threshold": 37, "hash_similarity_threshold": 37, "transit": 37, "binari": 37, "thei": [37, 45], "frame_format": 37, "leftmost": 37, "rightmost": 37, "distinct": 37, "found": 37, "compute_video_ocr_transit": 37, "hash_dist_threshold": 37, "pars": [37, 50], "transitori": 37, "detect_text_languag": 37, "whispertranscriptionmodel": 37, "load_model_whisp": 37, "lazi": 37, "load": 37, "whisper": 37, "memori": 37, "model_typ": 37, "doc": [37, 41], "detect_audio_segment_lang_whisp": 37, "30": 37, "code": [37, 51], "transcribe_audio_whisp": 37, "verbos": 37, "explicitli": 37, "feed": [37, 50], "transcript": 37, "like": 37, "subtitl": 37, "nlpmodel": 37, "get_nlp_model": 37, "googleocrmodel": 37, "establish_connect": 37, "lazili": 37, "connect": 37, "successfulli": 37, "establish": 37, "perform_ocr": 37, "text_detect": 37, "document_text_detect": 37, "wait_for_ocr_result": 37, "image_object": 37, "dtd": 37, "retri": 37, "6": [37, 54], "make": 37, "call": [37, 45], "wait": 37, "td": 37, "case": [37, 51], "failur": 37, "translationmodel": 37, "load_model": 37, "huggingfac": 37, "pysbd": 37, "how": [37, 45], "unpunctu": 37, "too": [37, 54], "long": 37, "flag": 37, "fingerprintparamet": 37, "load_valu": 37, "fail": 37, "get_min_sim_text": 37, "get_min_sim_imag": 37, "get_min_sim_audio": 37, "get_min_sim_video": 37, "celery_config": 38, "db": [38, 71], "wp": 38, "route_task": 39, "arg": 39, "kwarg": 39, "option": 39, "kw": 39, "baseconfig": 39, "developmentconfig": 39, "get_set": 39, "create_celeri": 39, "app": 39, "get_celery_task": 39, "asyncresult": 39, "get_task_info": 39, "info": 39, "quote_valu": 40, "commun": [40, 41, 42], "epflgraph": [40, 41], "execute_queri": 40, "execut": [40, 48, 54], "custom": 40, "build_conditions_list": 40, "table_nam": 40, "field": [40, 41], "print_queri": 40, "drop_tabl": 40, "create_t": 40, "insert_datafram": 40, "df": [40, 64, 71], "drop_create_insert_t": 40, "check_if_table_exist": 40, "es_bool": 41, "must": 41, "must_not": 41, "build": 41, "argument": 41, "es_match": 41, "boost": 41, "es_multi_match": 41, "minimum_should_match": 41, "multi_match": 41, "es_dis_max": 41, "dis_max": 41, "instanc": 41, "panda": [41, 42, 53], "datafram": [41, 42, 70], "searchrank": [41, 42], "uniqu": [41, 42, 70], "pd": [41, 42, 70], "search_mediawiki": 41, "mediawiki": 41, "structur": 41, "search_mediawiki_no_rescor": 41, "skip": [41, 51], "rescor": 41, "part": 41, "search_mediawiki_no_plain": 41, "restrict": 41, "plain": 41, "search_mediawiki_restrict_4": 41, "titl": 41, "head": 41, "opening_text": 41, "search_mediawiki_restrict_2": 41, "about": [41, 45], "respons": 41, "index_doc": 41, "create_index": [41, 57], "delete_index": 41, "refresh": 41, "draw": 43, "draw_ontologi": 44, "draw_graph": 44, "word_token": 45, "word": 45, "sentenc": 45, "separ": 45, "you": [45, 50], "rake_extract": 45, "split_word": 45, "return_scor": 45, "unconstrain": 45, "python": 45, "rake": 45, "nltk": 45, "more": [45, 48, 54], "split": 45, "retur": 45, "tupl": [45, 70], "minim": 45, "ignor": 45, "join": [45, 50], "Then": 45, "crowd": 45, "young": 45, "boi": 45, "re": 45, "foolin": 45, "around": 45, "corner": 45, "drunk": 45, "dress": 45, "best": 45, "brown": 45, "baggi": 45, "platform": 45, "sole": 45, "give": 45, "damn": 45, "ani": [45, 70], "trumpet": 45, "playin": 45, "band": 45, "ain": 45, "what": 45, "rock": 45, "roll": 45, "get_keyword": 45, "normal": [45, 50], "p": [45, 50], "breadcrumb": 46, "progress_bar": 46, "debug": [47, 51], "color": [47, 51], "time_color": 47, "grai": 47, "report": [47, 54], "outdent": 47, "progressbar": 48, "n_iter": 48, "bar_length": 48, "progress": 48, "bar": 48, "usag": [48, 54], "letter": 48, "b": 48, "pb": 48, "len": 48, "run": [48, 54], "consum": [48, 54], "00": 48, "100": 48, "print": [48, 50, 51, 53, 54], "iter": 48, "percentag": 48, "complet": [48, 54, 75], "overwrit": 48, "state": 48, "ban": 48, "reset": [48, 51, 54], "increment": 48, "counter": 48, "reus": [48, 54], "clean": 49, "io": 49, "htmlcleaner": 50, "htmlparser": 50, "html": 50, "tag": 50, "shiver": 50, "dark": 50, "br": 50, "rain": 50, "park": 50, "meantim": 50, "get_data": 50, "handle_starttag": 50, "attr": 50, "handle_endtag": 50, "handle_data": 50, "solv": 50, "problem": 50, "email": 50, "convert": 50, "lowercas": 50, "u2018rain": 50, "u2019": 50, "lt": 50, "evalu": 51, "pref": 51, "x1b": 51, "0m": 51, "black": 51, "30m": 51, "blue": 51, "34m": 51, "cyan": 51, "36m": 51, "green": 51, "32m": 51, "magenta": 51, "35m": 51, "red": 51, "31m": 51, "white": 51, "37m": 51, "yellow": 51, "33m": 51, "cprint": 51, "is_bold": 51, "bold": 51, "pprint": 51, "inlin": 51, "only_first": 51, "pretti": 51, "preced": 51, "first": [51, 54], "ellipsi": 51, "avoid": 51, "big": 51, "read_json": 51, "save_json": 51, "save": 51, "mkdir": 51, "dirnam": 51, "directori": 51, "stopwatch": 52, "now": 53, "2022": 53, "06": 53, "28": 53, "09": 53, "46": 53, "21": 53, "677968": 53, "rescal": 53, "min_dat": 53, "max_dat": 53, "seri": 53, "linearli": 53, "rang": [53, 70], "assum": [53, 70], "yyyi": 53, "mm": 53, "dd": 53, "add_year": 53, "n_year": 53, "sw": 54, "delta": 54, "4": [54, 80], "284306764602661": 54, "variabl": 54, "consecut": 54, "well": 54, "t1": 54, "t2": 54, "yet": 54, "t3": 54, "609307289123535": 54, "849977970123291": 54, "660188913345337": 54, "also": 54, "preprocess": 54, "pre_tim": 54, "task_tim": 54, "postprocess": 54, "post_tim": 54, "total_tim": 54, "f": 54, "proport": 54, "5176954220125477": 54, "tick": 54, "replac": [54, 70], "partial": 54, "furthermor": 54, "19": 54, "86": 54, "lap": 54, "74": 54, "11": 54, "66": 54, "45": 54, "checkpoint": 54, "finish": 54, "summari": 54, "includ": 54, "last": 54, "boolean": 54, "befor": [54, 70], "messag": 54, "invest": 56, "valid": 56, "visualis": 56, "dummi": 57, "popul": 57, "populate_dummi": 57, "gen_random_phras": 59, "min_word": 59, "max_word": 59, "gen_random_doc": 59, "n": [59, 75], "aggregate_recent_past": 63, "check_unit": 63, "compute_fundraisers_unit": 63, "compute_investors_unit": 63, "compute_investors_units_2": 63, "compute_jaccard_index": 63, "concept_configur": 63, "create_investments_graph": 63, "detect_fundraisers_concept": 63, "toy_exampl": 63, "compute_year_coeffici": 64, "recent_past": 64, "rescale_scor": 64, "year": 64, "aggregate_year": 64, "groupby_column": [64, 71], "normalize_scor": 64, "score_column": 64, "show_trend": 65, "unit_id": 65, "unit_concept": 65, "show_matchmaking_list_view": 65, "investors_concepts_jaccard": 65, "investors_concept": 65, "unit_concept_id": 65, "show_matchmaking_chart_view": 65, "unit_investor": 65, "time_window": 65, "norm": 70, "x": 70, "configur": 70, "investorid": 70, "sqrt": 70, "sum_": 70, "o": 70, "normalis": 70, "divid": 70, "henc": 70, "mix": 70, "edg": 70, "min_ratio": 70, "05": 70, "sourcepageid": 70, "targetpageid": 70, "weight": 70, "over": 70, "kept": 70, "arithmet": 70, "mean": 70, "product": 70, "ball": 70, "loop": 70, "normalise_graph": 70, "add": 70, "miss": 70, "revers": 70, "averag": 70, "vertex": 70, "direct": 70, "combin": 70, "y": 70, "associ": 70, "key_x": 70, "key_i": 70, "geometr": 70, "compute_affin": 70, "mix_x": 70, "mix_i": 70, "normalise_befor": 70, "cosin": 70, "affin": 70, "specifi": 70, "requir": 70, "recommend": 70, "low": 70, "euclidean": 70, "notic": 70, "faster": 70, "coeffici": 70, "control": 70, "shape": 70, "inf": 70, "typic": 70, "higher": 70, "assign": 70, "unus": 70, "u": 70, "squar": 70, "equival": 70, "scalar": 70, "tanh": 70, "denot": 70, "get_fr": 71, "get_investors_fr": 71, "fr_id": 71, "get_frs_fundrais": 71, "get_fundraisers_concept": 71, "fundraiser_id": 71, "derive_yearly_data": 71, "date_column": 71, "amount_column": 71, "creation": 74, "1_old": 76, "2_new": 76, "3_slide": 76, "startup": 80}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [32, 0, 0, "-", "core"], [55, 0, 0, "-", "definitions"], [56, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [10, 0, 0, "-", "common"], [16, 0, 0, "-", "main"], [17, 0, 0, "-", "routers"], [24, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "text"], [7, 0, 0, "-", "translation"], [8, 0, 0, "-", "video"], [9, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[6, 1, 1, "", "aggregate_results"], [6, 1, 1, "", "filter_results"]], "graphai.api.common": [[11, 0, 0, "-", "celery_tools"], [12, 0, 0, "-", "graph"], [13, 0, 0, "-", "log"], [14, 0, 0, "-", "ontology"], [15, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[11, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[13, 1, 1, "", "log"]], "graphai.api.main": [[16, 1, 1, "", "init"], [16, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[18, 0, 0, "-", "image"], [19, 0, 0, "-", "ontology"], [20, 0, 0, "-", "text"], [21, 0, 0, "-", "translation"], [22, 0, 0, "-", "video"], [23, 0, 0, "-", "voice"]], "graphai.api.routers.image": [[18, 1, 1, "", "calculate_fingerprint"], [18, 1, 1, "", "calculate_fingerprint_status"], [18, 1, 1, "", "detect_ocr_language_status"], [18, 1, 1, "", "extract_text"], [18, 1, 1, "", "extract_text_status"], [18, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[19, 1, 1, "", "children"], [19, 1, 1, "", "ontology_tree_response_handler"], [19, 1, 1, "", "parent"], [19, 1, 1, "", "tree"]], "graphai.api.routers.text": [[20, 1, 1, "", "keywords"], [20, 1, 1, "", "priority_test_text"], [20, 1, 1, "", "wikify"], [20, 1, 1, "", "wikify_graph_svg"], [20, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[21, 1, 1, "", "calculate_fingerprint"], [21, 1, 1, "", "calculate_fingerprint_status"], [21, 1, 1, "", "get_text_fingerprint_chain_list"], [21, 1, 1, "", "text_detect_language"], [21, 1, 1, "", "text_detect_language_status"], [21, 1, 1, "", "translate"], [21, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[22, 1, 1, "", "calculate_fingerprint"], [22, 1, 1, "", "calculate_fingerprint_status"], [22, 1, 1, "", "detect_slides"], [22, 1, 1, "", "detect_slides_status"], [22, 1, 1, "", "extract_audio"], [22, 1, 1, "", "extract_audio_status"], [22, 1, 1, "", "get_file"], [22, 1, 1, "", "get_retrieve_file_status"], [22, 1, 1, "", "get_video_fingerprint_chain_list"], [22, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[23, 1, 1, "", "calculate_audio_fingerprint"], [23, 1, 1, "", "calculate_audio_fingerprint_status"], [23, 1, 1, "", "detect_language"], [23, 1, 1, "", "detect_language_status"], [23, 1, 1, "", "get_audio_fingerprint_chain_list"], [23, 1, 1, "", "priority_test"], [23, 1, 1, "", "transcribe"], [23, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[25, 0, 0, "-", "common"], [26, 0, 0, "-", "image"], [27, 0, 0, "-", "ontology"], [28, 0, 0, "-", "text"], [29, 0, 0, "-", "translation"], [30, 0, 0, "-", "video"], [31, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[25, 2, 1, "", "FileRequest"], [25, 2, 1, "", "TaskIDResponse"], [25, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[25, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[25, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[25, 3, 1, "", "task_id"], [25, 3, 1, "", "task_name"], [25, 3, 1, "", "task_result"], [25, 3, 1, "", "task_status"]], "graphai.api.schemas.image": [[26, 2, 1, "", "DetectOCRLanguageResponse"], [26, 2, 1, "", "DetectOCRLanguageTaskResponse"], [26, 2, 1, "", "ExtractTextRequest"], [26, 2, 1, "", "ExtractTextResponse"], [26, 2, 1, "", "ExtractTextTaskResponse"], [26, 2, 1, "", "ImageFingerprintRequest"], [26, 2, 1, "", "ImageFingerprintResponse"], [26, 2, 1, "", "ImageFingerprintTaskResponse"], [26, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[26, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[26, 3, 1, "", "fresh"], [26, 3, 1, "", "language"], [26, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[26, 3, 1, "", "force"], [26, 3, 1, "", "method"], [26, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[26, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[26, 3, 1, "", "fresh"], [26, 3, 1, "", "language"], [26, 3, 1, "", "result"], [26, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[26, 3, 1, "", "force"], [26, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[26, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[26, 3, 1, "", "closest_token"], [26, 3, 1, "", "closest_token_origin"], [26, 3, 1, "", "fresh"], [26, 3, 1, "", "result"], [26, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[26, 3, 1, "", "method"], [26, 3, 1, "", "text"], [26, 3, 1, "", "token"]], "graphai.api.schemas.ontology": [[27, 2, 1, "", "TreeResponse"], [27, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[27, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[27, 3, 1, "", "ChildCategoryID"], [27, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.text": [[28, 2, 1, "", "KeywordsRequest"], [28, 2, 1, "", "WikifyRequest"], [28, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[28, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[28, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[28, 2, 1, "", "Config"], [28, 3, 1, "", "GraphScore"], [28, 3, 1, "", "KeywordsScore"], [28, 3, 1, "", "LevenshteinScore"], [28, 3, 1, "", "MixedScore"], [28, 3, 1, "", "OntologyGlobalScore"], [28, 3, 1, "", "OntologyLocalScore"], [28, 3, 1, "", "PageID"], [28, 3, 1, "", "PageTitle"], [28, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[28, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[29, 2, 1, "", "TextDetectLanguageRequest"], [29, 2, 1, "", "TextDetectLanguageResponse"], [29, 2, 1, "", "TextDetectLanguageTaskResponse"], [29, 2, 1, "", "TextFingerprintRequest"], [29, 2, 1, "", "TextFingerprintResponse"], [29, 2, 1, "", "TextFingerprintTaskResponse"], [29, 2, 1, "", "TranslationRequest"], [29, 2, 1, "", "TranslationResponse"], [29, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[29, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[29, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[29, 3, 1, "", "language"], [29, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[29, 3, 1, "", "force"], [29, 3, 1, "", "source"], [29, 3, 1, "", "target"], [29, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[29, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[29, 3, 1, "", "closest_token"], [29, 3, 1, "", "fresh"], [29, 3, 1, "", "result"], [29, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[29, 3, 1, "", "force"], [29, 3, 1, "", "source"], [29, 3, 1, "", "target"], [29, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[29, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[29, 3, 1, "", "fresh"], [29, 3, 1, "", "result"], [29, 3, 1, "", "successful"], [29, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[30, 2, 1, "", "DetectSlidesRequest"], [30, 2, 1, "", "DetectSlidesResponse"], [30, 2, 1, "", "DetectSlidesTaskResponse"], [30, 2, 1, "", "ExtractAudioRequest"], [30, 2, 1, "", "ExtractAudioResponse"], [30, 2, 1, "", "ExtractAudioTaskResponse"], [30, 2, 1, "", "RetrieveURLRequest"], [30, 2, 1, "", "RetrieveURLResponse"], [30, 2, 1, "", "RetrieveURLResponseInner"], [30, 2, 1, "", "SlideTokenAndTimeStamp"], [30, 2, 1, "", "VideoFingerprintRequest"], [30, 2, 1, "", "VideoFingerprintResponse"], [30, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "language"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[30, 3, 1, "", "fresh"], [30, 3, 1, "", "slide_tokens"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[30, 3, 1, "", "duration"], [30, 3, 1, "", "fresh"], [30, 3, 1, "", "successful"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[30, 3, 1, "", "kaltura"], [30, 3, 1, "", "timeout"], [30, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[30, 3, 1, "", "fresh"], [30, 3, 1, "", "successful"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[30, 3, 1, "", "timestamp"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[30, 3, 1, "", "closest_token"], [30, 3, 1, "", "fresh"], [30, 3, 1, "", "result"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[31, 2, 1, "", "AudioDetectLanguageRequest"], [31, 2, 1, "", "AudioDetectLanguageResponse"], [31, 2, 1, "", "AudioDetectLanguageTaskResponse"], [31, 2, 1, "", "AudioFingerprintRequest"], [31, 2, 1, "", "AudioFingerprintResponse"], [31, 2, 1, "", "AudioFingerprintTaskResponse"], [31, 2, 1, "", "AudioTranscriptionRequest"], [31, 2, 1, "", "AudioTranscriptionResponse"], [31, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[31, 3, 1, "", "force"], [31, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[31, 3, 1, "", "fresh"], [31, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[31, 3, 1, "", "force"], [31, 3, 1, "", "remove_silence"], [31, 3, 1, "", "threshold"], [31, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[31, 3, 1, "", "closest_token"], [31, 3, 1, "", "closest_token_origin"], [31, 3, 1, "", "duration"], [31, 3, 1, "", "fp_nosilence"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[31, 3, 1, "", "force"], [31, 3, 1, "", "force_lang"], [31, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[31, 3, 1, "", "fresh"], [31, 3, 1, "", "language"], [31, 3, 1, "", "subtitle_result"], [31, 3, 1, "", "transcript_result"]], "graphai.core": [[33, 0, 0, "-", "common"], [38, 0, 0, "-", "interfaces"], [43, 0, 0, "-", "text"], [46, 0, 0, "-", "utils"]], "graphai.core.common": [[34, 0, 0, "-", "caching"], [35, 0, 0, "-", "graph"], [36, 0, 0, "-", "ontology"], [37, 0, 0, "-", "video"]], "graphai.core.common.caching": [[34, 2, 1, "", "AudioDBCachingManager"], [34, 2, 1, "", "DBCachingManagerBase"], [34, 2, 1, "", "SlideDBCachingManager"], [34, 2, 1, "", "TextDBCachingManager"], [34, 2, 1, "", "VideoConfig"], [34, 2, 1, "", "VideoDBCachingManager"], [34, 1, 1, "", "add_equality_conditions"], [34, 1, 1, "", "add_non_null_conditions"], [34, 1, 1, "", "add_where_or_and"], [34, 1, 1, "", "create_symlink_between_paths"], [34, 1, 1, "", "escape_single_quotes"], [34, 1, 1, "", "file_exists"], [34, 1, 1, "", "make_sure_path_exists"], [34, 1, 1, "", "surround_with_character"]], "graphai.core.common.caching.AudioDBCachingManager": [[34, 4, 1, "", "init_db"]], "graphai.core.common.caching.DBCachingManagerBase": [[34, 4, 1, "", "delete_cache_rows"], [34, 4, 1, "", "get_all_closest_matches"], [34, 4, 1, "", "get_all_details"], [34, 4, 1, "", "get_cache_count"], [34, 4, 1, "", "get_closest_match"], [34, 4, 1, "", "get_details"], [34, 4, 1, "", "get_details_using_origin"], [34, 4, 1, "", "get_origin"], [34, 4, 1, "", "init_db"], [34, 4, 1, "", "insert_or_update_closest_match"], [34, 4, 1, "", "insert_or_update_details"], [34, 4, 1, "", "update_details_if_exists"]], "graphai.core.common.caching.SlideDBCachingManager": [[34, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[34, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[34, 4, 1, "", "concat_file_path"], [34, 4, 1, "", "create_symlink"], [34, 4, 1, "", "generate_filepath"]], "graphai.core.common.caching.VideoDBCachingManager": [[34, 4, 1, "", "init_db"]], "graphai.core.common.graph": [[35, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[35, 4, 1, "", "add_graph_score"], [35, 4, 1, "", "compute_scores"], [35, 4, 1, "", "fetch_from_db"]], "graphai.core.common.ontology": [[36, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[36, 4, 1, "", "add_categories_category"], [36, 4, 1, "", "add_concepts_category"], [36, 4, 1, "", "add_ontology_scores"], [36, 4, 1, "", "fetch_from_db"], [36, 4, 1, "", "filter_concepts"], [36, 4, 1, "", "get_category_children"], [36, 4, 1, "", "get_category_parent"], [36, 4, 1, "", "get_concept_category"], [36, 4, 1, "", "get_predefined_tree"], [36, 4, 1, "", "old_add_ontology_scores"]], "graphai.core.common.video": [[37, 2, 1, "", "FingerprintParameters"], [37, 2, 1, "", "GoogleOCRModel"], [37, 2, 1, "", "NLPModels"], [37, 2, 1, "", "TranslationModels"], [37, 2, 1, "", "WhisperTranscriptionModel"], [37, 1, 1, "", "compare_decoded_fingerprints"], [37, 1, 1, "", "compare_encoded_fingerprints"], [37, 1, 1, "", "compute_ocr_noise_level"], [37, 1, 1, "", "compute_ocr_threshold"], [37, 1, 1, "", "compute_video_ocr_transitions"], [37, 1, 1, "", "detect_audio_format_and_duration"], [37, 1, 1, "", "detect_text_language"], [37, 1, 1, "", "extract_audio_from_video"], [37, 1, 1, "", "extract_frames"], [37, 1, 1, "", "extract_media_segment"], [37, 1, 1, "", "find_beginning_and_ending_silences"], [37, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [37, 1, 1, "", "find_closest_fingerprint_from_list"], [37, 1, 1, "", "find_closest_image_fingerprint_from_list"], [37, 1, 1, "", "frame_hash_similarity"], [37, 1, 1, "", "frame_ocr_distance"], [37, 1, 1, "", "frame_ocr_transition"], [37, 1, 1, "", "generate_frame_sample_indices"], [37, 1, 1, "", "generate_random_token"], [37, 1, 1, "", "generate_src_tgt_dict"], [37, 1, 1, "", "generate_symbolic_token"], [37, 1, 1, "", "generate_text_token"], [37, 1, 1, "", "get_current_datetime"], [37, 1, 1, "", "md5_text"], [37, 1, 1, "", "md5_video_or_audio"], [37, 1, 1, "", "perceptual_hash_audio"], [37, 1, 1, "", "perceptual_hash_image"], [37, 1, 1, "", "perceptual_hash_text"], [37, 1, 1, "", "perform_probe"], [37, 1, 1, "", "perform_tesseract_ocr"], [37, 1, 1, "", "read_json_file"], [37, 1, 1, "", "read_json_gz_file"], [37, 1, 1, "", "read_text_file"], [37, 1, 1, "", "read_txt_gz_file"], [37, 1, 1, "", "remove_silence_doublesided"], [37, 1, 1, "", "retrieve_file_from_kaltura"], [37, 1, 1, "", "retrieve_file_from_url"], [37, 1, 1, "", "tesseract_ocr_or_get_cached"], [37, 1, 1, "", "write_json_file"], [37, 1, 1, "", "write_text_file"], [37, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.FingerprintParameters": [[37, 4, 1, "", "get_min_sim_audio"], [37, 4, 1, "", "get_min_sim_image"], [37, 4, 1, "", "get_min_sim_text"], [37, 4, 1, "", "get_min_sim_video"], [37, 4, 1, "", "load_values"]], "graphai.core.common.video.GoogleOCRModel": [[37, 4, 1, "", "establish_connection"], [37, 4, 1, "", "perform_ocr"], [37, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[37, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.TranslationModels": [[37, 4, 1, "", "load_models"], [37, 4, 1, "", "translate"]], "graphai.core.common.video.WhisperTranscriptionModel": [[37, 4, 1, "", "detect_audio_segment_lang_whisper"], [37, 4, 1, "", "load_model_whisper"], [37, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[39, 0, 0, "-", "celery_config"], [40, 0, 0, "-", "db"], [41, 0, 0, "-", "es"], [42, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[39, 2, 1, "", "BaseConfig"], [39, 2, 1, "", "DevelopmentConfig"], [39, 1, 1, "", "create_celery"], [39, 1, 1, "", "get_celery_task"], [39, 1, 1, "", "get_settings"], [39, 1, 1, "", "get_task_info"], [39, 1, 1, "", "route_task"]], "graphai.core.interfaces.db": [[40, 2, 1, "", "DB"], [40, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[40, 4, 1, "", "build_conditions_list"], [40, 4, 1, "", "check_if_table_exists"], [40, 4, 1, "", "create_table"], [40, 4, 1, "", "drop_create_insert_table"], [40, 4, 1, "", "drop_table"], [40, 4, 1, "", "execute_query"], [40, 4, 1, "", "find"], [40, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[41, 2, 1, "", "ES"], [41, 1, 1, "", "es_bool"], [41, 1, 1, "", "es_dis_max"], [41, 1, 1, "", "es_match"], [41, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[41, 4, 1, "", "create_index"], [41, 4, 1, "", "delete_index"], [41, 4, 1, "", "index_doc"], [41, 4, 1, "", "indices"], [41, 4, 1, "", "refresh"], [41, 4, 1, "", "search"], [41, 4, 1, "", "search_mediawiki"], [41, 4, 1, "", "search_mediawiki_no_plain"], [41, 4, 1, "", "search_mediawiki_no_rescore"], [41, 4, 1, "", "search_mediawiki_restrict_2"], [41, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[42, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[42, 4, 1, "", "search"]], "graphai.core.text": [[44, 0, 0, "-", "draw"], [45, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[44, 1, 1, "", "draw_graph"], [44, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[45, 1, 1, "", "get_keywords"], [45, 1, 1, "", "rake_extract"], [45, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[47, 0, 0, "-", "breadcrumb"], [48, 0, 0, "-", "progress_bar"], [49, 0, 0, "-", "text"], [52, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[47, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[47, 4, 1, "", "indent"], [47, 4, 1, "", "log"], [47, 4, 1, "", "outdent"], [47, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[48, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[48, 4, 1, "", "reset"], [48, 4, 1, "", "update"]], "graphai.core.utils.text": [[50, 0, 0, "-", "clean"], [51, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[50, 2, 1, "", "HTMLCleaner"], [50, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[50, 4, 1, "", "get_data"], [50, 4, 1, "", "handle_data"], [50, 4, 1, "", "handle_endtag"], [50, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[51, 2, 1, "", "Colors"], [51, 1, 1, "", "cprint"], [51, 1, 1, "", "log"], [51, 1, 1, "", "mkdir"], [51, 1, 1, "", "pprint"], [51, 1, 1, "", "read_json"], [51, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[51, 3, 1, "", "codes"], [51, 3, 1, "", "pref"], [51, 3, 1, "", "reset"]], "graphai.core.utils.time": [[53, 0, 0, "-", "date"], [54, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[53, 1, 1, "", "add_years"], [53, 1, 1, "", "now"], [53, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[54, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[54, 4, 1, "", "delta"], [54, 4, 1, "", "report"], [54, 4, 1, "", "reset"], [54, 4, 1, "", "tick"], [54, 4, 1, "", "total"]], "graphai.pipelines": [[57, 0, 0, "-", "elasticsearch"], [63, 0, 0, "-", "investment"], [76, 0, 0, "-", "validation"], [80, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[59, 0, 0, "-", "dummy"], [62, 0, 0, "-", "search"]], "graphai.pipelines.elasticsearch.dummy": [[59, 1, 1, "", "gen_random_docs"], [59, 1, 1, "", "gen_random_phrase"]], "graphai.pipelines.investment": [[64, 0, 0, "-", "aggregate_recent_past"], [65, 0, 0, "-", "check_unit"], [69, 0, 0, "-", "compute_jaccard_index"], [70, 0, 0, "-", "concept_configuration"], [71, 0, 0, "-", "create_investments_graph"], [74, 0, 0, "-", "parameters"], [75, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[64, 1, 1, "", "aggregate_recent_past"], [64, 1, 1, "", "aggregate_years"], [64, 1, 1, "", "compute_year_coefficients"], [64, 1, 1, "", "normalize_scores"], [64, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[65, 1, 1, "", "main"], [65, 1, 1, "", "show_matchmaking_chart_view"], [65, 1, 1, "", "show_matchmaking_list_view"], [65, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_jaccard_index": [[69, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[70, 1, 1, "", "combine"], [70, 1, 1, "", "compute_affinities"], [70, 1, 1, "", "mix"], [70, 1, 1, "", "norm"], [70, 1, 1, "", "normalise"], [70, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[71, 1, 1, "", "create_investments_graph"], [71, 1, 1, "", "derive_yearly_data"], [71, 1, 1, "", "get_frs"], [71, 1, 1, "", "get_frs_fundraisers"], [71, 1, 1, "", "get_fundraisers_concepts"], [71, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.toy_example": [[75, 1, 1, "", "base"], [75, 1, 1, "", "complete"], [75, 1, 1, "", "path"], [75, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "packag": [0, 1, 2, 10, 17, 24, 32, 33, 38, 43, 46, 49, 52, 56, 57, 63, 76, 80], "subpackag": [0, 1, 32, 46, 56], "submodul": [0, 1, 2, 10, 17, 24, 33, 38, 43, 46, 49, 52, 57, 63, 76, 80], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9], "common": [3, 10, 11, 12, 13, 14, 15, 25, 33, 34, 35, 36, 37], "modul": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84], "imag": [4, 18, 26], "ontologi": [5, 14, 19, 27, 36], "text": [6, 20, 28, 43, 44, 45, 49, 50, 51], "translat": [7, 21, 29], "video": [8, 15, 22, 30, 37], "voic": [9, 23, 31], "celery_tool": 11, "graph": [12, 35, 81, 82, 83, 84], "log": 13, "main": [16, 73], "router": [17, 18, 19, 20, 21, 22, 23], "schema": [24, 25, 26, 27, 28, 29, 30, 31], "core": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "cach": 34, "interfac": [38, 39, 40, 41, 42], "celery_config": 39, "db": 40, "e": 41, "wp": 42, "draw": 44, "keyword": 45, "util": [46, 47, 48, 49, 50, 51, 52, 53, 54], "breadcrumb": 47, "progress_bar": 48, "clean": 50, "io": 51, "time": [52, 53, 54], "date": 53, "stopwatch": 54, "definit": 55, "pipelin": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "elasticsearch": [57, 58, 59, 60, 61, 62], "create_index": 58, "dummi": 59, "popul": 60, "populate_dummi": 61, "search": 62, "invest": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], "aggregate_recent_past": 64, "check_unit": 65, "compute_fundraisers_unit": 66, "compute_investors_unit": 67, "compute_investors_units_2": 68, "compute_jaccard_index": 69, "concept_configur": 70, "create_investments_graph": 71, "detect_fundraisers_concept": 72, "paramet": 74, "toy_exampl": 75, "valid": [76, 77, 78, 79], "1_old": 77, "2_new": 78, "3_slide": 79, "visualis": [80, 81, 82, 83, 84], "startup": [81, 82, 83, 84], "2": 82, "3": 83, "4": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [32, "subpackages"], [46, "subpackages"], [56, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [10, "submodules"], [17, "submodules"], [24, "submodules"], [33, "submodules"], [38, "submodules"], [43, "submodules"], [46, "submodules"], [49, "submodules"], [52, "submodules"], [57, "submodules"], [63, "submodules"], [76, "submodules"], [80, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image module": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.text module": [[6, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[7, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[8, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[9, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[10, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[11, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[12, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[13, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[14, "module-graphai.api.common.ontology"]], "graphai.api.common.video module": [[15, "module-graphai.api.common.video"]], "graphai.api.main module": [[16, "module-graphai.api.main"]], "graphai.api.routers package": [[17, "module-graphai.api.routers"]], "graphai.api.routers.image module": [[18, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[19, "module-graphai.api.routers.ontology"]], "graphai.api.routers.text module": [[20, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[21, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[22, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[23, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[24, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[25, "module-graphai.api.schemas.common"]], "graphai.api.schemas.image module": [[26, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[27, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.text module": [[28, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[29, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[30, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[31, "module-graphai.api.schemas.voice"]], "graphai.core package": [[32, "module-graphai.core"]], "graphai.core.common package": [[33, "module-graphai.core.common"]], "graphai.core.common.caching module": [[34, "module-graphai.core.common.caching"]], "graphai.core.common.graph module": [[35, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[36, "module-graphai.core.common.ontology"]], "graphai.core.common.video module": [[37, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[38, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[39, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.db module": [[40, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[41, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[42, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[43, "module-graphai.core.text"]], "graphai.core.text.draw module": [[44, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[45, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[46, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[47, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[48, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[49, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[50, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[51, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[52, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[53, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[54, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[55, "module-graphai.definitions"]], "graphai.pipelines package": [[56, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[57, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[58, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.dummy module": [[59, "module-graphai.pipelines.elasticsearch.dummy"]], "graphai.pipelines.elasticsearch.populate module": [[60, "graphai-pipelines-elasticsearch-populate-module"]], "graphai.pipelines.elasticsearch.populate_dummy module": [[61, "graphai-pipelines-elasticsearch-populate-dummy-module"]], "graphai.pipelines.elasticsearch.search module": [[62, "module-graphai.pipelines.elasticsearch.search"]], "graphai.pipelines.investment package": [[63, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[64, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[65, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[66, "graphai-pipelines-investment-compute-fundraisers-units-module"]], "graphai.pipelines.investment.compute_investors_units module": [[67, "graphai-pipelines-investment-compute-investors-units-module"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[68, "graphai-pipelines-investment-compute-investors-units-2-module"]], "graphai.pipelines.investment.compute_jaccard_index module": [[69, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[70, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[71, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[72, "graphai-pipelines-investment-detect-fundraisers-concepts-module"]], "graphai.pipelines.investment.main module": [[73, "graphai-pipelines-investment-main-module"]], "graphai.pipelines.investment.parameters module": [[74, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[75, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[76, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[77, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[78, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[79, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[80, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[81, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[82, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[83, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[84, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.image"], [5, "module-graphai.api.celery_tasks.ontology"], [6, "module-graphai.api.celery_tasks.text"], [7, "module-graphai.api.celery_tasks.translation"], [8, "module-graphai.api.celery_tasks.video"], [9, "module-graphai.api.celery_tasks.voice"], [10, "module-graphai.api.common"], [11, "module-graphai.api.common.celery_tools"], [12, "module-graphai.api.common.graph"], [13, "module-graphai.api.common.log"], [14, "module-graphai.api.common.ontology"], [15, "module-graphai.api.common.video"], [16, "module-graphai.api.main"], [17, "module-graphai.api.routers"], [18, "module-graphai.api.routers.image"], [19, "module-graphai.api.routers.ontology"], [20, "module-graphai.api.routers.text"], [21, "module-graphai.api.routers.translation"], [22, "module-graphai.api.routers.video"], [23, "module-graphai.api.routers.voice"], [24, "module-graphai.api.schemas"], [25, "module-graphai.api.schemas.common"], [26, "module-graphai.api.schemas.image"], [27, "module-graphai.api.schemas.ontology"], [28, "module-graphai.api.schemas.text"], [29, "module-graphai.api.schemas.translation"], [30, "module-graphai.api.schemas.video"], [31, "module-graphai.api.schemas.voice"], [32, "module-graphai.core"], [33, "module-graphai.core.common"], [34, "module-graphai.core.common.caching"], [35, "module-graphai.core.common.graph"], [36, "module-graphai.core.common.ontology"], [37, "module-graphai.core.common.video"], [38, "module-graphai.core.interfaces"], [39, "module-graphai.core.interfaces.celery_config"], [40, "module-graphai.core.interfaces.db"], [41, "module-graphai.core.interfaces.es"], [42, "module-graphai.core.interfaces.wp"], [43, "module-graphai.core.text"], [44, "module-graphai.core.text.draw"], [45, "module-graphai.core.text.keywords"], [46, "module-graphai.core.utils"], [47, "module-graphai.core.utils.breadcrumb"], [48, "module-graphai.core.utils.progress_bar"], [49, "module-graphai.core.utils.text"], [50, "module-graphai.core.utils.text.clean"], [51, "module-graphai.core.utils.text.io"], [52, "module-graphai.core.utils.time"], [53, "module-graphai.core.utils.time.date"], [54, "module-graphai.core.utils.time.stopwatch"], [55, "module-graphai.definitions"], [56, "module-graphai.pipelines"], [57, "module-graphai.pipelines.elasticsearch"], [59, "module-graphai.pipelines.elasticsearch.dummy"], [62, "module-graphai.pipelines.elasticsearch.search"], [63, "module-graphai.pipelines.investment"], [64, "module-graphai.pipelines.investment.aggregate_recent_past"], [65, "module-graphai.pipelines.investment.check_unit"], [69, "module-graphai.pipelines.investment.compute_jaccard_index"], [70, "module-graphai.pipelines.investment.concept_configuration"], [71, "module-graphai.pipelines.investment.create_investments_graph"], [74, "module-graphai.pipelines.investment.parameters"], [75, "module-graphai.pipelines.investment.toy_example"], [76, "module-graphai.pipelines.validation"], [80, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[5, "module-graphai.api.celery_tasks.ontology"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[6, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[6, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[6, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[7, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[8, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[9, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[10, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[11, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[11, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[12, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[13, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[13, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[14, "module-graphai.api.common.ontology"]], "graphai.api.common.video": [[15, "module-graphai.api.common.video"]], "graphai.api.main": [[16, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[16, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[16, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[17, "module-graphai.api.routers"]], "calculate_fingerprint() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.calculate_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[18, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[18, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[19, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[19, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[19, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[19, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[19, "graphai.api.routers.ontology.tree"]], "graphai.api.routers.text": [[20, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[20, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[20, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[20, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[20, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[20, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_fingerprint() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.calculate_fingerprint_status"]], "get_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.get_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[21, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[21, "graphai.api.routers.translation.translate_status"]], "calculate_fingerprint() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.calculate_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[22, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[22, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[23, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[23, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[24, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[25, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[25, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[25, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[25, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[25, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[25, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[25, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[25, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[25, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[25, "graphai.api.schemas.common.FileRequest.token"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[26, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[26, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[26, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[26, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[26, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[26, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[26, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[26, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[26, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[26, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[26, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[26, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[26, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[26, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[26, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[26, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[26, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "token (graphai.api.schemas.image.individualocrresult attribute)": [[26, "graphai.api.schemas.image.IndividualOCRResult.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[27, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[27, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[27, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[27, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[27, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[27, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[28, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[28, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[28, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[28, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[28, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[28, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[28, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[28, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[29, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[29, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[29, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[29, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[29, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[29, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[29, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[29, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[29, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[29, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[29, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[29, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[29, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[29, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[30, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[30, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[30, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[30, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[30, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[30, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[30, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[30, "module-graphai.api.schemas.video"]], "kaltura (graphai.api.schemas.video.retrieveurlrequest attribute)": [[30, "graphai.api.schemas.video.RetrieveURLRequest.kaltura"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[30, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[30, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[30, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[30, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[30, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[30, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[30, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[30, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timeout (graphai.api.schemas.video.retrieveurlrequest attribute)": [[30, "graphai.api.schemas.video.RetrieveURLRequest.timeout"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[30, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[30, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[30, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[30, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[30, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[30, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[30, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[30, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[31, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[31, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_result"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[31, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[31, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[31, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_result"]], "graphai.core": [[32, "module-graphai.core"]], "graphai.core.common": [[33, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.AudioDBCachingManager"]], "dbcachingmanagerbase (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.DBCachingManagerBase"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[34, "graphai.core.common.caching.VideoDBCachingManager"]], "add_equality_conditions() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.add_equality_conditions"]], "add_non_null_conditions() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.add_non_null_conditions"]], "add_where_or_and() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.add_where_or_and"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[34, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[34, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_cache_rows() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.delete_cache_rows"]], "escape_single_quotes() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.escape_single_quotes"]], "file_exists() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.file_exists"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[34, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_all_closest_matches() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_all_closest_matches"]], "get_all_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_all_details"]], "get_cache_count() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_cache_count"]], "get_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_closest_match"]], "get_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_details"]], "get_details_using_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_details_using_origin"]], "get_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.get_origin"]], "graphai.core.common.caching": [[34, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[34, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[34, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[34, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[34, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "insert_or_update_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_closest_match"]], "insert_or_update_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_details"]], "make_sure_path_exists() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.make_sure_path_exists"]], "surround_with_character() (in module graphai.core.common.caching)": [[34, "graphai.core.common.caching.surround_with_character"]], "update_details_if_exists() (graphai.core.common.caching.dbcachingmanagerbase method)": [[34, "graphai.core.common.caching.DBCachingManagerBase.update_details_if_exists"]], "conceptsgraph (class in graphai.core.common.graph)": [[35, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[35, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[35, "graphai.core.common.graph.ConceptsGraph.compute_scores"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[35, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[35, "module-graphai.core.common.graph"]], "ontology (class in graphai.core.common.ontology)": [[36, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[36, "module-graphai.core.common.ontology"]], "old_add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[36, "graphai.core.common.ontology.Ontology.old_add_ontology_scores"]], "fingerprintparameters (class in graphai.core.common.video)": [[37, "graphai.core.common.video.FingerprintParameters"]], "googleocrmodel (class in graphai.core.common.video)": [[37, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[37, "graphai.core.common.video.NLPModels"]], "translationmodels (class in graphai.core.common.video)": [[37, "graphai.core.common.video.TranslationModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[37, "graphai.core.common.video.WhisperTranscriptionModel"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.compute_video_ocr_transitions"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[37, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_text_language() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.detect_text_language"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[37, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.generate_random_token"]], "generate_src_tgt_dict() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.generate_src_tgt_dict"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.generate_symbolic_token"]], "generate_text_token() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.generate_text_token"]], "get_current_datetime() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.get_current_datetime"]], "get_min_sim_audio() (graphai.core.common.video.fingerprintparameters method)": [[37, "graphai.core.common.video.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.video.fingerprintparameters method)": [[37, "graphai.core.common.video.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.video.fingerprintparameters method)": [[37, "graphai.core.common.video.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.video.fingerprintparameters method)": [[37, "graphai.core.common.video.FingerprintParameters.get_min_sim_video"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[37, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[37, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[37, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "load_models() (graphai.core.common.video.translationmodels method)": [[37, "graphai.core.common.video.TranslationModels.load_models"]], "load_values() (graphai.core.common.video.fingerprintparameters method)": [[37, "graphai.core.common.video.FingerprintParameters.load_values"]], "md5_text() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.perceptual_hash_text"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[37, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.read_json_file"]], "read_json_gz_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.read_json_gz_file"]], "read_text_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.read_text_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[37, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "translate() (graphai.core.common.video.translationmodels method)": [[37, "graphai.core.common.video.TranslationModels.translate"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[37, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_json_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.write_json_file"]], "write_text_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.write_text_file"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[37, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[38, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[39, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[39, "graphai.core.interfaces.celery_config.route_task"]], "db (class in graphai.core.interfaces.db)": [[40, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.build_conditions_list"]], "check_if_table_exists() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.check_if_table_exists"]], "create_table() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.find"]], "graphai.core.interfaces.db": [[40, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[40, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[40, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[41, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[41, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[41, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[41, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[41, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[41, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[41, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[42, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[42, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[42, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[43, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[44, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[44, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[44, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[45, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[45, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[45, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[45, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[46, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[47, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[47, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[47, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[47, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[47, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[47, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[48, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[48, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[48, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[48, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[49, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[50, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[50, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[50, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[50, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[50, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[50, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[50, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[51, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[51, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[51, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[51, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[51, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[52, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[53, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[53, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[53, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[53, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[54, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[54, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[55, "module-graphai.definitions"]], "graphai.pipelines": [[56, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[57, "module-graphai.pipelines.elasticsearch"]], "gen_random_docs() (in module graphai.pipelines.elasticsearch.dummy)": [[59, "graphai.pipelines.elasticsearch.dummy.gen_random_docs"]], "gen_random_phrase() (in module graphai.pipelines.elasticsearch.dummy)": [[59, "graphai.pipelines.elasticsearch.dummy.gen_random_phrase"]], "graphai.pipelines.elasticsearch.dummy": [[59, "module-graphai.pipelines.elasticsearch.dummy"]], "graphai.pipelines.elasticsearch.search": [[62, "module-graphai.pipelines.elasticsearch.search"]], "graphai.pipelines.investment": [[63, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[64, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[64, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[65, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[65, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[69, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[69, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[70, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[70, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[71, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[71, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.parameters": [[74, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[75, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[75, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[76, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[80, "module-graphai.pipelines.visualisation"]]}})