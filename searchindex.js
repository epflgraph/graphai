Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.summarization", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.summarization", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.summarization", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.common_utils", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.scraping", "graphai.core.common.text_utils", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.summarization.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.summarization.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.summarization.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.scraping.rst", "graphai.core.common.text_utils.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.summarization module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.summarization module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.summarization module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.common_utils module", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.scraping module", "graphai.core.common.text_utils module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 41, 42, 43, 45, 46, 47, 54, 58, 64, 77], "contain": [0, 3, 35, 41, 42, 45, 46, 47, 49, 55, 69, 77], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 12, 25, 35, 40, 54, 69, 77, 87], "project": 0, "ai": 0, "base": [0, 8, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 57, 58, 60, 61, 64, 77, 82], "util": [0, 39], "api": [0, 46, 47, 52], "core": 0, "pipelin": 0, "definit": [0, 50, 77], "modul": [0, 1, 2, 12, 20, 29, 40, 48, 53, 56, 59, 62, 67, 70, 83, 87], "celery_task": 1, "common": [1, 2, 29, 39], "router": 1, "schema": [1, 50, 69], "main": [1, 70, 72], "imag": [2, 3, 20, 29, 47], "ontologi": [2, 12, 20, 25, 29, 30, 40, 54], "scrape": [2, 20, 29, 40], "summar": [2, 20, 29, 46], "text": [2, 3, 20, 24, 26, 29, 31, 34, 36, 39, 42, 45, 46, 47, 51, 52, 56], "translat": [2, 3, 12, 20, 29, 46, 47, 55], "video": [2, 3, 12, 20, 29, 40], "voic": [2, 20, 29], "format_api_result": 3, "id": [3, 35, 41, 43, 45, 49], "name": [3, 41, 47, 49, 61, 69], "statu": [3, 45, 49], "result": [3, 8, 25, 31, 34, 35, 36, 37, 38, 41, 43, 44, 46, 47, 49, 51, 52, 54, 77], "format": [3, 42, 47, 51, 63, 69], "come": [3, 69], "from": [3, 25, 41, 43, 44, 45, 47, 54, 55, 60, 69, 77], "celeri": [3, 49, 54], "output": [3, 30, 32, 47], "param": [3, 41, 42, 45, 46, 47, 49, 71, 73, 74, 75, 76, 78, 79], "task": [3, 49, 54, 58, 64], "return": [3, 8, 25, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 60, 61, 63, 64, 77], "appropri": 3, "dictionari": [3, 41, 42, 45, 46, 47, 51, 61], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 21, 24, 26, 27, 28, 30, 31, 33, 37, 38, 41, 45, 46, 47, 55], "forc": [3, 21, 24, 26, 27, 28, 31, 33, 34, 36, 37, 38, 41], "fals": [3, 15, 21, 24, 25, 26, 27, 28, 31, 33, 34, 36, 37, 38, 41, 42, 45, 47, 50, 55, 61, 64, 77], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": [3, 41], "none": [3, 15, 21, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 45, 46, 47, 49, 50, 51, 57, 58, 61, 77, 78], "retriev": [3, 25, 41, 45, 47, 51, 64], "number": [3, 8, 41, 43, 45, 46, 47, 51, 52, 58, 61, 77], "cach": [3, 40, 47], "row": [3, 41, 77], "relev": [3, 25, 35], "fingerprint": [3, 41, 47], "lookup": 3, "dict": [3, 33, 34, 37, 41, 43, 45, 46, 47, 51, 54, 61], "comput": [3, 8, 43, 44, 46, 47, 77], "dbcachingmanagerbas": [3, 41], "object": [3, 30, 32, 35, 41, 43, 44, 46, 47, 49, 50, 51, 52, 54, 57, 58, 61, 63, 64], "equal": [3, 41, 45], "condit": [3, 41, 50], "count": [3, 41, 46], "onli": [3, 25, 41, 47, 61, 69, 77], "us": [3, 8, 41, 45, 46, 47, 51, 55, 60, 64, 69, 77], "unexpect": [3, 46, 47, 77], "indent": [3, 46, 47, 57, 61], "where": [3, 41, 47, 77], "need": [3, 42, 64], "done": [3, 25], "among": [3, 25], "same": [3, 45, 47, 77], "sourc": [3, 36, 43, 46], "target": [3, 36, 43, 46, 47], "lang": [3, 46], "origin": [3, 41, 43, 44, 45, 47], "plu": [3, 43, 44, 46, 47], "fingerprint_lookup_parallel": 3, "input_dict": 3, "i": [3, 8, 25, 41, 42, 43, 45, 47, 54, 55, 58, 60, 64, 77], "n_total": 3, "min_similar": [3, 21, 24, 26, 27, 28, 47], "data_typ": 3, "audio": [3, 47], "perform": [3, 45, 47, 51, 52, 77], "parallel": 3, "previou": [3, 58, 64], "step": [3, 47], "index": [3, 45, 47, 51, 69, 77], "thi": [3, 8, 25, 47, 58, 69, 77], "total": [3, 15, 58, 64], "minimum": [3, 45, 46, 47], "similar": [3, 41, 47, 77], "threshold": [3, 8, 28, 38, 41, 47, 54, 55], "two": [3, 8, 41, 43, 45, 47], "consid": [3, 47], "match": [3, 41, 45, 47, 51], "type": [3, 8, 41, 43, 44, 45, 46, 47, 51, 52, 54, 55, 60, 61], "data": [3, 21, 23, 24, 25, 26, 27, 28, 33, 45, 61, 69], "can": [3, 25, 41, 47, 64, 69], "mode": 3, "detail": [3, 41, 47], "closest": [3, 41, 47], "which": [3, 35, 41, 45, 47, 54, 55, 77], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 8, 25], "databas": [3, 50], "insert": [3, 41], "list": [3, 25, 31, 32, 33, 35, 41, 43, 45, 47, 54, 55, 77], "aggregate_result": 8, "coef": 8, "0": [8, 25, 35, 38, 41, 43, 44, 45, 46, 47, 54, 61, 63, 64, 71, 77], "5": [8, 25, 35, 44, 64], "panda": [8, 43, 44, 51, 52, 54, 63], "datafram": [8, 43, 44, 51, 52, 54, 77], "intermedi": [8, 43, 44], "wikifi": [8, 25, 35, 43, 44, 54], "uniqu": [8, 51, 52, 77], "keyword": [8, 24, 25, 35, 43, 44, 51, 52, 53], "pageid": [8, 35, 43, 44, 51, 52, 54, 77], "final": [8, 41, 64, 77], "Then": [8, 55], "mixedscor": [8, 35, 54], "everi": [8, 45, 47, 61, 77], "page": [8, 25, 35, 43, 45], "convex": 8, "combin": [8, 77], "other": [8, 25, 64], "score": [8, 25, 35, 43, 44, 47, 54, 55, 77], "paramet": [8, 43, 44, 46, 47, 51, 52, 54, 55, 58, 60, 61, 64, 70, 77], "pd": [8, 43, 44, 51, 52, 77], "A": [8, 41, 43, 44, 47, 51, 52, 54, 55], "column": [8, 41, 43, 44, 50, 51, 52, 54, 77], "pagetitl": [8, 35, 43, 44, 51, 52, 54], "searchscor": [8, 35, 43, 44, 51, 52, 54], "levenshteinscor": [8, 35, 43, 44, 54], "graphscor": [8, 35, 43, 54], "ontologylocalscor": [8, 35, 44, 54], "ontologyglobalscor": [8, 35, 44, 54], "keywordsscor": [8, 35, 54], "float": [8, 25, 35, 37, 38, 43, 54, 55, 64, 77], "1": [8, 25, 35, 41, 43, 45, 46, 47, 63, 64, 77], "control": [8, 77], "how": [8, 45, 46, 54, 55], "ar": [8, 25, 45, 47, 54, 55, 63, 77], "valu": [8, 41, 45, 47, 50, 77], "take": [8, 25, 77], "sum": 8, "over": [8, 77], "normalis": [8, 77], "max": [8, 43], "default": [8, 41, 43, 44, 45, 46, 47, 49, 54, 55, 64], "ani": [8, 55, 69, 77], "between": [8, 41, 47, 63, 64, 77], "linearli": [8, 63], "interpol": 8, "those": [8, 47], "approach": 8, "filter_result": 8, "epsilon": [8, 71], "min_vot": 8, "filter": [8, 25, 51, 54, 55], "depend": 8, "some": [8, 25, 58, 64, 77], "criteria": 8, "specifi": [8, 77], "all": [8, 41, 43, 45, 46, 47, 51, 55, 64, 69, 77], "decid": 8, "whether": [8, 41, 42, 43, 44, 45, 46, 47, 54, 55, 64, 77], "good": 8, "enough": 8, "least": 8, "amount": 8, "int": [8, 25, 32, 35, 37, 43, 51, 52, 54, 58, 61], "exclud": [8, 41], "kept": [8, 77], "iff": 8, "celery_tool": 12, "log": [12, 57, 61], "get_n_celery_work": 13, "msg": [15, 57, 61, 64], "second": [15, 41, 45, 47, 64], "length": [15, 45, 46, 47], "64": 15, "async": [19, 21, 22, 23, 24, 25, 26, 27, 28], "init": 19, "redirect_doc": 19, "get_slide_fingerprint_chain_list": 21, "n_job": [21, 24, 26, 27, 28], "8": [21, 24, 26, 27, 28, 47], "ignore_fp_result": [21, 24, 26, 27, 28], "results_to_return": [21, 24, 26, 27, 28], "calculate_slide_fingerprint": 21, "imagefingerprintrequest": [21, 31], "calculate_slide_fingerprint_statu": 21, "task_id": [21, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 49], "extract_text": 21, "extracttextrequest": [21, 31], "extract_text_statu": 21, "detect_ocr_language_statu": 21, "ontology_tree_response_handl": 22, "id_and_result": 22, "tree": [22, 30, 32, 47], "parent": 22, "category_id": [22, 44], "children": 22, "extract_sublink": 23, "getsublinksrequest": [23, 33], "extract_sublinks_statu": 23, "extract_page_cont": 23, "extractcontentrequest": [23, 33], "extract_page_content_statu": 23, "get_summary_text_fingerprint_chain_list": 24, "text_typ": [24, 34, 46], "summary_typ": [24, 34, 46], "len_class": [24, 34, 46], "tone": [24, 34, 46], "get_summary_task_chain": 24, "true": [24, 25, 37, 41, 42, 43, 44, 45, 46, 47, 55, 57, 61, 64, 77], "skip_token": 24, "debug": [24, 34, 57, 61], "get_cleanup_task_chain": 24, "result_typ": [24, 34], "cleanup": [24, 34], "calculate_summary_text_fingerprint": 24, "summaryfingerprintrequest": [24, 34], "calculate_summary_text_fingerprint_statu": 24, "summarizationrequest": [24, 34], "create_titl": 24, "clean_up": 24, "cleanuprequest": [24, 34], "summarize_statu": 24, "keywordsrequest": [25, 35], "use_nltk": [25, 55], "bool": [25, 31, 33, 34, 36, 37, 38, 43, 44, 51, 54, 55, 61, 77], "process": [25, 45], "raw": [25, 35, 55, 60], "e": [25, 45, 46, 47, 48], "g": [25, 46, 47], "an": [25, 41, 46, 47, 61, 69], "abstract": [25, 41], "public": [25, 34], "cours": [25, 34, 46], "descript": 25, "lectur": [25, 34, 46], "slide": [25, 34, 46, 47], "wikifyrequest": [25, 35], "method": [25, 31, 47, 77], "str": [25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 51, 52, 55, 60, 61, 64, 77], "restrict_to_ontologi": 25, "graph_score_smooth": 25, "ontology_score_smooth": 25, "keywords_score_smooth": 25, "normalisation_coef": 25, "filtering_threshold": 25, "filtering_min_vot": 25, "refresh_scor": 25, "concept": [25, 34, 54, 69, 72, 77], "wikipedia": [25, 35, 52], "each": [25, 35, 43, 45, 47, 58, 64, 77], "set": [25, 35, 41, 46, 49, 51, 52, 54, 77], "quantifi": 25, "follow": [25, 47, 51, 58, 60, 64, 77], "extract": [25, 35, 45, 47, 55], "automat": [25, 41, 47], "omit": 25, "keyword_list": 25, "provid": [25, 43, 44, 45, 46, 47, 49], "input": [25, 45, 47], "instead": [25, 41], "raw_text": [25, 35], "wikisearch": [25, 51, 52], "For": [25, 77], "10": [25, 51, 52, 55, 77], "through": [25, 47], "request": [25, 41, 45], "elasticsearch": [25, 51, 66], "pair": [25, 43, 55, 64, 77], "sever": [25, 35, 64], "deriv": 25, "account": 25, "accord": [25, 45, 77], "rule": 25, "keep": [25, 58], "most": [25, 41, 47], "wikify_ontology_svg": 25, "wikifyresponseelem": [25, 35], "level": [25, 54], "2": [25, 46, 47, 64, 77, 87], "svg": [25, 54], "file": [25, 41, 42, 47, 54, 61], "repres": [25, 30, 32, 35, 55, 58, 64], "subgraph": 25, "induc": [25, 54], "wikify_graph_svg": 25, "concept_score_threshold": [25, 54], "3": [25, 46, 54, 60, 64, 87], "edge_threshold": [25, 54], "min_component_s": [25, 54], "priority_test_text": 25, "get_translation_text_fingerprint_chain_list": 26, "src": [26, 46], "tgt": [26, 46], "calculate_translation_text_fingerprint": 26, "textfingerprintrequest": [26, 36], "calculate_translation_text_fingerprint_statu": 26, "translationrequest": [26, 36], "translate_statu": 26, "text_detect_languag": 26, "textdetectlanguagerequest": [26, 36], "text_detect_language_statu": 26, "get_video_fingerprint_chain_list": 27, "retrieve_fil": 27, "retrieveurlrequest": [27, 37], "get_retrieve_file_statu": 27, "calculate_video_fingerprint": 27, "videofingerprintrequest": [27, 37], "calculate_video_fingerprint_statu": 27, "get_fil": 27, "filerequest": [27, 30], "extract_audio": 27, "extractaudiorequest": [27, 37], "extract_audio_statu": 27, "detect_slid": 27, "detectslidesrequest": [27, 37], "detect_slides_statu": 27, "get_audio_fingerprint_chain_list": 28, "remove_sil": [28, 38], "calculate_audio_fingerprint": 28, "audiofingerprintrequest": [28, 38], "calculate_audio_fingerprint_statu": 28, "transcrib": [28, 47], "audiotranscriptionrequest": [28, 38], "transcribe_statu": 28, "detect_languag": 28, "audiodetectlanguagerequest": [28, 38], "priority_test": 28, "detect_language_statu": 28, "class": [30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 44, 46, 47, 49, 50, 51, 52, 57, 58, 60, 61, 64], "taskidrespons": 30, "basemodel": [30, 31, 32, 33, 34, 35, 36, 37, 38], "endpoint": [30, 32], "taskstatusrespons": [30, 31, 32, 33, 34, 36, 37, 38], "task_nam": [30, 31, 32, 33, 34, 36, 37, 38], "task_statu": [30, 31, 32, 33, 34, 36, 37, 38], "task_result": [30, 31, 32, 33, 34, 36, 37, 38, 49], "jsonwrappervalu": 30, "abc": [30, 41], "imagefingerprinttaskrespons": 31, "fresh": [31, 33, 34, 36, 37, 38], "closest_token": [31, 34, 36, 37, 38], "closest_token_origin": [31, 38], "success": [31, 33, 34, 36, 37, 38, 47], "imagefingerprintrespons": 31, "liter": [31, 34, 36, 37], "googl": [31, 47], "tesseract": [31, 47], "individualocrresult": 31, "extracttexttaskrespons": 31, "languag": [31, 36, 37, 38, 46, 47], "extracttextrespons": 31, "detectocrlanguagetaskrespons": 31, "detectocrlanguagerespons": 31, "treeresponseelem": 32, "childcategoryid": 32, "parentcategoryid": 32, "treerespons": 32, "url": [33, 37, 45, 47, 60], "getsublinkstaskrespons": 33, "validated_url": [33, 45], "sublink": [33, 45], "status_msg": 33, "getsublinksrespons": 33, "remove_head": [33, 45], "remove_long_pattern": [33, 45], "extractcontenttaskrespons": 33, "extractcontentrespons": 33, "titl": [34, 46, 51], "summari": [34, 46, 64], "person": 34, "unit": 34, "mooc": 34, "vshort": [34, 46], "short": [34, 46], "normal": [34, 46, 55, 60], "info": [34, 46, 49], "promo": [34, 46], "summaryfingerprinttaskrespons": 34, "summaryfingerprintrespons": 34, "use_keyword": 34, "completiontaskrespons": 34, "text_too_larg": [34, 36], "completiondebugtaskrespons": 34, "debug_messag": 34, "completionrespons": 34, "completiondebugrespons": 34, "inform": [35, 46, 51], "anchor": 35, "defin": [35, 77, 81], "search": [35, 45, 47, 51, 52], "space": [35, 45, 55, 61], "It": [35, 55, 60, 77], "consist": [35, 47], "measur": 35, "degre": 35, "respect": [35, 63, 77], "config": 35, "schema_extra": 35, "exampl": [35, 43, 55, 60, 77], "1196": [35, 43], "angl": 35, "8055555555555556": 35, "44735199351890065": 35, "9058463104630012": 35, "152547": 35, "bisect": 35, "3333333333333333": 35, "16661245633224378": 35, "22717425120724127": 35, "6666666666666667": 35, "609271523178808": 35, "44715741719086977": 35, "23972889": 35, "distance_from_a_point_to_a_lin": 35, "16666666666666669": 35, "2134432477817427": 35, "003590346636521923": 35, "21885521885521886": 35, "19791666666666666": 35, "19828593689131283": 35, "17781458572659029": 35, "946975": [35, 43], "line_": 35, "geometri": 35, "33567080901262164": 35, "8232323232323234": 35, "7916666666666666": 35, "7855473315153876": 35, "7886663359580247": 35, "22634860": 35, "line_seg": 35, "5555555555555556": 35, "3582111602475977": 35, "42461810549112244": 35, "43097643097643096": 35, "75": [35, 58], "6026490066225165": 35, "5277457623305826": 35, "2175469": 35, "non": [35, 41, 51], "line": [35, 46, 47, 61, 77], "sight_propag": 35, "19444444444444448": 35, "39019342923035233": 35, "01572170017309725": 35, "21212121212121213": 35, "11647727272727273": 35, "5087650954421504": 35, "2950855110143057": 35, "133496": 35, "parallelogram": 35, "3055555555555556": 35, "13627674782665528": 35, "14484503981375635": 35, "4288185842201275": 35, "76944": 35, "perpendicular": 35, "19444444444444445": 35, "039652736888335365": 35, "15017752515904018": 35, "25": [35, 58], "2584729255940787": 35, "19421461143444865": 35, "25278": 35, "quadrilater": 35, "02777777777777779": 35, "15367913840285474": 35, "12360559235107477": 35, "36363636363636365": 35, "3307362680171406": 35, "21973432050168798": 35, "76956": 35, "right_angl": 35, "4166666666666667": 35, "4451948682556247": 35, "12678424818870415": 35, "42424242424242425": 35, "4107908063887807": 35, "3996645939435453": 35, "94102": 35, "solid_angl": 35, "3888888888888889": 35, "6912823774628103": 35, "08695255651117278": 35, "196969696969697": 35, "15909090909090912": 35, "7415270744059212": 35, "4580780578246384": 35, "31482": 35, "tangent": 35, "4722222222222222": 35, "29631455223594527": 35, "3573397570845174": 35, "6414141414141414": 35, "59375": 35, "48284225283305426": 35, "30654": 35, "triangl": 35, "5717479784842091": 35, "2535403349997643": 35, "47723102055958355": 35, "en": [36, 37, 46, 47], "fr": [36, 37, 46], "de": 36, "textfingerprinttaskrespons": 36, "textfingerprintrespons": 36, "translationtaskrespons": 36, "translationrespons": 36, "textdetectlanguagetaskrespons": 36, "textdetectlanguagerespons": 36, "playlist": [37, 47], "retrieveurlresponseinn": 37, "retrieveurlrespons": 37, "videofingerprinttaskrespons": 37, "videofingerprintrespons": 37, "force_non_self": 37, "extractaudiotaskrespons": 37, "durat": [37, 38, 47], "extractaudiorespons": 37, "slidetokenandtimestamp": 37, "timestamp": [37, 47, 63], "detectslidestaskrespons": 37, "slide_token": 37, "detectslidesrespons": 37, "audiofingerprinttaskrespons": 38, "fp_nosil": 38, "audiofingerprintrespons": 38, "audiodetectlanguagetaskrespons": 38, "audiodetectlanguagerespons": 38, "force_lang": [38, 47], "audiotranscriptiontaskrespons": 38, "transcript_result": 38, "subtitle_result": 38, "json": [38, 42, 47, 61], "audiotranscriptionrespons": 38, "interfac": 39, "common_util": 40, "text_util": 40, "delete_fil": 41, "file_path": [41, 42], "delet": [41, 51, 60], "full": [41, 42, 47], "path": [41, 42, 43, 47, 82], "create_symlink_between_path": 41, "old_path": 41, "new_path": 41, "creat": [41, 42, 45, 46, 49, 51, 61, 64], "symlink": 41, "old": 41, "real": 41, "new": [41, 47, 64], "surround_with_charact": 41, "": [41, 43, 45, 46, 60], "c": [41, 58, 60, 77], "surround": 41, "string": [41, 42, 45, 46, 47, 55], "charact": [41, 45], "escape_single_quot": 41, "escap": 41, "singl": [41, 47], "quot": [41, 46, 47], "sql": 41, "queri": [41, 50, 51, 52], "add_where_or_and": 41, "prepar": 41, "ad": 41, "doesn": [41, 42, 47], "t": [41, 42, 43, 46, 47, 55, 61], "alreadi": [41, 47], "have": [41, 77], "one": [41, 46, 47, 55, 58, 64, 77], "AND": 41, "doe": [41, 47, 61], "add_equality_condit": 41, "gener": [41, 45, 46, 47, 55], "would": 41, "form": 41, "kei": [41, 43, 46, 47, 77], "add_non_null_condit": 41, "col": 41, "null": 41, "cannot": 41, "turn": 41, "NOT": 41, "cache_t": 41, "most_similar_t": 41, "init_db": 41, "delete_cache_row": 41, "id_token": 41, "tabl": [41, 81], "insert_or_update_detail": 41, "values_to_insert": 41, "updat": [41, 58], "identifi": [41, 47], "map": [41, 45, 51, 63], "update_details_if_exist": 41, "exist": [41, 42, 46, 47, 61], "otherwis": [41, 42, 47, 55, 77], "get_detail": 41, "using_most_similar": 41, "get": [41, 60], "given": [41, 42, 45, 46, 47, 49, 51, 52, 54, 55, 60, 61, 63, 77], "resolv": [41, 45], "chain": 41, "own": 41, "If": [41, 47, 55, 61, 77], "itself": [41, 47], "get_origin": 41, "applic": 41, "get_details_using_origin": 41, "origin_token": 41, "get_all_detail": 41, "start": [41, 45, 47], "limit": [41, 51, 52], "exclude_token": 41, "allow_nul": 41, "earliest_d": 41, "latest_d": 41, "possibli": 41, "constraint": [41, 46], "offset": 41, "claus": [41, 51], "allow": 41, "earliest": 41, "date": [41, 62, 69], "latest": 41, "colnam": 41, "get_cache_count": 41, "non_null_col": 41, "enforc": 41, "satisfi": [41, 47], "insert_or_update_closest_match": 41, "get_closest_match": 41, "get_all_closest_match": 41, "videodbcachingmanag": 41, "audiodbcachingmanag": 41, "slidedbcachingmanag": 41, "textdbcachingmanag": 41, "summarydbcachingmanag": 41, "scrapingdbcachingmanag": 41, "videoconfig": 41, "get_root_dir": 41, "get_image_dir": 41, "get_audio_dir": 41, "get_video_dir": 41, "get_transcript_dir": 41, "concat_file_path": 41, "filenam": [41, 42, 47, 61], "subfold": 41, "concaten": 41, "root": [41, 47], "dir": 41, "should": [41, 51, 61, 69], "generate_filepath": 41, "force_dir": 41, "its": [41, 45, 47, 77], "particular": 41, "create_symlink": 41, "new_filenam": 41, "fingerprintparamet": 41, "load_valu": 41, "load": [41, 46, 47], "fail": 41, "them": [41, 45, 47], "get_min_sim_text": 41, "get_min_sim_imag": 41, "get_min_sim_audio": 41, "get_min_sim_video": 41, "make_sure_path_exist": 42, "file_at_the_end": 42, "full_perm": 42, "recurs": [42, 47], "folder": [42, 47], "thu": 42, "end": [42, 45, 46, 47, 69, 77], "file_exist": 42, "check": [42, 45], "write_text_fil": 42, "filename_with_path": 42, "content": [42, 45, 47, 61], "write": [42, 47], "textual": 42, "write_json_fil": 42, "d": [42, 58, 60], "read_text_fil": 42, "open": 42, "read": [42, 47, 61], "read_json_fil": 42, "format_datetime_for_mysql": 42, "dt": 42, "parse_mysql_datetim": 42, "get_current_datetim": 42, "current": [42, 47, 63], "datetim": [42, 63], "mysql": 42, "conceptsgraph": [43, 54], "fetch_from_db": [43, 44], "old_compute_scor": 43, "source_page_id": 43, "target_page_id": 43, "possibl": [43, 55], "displaystyl": 43, "frac": 43, "ln": 43, "rebound": 43, "out": [43, 54, 55], "min": 43, "element": [43, 45], "ha": [43, 77], "cg": 43, "compute_scor": 43, "6220": 43, "18973446": 43, "9417": 43, "5193576613841849": 43, "4740698357575134": 43, "3591100561928845": 43, "5343247664351338": 43, "530184349205493": 43, "40043881227279876": 43, "add_graph_scor": 43, "smooth": [43, 44], "includ": [43, 44, 64], "appli": [43, 44], "transform": [43, 44], "bump": 43, "avoid": [43, 61], "neg": 43, "exponenti": 43, "shape": [43, 77], "get_concept_categori": 44, "page_id": 44, "get_predefined_tre": 44, "get_category_par": 44, "get_category_children": 44, "add_concepts_categori": 44, "add_categories_categori": 44, "filter_concept": 44, "add_ontology_scor": 44, "push": 44, "awai": 44, "compare_str": 45, "string1": 45, "string2": 45, "compar": [45, 47, 77], "arrai": 45, "first": [45, 47, 61, 64], "indic": [45, 46, 47, 51], "find_consecutive_run": 45, "v": [45, 47, 50, 77], "min_run": 45, "32": 45, "find": [45, 47, 50], "consecut": [45, 64], "run": [45, 58, 64, 69], "sequenc": [45, 47], "40": [45, 46], "time": [45, 47, 56, 58], "tupl": [45, 55, 77], "k1": [45, 47], "k2": [45, 47], "find_edge_pattern": 45, "content_stack": 45, "flip_str": 45, "repeat": 45, "pattern": 45, "edg": [45, 54, 77], "begin": [45, 47, 64], "webpag": 45, "flip": 45, "footer": 45, "header": 45, "string_circular_shift": 45, "shift": 45, "circular": 45, "mani": [45, 46, 54], "find_spac": 45, "point": [45, 69], "shift_to_max_correl": 45, "s1": 45, "s2": 45, "maximum": [45, 46, 47, 51, 52, 55, 77], "correl": 45, "posit": 45, "largest": 45, "optim": 45, "intersect": 45, "find_repeated_pattern": 45, "min_length": 45, "1024": 45, "everywher": 45, "within": 45, "substr": 45, "extract_text_from_url": 45, "request_head": 45, "max_length": [45, 47], "tag_search_sequ": 45, "headless": 45, "browser": 45, "tag": [45, 60], "check_url": 45, "test_url": 45, "access": 45, "fulli": 45, "so": [45, 47, 69], "valid": [45, 66], "messag": [45, 64], "code": [45, 47, 61], "create_base_url_token": 45, "standard": 45, "initialize_url": 45, "base_url": 45, "initi": 45, "determin": 45, "protocol": 45, "http": 45, "correct": 45, "generate_sublink_token": 45, "base_token": 45, "reconstruct_data_dict": 45, "page_typ": 45, "reconstruct": 45, "precalcul": 45, "option": [45, 49], "initialize_data_dict": 45, "fill": 45, "pagetyp": 45, "field": [45, 50, 51], "vacant": 45, "get_sublink": 45, "later": 45, "parse_page_typ": 45, "pars": [45, 47, 60], "predefin": 45, "process_all_sublink": 45, "modifi": 45, "remov": [45, 47], "elimin": 45, "long": [45, 46], "md5_text": 46, "md5": [46, 47], "hash": [46, 47], "generate_src_tgt_dict": 46, "generate_translation_text_token": 46, "perceptual_hash_text": 46, "perceptu": [46, 47], "strong": [46, 60], "min_window_length": 46, "window": 46, "k": [46, 77], "gram": 46, "max_window_length": 46, "hash_len": 46, "detect_text_languag": 46, "detect": [46, 47, 69], "count_tokens_for_openai": 46, "model": [46, 47], "cl100k_base": 46, "openai": 46, "force_dict_to_text": 46, "generate_summary_text_token": 46, "generate_summary_type_dict": 46, "convert_text_or_dict_to_text": 46, "text_or_dict": 46, "chatgptsummar": 46, "establish_connect": [46, 47], "ensur": 46, "boolean": [46, 64], "wa": 46, "found": [46, 47], "generate_summari": 46, "max_normal_len": 46, "100": [46, 58], "max_short_len": 46, "synthes": 46, "produc": 46, "either": 46, "sentenc": [46, 55], "block": [46, 47, 61, 64], "without": [46, 47, 64, 77], "blank": [46, 47, 77], "unind": [46, 47, 77], "market": 46, "approxim": 46, "word": [46, 55], "flag": 46, "were": 46, "too": [46, 64], "cleanup_text": 46, "handwrit": 46, "temperatur": 46, "top_p": 46, "translationmodel": 46, "load_model": 46, "huggingfac": 46, "pysbd": 46, "segment": [46, 47], "unpunctu": 46, "generate_random_token": 47, "random": [47, 82], "retrieve_file_from_url": 47, "output_filename_with_path": 47, "output_token": 47, "wget": 47, "store": [47, 54], "local": 47, "retrieve_file_from_kaltura": 47, "m3u8": 47, "kaltura": 47, "perform_prob": 47, "input_filename_with_path": 47, "probe": 47, "ffprobe": 47, "see": 47, "document": [47, 51], "generate_symbolic_token": 47, "symbol": 47, "md5_video_or_audio": 47, "stream": 47, "detect_audio_format_and_dur": 47, "input_token": 47, "track": [47, 58, 64], "ogg": 47, "extract_audio_from_video": 47, "extract_media_seg": 47, "find_beginning_and_ending_sil": 47, "distance_from_end_tol": 47, "01": [47, 71], "noise_thresh": 47, "0001": 47, "silenc": 47, "toler": 47, "distanc": [47, 77], "nois": 47, "remove_silence_doublesid": 47, "unsuccess": 47, "perceptual_hash_audio": 47, "7200": 47, "represent": 47, "decod": 47, "both": [47, 77], "perceptual_hash_imag": 47, "hash_siz": 47, "16": 47, "size": [47, 54], "compare_decoded_fingerprint": 47, "decoded_1": 47, "decoded_2": 47, "fuzzi": 47, "ratio": [47, 77], "compare_encoded_fingerprint": 47, "f1": 47, "f2": 47, "decoder_func": 47, "function": [47, 64, 77], "decode_fingerprint": 47, "encod": [47, 60], "exact": 47, "find_closest_fingerprint_from_list": 47, "target_fp": 47, "fp_list": 47, "token_list": 47, "date_list": 47, "candid": 47, "highest": 47, "whose": [47, 77], "abov": [47, 63, 77], "correspond": 47, "lower": 47, "than": [47, 55, 77], "differ": [47, 64, 77], "three": 47, "criterion": 47, "find_closest_audio_fingerprint_from_list": 47, "find_closest_image_fingerprint_from_list": 47, "extract_fram": 47, "output_folder_with_path": 47, "output_fold": 47, "frame": 47, "generate_frame_sample_indic": 47, "input_folder_with_path": 47, "12": 47, "we": 47, "don": [47, 55], "our": 47, "calcul": 47, "read_txt_gz_fil": 47, "fp": 47, "txt": 47, "gz": 47, "write_txt_gz_fil": 47, "read_json_gz_fil": 47, "perform_tesseract_ocr": 47, "image_path": 47, "ocr": 47, "tesseract_ocr_or_get_cach": 47, "ocr_path": 47, "langaug": 47, "frame_ocr_dist": 47, "nlp_model": 47, "nlp": 47, "frame_hash_similar": 47, "compute_ocr_noise_level": 47, "frame_sample_indic": 47, "sampl": 47, "below": [47, 54, 55, 63], "compute_ocr_threshold": 47, "distance_list": 47, "default_threshold": 47, "subsequ": 47, "empti": 47, "check_ocr_and_hash_threshold": 47, "k_l": 47, "k_r": 47, "ocr_dist_threshold": 47, "hash_similarity_threshold": 47, "frame_ocr_transit": 47, "transit": 47, "binari": 47, "thei": [47, 55], "frame_format": 47, "leftmost": 47, "rightmost": 47, "distinct": 47, "compute_video_ocr_transit": 47, "hash_dist_threshold": 47, "keep_first": 47, "transitori": 47, "whispertranscriptionmodel": 47, "load_model_whisp": 47, "lazi": 47, "whisper": 47, "memori": 47, "model_typ": 47, "doc": [47, 51, 69], "detect_audio_segment_lang_whisp": 47, "30": 47, "transcribe_audio_whisp": 47, "verbos": 47, "explicitli": 47, "feed": [47, 60], "transcript": 47, "like": 47, "subtitl": 47, "nlpmodel": 47, "get_nlp_model": 47, "googleocrmodel": 47, "lazili": 47, "connect": [47, 54], "successfulli": 47, "establish": 47, "perform_ocr": 47, "text_detect": 47, "document_text_detect": 47, "wait_for_ocr_result": 47, "image_object": 47, "dtd": 47, "retri": 47, "6": [47, 64], "make": 47, "call": [47, 55], "wait": 47, "td": 47, "case": [47, 61], "failur": 47, "celery_config": 48, "db": [48, 78], "wp": 48, "route_task": 49, "arg": 49, "kwarg": 49, "kw": 49, "baseconfig": 49, "developmentconfig": 49, "get_set": 49, "create_celeri": 49, "app": 49, "get_celery_task": 49, "asyncresult": 49, "get_task_info": 49, "quote_valu": 50, "commun": [50, 51, 52], "epflgraph": [50, 51], "execute_queri": 50, "execut": [50, 58, 64], "custom": 50, "build_conditions_list": 50, "table_nam": 50, "print_queri": 50, "find_or_split": 50, "filter_field": 50, "filter_id": 50, "drop_tabl": 50, "create_t": 50, "insert_datafram": 50, "df": [50, 71, 78], "drop_create_insert_t": 50, "check_if_table_exist": 50, "es_bool": 51, "must": 51, "must_not": 51, "build": 51, "argument": 51, "es_match": 51, "boost": 51, "oper": 51, "es_multi_match": 51, "minimum_should_match": 51, "multi_match": 51, "es_dis_max": 51, "dis_max": 51, "instanc": 51, "searchrank": [51, 52], "search_mediawiki": 51, "mediawiki": [51, 69], "structur": 51, "search_mediawiki_no_rescor": 51, "skip": [51, 61], "rescor": 51, "part": 51, "search_mediawiki_no_plain": 51, "restrict": 51, "plain": 51, "search_mediawiki_restrict_4": 51, "head": 51, "opening_text": 51, "search_mediawiki_restrict_2": 51, "about": [51, 55], "respons": 51, "index_doc": [51, 69], "create_index": [51, 67], "delete_index": 51, "refresh": 51, "draw": 53, "draw_ontologi": 54, "neighbourhood": 54, "tmp": 54, "serialis": 54, "orient": 54, "record": 54, "go": 54, "up": 54, "succeed": 54, "draw_graph": 54, "compon": 54, "word_token": 55, "separ": 55, "you": [55, 60], "rake_extract": 55, "split_word": 55, "return_scor": 55, "auto": 55, "filter_past_tenses_and_adverb": 55, "unconstrain": 55, "python": 55, "rake": 55, "nltk": 55, "more": [55, 58, 64], "split": 55, "retur": 55, "minim": 55, "ignor": 55, "past": 55, "tens": 55, "participl": 55, "adverb": 55, "join": [55, 60], "crowd": 55, "young": 55, "boi": 55, "re": 55, "foolin": 55, "around": 55, "corner": 55, "drunk": 55, "dress": 55, "best": 55, "brown": 55, "baggi": 55, "platform": 55, "sole": 55, "give": 55, "damn": 55, "trumpet": 55, "playin": 55, "band": 55, "ain": 55, "what": 55, "rock": 55, "roll": 55, "get_keyword": 55, "p": [55, 60], "breadcrumb": 56, "progress_bar": 56, "color": [57, 61], "time_color": 57, "grai": 57, "report": [57, 64], "outdent": 57, "progressbar": 58, "n_iter": 58, "bar_length": 58, "50": 58, "progress": 58, "bar": 58, "usag": [58, 64], "letter": 58, "b": 58, "pb": 58, "len": 58, "consum": [58, 64], "00": 58, "print": [58, 60, 61, 63, 64], "iter": 58, "percentag": 58, "complet": [58, 64, 82], "overwrit": 58, "state": 58, "ban": 58, "reset": [58, 61, 64], "increment": 58, "counter": 58, "reus": [58, 64], "clean": 59, "io": 59, "htmlcleaner": 60, "htmlparser": 60, "html": 60, "shiver": 60, "dark": 60, "br": 60, "rain": 60, "park": 60, "meantim": 60, "get_data": 60, "handle_starttag": 60, "attr": 60, "handle_endtag": 60, "handle_data": 60, "solv": 60, "problem": 60, "email": 60, "convert": 60, "lowercas": 60, "u2018rain": 60, "u2019": 60, "lt": 60, "evalu": 61, "pref": 61, "x1b": 61, "0m": 61, "black": 61, "30m": 61, "blue": 61, "34m": 61, "cyan": 61, "36m": 61, "green": 61, "32m": 61, "magenta": 61, "35m": 61, "red": 61, "31m": 61, "white": 61, "37m": 61, "yellow": 61, "33m": 61, "cprint": 61, "is_bold": 61, "bold": 61, "pprint": 61, "inlin": 61, "only_first": 61, "pretti": 61, "preced": 61, "ellipsi": 61, "big": 61, "read_json": 61, "save_json": 61, "save": 61, "mkdir": 61, "dirnam": 61, "directori": 61, "stopwatch": 62, "now": 63, "2022": 63, "06": 63, "28": 63, "09": 63, "46": 63, "21": 63, "677968": 63, "rescal": 63, "min_dat": 63, "max_dat": 63, "seri": 63, "rang": [63, 77], "assum": [63, 77], "yyyi": 63, "mm": 63, "dd": 63, "add_year": 63, "n_year": 63, "sw": 64, "delta": 64, "4": [64, 87], "284306764602661": 64, "variabl": 64, "well": 64, "t1": 64, "t2": 64, "yet": 64, "t3": 64, "609307289123535": 64, "849977970123291": 64, "660188913345337": 64, "also": 64, "preprocess": 64, "pre_tim": 64, "task_tim": 64, "postprocess": 64, "post_tim": 64, "total_tim": 64, "f": 64, "proport": 64, "5176954220125477": 64, "tick": 64, "replac": [64, 77], "partial": 64, "furthermor": 64, "19": 64, "86": 64, "lap": 64, "74": 64, "11": 64, "66": 64, "45": 64, "checkpoint": 64, "finish": 64, "last": 64, "befor": [64, 77], "invest": 66, "visualis": 66, "populate_index": 67, "script": 69, "popul": 69, "aitor_concepts_": 69, "directli": 69, "campus_analyt": 69, "after": 69, "creation": [69, 81], "said": 69, "could": 69, "veri": 69, "aggregate_recent_past": 70, "check_unit": 70, "compute_fundraisers_unit": 70, "compute_investors_unit": 70, "compute_investors_units_2": 70, "compute_jaccard_index": 70, "concept_configur": 70, "create_investments_graph": 70, "detect_fundraisers_concept": 70, "toy_exampl": 70, "compute_year_coeffici": 71, "recent_past": 71, "rescale_scor": 71, "year": 71, "aggregate_year": 71, "groupby_column": [71, 78], "normalize_scor": 71, "score_column": 71, "show_trend": 72, "unit_id": 72, "unit_concept": 72, "show_matchmaking_list_view": 72, "investors_concepts_jaccard": 72, "investors_concept": 72, "unit_concept_id": 72, "show_matchmaking_chart_view": 72, "unit_investor": 72, "time_window": 72, "norm": 77, "x": 77, "configur": 77, "investorid": 77, "sqrt": 77, "sum_": 77, "o": 77, "divid": 77, "henc": 77, "mix": 77, "min_ratio": 77, "05": 77, "sourcepageid": 77, "targetpageid": 77, "weight": 77, "arithmet": 77, "mean": 77, "product": 77, "ball": 77, "loop": 77, "normalise_graph": 77, "add": 77, "miss": 77, "revers": 77, "averag": 77, "vertex": 77, "direct": 77, "y": 77, "associ": 77, "key_x": 77, "key_i": 77, "geometr": 77, "compute_affin": 77, "mix_x": 77, "mix_i": 77, "normalise_befor": 77, "cosin": 77, "affin": 77, "requir": 77, "recommend": 77, "low": 77, "euclidean": 77, "notic": 77, "faster": 77, "coeffici": 77, "inf": 77, "typic": 77, "higher": 77, "assign": 77, "unus": 77, "u": 77, "squar": 77, "equival": 77, "scalar": 77, "tanh": 77, "denot": 77, "get_fr": 78, "get_investors_fr": 78, "fr_id": 78, "get_frs_fundrais": 78, "get_fundraisers_concept": 78, "fundraiser_id": 78, "derive_yearly_data": 78, "date_column": 78, "amount_column": 78, "build_prefix": 81, "n": 82, "1_old": 83, "2_new": 83, "3_slide": 83, "startup": 87}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [39, 0, 0, "-", "core"], [65, 0, 0, "-", "definitions"], [66, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "main"], [20, 0, 0, "-", "routers"], [29, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "scraping"], [7, 0, 0, "-", "summarization"], [8, 0, 0, "-", "text"], [9, 0, 0, "-", "translation"], [10, 0, 0, "-", "video"], [11, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[8, 1, 1, "", "aggregate_results"], [8, 1, 1, "", "filter_results"]], "graphai.api.common": [[13, 0, 0, "-", "celery_tools"], [14, 0, 0, "-", "graph"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "translation"], [18, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[13, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[15, 1, 1, "", "log"]], "graphai.api.main": [[19, 1, 1, "", "init"], [19, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[21, 0, 0, "-", "image"], [22, 0, 0, "-", "ontology"], [23, 0, 0, "-", "scraping"], [24, 0, 0, "-", "summarization"], [25, 0, 0, "-", "text"], [26, 0, 0, "-", "translation"], [27, 0, 0, "-", "video"], [28, 0, 0, "-", "voice"]], "graphai.api.routers.image": [[21, 1, 1, "", "calculate_slide_fingerprint"], [21, 1, 1, "", "calculate_slide_fingerprint_status"], [21, 1, 1, "", "detect_ocr_language_status"], [21, 1, 1, "", "extract_text"], [21, 1, 1, "", "extract_text_status"], [21, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[22, 1, 1, "", "children"], [22, 1, 1, "", "ontology_tree_response_handler"], [22, 1, 1, "", "parent"], [22, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[23, 1, 1, "", "extract_page_content"], [23, 1, 1, "", "extract_page_content_status"], [23, 1, 1, "", "extract_sublinks"], [23, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.summarization": [[24, 1, 1, "", "calculate_summary_text_fingerprint"], [24, 1, 1, "", "calculate_summary_text_fingerprint_status"], [24, 1, 1, "", "clean_up"], [24, 1, 1, "", "create_title"], [24, 1, 1, "", "get_cleanup_task_chain"], [24, 1, 1, "", "get_summary_task_chain"], [24, 1, 1, "", "get_summary_text_fingerprint_chain_list"], [24, 1, 1, "", "summarize"], [24, 1, 1, "", "summarize_status"]], "graphai.api.routers.text": [[25, 1, 1, "", "keywords"], [25, 1, 1, "", "priority_test_text"], [25, 1, 1, "", "wikify"], [25, 1, 1, "", "wikify_graph_svg"], [25, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[26, 1, 1, "", "calculate_translation_text_fingerprint"], [26, 1, 1, "", "calculate_translation_text_fingerprint_status"], [26, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [26, 1, 1, "", "text_detect_language"], [26, 1, 1, "", "text_detect_language_status"], [26, 1, 1, "", "translate"], [26, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[27, 1, 1, "", "calculate_video_fingerprint"], [27, 1, 1, "", "calculate_video_fingerprint_status"], [27, 1, 1, "", "detect_slides"], [27, 1, 1, "", "detect_slides_status"], [27, 1, 1, "", "extract_audio"], [27, 1, 1, "", "extract_audio_status"], [27, 1, 1, "", "get_file"], [27, 1, 1, "", "get_retrieve_file_status"], [27, 1, 1, "", "get_video_fingerprint_chain_list"], [27, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[28, 1, 1, "", "calculate_audio_fingerprint"], [28, 1, 1, "", "calculate_audio_fingerprint_status"], [28, 1, 1, "", "detect_language"], [28, 1, 1, "", "detect_language_status"], [28, 1, 1, "", "get_audio_fingerprint_chain_list"], [28, 1, 1, "", "priority_test"], [28, 1, 1, "", "transcribe"], [28, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[30, 0, 0, "-", "common"], [31, 0, 0, "-", "image"], [32, 0, 0, "-", "ontology"], [33, 0, 0, "-", "scraping"], [34, 0, 0, "-", "summarization"], [35, 0, 0, "-", "text"], [36, 0, 0, "-", "translation"], [37, 0, 0, "-", "video"], [38, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[30, 2, 1, "", "FileRequest"], [30, 2, 1, "", "TaskIDResponse"], [30, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[30, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[30, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[30, 3, 1, "", "task_id"], [30, 3, 1, "", "task_name"], [30, 3, 1, "", "task_result"], [30, 3, 1, "", "task_status"]], "graphai.api.schemas.image": [[31, 2, 1, "", "DetectOCRLanguageResponse"], [31, 2, 1, "", "DetectOCRLanguageTaskResponse"], [31, 2, 1, "", "ExtractTextRequest"], [31, 2, 1, "", "ExtractTextResponse"], [31, 2, 1, "", "ExtractTextTaskResponse"], [31, 2, 1, "", "ImageFingerprintRequest"], [31, 2, 1, "", "ImageFingerprintResponse"], [31, 2, 1, "", "ImageFingerprintTaskResponse"], [31, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[31, 3, 1, "", "fresh"], [31, 3, 1, "", "language"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[31, 3, 1, "", "force"], [31, 3, 1, "", "method"], [31, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[31, 3, 1, "", "fresh"], [31, 3, 1, "", "language"], [31, 3, 1, "", "result"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[31, 3, 1, "", "force"], [31, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[31, 3, 1, "", "closest_token"], [31, 3, 1, "", "closest_token_origin"], [31, 3, 1, "", "fresh"], [31, 3, 1, "", "result"], [31, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[31, 3, 1, "", "method"], [31, 3, 1, "", "text"], [31, 3, 1, "", "token"]], "graphai.api.schemas.ontology": [[32, 2, 1, "", "TreeResponse"], [32, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[32, 3, 1, "", "ChildCategoryID"], [32, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.scraping": [[33, 2, 1, "", "ExtractContentRequest"], [33, 2, 1, "", "ExtractContentResponse"], [33, 2, 1, "", "ExtractContentTaskResponse"], [33, 2, 1, "", "GetSublinksRequest"], [33, 2, 1, "", "GetSublinksResponse"], [33, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[33, 3, 1, "", "remove_headers"], [33, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[33, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "status_msg"], [33, 3, 1, "", "sublinks"], [33, 3, 1, "", "successful"], [33, 3, 1, "", "token"], [33, 3, 1, "", "validated_url"]], "graphai.api.schemas.summarization": [[34, 2, 1, "", "CleanupRequest"], [34, 2, 1, "", "CompletionDebugResponse"], [34, 2, 1, "", "CompletionDebugTaskResponse"], [34, 2, 1, "", "CompletionResponse"], [34, 2, 1, "", "CompletionTaskResponse"], [34, 2, 1, "", "SummarizationRequest"], [34, 2, 1, "", "SummaryFingerprintRequest"], [34, 2, 1, "", "SummaryFingerprintResponse"], [34, 2, 1, "", "SummaryFingerprintTaskResponse"]], "graphai.api.schemas.summarization.CleanupRequest": [[34, 3, 1, "", "debug"], [34, 3, 1, "", "force"], [34, 3, 1, "", "text"], [34, 3, 1, "", "text_type"]], "graphai.api.schemas.summarization.CompletionDebugResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.CompletionDebugTaskResponse": [[34, 3, 1, "", "debug_message"]], "graphai.api.schemas.summarization.CompletionResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.CompletionTaskResponse": [[34, 3, 1, "", "fresh"], [34, 3, 1, "", "result"], [34, 3, 1, "", "result_type"], [34, 3, 1, "", "successful"], [34, 3, 1, "", "text_too_large"]], "graphai.api.schemas.summarization.SummarizationRequest": [[34, 3, 1, "", "debug"], [34, 3, 1, "", "force"], [34, 3, 1, "", "len_class"], [34, 3, 1, "", "text"], [34, 3, 1, "", "text_type"], [34, 3, 1, "", "tone"], [34, 3, 1, "", "use_keywords"]], "graphai.api.schemas.summarization.SummaryFingerprintRequest": [[34, 3, 1, "", "force"], [34, 3, 1, "", "len_class"], [34, 3, 1, "", "summary_type"], [34, 3, 1, "", "text"], [34, 3, 1, "", "text_type"], [34, 3, 1, "", "tone"]], "graphai.api.schemas.summarization.SummaryFingerprintResponse": [[34, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse": [[34, 3, 1, "", "closest_token"], [34, 3, 1, "", "fresh"], [34, 3, 1, "", "result"], [34, 3, 1, "", "successful"]], "graphai.api.schemas.text": [[35, 2, 1, "", "KeywordsRequest"], [35, 2, 1, "", "WikifyRequest"], [35, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[35, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[35, 2, 1, "", "Config"], [35, 3, 1, "", "GraphScore"], [35, 3, 1, "", "KeywordsScore"], [35, 3, 1, "", "LevenshteinScore"], [35, 3, 1, "", "MixedScore"], [35, 3, 1, "", "OntologyGlobalScore"], [35, 3, 1, "", "OntologyLocalScore"], [35, 3, 1, "", "PageID"], [35, 3, 1, "", "PageTitle"], [35, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[35, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[36, 2, 1, "", "TextDetectLanguageRequest"], [36, 2, 1, "", "TextDetectLanguageResponse"], [36, 2, 1, "", "TextDetectLanguageTaskResponse"], [36, 2, 1, "", "TextFingerprintRequest"], [36, 2, 1, "", "TextFingerprintResponse"], [36, 2, 1, "", "TextFingerprintTaskResponse"], [36, 2, 1, "", "TranslationRequest"], [36, 2, 1, "", "TranslationResponse"], [36, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[36, 3, 1, "", "language"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[36, 3, 1, "", "closest_token"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "source"], [36, 3, 1, "", "target"], [36, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"], [36, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[37, 2, 1, "", "DetectSlidesRequest"], [37, 2, 1, "", "DetectSlidesResponse"], [37, 2, 1, "", "DetectSlidesTaskResponse"], [37, 2, 1, "", "ExtractAudioRequest"], [37, 2, 1, "", "ExtractAudioResponse"], [37, 2, 1, "", "ExtractAudioTaskResponse"], [37, 2, 1, "", "RetrieveURLRequest"], [37, 2, 1, "", "RetrieveURLResponse"], [37, 2, 1, "", "RetrieveURLResponseInner"], [37, 2, 1, "", "SlideTokenAndTimeStamp"], [37, 2, 1, "", "VideoFingerprintRequest"], [37, 2, 1, "", "VideoFingerprintResponse"], [37, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "language"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "slide_tokens"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_non_self"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[37, 3, 1, "", "duration"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "playlist"], [37, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "successful"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[37, 3, 1, "", "timestamp"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[37, 3, 1, "", "closest_token"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[38, 2, 1, "", "AudioDetectLanguageRequest"], [38, 2, 1, "", "AudioDetectLanguageResponse"], [38, 2, 1, "", "AudioDetectLanguageTaskResponse"], [38, 2, 1, "", "AudioFingerprintRequest"], [38, 2, 1, "", "AudioFingerprintResponse"], [38, 2, 1, "", "AudioFingerprintTaskResponse"], [38, 2, 1, "", "AudioTranscriptionRequest"], [38, 2, 1, "", "AudioTranscriptionResponse"], [38, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "remove_silence"], [38, 3, 1, "", "threshold"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[38, 3, 1, "", "closest_token"], [38, 3, 1, "", "closest_token_origin"], [38, 3, 1, "", "duration"], [38, 3, 1, "", "fp_nosilence"], [38, 3, 1, "", "fresh"], [38, 3, 1, "", "result"], [38, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[38, 3, 1, "", "force"], [38, 3, 1, "", "force_lang"], [38, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[38, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[38, 3, 1, "", "fresh"], [38, 3, 1, "", "language"], [38, 3, 1, "", "subtitle_result"], [38, 3, 1, "", "transcript_result"]], "graphai.core": [[40, 0, 0, "-", "common"], [48, 0, 0, "-", "interfaces"], [53, 0, 0, "-", "text"], [56, 0, 0, "-", "utils"]], "graphai.core.common": [[41, 0, 0, "-", "caching"], [42, 0, 0, "-", "common_utils"], [43, 0, 0, "-", "graph"], [44, 0, 0, "-", "ontology"], [45, 0, 0, "-", "scraping"], [46, 0, 0, "-", "text_utils"], [47, 0, 0, "-", "video"]], "graphai.core.common.caching": [[41, 2, 1, "", "AudioDBCachingManager"], [41, 2, 1, "", "DBCachingManagerBase"], [41, 2, 1, "", "FingerprintParameters"], [41, 2, 1, "", "ScrapingDBCachingManager"], [41, 2, 1, "", "SlideDBCachingManager"], [41, 2, 1, "", "SummaryDBCachingManager"], [41, 2, 1, "", "TextDBCachingManager"], [41, 2, 1, "", "VideoConfig"], [41, 2, 1, "", "VideoDBCachingManager"], [41, 1, 1, "", "add_equality_conditions"], [41, 1, 1, "", "add_non_null_conditions"], [41, 1, 1, "", "add_where_or_and"], [41, 1, 1, "", "create_symlink_between_paths"], [41, 1, 1, "", "delete_file"], [41, 1, 1, "", "escape_single_quotes"], [41, 1, 1, "", "surround_with_character"]], "graphai.core.common.caching.AudioDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.DBCachingManagerBase": [[41, 4, 1, "", "delete_cache_rows"], [41, 4, 1, "", "get_all_closest_matches"], [41, 4, 1, "", "get_all_details"], [41, 4, 1, "", "get_cache_count"], [41, 4, 1, "", "get_closest_match"], [41, 4, 1, "", "get_details"], [41, 4, 1, "", "get_details_using_origin"], [41, 4, 1, "", "get_origin"], [41, 4, 1, "", "init_db"], [41, 4, 1, "", "insert_or_update_closest_match"], [41, 4, 1, "", "insert_or_update_details"], [41, 4, 1, "", "update_details_if_exists"]], "graphai.core.common.caching.FingerprintParameters": [[41, 4, 1, "", "get_min_sim_audio"], [41, 4, 1, "", "get_min_sim_image"], [41, 4, 1, "", "get_min_sim_text"], [41, 4, 1, "", "get_min_sim_video"], [41, 4, 1, "", "load_values"]], "graphai.core.common.caching.ScrapingDBCachingManager": [[41, 4, 1, "", "get_details_using_origin"], [41, 4, 1, "", "init_db"]], "graphai.core.common.caching.SlideDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.SummaryDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[41, 4, 1, "", "concat_file_path"], [41, 4, 1, "", "create_symlink"], [41, 4, 1, "", "generate_filepath"], [41, 4, 1, "", "get_audio_dir"], [41, 4, 1, "", "get_image_dir"], [41, 4, 1, "", "get_root_dir"], [41, 4, 1, "", "get_transcript_dir"], [41, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[41, 4, 1, "", "init_db"]], "graphai.core.common.common_utils": [[42, 1, 1, "", "file_exists"], [42, 1, 1, "", "format_datetime_for_mysql"], [42, 1, 1, "", "get_current_datetime"], [42, 1, 1, "", "make_sure_path_exists"], [42, 1, 1, "", "parse_mysql_datetime"], [42, 1, 1, "", "read_json_file"], [42, 1, 1, "", "read_text_file"], [42, 1, 1, "", "write_json_file"], [42, 1, 1, "", "write_text_file"]], "graphai.core.common.graph": [[43, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[43, 4, 1, "", "add_graph_score"], [43, 4, 1, "", "fetch_from_db"], [43, 4, 1, "", "old_compute_scores"]], "graphai.core.common.ontology": [[44, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[44, 4, 1, "", "add_categories_category"], [44, 4, 1, "", "add_concepts_category"], [44, 4, 1, "", "add_ontology_scores"], [44, 4, 1, "", "fetch_from_db"], [44, 4, 1, "", "filter_concepts"], [44, 4, 1, "", "get_category_children"], [44, 4, 1, "", "get_category_parent"], [44, 4, 1, "", "get_concept_category"], [44, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.scraping": [[45, 1, 1, "", "check_url"], [45, 1, 1, "", "compare_strings"], [45, 1, 1, "", "create_base_url_token"], [45, 1, 1, "", "extract_text_from_url"], [45, 1, 1, "", "find_consecutive_runs"], [45, 1, 1, "", "find_edge_patterns"], [45, 1, 1, "", "find_repeated_patterns"], [45, 1, 1, "", "find_spaces"], [45, 1, 1, "", "generate_sublink_token"], [45, 1, 1, "", "get_sublinks"], [45, 1, 1, "", "initialize_data_dict"], [45, 1, 1, "", "initialize_url"], [45, 1, 1, "", "parse_page_type"], [45, 1, 1, "", "process_all_sublinks"], [45, 1, 1, "", "reconstruct_data_dict"], [45, 1, 1, "", "remove_headers"], [45, 1, 1, "", "remove_long_patterns"], [45, 1, 1, "", "shift_to_max_correlation"], [45, 1, 1, "", "string_circular_shift"]], "graphai.core.common.text_utils": [[46, 2, 1, "", "ChatGPTSummarizer"], [46, 2, 1, "", "TranslationModels"], [46, 1, 1, "", "convert_text_or_dict_to_text"], [46, 1, 1, "", "count_tokens_for_openai"], [46, 1, 1, "", "detect_text_language"], [46, 1, 1, "", "force_dict_to_text"], [46, 1, 1, "", "generate_src_tgt_dict"], [46, 1, 1, "", "generate_summary_text_token"], [46, 1, 1, "", "generate_summary_type_dict"], [46, 1, 1, "", "generate_translation_text_token"], [46, 1, 1, "", "md5_text"], [46, 1, 1, "", "perceptual_hash_text"]], "graphai.core.common.text_utils.ChatGPTSummarizer": [[46, 4, 1, "", "cleanup_text"], [46, 4, 1, "", "establish_connection"], [46, 4, 1, "", "generate_summary"]], "graphai.core.common.text_utils.TranslationModels": [[46, 4, 1, "", "load_models"], [46, 4, 1, "", "translate"]], "graphai.core.common.video": [[47, 2, 1, "", "GoogleOCRModel"], [47, 2, 1, "", "NLPModels"], [47, 2, 1, "", "WhisperTranscriptionModel"], [47, 1, 1, "", "check_ocr_and_hash_thresholds"], [47, 1, 1, "", "compare_decoded_fingerprints"], [47, 1, 1, "", "compare_encoded_fingerprints"], [47, 1, 1, "", "compute_ocr_noise_level"], [47, 1, 1, "", "compute_ocr_threshold"], [47, 1, 1, "", "compute_video_ocr_transitions"], [47, 1, 1, "", "detect_audio_format_and_duration"], [47, 1, 1, "", "extract_audio_from_video"], [47, 1, 1, "", "extract_frames"], [47, 1, 1, "", "extract_media_segment"], [47, 1, 1, "", "find_beginning_and_ending_silences"], [47, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [47, 1, 1, "", "find_closest_fingerprint_from_list"], [47, 1, 1, "", "find_closest_image_fingerprint_from_list"], [47, 1, 1, "", "frame_hash_similarity"], [47, 1, 1, "", "frame_ocr_distance"], [47, 1, 1, "", "frame_ocr_transition"], [47, 1, 1, "", "generate_frame_sample_indices"], [47, 1, 1, "", "generate_random_token"], [47, 1, 1, "", "generate_symbolic_token"], [47, 1, 1, "", "md5_video_or_audio"], [47, 1, 1, "", "perceptual_hash_audio"], [47, 1, 1, "", "perceptual_hash_image"], [47, 1, 1, "", "perform_probe"], [47, 1, 1, "", "perform_tesseract_ocr"], [47, 1, 1, "", "read_json_gz_file"], [47, 1, 1, "", "read_txt_gz_file"], [47, 1, 1, "", "remove_silence_doublesided"], [47, 1, 1, "", "retrieve_file_from_kaltura"], [47, 1, 1, "", "retrieve_file_from_url"], [47, 1, 1, "", "tesseract_ocr_or_get_cached"], [47, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.GoogleOCRModel": [[47, 4, 1, "", "establish_connection"], [47, 4, 1, "", "perform_ocr"], [47, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[47, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.WhisperTranscriptionModel": [[47, 4, 1, "", "detect_audio_segment_lang_whisper"], [47, 4, 1, "", "load_model_whisper"], [47, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[49, 0, 0, "-", "celery_config"], [50, 0, 0, "-", "db"], [51, 0, 0, "-", "es"], [52, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[49, 2, 1, "", "BaseConfig"], [49, 2, 1, "", "DevelopmentConfig"], [49, 1, 1, "", "create_celery"], [49, 1, 1, "", "get_celery_task"], [49, 1, 1, "", "get_settings"], [49, 1, 1, "", "get_task_info"], [49, 1, 1, "", "route_task"]], "graphai.core.interfaces.db": [[50, 2, 1, "", "DB"], [50, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[50, 4, 1, "", "build_conditions_list"], [50, 4, 1, "", "check_if_table_exists"], [50, 4, 1, "", "create_table"], [50, 4, 1, "", "drop_create_insert_table"], [50, 4, 1, "", "drop_table"], [50, 4, 1, "", "execute_query"], [50, 4, 1, "", "find"], [50, 4, 1, "", "find_or_split"], [50, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[51, 2, 1, "", "ES"], [51, 1, 1, "", "es_bool"], [51, 1, 1, "", "es_dis_max"], [51, 1, 1, "", "es_match"], [51, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[51, 4, 1, "", "create_index"], [51, 4, 1, "", "delete_index"], [51, 4, 1, "", "index_doc"], [51, 4, 1, "", "indices"], [51, 4, 1, "", "refresh"], [51, 4, 1, "", "search"], [51, 4, 1, "", "search_mediawiki"], [51, 4, 1, "", "search_mediawiki_no_plain"], [51, 4, 1, "", "search_mediawiki_no_rescore"], [51, 4, 1, "", "search_mediawiki_restrict_2"], [51, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[52, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[52, 4, 1, "", "search"]], "graphai.core.text": [[54, 0, 0, "-", "draw"], [55, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[54, 1, 1, "", "draw_graph"], [54, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[55, 1, 1, "", "get_keywords"], [55, 1, 1, "", "rake_extract"], [55, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[57, 0, 0, "-", "breadcrumb"], [58, 0, 0, "-", "progress_bar"], [59, 0, 0, "-", "text"], [62, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[57, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[57, 4, 1, "", "indent"], [57, 4, 1, "", "log"], [57, 4, 1, "", "outdent"], [57, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[58, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[58, 4, 1, "", "reset"], [58, 4, 1, "", "update"]], "graphai.core.utils.text": [[60, 0, 0, "-", "clean"], [61, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[60, 2, 1, "", "HTMLCleaner"], [60, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[60, 4, 1, "", "get_data"], [60, 4, 1, "", "handle_data"], [60, 4, 1, "", "handle_endtag"], [60, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[61, 2, 1, "", "Colors"], [61, 1, 1, "", "cprint"], [61, 1, 1, "", "log"], [61, 1, 1, "", "mkdir"], [61, 1, 1, "", "pprint"], [61, 1, 1, "", "read_json"], [61, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[61, 3, 1, "", "codes"], [61, 3, 1, "", "pref"], [61, 3, 1, "", "reset"]], "graphai.core.utils.time": [[63, 0, 0, "-", "date"], [64, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[63, 1, 1, "", "add_years"], [63, 1, 1, "", "now"], [63, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[64, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[64, 4, 1, "", "delta"], [64, 4, 1, "", "report"], [64, 4, 1, "", "reset"], [64, 4, 1, "", "tick"], [64, 4, 1, "", "total"]], "graphai.pipelines": [[67, 0, 0, "-", "elasticsearch"], [70, 0, 0, "-", "investment"], [83, 0, 0, "-", "validation"], [87, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[69, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[69, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[71, 0, 0, "-", "aggregate_recent_past"], [72, 0, 0, "-", "check_unit"], [73, 0, 0, "-", "compute_fundraisers_units"], [74, 0, 0, "-", "compute_investors_units"], [75, 0, 0, "-", "compute_investors_units_2"], [76, 0, 0, "-", "compute_jaccard_index"], [77, 0, 0, "-", "concept_configuration"], [78, 0, 0, "-", "create_investments_graph"], [79, 0, 0, "-", "detect_fundraisers_concepts"], [80, 0, 0, "-", "main"], [81, 0, 0, "-", "parameters"], [82, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[71, 1, 1, "", "aggregate_recent_past"], [71, 1, 1, "", "aggregate_years"], [71, 1, 1, "", "compute_year_coefficients"], [71, 1, 1, "", "normalize_scores"], [71, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[72, 1, 1, "", "main"], [72, 1, 1, "", "show_matchmaking_chart_view"], [72, 1, 1, "", "show_matchmaking_list_view"], [72, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[73, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[74, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[75, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[76, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[77, 1, 1, "", "combine"], [77, 1, 1, "", "compute_affinities"], [77, 1, 1, "", "mix"], [77, 1, 1, "", "norm"], [77, 1, 1, "", "normalise"], [77, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[78, 1, 1, "", "create_investments_graph"], [78, 1, 1, "", "derive_yearly_data"], [78, 1, 1, "", "get_frs"], [78, 1, 1, "", "get_frs_fundraisers"], [78, 1, 1, "", "get_fundraisers_concepts"], [78, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[79, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[80, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[81, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[82, 1, 1, "", "base"], [82, 1, 1, "", "complete"], [82, 1, 1, "", "path"], [82, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "packag": [0, 1, 2, 12, 20, 29, 39, 40, 48, 53, 56, 59, 62, 66, 67, 70, 83, 87], "subpackag": [0, 1, 39, 56, 66], "submodul": [0, 1, 2, 12, 20, 29, 40, 48, 53, 56, 59, 62, 67, 70, 83, 87], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "common": [3, 12, 13, 14, 15, 16, 17, 18, 30, 40, 41, 42, 43, 44, 45, 46, 47], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91], "imag": [4, 21, 31], "ontologi": [5, 16, 22, 32, 44], "scrape": [6, 23, 33, 45], "summar": [7, 24, 34], "text": [8, 25, 35, 53, 54, 55, 59, 60, 61], "translat": [9, 17, 26, 36], "video": [10, 18, 27, 37, 47], "voic": [11, 28, 38], "celery_tool": 13, "graph": [14, 43, 88, 89, 90, 91], "log": 15, "main": [19, 80], "router": [20, 21, 22, 23, 24, 25, 26, 27, 28], "schema": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "core": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "cach": 41, "common_util": 42, "text_util": 46, "interfac": [48, 49, 50, 51, 52], "celery_config": 49, "db": 50, "e": 51, "wp": 52, "draw": 54, "keyword": 55, "util": [56, 57, 58, 59, 60, 61, 62, 63, 64], "breadcrumb": 57, "progress_bar": 58, "clean": 60, "io": 61, "time": [62, 63, 64], "date": 63, "stopwatch": 64, "definit": 65, "pipelin": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "elasticsearch": [67, 68, 69], "create_index": 68, "populate_index": 69, "invest": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "aggregate_recent_past": 71, "check_unit": 72, "compute_fundraisers_unit": 73, "compute_investors_unit": 74, "compute_investors_units_2": 75, "compute_jaccard_index": 76, "concept_configur": 77, "create_investments_graph": 78, "detect_fundraisers_concept": 79, "paramet": 81, "toy_exampl": 82, "valid": [83, 84, 85, 86], "1_old": 84, "2_new": 85, "3_slide": 86, "visualis": [87, 88, 89, 90, 91], "startup": [88, 89, 90, 91], "2": 89, "3": 90, "4": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [39, "subpackages"], [56, "subpackages"], [66, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [12, "submodules"], [20, "submodules"], [29, "submodules"], [40, "submodules"], [48, "submodules"], [53, "submodules"], [56, "submodules"], [59, "submodules"], [62, "submodules"], [67, "submodules"], [70, "submodules"], [83, "submodules"], [87, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image module": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[6, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.summarization module": [[7, "module-graphai.api.celery_tasks.summarization"]], "graphai.api.celery_tasks.text module": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[12, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[15, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[18, "module-graphai.api.common.video"]], "graphai.api.main module": [[19, "module-graphai.api.main"]], "graphai.api.routers package": [[20, "module-graphai.api.routers"]], "graphai.api.routers.image module": [[21, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[22, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[23, "module-graphai.api.routers.scraping"]], "graphai.api.routers.summarization module": [[24, "module-graphai.api.routers.summarization"]], "graphai.api.routers.text module": [[25, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[26, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[27, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[28, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[29, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[30, "module-graphai.api.schemas.common"]], "graphai.api.schemas.image module": [[31, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[32, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[33, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.summarization module": [[34, "module-graphai.api.schemas.summarization"]], "graphai.api.schemas.text module": [[35, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[36, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[37, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[38, "module-graphai.api.schemas.voice"]], "graphai.core package": [[39, "module-graphai.core"]], "graphai.core.common package": [[40, "module-graphai.core.common"]], "graphai.core.common.caching module": [[41, "module-graphai.core.common.caching"]], "graphai.core.common.common_utils module": [[42, "module-graphai.core.common.common_utils"]], "graphai.core.common.graph module": [[43, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[44, "module-graphai.core.common.ontology"]], "graphai.core.common.scraping module": [[45, "module-graphai.core.common.scraping"]], "graphai.core.common.text_utils module": [[46, "module-graphai.core.common.text_utils"]], "graphai.core.common.video module": [[47, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[48, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[49, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.db module": [[50, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[51, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[52, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[53, "module-graphai.core.text"]], "graphai.core.text.draw module": [[54, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[55, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[56, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[57, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[58, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[59, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[60, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[61, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[62, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[63, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[64, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[65, "module-graphai.definitions"]], "graphai.pipelines package": [[66, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[67, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[68, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[69, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[70, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[71, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[72, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[73, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[74, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[75, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[76, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[77, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[78, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[79, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[80, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[81, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[82, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[83, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[84, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[85, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[86, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[87, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[88, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[89, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[90, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[91, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.image"], [5, "module-graphai.api.celery_tasks.ontology"], [6, "module-graphai.api.celery_tasks.scraping"], [7, "module-graphai.api.celery_tasks.summarization"], [8, "module-graphai.api.celery_tasks.text"], [9, "module-graphai.api.celery_tasks.translation"], [10, "module-graphai.api.celery_tasks.video"], [11, "module-graphai.api.celery_tasks.voice"], [12, "module-graphai.api.common"], [13, "module-graphai.api.common.celery_tools"], [14, "module-graphai.api.common.graph"], [15, "module-graphai.api.common.log"], [16, "module-graphai.api.common.ontology"], [17, "module-graphai.api.common.translation"], [18, "module-graphai.api.common.video"], [19, "module-graphai.api.main"], [20, "module-graphai.api.routers"], [21, "module-graphai.api.routers.image"], [22, "module-graphai.api.routers.ontology"], [23, "module-graphai.api.routers.scraping"], [24, "module-graphai.api.routers.summarization"], [25, "module-graphai.api.routers.text"], [26, "module-graphai.api.routers.translation"], [27, "module-graphai.api.routers.video"], [28, "module-graphai.api.routers.voice"], [29, "module-graphai.api.schemas"], [30, "module-graphai.api.schemas.common"], [31, "module-graphai.api.schemas.image"], [32, "module-graphai.api.schemas.ontology"], [33, "module-graphai.api.schemas.scraping"], [34, "module-graphai.api.schemas.summarization"], [35, "module-graphai.api.schemas.text"], [36, "module-graphai.api.schemas.translation"], [37, "module-graphai.api.schemas.video"], [38, "module-graphai.api.schemas.voice"], [39, "module-graphai.core"], [40, "module-graphai.core.common"], [41, "module-graphai.core.common.caching"], [42, "module-graphai.core.common.common_utils"], [43, "module-graphai.core.common.graph"], [44, "module-graphai.core.common.ontology"], [45, "module-graphai.core.common.scraping"], [46, "module-graphai.core.common.text_utils"], [47, "module-graphai.core.common.video"], [48, "module-graphai.core.interfaces"], [49, "module-graphai.core.interfaces.celery_config"], [50, "module-graphai.core.interfaces.db"], [51, "module-graphai.core.interfaces.es"], [52, "module-graphai.core.interfaces.wp"], [53, "module-graphai.core.text"], [54, "module-graphai.core.text.draw"], [55, "module-graphai.core.text.keywords"], [56, "module-graphai.core.utils"], [57, "module-graphai.core.utils.breadcrumb"], [58, "module-graphai.core.utils.progress_bar"], [59, "module-graphai.core.utils.text"], [60, "module-graphai.core.utils.text.clean"], [61, "module-graphai.core.utils.text.io"], [62, "module-graphai.core.utils.time"], [63, "module-graphai.core.utils.time.date"], [64, "module-graphai.core.utils.time.stopwatch"], [65, "module-graphai.definitions"], [66, "module-graphai.pipelines"], [67, "module-graphai.pipelines.elasticsearch"], [69, "module-graphai.pipelines.elasticsearch.populate_index"], [70, "module-graphai.pipelines.investment"], [71, "module-graphai.pipelines.investment.aggregate_recent_past"], [72, "module-graphai.pipelines.investment.check_unit"], [73, "module-graphai.pipelines.investment.compute_fundraisers_units"], [74, "module-graphai.pipelines.investment.compute_investors_units"], [75, "module-graphai.pipelines.investment.compute_investors_units_2"], [76, "module-graphai.pipelines.investment.compute_jaccard_index"], [77, "module-graphai.pipelines.investment.concept_configuration"], [78, "module-graphai.pipelines.investment.create_investments_graph"], [79, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [80, "module-graphai.pipelines.investment.main"], [81, "module-graphai.pipelines.investment.parameters"], [82, "module-graphai.pipelines.investment.toy_example"], [83, "module-graphai.pipelines.validation"], [87, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[6, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.summarization": [[7, "module-graphai.api.celery_tasks.summarization"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[12, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[13, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[15, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[15, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[17, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[18, "module-graphai.api.common.video"]], "graphai.api.main": [[19, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[19, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[19, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[20, "module-graphai.api.routers"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[21, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[21, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[22, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[22, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[22, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[22, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[22, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[23, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[23, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[23, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[23, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[23, "module-graphai.api.routers.scraping"]], "calculate_summary_text_fingerprint() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.calculate_summary_text_fingerprint"]], "calculate_summary_text_fingerprint_status() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.calculate_summary_text_fingerprint_status"]], "clean_up() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.clean_up"]], "create_title() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.create_title"]], "get_cleanup_task_chain() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.get_cleanup_task_chain"]], "get_summary_task_chain() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.get_summary_task_chain"]], "get_summary_text_fingerprint_chain_list() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.get_summary_text_fingerprint_chain_list"]], "graphai.api.routers.summarization": [[24, "module-graphai.api.routers.summarization"]], "summarize() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.summarize"]], "summarize_status() (in module graphai.api.routers.summarization)": [[24, "graphai.api.routers.summarization.summarize_status"]], "graphai.api.routers.text": [[25, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[25, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[26, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[26, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[27, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[27, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[28, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[28, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[29, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[30, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[30, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[30, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[30, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[30, "graphai.api.schemas.common.FileRequest.token"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[31, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[31, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[31, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[31, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[31, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[31, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[31, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[31, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[31, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[31, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[31, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[31, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[31, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[31, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[31, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[31, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[31, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "token (graphai.api.schemas.image.individualocrresult attribute)": [[31, "graphai.api.schemas.image.IndividualOCRResult.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[32, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[32, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[32, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[32, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[32, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[32, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[33, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[33, "module-graphai.api.schemas.scraping"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[33, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[33, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[33, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[33, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "cleanuprequest (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.CleanupRequest"]], "completiondebugresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.CompletionDebugResponse"]], "completiondebugtaskresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.CompletionDebugTaskResponse"]], "completionresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.CompletionResponse"]], "completiontaskresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse"]], "summarizationrequest (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.SummarizationRequest"]], "summaryfingerprintrequest (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.summarization)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.closest_token"]], "debug (graphai.api.schemas.summarization.cleanuprequest attribute)": [[34, "graphai.api.schemas.summarization.CleanupRequest.debug"]], "debug (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.debug"]], "debug_message (graphai.api.schemas.summarization.completiondebugtaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionDebugTaskResponse.debug_message"]], "force (graphai.api.schemas.summarization.cleanuprequest attribute)": [[34, "graphai.api.schemas.summarization.CleanupRequest.force"]], "force (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.force"]], "force (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.summarization.completiontaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse.fresh"]], "fresh (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.summarization": [[34, "module-graphai.api.schemas.summarization"]], "len_class (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.len_class"]], "len_class (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.len_class"]], "result (graphai.api.schemas.summarization.completiontaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse.result"]], "result (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.result"]], "result_type (graphai.api.schemas.summarization.completiontaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse.result_type"]], "successful (graphai.api.schemas.summarization.completiontaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse.successful"]], "successful (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.successful"]], "summary_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.summary_type"]], "task_result (graphai.api.schemas.summarization.completiondebugresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionDebugResponse.task_result"]], "task_result (graphai.api.schemas.summarization.completionresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionResponse.task_result"]], "task_result (graphai.api.schemas.summarization.summaryfingerprintresponse attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintResponse.task_result"]], "text (graphai.api.schemas.summarization.cleanuprequest attribute)": [[34, "graphai.api.schemas.summarization.CleanupRequest.text"]], "text (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.text"]], "text (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.summarization.completiontaskresponse attribute)": [[34, "graphai.api.schemas.summarization.CompletionTaskResponse.text_too_large"]], "text_type (graphai.api.schemas.summarization.cleanuprequest attribute)": [[34, "graphai.api.schemas.summarization.CleanupRequest.text_type"]], "text_type (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.text_type"]], "text_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text_type"]], "tone (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.tone"]], "tone (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[34, "graphai.api.schemas.summarization.SummaryFingerprintRequest.tone"]], "use_keywords (graphai.api.schemas.summarization.summarizationrequest attribute)": [[34, "graphai.api.schemas.summarization.SummarizationRequest.use_keywords"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[35, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[35, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[35, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[35, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[36, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[36, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[36, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[36, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[36, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[37, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[37, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[37, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[37, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[37, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[37, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[37, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[37, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[37, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[38, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_result"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[38, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[38, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[38, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_result"]], "graphai.core": [[39, "module-graphai.core"]], "graphai.core.common": [[40, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.AudioDBCachingManager"]], "dbcachingmanagerbase (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.DBCachingManagerBase"]], "fingerprintparameters (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.SlideDBCachingManager"]], "summarydbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.SummaryDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[41, "graphai.core.common.caching.VideoDBCachingManager"]], "add_equality_conditions() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.add_equality_conditions"]], "add_non_null_conditions() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.add_non_null_conditions"]], "add_where_or_and() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.add_where_or_and"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_cache_rows() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.delete_cache_rows"]], "delete_file() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.delete_file"]], "escape_single_quotes() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.escape_single_quotes"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_all_closest_matches() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_all_closest_matches"]], "get_all_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_all_details"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_cache_count() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_cache_count"]], "get_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_closest_match"]], "get_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_details"]], "get_details_using_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_details_using_origin"]], "get_details_using_origin() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.get_min_sim_video"]], "get_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.get_origin"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[41, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[41, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[41, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.init_db"]], "init_db() (graphai.core.common.caching.scrapingdbcachingmanager method)": [[41, "graphai.core.common.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[41, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.summarydbcachingmanager method)": [[41, "graphai.core.common.caching.SummaryDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[41, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[41, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "insert_or_update_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_closest_match"]], "insert_or_update_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_details"]], "load_values() (graphai.core.common.caching.fingerprintparameters method)": [[41, "graphai.core.common.caching.FingerprintParameters.load_values"]], "surround_with_character() (in module graphai.core.common.caching)": [[41, "graphai.core.common.caching.surround_with_character"]], "update_details_if_exists() (graphai.core.common.caching.dbcachingmanagerbase method)": [[41, "graphai.core.common.caching.DBCachingManagerBase.update_details_if_exists"]], "file_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[42, "module-graphai.core.common.common_utils"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.read_text_file"]], "write_json_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[42, "graphai.core.common.common_utils.write_text_file"]], "conceptsgraph (class in graphai.core.common.graph)": [[43, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[43, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[43, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[43, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[43, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "ontology (class in graphai.core.common.ontology)": [[44, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[44, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[44, "module-graphai.core.common.ontology"]], "check_url() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.check_url"]], "compare_strings() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.get_sublinks"]], "graphai.core.common.scraping": [[45, "module-graphai.core.common.scraping"]], "initialize_data_dict() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.common.scraping)": [[45, "graphai.core.common.scraping.string_circular_shift"]], "chatgptsummarizer (class in graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.ChatGPTSummarizer"]], "translationmodels (class in graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.TranslationModels"]], "cleanup_text() (graphai.core.common.text_utils.chatgptsummarizer method)": [[46, "graphai.core.common.text_utils.ChatGPTSummarizer.cleanup_text"]], "convert_text_or_dict_to_text() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.convert_text_or_dict_to_text"]], "count_tokens_for_openai() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.count_tokens_for_openai"]], "detect_text_language() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.detect_text_language"]], "establish_connection() (graphai.core.common.text_utils.chatgptsummarizer method)": [[46, "graphai.core.common.text_utils.ChatGPTSummarizer.establish_connection"]], "force_dict_to_text() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.force_dict_to_text"]], "generate_src_tgt_dict() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.generate_src_tgt_dict"]], "generate_summary() (graphai.core.common.text_utils.chatgptsummarizer method)": [[46, "graphai.core.common.text_utils.ChatGPTSummarizer.generate_summary"]], "generate_summary_text_token() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.generate_summary_text_token"]], "generate_summary_type_dict() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.generate_summary_type_dict"]], "generate_translation_text_token() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.generate_translation_text_token"]], "graphai.core.common.text_utils": [[46, "module-graphai.core.common.text_utils"]], "load_models() (graphai.core.common.text_utils.translationmodels method)": [[46, "graphai.core.common.text_utils.TranslationModels.load_models"]], "md5_text() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.md5_text"]], "perceptual_hash_text() (in module graphai.core.common.text_utils)": [[46, "graphai.core.common.text_utils.perceptual_hash_text"]], "translate() (graphai.core.common.text_utils.translationmodels method)": [[46, "graphai.core.common.text_utils.TranslationModels.translate"]], "googleocrmodel (class in graphai.core.common.video)": [[47, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[47, "graphai.core.common.video.NLPModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[47, "graphai.core.common.video.WhisperTranscriptionModel"]], "check_ocr_and_hash_thresholds() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.check_ocr_and_hash_thresholds"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.compute_video_ocr_transitions"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[47, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[47, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.generate_symbolic_token"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[47, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[47, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[47, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.perceptual_hash_image"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[47, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[47, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[47, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[47, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[48, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[49, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[49, "graphai.core.interfaces.celery_config.route_task"]], "db (class in graphai.core.interfaces.db)": [[50, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.build_conditions_list"]], "check_if_table_exists() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.check_if_table_exists"]], "create_table() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.find"]], "find_or_split() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.find_or_split"]], "graphai.core.interfaces.db": [[50, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[50, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[50, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[51, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[51, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[51, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[51, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[51, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[51, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[51, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[52, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[52, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[52, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[53, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[54, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[54, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[54, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[55, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[55, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[55, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[55, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[56, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[57, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[57, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[57, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[57, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[57, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[57, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[58, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[58, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[58, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[58, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[59, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[60, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[60, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[60, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[60, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[60, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[60, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[60, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[61, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[61, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[61, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[61, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[61, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[62, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[63, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[63, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[63, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[63, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[64, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[64, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[65, "module-graphai.definitions"]], "graphai.pipelines": [[66, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[67, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[69, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[69, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[70, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[71, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[71, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[71, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[71, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[71, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[71, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[72, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[72, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[72, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[72, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[72, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[73, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[73, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[74, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[74, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[75, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[75, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[76, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[76, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[77, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[77, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[78, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[78, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[79, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[79, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[80, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[80, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[81, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[81, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[82, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[82, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[82, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[82, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[82, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[83, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[87, "module-graphai.pipelines.visualisation"]]}})