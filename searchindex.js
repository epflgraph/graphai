Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.ontology", "graphai.api.routers.text", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.ontology", "graphai.api.schemas.text", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.celery_utils", "graphai.core.celery_utils.celery_config", "graphai.core.celery_utils.celery_utils", "graphai.core.common", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.text.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.celery_utils.rst", "graphai.core.celery_utils.celery_config.rst", "graphai.core.celery_utils.celery_utils.rst", "graphai.core.common.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.ontology module", "graphai.api.routers.text module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.ontology module", "graphai.api.schemas.text module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.celery_utils package", "graphai.core.celery_utils.celery_config module", "graphai.core.celery_utils.celery_utils module", "graphai.core.common package", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module"], "terms": {"The": [0, 11, 29, 40, 46], "contain": [0, 21, 37], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 7, 15, 21, 28], "project": 0, "ai": 0, "base": [0, 4, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 34, 35, 39, 40, 42, 43, 46], "util": [0, 24], "api": [0, 35], "core": 0, "definit": [0, 33], "modul": [0, 1, 2, 7, 13, 18, 25, 28, 32, 36, 38, 41, 44], "celery_task": 1, "common": [1, 18, 24], "router": 1, "schema": 1, "main": [1, 31], "ontologi": [2, 7, 13, 15, 18, 19, 26, 28], "text": [2, 13, 18, 24, 26, 34, 35, 38], "video": [2, 7, 13, 18, 26, 28], "voic": [2, 13, 18], "wikisearch_mast": 4, "keyword": [4, 15, 21, 34, 35, 36], "method": [4, 15], "retriev": [4, 11, 15, 34, 46], "wikipag": 4, "all": [4, 11, 29, 34, 37, 46], "list": [4, 11, 15, 20, 21, 22, 26, 29, 37], "paramet": [4, 29, 34, 35, 37, 40, 42, 43, 46], "pd": [4, 34, 35, 37], "datafram": [4, 34, 35, 37], "A": [4, 11, 29, 34, 35, 37], "panda": [4, 34, 35, 37, 45], "one": [4, 11, 37, 40, 46], "column": [4, 34, 35, 37], "str": [4, 15, 19, 20, 21, 22, 23, 26, 29, 34, 35, 37, 42, 43, 46], "wikipedia": [4, 15, 21, 35], "e": [4, 15, 32], "score": [4, 11, 15, 21, 29, 37], "page": [4, 15, 21, 29], "It": [4, 21, 37, 42], "can": [4, 11, 15, 46], "either": 4, "us": [4, 11, 34, 37, 42, 46], "elasticsearch": [4, 15, 34], "return": [4, 11, 15, 27, 29, 34, 35, 37, 42, 43, 45, 46], "invers": 4, "searchrank": [4, 34, 35], "actual": 4, "respect": [4, 21, 45], "default": [4, 37, 46], "pageid": [4, 21, 34, 35], "pagetitl": [4, 21, 34, 35], "searchscor": [4, 21, 34, 35], "uniqu": [4, 34, 35], "wikisearch": [4, 15, 34, 35], "result": [4, 11, 15, 21, 23, 27, 29, 30, 34, 35], "each": [4, 11, 15, 21, 29, 40, 46], "set": [4, 15, 21, 34, 35], "type": [4, 29, 34, 35, 37, 42, 43], "exampl": [4, 21, 29, 37, 42], "seri": [4, 45], "brown": [4, 37], "baggi": [4, 37], "platform": [4, 37], "sole": [4, 37], "celery_multiproc_example_mast": 5, "data": [5, 15, 16, 17, 43], "retrieve_and_generate_token_mast": 5, "url": [5, 11, 22, 42], "compute_signature_mast": 5, "token": [5, 6, 11, 19, 22, 23, 37], "forc": [5, 6, 11, 22, 23], "fals": [5, 6, 9, 11, 15, 22, 23, 26, 31, 33, 37, 43, 46], "get_file_mast": 5, "extract_audio_mast": 5, "detect_slides_mast": 5, "resolve_most_similar_chain": 6, "compute_audio_fingerprint_mast": 6, "remove_sil": [6, 23], "threshold": [6, 11, 23, 37], "0": [6, 11, 15, 21, 23, 26, 29, 37, 43, 45, 46], "min_similar": [6, 11], "8": [6, 11], "n_job": 6, "log": [7, 39, 43], "msg": [9, 39, 43, 46], "second": [9, 11, 46], "none": [9, 11, 15, 19, 20, 22, 23, 26, 31, 33, 34, 39, 40, 43], "total": [9, 40, 46], "length": [9, 11], "64": 9, "generate_random_token": 11, "gener": [11, 37], "random": 11, "string": [11, 37], "current": [11, 45], "time": [11, 38, 40], "number": [11, 29, 34, 35, 40, 43], "retrieve_file_from_url": 11, "output_filename_with_path": 11, "output_token": 11, "file": [11, 22, 43], "from": [11, 15, 29, 37, 42], "given": [11, 27, 34, 35, 37, 42, 43, 45], "wget": 11, "store": 11, "local": 11, "param": 11, "path": [11, 29, 31], "output": [11, 19, 20, 22], "success": [11, 19, 22], "otherwis": [11, 37], "perform_prob": 11, "input_filename_with_path": 11, "perform": [11, 34, 35], "probe": 11, "ffprobe": 11, "input": [11, 15, 22], "see": 11, "document": [11, 34], "md5_video_or_audio": 11, "true": [11, 37, 39, 43, 46], "detect_audio_format_and_dur": 11, "input_token": 11, "detect": 11, "durat": [11, 22, 23], "audio": 11, "track": [11, 40, 46], "provid": [11, 15], "its": 11, "name": [11, 26, 27, 43], "ogg": 11, "format": [11, 34, 45], "consist": [11, 21], "plu": 11, "extract_audio_from_video": 11, "extract": [11, 15, 21, 37], "find_beginning_and_ending_sil": 11, "distance_from_end_tol": 11, "01": 11, "noise_thresh": 11, "0001": 11, "silenc": 11, "begin": [11, 46], "end": 11, "an": [11, 15, 43], "toler": 11, "valu": [11, 33], "distanc": 11, "nois": 11, "dictionari": [11, 34, 43], "timestamp": [11, 45], "two": [11, 29], "remov": 11, "remove_silence_doublesid": 11, "filenam": [11, 31, 43], "without": [11, 46], "unsuccess": 11, "perceptual_hash_audio": 11, "max_length": 11, "7200": 11, "comput": [11, 29], "perceptu": 11, "hash": 11, "maximum": [11, 34, 35], "represent": 11, "fingerprint": 11, "decod": 11, "both": 11, "ar": [11, 15, 37, 45], "doesn": 11, "t": [11, 29, 37, 43], "exist": [11, 43], "compare_audio_fingerprint": 11, "decoded_1": 11, "decoded_2": 11, "compar": 11, "1": [11, 15, 21, 29, 37, 45, 46], "2": [11, 37, 46], "fuzzi": 11, "match": [11, 34], "ratio": 11, "between": [11, 45, 46], "compare_encoded_audio_fingerprint": 11, "f1": 11, "f2": 11, "encod": [11, 42], "them": 11, "indic": [11, 34], "exact": 11, "target": [11, 29], "similar": 11, "i": [11, 15, 29, 37, 40, 42, 46], "so": 11, "find_closest_audio_fingerprint": 11, "target_fp": 11, "fp_list": 11, "token_list": 11, "candid": 11, "find": [11, 33], "highest": 11, "whose": 11, "abov": [11, 45], "minimum": 11, "correspond": 11, "those": 11, "If": [11, 37, 43], "most": [11, 15], "unexpect": 11, "indent": [11, 39, 43], "lower": 11, "than": [11, 37], "thi": [11, 15, 40], "closest": 11, "three": 11, "doe": [11, 43], "satisfi": 11, "criterion": 11, "generate_gcp_uri": 11, "bucket_nam": 11, "blob_nam": 11, "upload_file_to_google_cloud": 11, "epflgraph_bucket": 11, "upload": 11, "bucket": 11, "transcribe_gc": 11, "sample_r": 11, "48000": 11, "timeout": 11, "600": 11, "lang": 11, "en": 11, "u": 11, "asynchron": 11, "transcrib": 11, "specifi": 11, "gcs_uri": 11, "compute_mpeg7_signatur": 11, "input_filenam": 11, "output_suffix": 11, "_sig": 11, "xml": 11, "compute_video_slid": 11, "compare_mpeg7_signatur": 11, "input_filename_1": 11, "input_filename_2": 11, "output_templ": 11, "comparison": 11, "d_sig": 11, "async": [12, 14, 15, 16, 17], "instantiate_graph_and_ontologi": 12, "redirect_doc": 12, "tree": [14, 19, 20], "parent": 14, "category_id": 14, "children": 14, "keywordsrequest": [15, 21], "use_nltk": [15, 37], "bool": [15, 19, 22, 23, 26, 34, 37, 43], "wikifi": [15, 21], "wikifyrequest": [15, 21], "process": 15, "raw": [15, 21, 37, 42], "g": 15, "abstract": 15, "public": 15, "cours": 15, "descript": 15, "lectur": 15, "slide": 15, "concept": 15, "relev": [15, 21], "quantifi": 15, "done": 15, "follow": [15, 34, 40, 42, 46], "automat": 15, "omit": 15, "keyword_list": 15, "instead": 15, "raw_text": [15, 21], "For": 15, "10": [15, 34, 35], "through": 15, "request": 15, "pair": [15, 29, 37, 46], "sever": [15, 21, 46], "deriv": 15, "take": 15, "account": 15, "among": 15, "other": [15, 46], "aggreg": 15, "filter": [15, 34], "accord": 15, "some": [15, 40, 46], "rule": 15, "keep": [15, 40], "onli": [15, 43], "multiprocessing_exampl": [16, 22], "multiprocessingexamplerequest": [16, 22], "retrieve_fil": 16, "retrieveurlrequest": [16, 22], "get_retrieve_file_statu": 16, "task_id": [16, 17, 19, 20, 22, 23, 27], "calculate_fingerprint": 16, "computesignaturerequest": [16, 22], "calculate_fingerprint_statu": 16, "get_fil": 16, "filerequest": [16, 19], "extract_audio": 16, "extractaudiorequest": [16, 22], "extract_audio_statu": 16, "detect_slid": 16, "detectslidesrequest": [16, 22], "detect_slides_statu": 16, "calculate_audio_fingerprint": 17, "audiofingerprintrequest": [17, 23], "calculate_audio_fingerprint_statu": 17, "class": [19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 34, 35, 39, 40, 42, 43, 46], "taskidrespons": 19, "basemodel": [19, 20, 21, 22, 23], "object": [19, 20, 21, 22, 26, 29, 30, 31, 33, 34, 35, 39, 40, 43, 45, 46], "repres": [19, 20, 21, 22, 37, 40, 46], "endpoint": [19, 20, 22], "taskstatusrespons": [19, 20, 22, 23], "task_nam": [19, 20, 22, 23], "task_statu": [19, 20, 22, 23], "task_result": [19, 20, 22, 23], "jsonwrappervalu": 19, "abc": 19, "ongoingtaskrespons": [19, 22, 23], "pid": 19, "int": [19, 20, 21, 22, 23, 29, 34, 35, 40, 43], "hostnam": 19, "filecachablecomputationrespons": [19, 22], "fresh": [19, 22, 23], "treeresponseelem": 20, "childcategoryid": 20, "parentcategoryid": 20, "treerespons": 20, "dict": [20, 29, 34, 43], "inform": [21, 34], "anchor": 21, "id": [21, 27, 29], "defin": 21, "search": [21, 34, 35], "space": [21, 37, 43], "wikifyresponseelem": 21, "float": [21, 22, 23, 29, 37, 46], "levenshteinscor": 21, "ontologylocalscor": 21, "ontologyglobalscor": 21, "graphscor": 21, "keywordsscor": 21, "mixedscor": 21, "which": [21, 37], "measur": 21, "degre": 21, "config": 21, "schema_extra": 21, "1196": [21, 29], "angl": 21, "8055555555555556": 21, "44735199351890065": 21, "9058463104630012": 21, "152547": 21, "bisect": 21, "3333333333333333": 21, "16661245633224378": 21, "6666666666666667": 21, "5": [21, 46], "22717425120724127": 21, "609271523178808": 21, "44715741719086977": 21, "23972889": 21, "distance_from_a_point_to_a_lin": 21, "16666666666666669": 21, "2134432477817427": 21, "21885521885521886": 21, "19791666666666666": 21, "003590346636521923": 21, "19828593689131283": 21, "17781458572659029": 21, "946975": [21, 29], "line_": 21, "geometri": 21, "33567080901262164": 21, "8232323232323234": 21, "7916666666666666": 21, "7855473315153876": 21, "7886663359580247": 21, "22634860": 21, "line_seg": 21, "5555555555555556": 21, "3582111602475977": 21, "43097643097643096": 21, "75": [21, 40], "42461810549112244": 21, "6026490066225165": 21, "5277457623305826": 21, "2175469": 21, "non": [21, 34], "line": [21, 43], "sight_propag": 21, "19444444444444448": 21, "39019342923035233": 21, "21212121212121213": 21, "11647727272727273": 21, "01572170017309725": 21, "5087650954421504": 21, "2950855110143057": 21, "133496": 21, "parallelogram": 21, "3055555555555556": 21, "13627674782665528": 21, "14484503981375635": 21, "4288185842201275": 21, "76944": 21, "perpendicular": 21, "19444444444444445": 21, "039652736888335365": 21, "25": [21, 40], "15017752515904018": 21, "2584729255940787": 21, "19421461143444865": 21, "25278": 21, "quadrilater": 21, "02777777777777779": 21, "15367913840285474": 21, "36363636363636365": 21, "12360559235107477": 21, "3307362680171406": 21, "21973432050168798": 21, "76956": 21, "right_angl": 21, "4166666666666667": 21, "4451948682556247": 21, "42424242424242425": 21, "12678424818870415": 21, "4107908063887807": 21, "3996645939435453": 21, "94102": 21, "solid_angl": 21, "3888888888888889": 21, "6912823774628103": 21, "196969696969697": 21, "15909090909090912": 21, "08695255651117278": 21, "7415270744059212": 21, "4580780578246384": 21, "31482": 21, "tangent": 21, "4722222222222222": 21, "29631455223594527": 21, "6414141414141414": 21, "59375": 21, "3573397570845174": 21, "48284225283305426": 21, "30654": 21, "triangl": 21, "5717479784842091": 21, "2535403349997643": 21, "47723102055958355": 21, "foo": 22, "bar": [22, 40], "multiprocessingexamplerespons": 22, "baz": 22, "retrieveurlresponseinn": 22, "retrieveurlrespons": 22, "computesignaturerespons": 22, "extractaudiotaskrespons": 22, "extractaudiorespons": 22, "detectslidestaskrespons": 22, "n_slide": 22, "detectslidesrespons": 22, "audiofingerprinttaskrespons": 23, "fp_nosil": 23, "audiofingerprintrespons": 23, "celery_util": 24, "interfac": 24, "celery_config": 25, "route_task": 26, "arg": 26, "kwarg": 26, "option": 26, "task": [26, 27, 40, 46], "kw": 26, "baseconfig": 26, "broker_url": 26, "amqp": 26, "guest": 26, "localhost": 26, "5672": 26, "result_backend": 26, "redi": 26, "6379": 26, "celery_worker_redirect_stdout": 26, "celery_task_queu": 26, "unbound": 26, "queue": 26, "celeri": 26, "exchang": 26, "direct": 26, "celery_task_rout": 26, "function": [26, 46], "developmentconfig": 26, "get_set": 26, "create_celeri": 27, "format_result": 27, "statu": 27, "get_task_info": 27, "info": 27, "conceptsgraph": 29, "fetch_from_db": [29, 30], "compute_scor": 29, "source_page_id": 29, "target_page_id": 29, "possibl": [29, 37], "sourc": 29, "": [29, 31, 42], "displaystyl": 29, "frac": 29, "ln": 29, "rebound": 29, "out": 29, "min": 29, "max": 29, "element": 29, "ha": 29, "kei": 29, "cg": 29, "6220": 29, "18973446": 29, "9417": 29, "5193576613841849": 29, "4740698357575134": 29, "3591100561928845": 29, "5343247664351338": 29, "530184349205493": 29, "40043881227279876": 29, "add_graph_scor": 29, "get_concept_categori": 30, "page_id": 30, "add_concepts_categori": 30, "add_categories_categori": 30, "filter_concept": 30, "add_ontology_scor": 30, "make_sure_path_exist": 31, "file_at_the_end": 31, "file_exist": 31, "file_path": 31, "get_dir_fil": 31, "root_dir": 31, "count_fil": 31, "videoconfig": 31, "home": 31, "ubuntu": 31, "action": 31, "runner": 31, "_work": 31, "storag": 31, "concat_file_path": 31, "subfold": 31, "set_root_dir": 31, "new_root_dir": 31, "generate_filenam": 31, "force_dir": 31, "surround_with_charact": 31, "c": [31, 40, 42], "dbcachingmanag": 31, "init_db": 31, "insert_or_update_audio_detail": 31, "id_token": 31, "values_to_insert": 31, "get_audio_detail": 31, "col": 31, "using_most_similar": 31, "get_all_audio_detail": 31, "insert_or_update_closest_match": 31, "get_closest_audio_match": 31, "get_all_closest_audio_match": 31, "db": 32, "wp": 32, "quote_valu": 33, "v": 33, "commun": [33, 34, 35], "epflgraph": [33, 34], "databas": 33, "execute_queri": 33, "queri": [33, 34, 35], "execut": [33, 40, 46], "custom": 33, "build_conditions_list": 33, "condit": 33, "table_nam": 33, "field": [33, 34], "print_queri": 33, "drop_tabl": 33, "create_t": 33, "insert_datafram": 33, "df": 33, "drop_create_insert_t": 33, "es_bool": 34, "must": 34, "must_not": 34, "should": [34, 43], "build": 34, "claus": 34, "argument": 34, "es_match": 34, "boost": 34, "oper": 34, "es_multi_match": 34, "minimum_should_match": 34, "multi_match": 34, "es_dis_max": 34, "dis_max": 34, "index": 34, "instanc": 34, "limit": [34, 35], "search_mediawiki": 34, "mediawiki": 34, "structur": 34, "search_mediawiki_no_rescor": 34, "skip": [34, 43], "rescor": 34, "part": 34, "search_mediawiki_no_plain": 34, "restrict": 34, "plain": 34, "search_mediawiki_restrict_4": 34, "titl": 34, "head": 34, "opening_text": 34, "search_mediawiki_restrict_2": 34, "about": [34, 37], "respons": 34, "index_doc": 34, "doc": 34, "create_index": 34, "map": [34, 45], "creat": [34, 43, 46], "delete_index": 34, "delet": [34, 42], "refresh": 34, "word_token": 37, "word": 37, "sentenc": 37, "separ": 37, "how": 37, "you": [37, 42], "rake_extract": 37, "split_word": 37, "return_scor": 37, "unconstrain": 37, "python": 37, "rake": 37, "nltk": 37, "whether": [37, 46], "more": [37, 40, 46], "split": 37, "retur": 37, "tupl": 37, "minim": 37, "below": [37, 45], "ignor": 37, "join": [37, 42], "Then": 37, "crowd": 37, "young": 37, "boi": 37, "thei": 37, "re": 37, "foolin": 37, "around": 37, "corner": 37, "drunk": 37, "dress": 37, "best": 37, "don": 37, "give": 37, "damn": 37, "ani": 37, "trumpet": 37, "playin": 37, "band": 37, "ain": 37, "what": 37, "call": 37, "rock": 37, "roll": 37, "get_keyword": 37, "normal": [37, 42], "p": [37, 42], "3": [37, 42, 46], "4": [37, 46], "breadcrumb": 38, "progress_bar": 38, "debug": [39, 43], "color": [39, 43], "time_color": 39, "grai": 39, "report": [39, 46], "outdent": 39, "progressbar": 40, "n_iter": 40, "bar_length": 40, "50": 40, "progress": 40, "usag": [40, 46], "letter": 40, "b": 40, "d": [40, 42], "pb": 40, "len": 40, "run": [40, 46], "consum": [40, 46], "updat": 40, "00": 40, "100": 40, "print": [40, 42, 43, 45, 46], "iter": 40, "percentag": 40, "complet": [40, 46], "overwrit": 40, "previou": [40, 46], "state": 40, "ban": 40, "reset": [40, 43, 46], "increment": 40, "counter": 40, "reus": [40, 46], "clean": 41, "io": 41, "htmlcleaner": 42, "htmlparser": 42, "pars": 42, "html": 42, "tag": 42, "get": 42, "shiver": 42, "strong": 42, "dark": 42, "br": 42, "rain": 42, "park": 42, "meantim": 42, "feed": 42, "get_data": 42, "handle_starttag": 42, "attr": 42, "handle_endtag": 42, "handle_data": 42, "solv": 42, "problem": 42, "email": 42, "convert": 42, "lowercas": 42, "u2018rain": 42, "u2019": 42, "lt": 42, "evalu": 43, "pref": 43, "x1b": 43, "0m": 43, "code": 43, "black": 43, "30m": 43, "blue": 43, "34m": 43, "cyan": 43, "36m": 43, "green": 43, "32m": 43, "magenta": 43, "35m": 43, "red": 43, "31m": 43, "white": 43, "37m": 43, "yellow": 43, "33m": 43, "cprint": 43, "is_bold": 43, "bold": 43, "case": 43, "pprint": 43, "inlin": 43, "only_first": 43, "pretti": 43, "preced": 43, "everi": 43, "first": [43, 46], "ellipsi": 43, "avoid": 43, "big": 43, "block": [43, 46], "read_json": 43, "read": 43, "json": 43, "content": 43, "save_json": 43, "save": 43, "mkdir": 43, "dirnam": 43, "directori": 43, "date": 44, "stopwatch": 44, "now": 45, "datetim": 45, "2022": 45, "06": 45, "28": 45, "09": 45, "46": 45, "21": 45, "677968": 45, "rescal": 45, "min_dat": 45, "max_dat": 45, "linearli": 45, "rang": 45, "assum": 45, "yyyi": 45, "mm": 45, "dd": 45, "add_year": 45, "n_year": 45, "sw": 46, "delta": 46, "284306764602661": 46, "variabl": 46, "consecut": 46, "well": 46, "t1": 46, "t2": 46, "yet": 46, "t3": 46, "609307289123535": 46, "849977970123291": 46, "660188913345337": 46, "also": 46, "preprocess": 46, "pre_tim": 46, "task_tim": 46, "postprocess": 46, "post_tim": 46, "total_tim": 46, "f": 46, "proport": 46, "5176954220125477": 46, "tick": 46, "replac": 46, "partial": 46, "need": 46, "furthermor": 46, "too": 46, "19": 46, "86": 46, "lap": 46, "6": 46, "74": 46, "11": 46, "66": 46, "45": 46, "final": 46, "checkpoint": 46, "new": 46, "differ": 46, "finish": 46, "summari": 46, "includ": 46, "last": 46, "boolean": 46, "befor": 46, "messag": 46}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [24, 0, 0, "-", "core"], [47, 0, 0, "-", "definitions"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [7, 0, 0, "-", "common"], [12, 0, 0, "-", "main"], [13, 0, 0, "-", "routers"], [18, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "ontology"], [4, 0, 0, "-", "text"], [5, 0, 0, "-", "video"], [6, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.text": [[4, 1, 1, "", "wikisearch_master"]], "graphai.api.celery_tasks.video": [[5, 1, 1, "", "celery_multiproc_example_master"], [5, 1, 1, "", "compute_signature_master"], [5, 1, 1, "", "detect_slides_master"], [5, 1, 1, "", "extract_audio_master"], [5, 1, 1, "", "get_file_master"], [5, 1, 1, "", "retrieve_and_generate_token_master"]], "graphai.api.celery_tasks.voice": [[6, 1, 1, "", "compute_audio_fingerprint_master"], [6, 1, 1, "", "resolve_most_similar_chain"]], "graphai.api.common": [[8, 0, 0, "-", "graph"], [9, 0, 0, "-", "log"], [10, 0, 0, "-", "ontology"], [11, 0, 0, "-", "video"]], "graphai.api.common.log": [[9, 1, 1, "", "log"]], "graphai.api.common.video": [[11, 1, 1, "", "compare_audio_fingerprints"], [11, 1, 1, "", "compare_encoded_audio_fingerprints"], [11, 1, 1, "", "compare_mpeg7_signatures"], [11, 1, 1, "", "compute_mpeg7_signature"], [11, 1, 1, "", "compute_video_slides"], [11, 1, 1, "", "detect_audio_format_and_duration"], [11, 1, 1, "", "extract_audio_from_video"], [11, 1, 1, "", "find_beginning_and_ending_silences"], [11, 1, 1, "", "find_closest_audio_fingerprint"], [11, 1, 1, "", "generate_gcp_uri"], [11, 1, 1, "", "generate_random_token"], [11, 1, 1, "", "md5_video_or_audio"], [11, 1, 1, "", "perceptual_hash_audio"], [11, 1, 1, "", "perform_probe"], [11, 1, 1, "", "remove_silence_doublesided"], [11, 1, 1, "", "retrieve_file_from_url"], [11, 1, 1, "", "transcribe_gcs"], [11, 1, 1, "", "upload_file_to_google_cloud"]], "graphai.api.main": [[12, 1, 1, "", "instantiate_graph_and_ontology"], [12, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[14, 0, 0, "-", "ontology"], [15, 0, 0, "-", "text"], [16, 0, 0, "-", "video"], [17, 0, 0, "-", "voice"]], "graphai.api.routers.ontology": [[14, 1, 1, "", "children"], [14, 1, 1, "", "parent"], [14, 1, 1, "", "tree"]], "graphai.api.routers.text": [[15, 1, 1, "", "keywords"], [15, 1, 1, "", "wikify"]], "graphai.api.routers.video": [[16, 1, 1, "", "calculate_fingerprint"], [16, 1, 1, "", "calculate_fingerprint_status"], [16, 1, 1, "", "detect_slides"], [16, 1, 1, "", "detect_slides_status"], [16, 1, 1, "", "extract_audio"], [16, 1, 1, "", "extract_audio_status"], [16, 1, 1, "", "get_file"], [16, 1, 1, "", "get_retrieve_file_status"], [16, 1, 1, "", "multiprocessing_example"], [16, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[17, 1, 1, "", "calculate_audio_fingerprint"], [17, 1, 1, "", "calculate_audio_fingerprint_status"]], "graphai.api.schemas": [[19, 0, 0, "-", "common"], [20, 0, 0, "-", "ontology"], [21, 0, 0, "-", "text"], [22, 0, 0, "-", "video"], [23, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[19, 2, 1, "", "FileCachableComputationResponse"], [19, 2, 1, "", "FileRequest"], [19, 2, 1, "", "OngoingTaskResponse"], [19, 2, 1, "", "TaskIDResponse"], [19, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileCachableComputationResponse": [[19, 3, 1, "", "fresh"], [19, 3, 1, "", "successful"], [19, 3, 1, "", "token"]], "graphai.api.schemas.common.FileRequest": [[19, 3, 1, "", "token"]], "graphai.api.schemas.common.OngoingTaskResponse": [[19, 3, 1, "", "hostname"], [19, 3, 1, "", "pid"]], "graphai.api.schemas.common.TaskIDResponse": [[19, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[19, 3, 1, "", "task_id"], [19, 3, 1, "", "task_name"], [19, 3, 1, "", "task_result"], [19, 3, 1, "", "task_status"]], "graphai.api.schemas.ontology": [[20, 2, 1, "", "TreeResponse"], [20, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[20, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[20, 3, 1, "", "ChildCategoryID"], [20, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.text": [[21, 2, 1, "", "KeywordsRequest"], [21, 2, 1, "", "WikifyRequest"], [21, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[21, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[21, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[21, 2, 1, "", "Config"], [21, 3, 1, "", "GraphScore"], [21, 3, 1, "", "KeywordsScore"], [21, 3, 1, "", "LevenshteinScore"], [21, 3, 1, "", "MixedScore"], [21, 3, 1, "", "OntologyGlobalScore"], [21, 3, 1, "", "OntologyLocalScore"], [21, 3, 1, "", "PageID"], [21, 3, 1, "", "PageTitle"], [21, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[21, 3, 1, "", "schema_extra"]], "graphai.api.schemas.video": [[22, 2, 1, "", "ComputeSignatureRequest"], [22, 2, 1, "", "ComputeSignatureResponse"], [22, 2, 1, "", "DetectSlidesRequest"], [22, 2, 1, "", "DetectSlidesResponse"], [22, 2, 1, "", "DetectSlidesTaskResponse"], [22, 2, 1, "", "ExtractAudioRequest"], [22, 2, 1, "", "ExtractAudioResponse"], [22, 2, 1, "", "ExtractAudioTaskResponse"], [22, 2, 1, "", "MultiprocessingExampleRequest"], [22, 2, 1, "", "MultiprocessingExampleResponse"], [22, 2, 1, "", "RetrieveURLRequest"], [22, 2, 1, "", "RetrieveURLResponse"], [22, 2, 1, "", "RetrieveURLResponseInner"]], "graphai.api.schemas.video.ComputeSignatureRequest": [[22, 3, 1, "", "force"], [22, 3, 1, "", "token"]], "graphai.api.schemas.video.ComputeSignatureResponse": [[22, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesRequest": [[22, 3, 1, "", "force"], [22, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[22, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[22, 3, 1, "", "files"], [22, 3, 1, "", "n_slides"]], "graphai.api.schemas.video.ExtractAudioRequest": [[22, 3, 1, "", "force"], [22, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[22, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[22, 3, 1, "", "duration"]], "graphai.api.schemas.video.MultiprocessingExampleRequest": [[22, 3, 1, "", "bar"], [22, 3, 1, "", "foo"]], "graphai.api.schemas.video.MultiprocessingExampleResponse": [[22, 3, 1, "", "baz"]], "graphai.api.schemas.video.RetrieveURLRequest": [[22, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[22, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[22, 3, 1, "", "successful"], [22, 3, 1, "", "token"]], "graphai.api.schemas.voice": [[23, 2, 1, "", "AudioFingerprintRequest"], [23, 2, 1, "", "AudioFingerprintResponse"], [23, 2, 1, "", "AudioFingerprintTaskResponse"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[23, 3, 1, "", "force"], [23, 3, 1, "", "remove_silence"], [23, 3, 1, "", "threshold"], [23, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[23, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[23, 3, 1, "", "duration"], [23, 3, 1, "", "fp_nosilence"], [23, 3, 1, "", "fresh"], [23, 3, 1, "", "result"]], "graphai.core": [[25, 0, 0, "-", "celery_utils"], [28, 0, 0, "-", "common"], [32, 0, 0, "-", "interfaces"], [36, 0, 0, "-", "text"], [38, 0, 0, "-", "utils"]], "graphai.core.celery_utils": [[26, 0, 0, "-", "celery_config"], [27, 0, 0, "-", "celery_utils"]], "graphai.core.celery_utils.celery_config": [[26, 2, 1, "", "BaseConfig"], [26, 2, 1, "", "DevelopmentConfig"], [26, 1, 1, "", "get_settings"], [26, 1, 1, "", "route_task"]], "graphai.core.celery_utils.celery_config.BaseConfig": [[26, 3, 1, "", "CELERY_TASK_QUEUES"], [26, 3, 1, "", "CELERY_TASK_ROUTES"], [26, 3, 1, "", "CELERY_WORKER_REDIRECT_STDOUTS"], [26, 3, 1, "", "broker_url"], [26, 3, 1, "", "result_backend"]], "graphai.core.celery_utils.celery_utils": [[27, 1, 1, "", "create_celery"], [27, 1, 1, "", "format_results"], [27, 1, 1, "", "get_task_info"]], "graphai.core.common": [[29, 0, 0, "-", "graph"], [30, 0, 0, "-", "ontology"], [31, 0, 0, "-", "video"]], "graphai.core.common.graph": [[29, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[29, 4, 1, "", "add_graph_score"], [29, 4, 1, "", "compute_scores"], [29, 4, 1, "", "fetch_from_db"]], "graphai.core.common.ontology": [[30, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[30, 4, 1, "", "add_categories_category"], [30, 4, 1, "", "add_concepts_category"], [30, 4, 1, "", "add_ontology_scores"], [30, 4, 1, "", "fetch_from_db"], [30, 4, 1, "", "filter_concepts"], [30, 4, 1, "", "get_concept_category"]], "graphai.core.common.video": [[31, 2, 1, "", "DBCachingManager"], [31, 2, 1, "", "VideoConfig"], [31, 1, 1, "", "count_files"], [31, 1, 1, "", "file_exists"], [31, 1, 1, "", "get_dir_files"], [31, 1, 1, "", "make_sure_path_exists"], [31, 1, 1, "", "surround_with_character"]], "graphai.core.common.video.DBCachingManager": [[31, 4, 1, "", "get_all_audio_details"], [31, 4, 1, "", "get_all_closest_audio_matches"], [31, 4, 1, "", "get_audio_details"], [31, 4, 1, "", "get_closest_audio_match"], [31, 4, 1, "", "init_db"], [31, 4, 1, "", "insert_or_update_audio_details"], [31, 4, 1, "", "insert_or_update_closest_match"]], "graphai.core.common.video.VideoConfig": [[31, 4, 1, "", "concat_file_path"], [31, 4, 1, "", "generate_filename"], [31, 4, 1, "", "set_root_dir"]], "graphai.core.interfaces": [[33, 0, 0, "-", "db"], [34, 0, 0, "-", "es"], [35, 0, 0, "-", "wp"]], "graphai.core.interfaces.db": [[33, 2, 1, "", "DB"], [33, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[33, 4, 1, "", "build_conditions_list"], [33, 4, 1, "", "create_table"], [33, 4, 1, "", "drop_create_insert_table"], [33, 4, 1, "", "drop_table"], [33, 4, 1, "", "execute_query"], [33, 4, 1, "", "find"], [33, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[34, 2, 1, "", "ES"], [34, 1, 1, "", "es_bool"], [34, 1, 1, "", "es_dis_max"], [34, 1, 1, "", "es_match"], [34, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[34, 4, 1, "", "create_index"], [34, 4, 1, "", "delete_index"], [34, 4, 1, "", "index_doc"], [34, 4, 1, "", "indices"], [34, 4, 1, "", "refresh"], [34, 4, 1, "", "search"], [34, 4, 1, "", "search_mediawiki"], [34, 4, 1, "", "search_mediawiki_no_plain"], [34, 4, 1, "", "search_mediawiki_no_rescore"], [34, 4, 1, "", "search_mediawiki_restrict_2"], [34, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[35, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[35, 4, 1, "", "search"]], "graphai.core.text": [[37, 0, 0, "-", "keywords"]], "graphai.core.text.keywords": [[37, 1, 1, "", "get_keywords"], [37, 1, 1, "", "rake_extract"], [37, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[39, 0, 0, "-", "breadcrumb"], [40, 0, 0, "-", "progress_bar"], [41, 0, 0, "-", "text"], [44, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[39, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[39, 4, 1, "", "indent"], [39, 4, 1, "", "log"], [39, 4, 1, "", "outdent"], [39, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[40, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[40, 4, 1, "", "reset"], [40, 4, 1, "", "update"]], "graphai.core.utils.text": [[42, 0, 0, "-", "clean"], [43, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[42, 2, 1, "", "HTMLCleaner"], [42, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[42, 4, 1, "", "get_data"], [42, 4, 1, "", "handle_data"], [42, 4, 1, "", "handle_endtag"], [42, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[43, 2, 1, "", "Colors"], [43, 1, 1, "", "cprint"], [43, 1, 1, "", "log"], [43, 1, 1, "", "mkdir"], [43, 1, 1, "", "pprint"], [43, 1, 1, "", "read_json"], [43, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[43, 3, 1, "", "codes"], [43, 3, 1, "", "pref"], [43, 3, 1, "", "reset"]], "graphai.core.utils.time": [[45, 0, 0, "-", "date"], [46, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[45, 1, 1, "", "add_years"], [45, 1, 1, "", "now"], [45, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[46, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[46, 4, 1, "", "delta"], [46, 4, 1, "", "report"], [46, 4, 1, "", "reset"], [46, 4, 1, "", "tick"], [46, 4, 1, "", "total"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "packag": [0, 1, 2, 7, 13, 18, 24, 25, 28, 32, 36, 38, 41, 44], "subpackag": [0, 1, 24, 38], "submodul": [0, 1, 2, 7, 13, 18, 25, 28, 32, 36, 38, 41, 44], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "celery_task": [2, 3, 4, 5, 6], "ontologi": [3, 10, 14, 20, 30], "modul": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 35, 37, 39, 40, 42, 43, 45, 46, 47], "text": [4, 15, 21, 36, 37, 41, 42, 43], "video": [5, 11, 16, 22, 31], "voic": [6, 17, 23], "common": [7, 8, 9, 10, 11, 19, 28, 29, 30, 31], "graph": [8, 29], "log": 9, "main": 12, "router": [13, 14, 15, 16, 17], "schema": [18, 19, 20, 21, 22, 23], "core": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "celery_util": [25, 26, 27], "celery_config": 26, "interfac": [32, 33, 34, 35], "db": 33, "e": 34, "wp": 35, "keyword": 37, "util": [38, 39, 40, 41, 42, 43, 44, 45, 46], "breadcrumb": 39, "progress_bar": 40, "clean": 42, "io": 43, "time": [44, 45, 46], "date": 45, "stopwatch": 46, "definit": 47}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [24, "subpackages"], [38, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [7, "submodules"], [13, "submodules"], [18, "submodules"], [25, "submodules"], [28, "submodules"], [32, "submodules"], [36, "submodules"], [38, "submodules"], [41, "submodules"], [44, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.ontology module": [[3, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.text module": [[4, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.video module": [[5, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[6, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[7, "module-graphai.api.common"]], "graphai.api.common.graph module": [[8, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[9, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[10, "module-graphai.api.common.ontology"]], "graphai.api.common.video module": [[11, "module-graphai.api.common.video"]], "graphai.api.main module": [[12, "module-graphai.api.main"]], "graphai.api.routers package": [[13, "module-graphai.api.routers"]], "graphai.api.routers.ontology module": [[14, "module-graphai.api.routers.ontology"]], "graphai.api.routers.text module": [[15, "module-graphai.api.routers.text"]], "graphai.api.routers.video module": [[16, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[17, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[18, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[19, "module-graphai.api.schemas.common"]], "graphai.api.schemas.ontology module": [[20, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.text module": [[21, "module-graphai.api.schemas.text"]], "graphai.api.schemas.video module": [[22, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[23, "module-graphai.api.schemas.voice"]], "graphai.core package": [[24, "module-graphai.core"]], "graphai.core.celery_utils package": [[25, "module-graphai.core.celery_utils"]], "graphai.core.celery_utils.celery_config module": [[26, "module-graphai.core.celery_utils.celery_config"]], "graphai.core.celery_utils.celery_utils module": [[27, "module-graphai.core.celery_utils.celery_utils"]], "graphai.core.common package": [[28, "module-graphai.core.common"]], "graphai.core.common.graph module": [[29, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[30, "module-graphai.core.common.ontology"]], "graphai.core.common.video module": [[31, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[32, "module-graphai.core.interfaces"]], "graphai.core.interfaces.db module": [[33, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[34, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[35, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[36, "module-graphai.core.text"]], "graphai.core.text.keywords module": [[37, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[38, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[39, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[40, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[41, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[42, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[43, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[44, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[45, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[46, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[47, "module-graphai.definitions"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.ontology"], [4, "module-graphai.api.celery_tasks.text"], [5, "module-graphai.api.celery_tasks.video"], [6, "module-graphai.api.celery_tasks.voice"], [7, "module-graphai.api.common"], [8, "module-graphai.api.common.graph"], [9, "module-graphai.api.common.log"], [10, "module-graphai.api.common.ontology"], [11, "module-graphai.api.common.video"], [12, "module-graphai.api.main"], [13, "module-graphai.api.routers"], [14, "module-graphai.api.routers.ontology"], [15, "module-graphai.api.routers.text"], [16, "module-graphai.api.routers.video"], [17, "module-graphai.api.routers.voice"], [18, "module-graphai.api.schemas"], [19, "module-graphai.api.schemas.common"], [20, "module-graphai.api.schemas.ontology"], [21, "module-graphai.api.schemas.text"], [22, "module-graphai.api.schemas.video"], [23, "module-graphai.api.schemas.voice"], [24, "module-graphai.core"], [25, "module-graphai.core.celery_utils"], [26, "module-graphai.core.celery_utils.celery_config"], [27, "module-graphai.core.celery_utils.celery_utils"], [28, "module-graphai.core.common"], [29, "module-graphai.core.common.graph"], [30, "module-graphai.core.common.ontology"], [31, "module-graphai.core.common.video"], [32, "module-graphai.core.interfaces"], [33, "module-graphai.core.interfaces.db"], [34, "module-graphai.core.interfaces.es"], [35, "module-graphai.core.interfaces.wp"], [36, "module-graphai.core.text"], [37, "module-graphai.core.text.keywords"], [38, "module-graphai.core.utils"], [39, "module-graphai.core.utils.breadcrumb"], [40, "module-graphai.core.utils.progress_bar"], [41, "module-graphai.core.utils.text"], [42, "module-graphai.core.utils.text.clean"], [43, "module-graphai.core.utils.text.io"], [44, "module-graphai.core.utils.time"], [45, "module-graphai.core.utils.time.date"], [46, "module-graphai.core.utils.time.stopwatch"], [47, "module-graphai.definitions"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.ontology": [[3, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.text": [[4, "module-graphai.api.celery_tasks.text"]], "wikisearch_master() (in module graphai.api.celery_tasks.text)": [[4, "graphai.api.celery_tasks.text.wikisearch_master"]], "celery_multiproc_example_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.celery_multiproc_example_master"]], "compute_signature_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.compute_signature_master"]], "detect_slides_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.detect_slides_master"]], "extract_audio_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.extract_audio_master"]], "get_file_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.get_file_master"]], "graphai.api.celery_tasks.video": [[5, "module-graphai.api.celery_tasks.video"]], "retrieve_and_generate_token_master() (in module graphai.api.celery_tasks.video)": [[5, "graphai.api.celery_tasks.video.retrieve_and_generate_token_master"]], "compute_audio_fingerprint_master() (in module graphai.api.celery_tasks.voice)": [[6, "graphai.api.celery_tasks.voice.compute_audio_fingerprint_master"]], "graphai.api.celery_tasks.voice": [[6, "module-graphai.api.celery_tasks.voice"]], "resolve_most_similar_chain() (in module graphai.api.celery_tasks.voice)": [[6, "graphai.api.celery_tasks.voice.resolve_most_similar_chain"]], "graphai.api.common": [[7, "module-graphai.api.common"]], "graphai.api.common.graph": [[8, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[9, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[9, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[10, "module-graphai.api.common.ontology"]], "compare_audio_fingerprints() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.compare_audio_fingerprints"]], "compare_encoded_audio_fingerprints() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.compare_encoded_audio_fingerprints"]], "compare_mpeg7_signatures() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.compare_mpeg7_signatures"]], "compute_mpeg7_signature() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.compute_mpeg7_signature"]], "compute_video_slides() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.compute_video_slides"]], "detect_audio_format_and_duration() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.detect_audio_format_and_duration"]], "extract_audio_from_video() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.extract_audio_from_video"]], "find_beginning_and_ending_silences() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.find_closest_audio_fingerprint"]], "generate_gcp_uri() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.generate_gcp_uri"]], "generate_random_token() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.generate_random_token"]], "graphai.api.common.video": [[11, "module-graphai.api.common.video"]], "md5_video_or_audio() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.perceptual_hash_audio"]], "perform_probe() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.perform_probe"]], "remove_silence_doublesided() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.remove_silence_doublesided"]], "retrieve_file_from_url() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.retrieve_file_from_url"]], "transcribe_gcs() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.transcribe_gcs"]], "upload_file_to_google_cloud() (in module graphai.api.common.video)": [[11, "graphai.api.common.video.upload_file_to_google_cloud"]], "graphai.api.main": [[12, "module-graphai.api.main"]], "instantiate_graph_and_ontology() (in module graphai.api.main)": [[12, "graphai.api.main.instantiate_graph_and_ontology"]], "redirect_docs() (in module graphai.api.main)": [[12, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[13, "module-graphai.api.routers"]], "children() (in module graphai.api.routers.ontology)": [[14, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[14, "module-graphai.api.routers.ontology"]], "parent() (in module graphai.api.routers.ontology)": [[14, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[14, "graphai.api.routers.ontology.tree"]], "graphai.api.routers.text": [[15, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[15, "graphai.api.routers.text.keywords"]], "wikify() (in module graphai.api.routers.text)": [[15, "graphai.api.routers.text.wikify"]], "calculate_fingerprint() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.calculate_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.get_retrieve_file_status"]], "graphai.api.routers.video": [[16, "module-graphai.api.routers.video"]], "multiprocessing_example() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.multiprocessing_example"]], "retrieve_file() (in module graphai.api.routers.video)": [[16, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[17, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[17, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "graphai.api.routers.voice": [[17, "module-graphai.api.routers.voice"]], "graphai.api.schemas": [[18, "module-graphai.api.schemas"]], "filecachablecomputationresponse (class in graphai.api.schemas.common)": [[19, "graphai.api.schemas.common.FileCachableComputationResponse"]], "filerequest (class in graphai.api.schemas.common)": [[19, "graphai.api.schemas.common.FileRequest"]], "ongoingtaskresponse (class in graphai.api.schemas.common)": [[19, "graphai.api.schemas.common.OngoingTaskResponse"]], "taskidresponse (class in graphai.api.schemas.common)": [[19, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[19, "graphai.api.schemas.common.TaskStatusResponse"]], "fresh (graphai.api.schemas.common.filecachablecomputationresponse attribute)": [[19, "graphai.api.schemas.common.FileCachableComputationResponse.fresh"]], "graphai.api.schemas.common": [[19, "module-graphai.api.schemas.common"]], "hostname (graphai.api.schemas.common.ongoingtaskresponse attribute)": [[19, "graphai.api.schemas.common.OngoingTaskResponse.hostname"]], "pid (graphai.api.schemas.common.ongoingtaskresponse attribute)": [[19, "graphai.api.schemas.common.OngoingTaskResponse.pid"]], "successful (graphai.api.schemas.common.filecachablecomputationresponse attribute)": [[19, "graphai.api.schemas.common.FileCachableComputationResponse.successful"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[19, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[19, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[19, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[19, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[19, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filecachablecomputationresponse attribute)": [[19, "graphai.api.schemas.common.FileCachableComputationResponse.token"]], "token (graphai.api.schemas.common.filerequest attribute)": [[19, "graphai.api.schemas.common.FileRequest.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[20, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[20, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[20, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[20, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[20, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[20, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[21, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[21, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[21, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[21, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[21, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[21, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[21, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[21, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "computesignaturerequest (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.ComputeSignatureRequest"]], "computesignatureresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.ComputeSignatureResponse"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "multiprocessingexamplerequest (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.MultiprocessingExampleRequest"]], "multiprocessingexampleresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.MultiprocessingExampleResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[22, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "bar (graphai.api.schemas.video.multiprocessingexamplerequest attribute)": [[22, "graphai.api.schemas.video.MultiprocessingExampleRequest.bar"]], "baz (graphai.api.schemas.video.multiprocessingexampleresponse attribute)": [[22, "graphai.api.schemas.video.MultiprocessingExampleResponse.baz"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[22, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "files (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[22, "graphai.api.schemas.video.DetectSlidesTaskResponse.files"]], "foo (graphai.api.schemas.video.multiprocessingexamplerequest attribute)": [[22, "graphai.api.schemas.video.MultiprocessingExampleRequest.foo"]], "force (graphai.api.schemas.video.computesignaturerequest attribute)": [[22, "graphai.api.schemas.video.ComputeSignatureRequest.force"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[22, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[22, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "graphai.api.schemas.video": [[22, "module-graphai.api.schemas.video"]], "n_slides (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[22, "graphai.api.schemas.video.DetectSlidesTaskResponse.n_slides"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[22, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "task_result (graphai.api.schemas.video.computesignatureresponse attribute)": [[22, "graphai.api.schemas.video.ComputeSignatureResponse.task_result"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[22, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[22, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[22, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "token (graphai.api.schemas.video.computesignaturerequest attribute)": [[22, "graphai.api.schemas.video.ComputeSignatureRequest.token"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[22, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[22, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[22, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[22, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[23, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[23, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[23, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "graphai.api.schemas.voice": [[23, "module-graphai.api.schemas.voice"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[23, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "graphai.core": [[24, "module-graphai.core"]], "graphai.core.celery_utils": [[25, "module-graphai.core.celery_utils"]], "baseconfig (class in graphai.core.celery_utils.celery_config)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig"]], "celery_task_queues (graphai.core.celery_utils.celery_config.baseconfig attribute)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig.CELERY_TASK_QUEUES"]], "celery_task_routes (graphai.core.celery_utils.celery_config.baseconfig attribute)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig.CELERY_TASK_ROUTES"]], "celery_worker_redirect_stdouts (graphai.core.celery_utils.celery_config.baseconfig attribute)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig.CELERY_WORKER_REDIRECT_STDOUTS"]], "developmentconfig (class in graphai.core.celery_utils.celery_config)": [[26, "graphai.core.celery_utils.celery_config.DevelopmentConfig"]], "broker_url (graphai.core.celery_utils.celery_config.baseconfig attribute)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig.broker_url"]], "get_settings() (in module graphai.core.celery_utils.celery_config)": [[26, "graphai.core.celery_utils.celery_config.get_settings"]], "graphai.core.celery_utils.celery_config": [[26, "module-graphai.core.celery_utils.celery_config"]], "result_backend (graphai.core.celery_utils.celery_config.baseconfig attribute)": [[26, "graphai.core.celery_utils.celery_config.BaseConfig.result_backend"]], "route_task() (in module graphai.core.celery_utils.celery_config)": [[26, "graphai.core.celery_utils.celery_config.route_task"]], "create_celery() (in module graphai.core.celery_utils.celery_utils)": [[27, "graphai.core.celery_utils.celery_utils.create_celery"]], "format_results() (in module graphai.core.celery_utils.celery_utils)": [[27, "graphai.core.celery_utils.celery_utils.format_results"]], "get_task_info() (in module graphai.core.celery_utils.celery_utils)": [[27, "graphai.core.celery_utils.celery_utils.get_task_info"]], "graphai.core.celery_utils.celery_utils": [[27, "module-graphai.core.celery_utils.celery_utils"]], "graphai.core.common": [[28, "module-graphai.core.common"]], "conceptsgraph (class in graphai.core.common.graph)": [[29, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[29, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[29, "graphai.core.common.graph.ConceptsGraph.compute_scores"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[29, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[29, "module-graphai.core.common.graph"]], "ontology (class in graphai.core.common.ontology)": [[30, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[30, "graphai.core.common.ontology.Ontology.get_concept_category"]], "graphai.core.common.ontology": [[30, "module-graphai.core.common.ontology"]], "dbcachingmanager (class in graphai.core.common.video)": [[31, "graphai.core.common.video.DBCachingManager"]], "videoconfig (class in graphai.core.common.video)": [[31, "graphai.core.common.video.VideoConfig"]], "concat_file_path() (graphai.core.common.video.videoconfig method)": [[31, "graphai.core.common.video.VideoConfig.concat_file_path"]], "count_files() (in module graphai.core.common.video)": [[31, "graphai.core.common.video.count_files"]], "file_exists() (in module graphai.core.common.video)": [[31, "graphai.core.common.video.file_exists"]], "generate_filename() (graphai.core.common.video.videoconfig method)": [[31, "graphai.core.common.video.VideoConfig.generate_filename"]], "get_all_audio_details() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.get_all_audio_details"]], "get_all_closest_audio_matches() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.get_all_closest_audio_matches"]], "get_audio_details() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.get_audio_details"]], "get_closest_audio_match() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.get_closest_audio_match"]], "get_dir_files() (in module graphai.core.common.video)": [[31, "graphai.core.common.video.get_dir_files"]], "graphai.core.common.video": [[31, "module-graphai.core.common.video"]], "init_db() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.init_db"]], "insert_or_update_audio_details() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.insert_or_update_audio_details"]], "insert_or_update_closest_match() (graphai.core.common.video.dbcachingmanager method)": [[31, "graphai.core.common.video.DBCachingManager.insert_or_update_closest_match"]], "make_sure_path_exists() (in module graphai.core.common.video)": [[31, "graphai.core.common.video.make_sure_path_exists"]], "set_root_dir() (graphai.core.common.video.videoconfig method)": [[31, "graphai.core.common.video.VideoConfig.set_root_dir"]], "surround_with_character() (in module graphai.core.common.video)": [[31, "graphai.core.common.video.surround_with_character"]], "graphai.core.interfaces": [[32, "module-graphai.core.interfaces"]], "db (class in graphai.core.interfaces.db)": [[33, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.build_conditions_list"]], "create_table() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.find"]], "graphai.core.interfaces.db": [[33, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[33, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[33, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[34, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[34, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[34, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[34, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[34, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[34, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[34, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[35, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[35, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[35, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[36, "module-graphai.core.text"]], "get_keywords() (in module graphai.core.text.keywords)": [[37, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[37, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[37, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[37, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[38, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[39, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[39, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[39, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[39, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[39, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[39, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[40, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[40, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[40, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[40, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[41, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[42, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[42, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[42, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[42, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[42, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[42, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[42, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[43, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[43, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[43, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[43, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[43, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[44, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[45, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[45, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[45, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[45, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[46, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[46, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[47, "module-graphai.definitions"]]}})