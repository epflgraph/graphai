Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_jobs", "graphai.api.celery_jobs.common", "graphai.api.celery_jobs.embedding", "graphai.api.celery_jobs.image", "graphai.api.celery_jobs.ontology", "graphai.api.celery_jobs.scraping", "graphai.api.celery_jobs.translation", "graphai.api.celery_jobs.video", "graphai.api.celery_jobs.voice", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.completion", "graphai.api.celery_tasks.embedding", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.auth_utils", "graphai.api.common.celery_tools", "graphai.api.common.embedding", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.translation", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.auth", "graphai.api.routers.completion", "graphai.api.routers.embedding", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.completion", "graphai.api.schemas.embedding", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.api.text", "graphai.api.text.router", "graphai.api.text.schemas", "graphai.celery", "graphai.celery.text", "graphai.celery.text.jobs", "graphai.celery.text.tasks", "graphai.core", "graphai.core.common", "graphai.core.common.common_utils", "graphai.core.common.fingerprinting", "graphai.core.embedding", "graphai.core.embedding.embedding", "graphai.core.interfaces", "graphai.core.interfaces.caching", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.config", "graphai.core.ontology", "graphai.core.ontology.clustering", "graphai.core.ontology.data", "graphai.core.scraping", "graphai.core.scraping.scraping", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.graph", "graphai.core.text.keywords", "graphai.core.text.scores", "graphai.core.text.wikisearch", "graphai.core.translation", "graphai.core.translation.text_utils", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.core.video", "graphai.core.video.ocr", "graphai.core.video.transcribe", "graphai.core.video.video", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_jobs.rst", "graphai.api.celery_jobs.common.rst", "graphai.api.celery_jobs.embedding.rst", "graphai.api.celery_jobs.image.rst", "graphai.api.celery_jobs.ontology.rst", "graphai.api.celery_jobs.scraping.rst", "graphai.api.celery_jobs.translation.rst", "graphai.api.celery_jobs.video.rst", "graphai.api.celery_jobs.voice.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.completion.rst", "graphai.api.celery_tasks.embedding.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.auth_utils.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.embedding.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.translation.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.auth.rst", "graphai.api.routers.completion.rst", "graphai.api.routers.embedding.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.completion.rst", "graphai.api.schemas.embedding.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.api.text.rst", "graphai.api.text.router.rst", "graphai.api.text.schemas.rst", "graphai.celery.rst", "graphai.celery.text.rst", "graphai.celery.text.jobs.rst", "graphai.celery.text.tasks.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.common_utils.rst", "graphai.core.common.fingerprinting.rst", "graphai.core.embedding.rst", "graphai.core.embedding.embedding.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.caching.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.config.rst", "graphai.core.ontology.rst", "graphai.core.ontology.clustering.rst", "graphai.core.ontology.data.rst", "graphai.core.scraping.rst", "graphai.core.scraping.scraping.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.graph.rst", "graphai.core.text.keywords.rst", "graphai.core.text.scores.rst", "graphai.core.text.wikisearch.rst", "graphai.core.translation.rst", "graphai.core.translation.text_utils.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.core.video.rst", "graphai.core.video.ocr.rst", "graphai.core.video.transcribe.rst", "graphai.core.video.video.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_jobs package", "graphai.api.celery_jobs.common module", "graphai.api.celery_jobs.embedding module", "graphai.api.celery_jobs.image module", "graphai.api.celery_jobs.ontology module", "graphai.api.celery_jobs.scraping module", "graphai.api.celery_jobs.translation module", "graphai.api.celery_jobs.video module", "graphai.api.celery_jobs.voice module", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.completion module", "graphai.api.celery_tasks.embedding module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.auth_utils module", "graphai.api.common.celery_tools module", "graphai.api.common.embedding module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.translation module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.auth module", "graphai.api.routers.completion module", "graphai.api.routers.embedding module", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.completion module", "graphai.api.schemas.embedding module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.api.text package", "graphai.api.text.router module", "graphai.api.text.schemas module", "graphai.celery package", "graphai.celery.text package", "graphai.celery.text.jobs module", "graphai.celery.text.tasks module", "graphai.core package", "graphai.core.common package", "graphai.core.common.common_utils module", "graphai.core.common.fingerprinting module", "graphai.core.embedding package", "graphai.core.embedding.embedding module", "graphai.core.interfaces package", "graphai.core.interfaces.caching module", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.config module", "graphai.core.ontology package", "graphai.core.ontology.clustering module", "graphai.core.ontology.data module", "graphai.core.scraping package", "graphai.core.scraping.scraping module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.graph module", "graphai.core.text.keywords module", "graphai.core.text.scores module", "graphai.core.text.wikisearch module", "graphai.core.translation package", "graphai.core.translation.text_utils module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.core.video package", "graphai.core.video.ocr module", "graphai.core.video.transcribe module", "graphai.core.video.video module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 60, 62, 64, 68, 69, 71, 72, 73, 76, 77, 79, 82, 88, 92, 102], "contain": [0, 12, 42, 43, 44, 45, 46, 47, 48, 49, 52, 59, 65, 68, 69, 71, 72, 74, 75, 77, 91, 102], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 51, 52, 68, 69, 72, 73, 76, 102, 112], "project": 0, "ai": 0, "base": [0, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 62, 64, 65, 68, 69, 71, 72, 74, 76, 77, 79, 81, 82, 84, 85, 88, 90, 91, 92, 102, 107], "util": [0, 57], "api": [0, 72, 77, 90], "celeri": [0, 12, 65], "core": 0, "pipelin": 0, "definit": [0, 102], "modul": [0, 1, 2, 11, 21, 30, 40, 50, 54, 58, 61, 63, 67, 70, 72, 78, 80, 83, 86, 89, 95, 108, 112], "celery_job": 1, "celery_task": 1, "common": [1, 2, 11, 40, 57], "router": [1, 50], "schema": [1, 50], "text": [1, 4, 8, 12, 14, 43, 44, 47, 49, 53, 57, 59, 60, 62, 71, 79, 80, 90, 91, 92], "main": [1, 69, 95, 97], "embed": [2, 11, 21, 30, 40, 51, 52, 57, 68], "imag": [2, 11, 12, 30, 40, 60, 90, 92], "ontologi": [2, 11, 21, 30, 40, 41, 51, 52, 57, 72, 73, 74, 76], "scrape": [2, 11, 30, 40, 57], "translat": [2, 11, 12, 21, 30, 40, 57, 75, 91], "video": [2, 11, 12, 21, 30, 40, 44, 49, 57, 60], "voic": [2, 11, 30, 40], "direct_lookup_generic_job": 3, "task_fn": 3, "token": [3, 4, 5, 7, 8, 9, 10, 14, 22, 31, 41, 43, 44, 46, 47, 48, 49, 60, 62, 64, 71, 75, 79, 92], "return_result": [3, 4, 7, 8, 10], "fals": [3, 4, 5, 7, 8, 9, 10, 14, 22, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 59, 64, 68, 69, 71, 72, 75, 76, 85, 88, 90, 91, 92, 102], "timeout": 3, "40": [3, 71], "arg": [3, 65], "launch": 3, "direct": [3, 69, 102], "cach": [3, 12, 41, 43, 44, 47, 48, 49, 63, 92], "lookup": [3, 12, 44, 48, 49], "job": [3, 54], "param": [3, 12, 59, 60, 62, 64, 65, 68, 69, 71, 79, 90, 91, 92, 96, 98, 99, 100, 101, 103, 104], "task": [3, 12, 41, 43, 44, 45, 46, 47, 48, 49, 54, 65, 82, 88], "function": [3, 29, 59, 60, 88, 92, 102], "look": 3, "up": [3, 45, 69, 72, 73], "If": [3, 45, 48, 49, 59, 60, 62, 68, 69, 75, 85, 102], "true": [3, 4, 8, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 59, 60, 62, 68, 69, 71, 72, 74, 75, 76, 79, 81, 85, 88, 90, 92, 102], "full": [3, 59, 60, 64, 68, 90, 91, 92], "result": [3, 12, 14, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 60, 65, 68, 69, 72, 73, 74, 76, 77, 90, 91, 92, 102], "ar": [3, 44, 45, 46, 48, 51, 52, 59, 60, 69, 71, 72, 73, 75, 76, 87, 92, 102], "return": [3, 12, 41, 44, 45, 47, 48, 49, 51, 59, 60, 62, 64, 65, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 84, 85, 87, 88, 90, 91, 92, 102], "instead": [3, 51, 64], "just": [3, 68], "id": [3, 12, 41, 43, 44, 45, 46, 47, 48, 49, 52, 64, 65, 68, 69, 71], "second": [3, 25, 60, 71, 88, 91], "case": [3, 43, 45, 47, 59, 85, 90], "hit": [3, 43, 47], "none": [3, 9, 10, 12, 22, 25, 31, 41, 43, 44, 45, 46, 47, 48, 49, 51, 59, 60, 62, 64, 65, 68, 69, 71, 79, 81, 82, 85, 91, 92, 102, 103], "miss": [3, 102], "get_embedding_text_fingerprint_chain_list": 4, "model_typ": [4, 14, 43, 62], "fingerprint_lookup_job": [4, 5, 8, 9, 10], "fingerprint_compute_job": [4, 8], "asynchron": [4, 8], "fingerprint_job": [4, 5, 8, 9, 10], "forc": [4, 5, 7, 8, 9, 10, 14, 43, 44, 46, 47, 48, 49, 62, 64], "embedding_job": 4, "ocr_job": 5, "method": [5, 44, 51, 55, 68, 69, 72, 77, 90, 92, 102], "googl": [5, 44, 90], "tree_job": 6, "category_info_job": 6, "category_id": [6, 45, 69], "category_parent_job": 6, "category_children_job": 6, "dest_typ": 6, "cluster_parent_job": 6, "cluster_id": [6, 45, 69], "cluster_children_job": 6, "recompute_clusters_job": 6, "n_cluster": [6, 45, 68], "min_n": [6, 45, 68], "graph_distance_job": 6, "src": [6, 8, 45, 79], "tgt": [6, 8, 45, 79], "src_type": [6, 45], "tgt_type": [6, 45], "avg": [6, 45, 69], "coeff": [6, 45, 69], "concept_nearest_category_job": 6, "top_n": [6, 45, 69], "use_depth_3": [6, 69], "return_clust": [6, 45, 69], "cluster_nearest_category_job": 6, "concept_nearest_concept_job": 6, "breakup_cluster_job": 6, "sublink_lookup_job": 7, "extract_sublinks_job": 7, "url": [7, 9, 46, 48, 71, 84, 92], "extract_content_job": 7, "header": [7, 31, 46, 71], "long_pattern": 7, "get_translation_text_fingerprint_chain_list": 8, "translation_job": 8, "detect_text_language_job": 8, "get_video_fingerprint_chain_list": 9, "min_similar": [9, 12, 60], "n_job": 9, "8": [9, 51, 72, 76], "ignore_fp_result": 9, "get_audio_fingerprint_chain_list": 9, "get_slide_fingerprint_chain_list": 9, "origin_token": [9, 64], "retrieve_url_job": 9, "is_playlist": 9, "extract_audio_job": 9, "recalculate_cach": [9, 48], "detect_slides_job": 9, "languag": [9, 44, 47, 48, 49, 79, 91, 92], "get_file_job": 9, "get_audio_language_detection_task_chain": 10, "n_div": 10, "15": 10, "len_seg": 10, "30": [10, 91], "language_lookup_job": 10, "detect_language_job": 10, "transcribe_job": 10, "lang": [10, 12, 79, 92], "strict_sil": [10, 91], "complet": [11, 30, 40, 82, 88, 107], "lookup_latest_allowed_d": 12, "fp_token": 12, "db_manag": [12, 64], "format_api_result": 12, "name": [12, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 64, 65, 68, 85, 92], "statu": [12, 41, 43, 44, 45, 46, 47, 48, 49, 65, 71], "format": [12, 59, 87, 92], "come": 12, "from": [12, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 60, 64, 68, 71, 72, 74, 75, 76, 84, 92, 102], "output": [12, 41, 45, 92], "appropri": 12, "dictionari": [12, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 59, 68, 69, 71, 77, 79, 85, 91], "fingerprint_lookup_retrieve_from_db": 12, "equality_condit": 12, "retriev": [12, 48, 51, 64, 71, 72, 77, 88, 92], "number": [12, 42, 45, 48, 51, 68, 69, 71, 72, 76, 77, 82, 85, 90, 92, 102], "row": [12, 64, 68, 69, 102], "relev": [12, 51, 52, 72, 77], "fingerprint": [12, 41, 44, 47, 48, 49, 58, 64], "dict": [12, 22, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 64, 68, 71, 79, 85, 91, 92], "comput": [12, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 60, 68, 72, 74, 76, 92, 102], "dbcachingmanagerbas": [12, 64], "object": [12, 22, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 62, 64, 65, 69, 72, 73, 74, 76, 79, 81, 82, 85, 87, 88, 90, 91, 92], "equal": [12, 44, 45, 48, 49, 52, 71], "condit": 12, "count": [12, 45], "onli": [12, 41, 48, 51, 69, 72, 77, 85, 92, 102], "us": [12, 43, 47, 51, 62, 64, 68, 69, 71, 72, 75, 76, 77, 84, 88, 90, 91, 92, 102], "unexpect": [12, 60, 68, 69, 91, 102], "indent": [12, 60, 68, 69, 81, 85, 91], "where": [12, 92, 102], "need": [12, 59, 62, 88], "done": [12, 51], "among": [12, 51], "same": [12, 52, 71, 92, 102], "sourc": [12, 45, 47, 68, 69, 79], "target": [12, 45, 47, 60, 69, 79, 92], "origin": [12, 43, 44, 45, 48, 49, 64, 68, 69, 71, 72, 74, 92], "plu": [12, 44, 48, 69, 72, 74, 79], "fingerprint_lookup_parallel": 12, "input_dict": 12, "i": [12, 29, 41, 43, 45, 46, 47, 48, 49, 51, 52, 59, 60, 64, 68, 69, 71, 72, 73, 75, 76, 77, 82, 84, 88, 90, 91, 92, 102], "n_total": 12, "data_typ": 12, "audio": [12, 48, 49, 60, 91, 92], "perform": [12, 48, 68, 71, 77, 90, 92, 102], "parallel": [12, 52], "previou": [12, 82, 88], "step": [12, 92], "index": [12, 68, 69, 71, 92, 102], "thi": [12, 22, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 60, 68, 72, 76, 82, 102], "total": [12, 25, 82, 88], "minimum": [12, 42, 44, 45, 48, 49, 60, 62, 68, 71, 92], "similar": [12, 44, 45, 48, 49, 52, 60, 64, 69, 92, 102], "threshold": [12, 44, 48, 49, 51, 64, 72, 73, 75, 76, 91, 92], "two": [12, 42, 51, 52, 60, 69, 71, 76, 90, 92], "consid": [12, 45, 68, 72, 73, 77, 92], "match": [12, 45, 60, 71, 77], "type": [12, 43, 45, 62, 71, 72, 74, 75, 76, 77, 84, 85, 91], "data": [12, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 51, 67, 68, 71, 85], "can": [12, 29, 41, 45, 47, 48, 51, 60, 72, 77, 88, 91], "mode": [12, 68], "detail": [12, 64], "closest": [12, 44, 45, 48, 49, 60, 69], "which": [12, 41, 45, 46, 48, 52, 64, 69, 71, 72, 73, 75, 76, 77, 91, 92, 102], "fingerprint_lookup_direct": 12, "fp_result": 12, "fingerprint_lookup_callback": 12, "results_list": 12, "handl": 12, "collect": 12, "aggreg": [12, 51, 52, 68, 72, 76], "databas": [12, 41, 48], "insert": 12, "list": [12, 22, 42, 43, 44, 45, 46, 47, 48, 51, 52, 60, 62, 64, 68, 69, 71, 72, 75, 77, 92, 102], "token_based_embedding_lookup": 14, "fingerprint_based_embedding_lookup": 14, "fp": [14, 92], "embed_text": [14, 33], "model": [14, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 62, 68, 79, 91, 92], "insert_embedding_into_db": 14, "auth_util": 21, "celery_tool": 21, "log": [21, 45, 69, 81, 85], "get_ratelimit_valu": 22, "class": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 62, 64, 65, 69, 72, 74, 79, 81, 82, 84, 85, 88, 90, 91, 92], "access_token": 22, "str": [22, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 72, 75, 77, 84, 85, 88, 102], "token_typ": 22, "basemodel": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "model_computed_field": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "classvar": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "computedfieldinfo": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "A": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 69, 72, 73, 74, 75, 76, 77, 91], "field": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 71], "correspond": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 68], "model_config": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "configdict": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "configur": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 102], "should": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 64, 85], "conform": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "pydant": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "config": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 63], "model_field": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "fieldinfo": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "annot": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "requir": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 102], "metadata": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "about": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 72, 75], "defin": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 102, 106], "map": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 68, 69, 71, 87], "replac": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 88, 102], "__fields__": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "v1": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 92], "tokendata": 22, "usernam": 22, "scope": 22, "default": [22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 62, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 88, 92], "union": [22, 41, 43, 44, 45, 46, 47, 48, 49], "nonetyp": [22, 41, 43, 44, 45, 46, 47, 48, 49], "user": [22, 31], "email": [22, 84], "full_nam": 22, "disabl": 22, "bool": [22, 41, 43, 44, 45, 46, 47, 48, 49, 51, 72, 74, 75, 76, 85, 102], "userindb": 22, "hashed_password": 22, "generate_random_password_str": 22, "length": [22, 25, 48, 49, 52, 60, 71, 92], "32": [22, 71], "verify_password": 22, "plain_password": 22, "get_password_hash": 22, "password": 22, "get_us": 22, "get_user_ratelimit_overrid": 22, "path": [22, 31, 59, 60, 64, 90, 91, 92, 107], "authenticate_us": 22, "get_n_celery_work": 23, "msg": [25, 81, 85, 88], "64": 25, "lifespan": 29, "app": [29, 65], "fastapi": 29, "ha": [29, 41, 45, 47, 48, 62, 102], "three": [29, 60, 91], "part": [29, 42, 45], "befor": [29, 48, 88, 102], "startup": [29, 112], "logic": 29, "execut": [29, 82, 88], "right": [29, 52], "start": [29, 45, 69, 71, 72, 77, 92], "here": 29, "we": [29, 92], "might": 29, "want": 29, "load": [29, 62, 64, 69, 79, 91, 92], "big": [29, 85], "memori": [29, 91], "etc": [29, 68, 72, 75], "yield": [29, 45], "standard": [29, 71], "wai": 29, "pass": [29, 51, 62], "so": [29, 48, 60, 71, 92], "normal": [29, 68, 84], "boot": 29, "serv": 29, "request": [29, 41, 43, 44, 45, 46, 47, 48, 49, 51, 68, 71], "after": [29, 51, 68, 72, 75, 76], "shutdown": 29, "shut": 29, "down": [29, 45], "free": 29, "some": [29, 51, 76, 82, 88, 102], "do": 29, "cleanup": 29, "async": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51], "redirect_doc": 29, "auth": 30, "create_access_token": 31, "expires_delta": 31, "timedelta": 31, "extract_username_and_scop": 31, "get_current_us": 31, "security_scop": 31, "securityscop": 31, "get_current_active_us": 31, "current_us": 31, "get_active_user_dummi": 31, "get_user_for_rate_limit": 31, "login_for_access_token": 31, "form_data": 31, "oauth2passwordrequestform": 31, "read_users_m": 31, "choose_best_subset": 32, "slidesubsetrequest": [32, 42], "calculate_embedding_text_fingerprint": 33, "embeddingfingerprintrequest": [33, 43], "calculate_embedding_text_fingerprint_statu": 33, "task_id": [33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 65], "embeddingrequest": [33, 43], "embed_text_statu": 33, "calculate_slide_fingerprint": 34, "imagefingerprintrequest": [34, 44], "calculate_slide_fingerprint_statu": 34, "extract_text": 34, "extracttextrequest": [34, 44], "extract_text_statu": 34, "detect_ocr_language_statu": 34, "tree": [35, 41, 45, 68, 92], "cat_info": 35, "categoryinforequest": [35, 45], "cat_par": 35, "cat_children": 35, "categorychildrenrequest": [35, 45], "cluster_par": 35, "clusterinforequest": [35, 45], "cluster_children": 35, "recompute_clust": 35, "recomputeclustersrequest": [35, 45], "recompute_clusters_statu": 35, "compute_graph_dist": 35, "graphdistancerequest": [35, 45], "compute_graph_concept_nearest_categori": 35, "graphconceptnearestcategoryrequest": [35, 45], "compute_graph_cluster_nearest_categori": 35, "graphclusternearestcategoryrequest": [35, 45], "compute_graph_nearest_concept": 35, "graphnearestconceptrequest": [35, 45], "break_up_clust": 35, "breakupclusterrequest": [35, 45], "extract_sublink": 36, "getsublinksrequest": [36, 46], "extract_sublinks_statu": 36, "extract_page_cont": 36, "extractcontentrequest": [36, 46], "extract_page_content_statu": 36, "calculate_translation_text_fingerprint": 37, "translationrequest": [37, 47], "calculate_translation_text_fingerprint_statu": 37, "translate_statu": 37, "text_detect_languag": 37, "textdetectlanguagerequest": [37, 47], "text_detect_language_statu": 37, "retrieve_fil": 38, "retrieveurlrequest": [38, 48], "get_retrieve_file_statu": 38, "calculate_video_fingerprint": 38, "videofingerprintrequest": [38, 48], "calculate_video_fingerprint_statu": 38, "get_fil": 38, "filerequest": [38, 41], "extract_audio": 38, "extractaudiorequest": [38, 48], "extract_audio_statu": 38, "detect_slid": 38, "detectslidesrequest": [38, 48], "detect_slides_statu": 38, "calculate_audio_fingerprint": 39, "audiofingerprintrequest": [39, 49], "calculate_audio_fingerprint_statu": 39, "transcrib": [39, 49, 89], "audiotranscriptionrequest": [39, 49], "transcribe_statu": 39, "detect_languag": 39, "audiodetectlanguagerequest": [39, 49], "detect_language_statu": 39, "taskidrespons": 41, "repres": [41, 45, 51, 52, 69, 75, 82, 88], "endpoint": [41, 45], "titl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "descript": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52], "creat": [41, 43, 44, 45, 46, 47, 48, 49, 59, 64, 65, 69, 71, 79, 85, 88], "respons": [41, 43, 44, 45, 46, 47, 48, 49], "an": [41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 60, 62, 64, 68, 69, 79, 85, 91, 92], "taskstatusrespons": [41, 43, 44, 45, 46, 47, 48, 49], "task_nam": [41, 43, 44, 45, 46, 47, 48, 49], "task_statu": [41, 43, 44, 45, 46, 47, 48, 49], "task_result": [41, 43, 44, 45, 46, 47, 48, 49, 65], "abc": 41, "json": [41, 49, 59, 85, 91, 92], "file": [41, 44, 48, 49, 51, 59, 60, 64, 72, 73, 85, 90, 91, 92], "download": [41, 92], "receiv": 41, "anoth": [41, 52, 69], "tokenstatu": [41, 48], "activ": [41, 48], "whether": [41, 43, 44, 45, 46, 47, 48, 49, 51, 59, 60, 64, 68, 69, 71, 72, 74, 75, 76, 88, 91, 92, 102], "": [41, 42, 45, 48, 49, 51, 59, 60, 62, 64, 71, 72, 76, 79, 84], "avail": [41, 44, 48], "make": [41, 48, 52, 69, 90], "calcul": [41, 48, 68, 92], "possibl": [41, 48, 75], "otherwis": [41, 48, 49, 59, 62, 72, 75, 90, 92, 102], "slideconceptsmap": 42, "int": [42, 45, 48, 51, 52, 72, 73, 77, 82, 85], "concept": [42, 45, 51, 52, 68, 69, 72, 73, 74, 76, 77, 97, 102], "slide": [42, 44, 48, 51, 92], "coverag": [42, 79], "float": [42, 45, 48, 49, 51, 52, 72, 73, 75, 76, 88, 102], "1": [42, 43, 45, 51, 52, 59, 60, 69, 71, 72, 76, 77, 79, 87, 88, 92, 102], "0": [42, 43, 45, 49, 51, 52, 59, 60, 62, 69, 71, 72, 73, 74, 76, 77, 79, 85, 87, 88, 91, 92, 96, 102], "min_freq": [42, 79], "2": [42, 45, 51, 60, 69, 72, 77, 79, 88, 92, 102, 112], "what": [42, 68, 72, 75], "proport": [42, 45, 88], "cover": 42, "frequenc": 42, "occurr": 42, "must": [42, 45, 68], "have": [42, 45, 48, 51, 62, 102], "all": [42, 43, 45, 51, 52, 60, 62, 68, 71, 72, 75, 76, 88, 92, 102], "combin": [42, 68, 102], "order": [42, 45, 69], "remov": [42, 46, 49, 60, 71], "nois": [42, 92], "integ": [42, 45], "indic": [42, 46, 48, 49, 60, 69, 71, 92], "slidesubsetrespons": 42, "subset": [42, 76], "optim": [42, 68, 71], "were": [42, 69], "chosen": 42, "set": [42, 45, 48, 49, 51, 52, 59, 62, 64, 65, 72, 73, 77, 102], "embeddingrequestbas": 43, "liter": [43, 44, 45, 47, 48], "minilm": [43, 62], "l12": [43, 62], "v2": [43, 62, 92], "solon": 43, "larg": [43, 47], "recomput": [43, 44, 45, 46, 47, 48, 49, 51, 72, 76], "string": [43, 45, 47, 51, 59, 60, 62, 71, 75, 79, 92], "emb": [43, 62], "embeddingtaskrespons": 43, "text_too_larg": [43, 47], "success": [43, 44, 45, 46, 47, 48, 49, 92], "fresh": [43, 44, 45, 46, 47, 48, 49], "devic": [43, 47], "cuda": [43, 47], "cpu": [43, 47], "failur": [43, 47, 90], "flag": [43, 44, 45, 46, 47, 48, 49, 79], "wa": [43, 44, 45, 46, 47, 48, 49], "too": [43, 47, 79, 88], "boolean": [43, 47, 48, 88], "provid": [43, 45, 47, 48, 51, 65, 68, 69, 71, 72, 74, 79, 92], "long": [43, 46, 47, 71, 79], "depend": [43, 76], "limit": [43, 77], "128": 43, "embeddingrespons": 43, "identifi": [44, 48, 49, 92], "imagefingerprinttaskrespons": 44, "closest_token": [44, 48, 49], "closest_token_origin": [44, 49], "most": [44, 48, 49, 51, 60], "exist": [44, 45, 47, 48, 49, 59, 60, 85, 90], "abl": [44, 48, 49], "find": [44, 45, 48, 49, 60, 69, 71, 72, 77, 92], "did": [44, 48, 49], "satisfi": [44, 48, 49, 60], "freshli": [44, 47, 48, 49], "imagefingerprintrespons": 44, "tesseract": [44, 92], "ocr": [44, 89, 92], "recommend": [44, 102], "individualocrresult": 44, "textual": [44, 59], "extracttexttaskrespons": 44, "detect": [44, 47, 48, 49, 79, 90, 91, 92], "extracttextrespons": 44, "extract": [44, 46, 48, 51, 52, 71, 72, 75, 92], "detectocrlanguagetaskrespons": 44, "detectocrlanguagerespons": 44, "found": [44, 52, 92], "treeresponseelem": 45, "child_id": [45, 69], "parent_id": [45, 69], "child": [45, 69], "categori": [45, 69, 72, 73], "parent": [45, 69], "treerespons": 45, "child_to_par": 45, "relationship": 45, "predefin": [45, 71], "cluster": [45, 67, 69, 77], "categoryinforespons": 45, "depth": [45, 69], "refer": [45, 48, 69], "categoryparentrespons": 45, "treechildrenrespons": 45, "children": 45, "child_typ": 45, "treeparentrespons": 45, "2200": 45, "non": [45, 68], "outlier": [45, 68], "size": [45, 48, 60, 68, 72, 73, 92], "reassign": [45, 68], "larger": 45, "would": 45, "being": [45, 49], "skip": [45, 85], "oneconceptresponseel": 45, "recomputeclusterstaskrespons": 45, "category_assign": 45, "impurity_count": 45, "impurity_proport": 45, "assign": [45, 59, 102], "each": [45, 46, 51, 52, 59, 68, 69, 71, 72, 76, 77, 82, 88, 102], "its": [45, 48, 49, 60, 64, 68, 69, 71, 92, 102], "impur": 45, "through": [45, 51, 69, 92], "process": [45, 48, 51, 71, 72, 77], "end": [45, 49, 59, 60, 68, 71, 91, 102], "differ": [45, 60, 88, 102], "than": [45, 48, 52, 60, 75, 102], "divid": [45, 102], "recomputeclustersrespons": 45, "break": 45, "given": [45, 52, 59, 60, 64, 65, 68, 69, 71, 72, 73, 75, 77, 84, 85, 87, 92, 102], "one": [45, 47, 51, 52, 60, 68, 69, 72, 75, 77, 82, 88, 102], "breakupclustersclusternumberrespons": 45, "breakupclustersrespons": 45, "linear": [45, 69], "tupl": [45, 71, 72, 75, 77, 102], "averag": [45, 52, 68, 69, 72, 76, 102], "coeffici": [45, 69, 102], "node": [45, 69], "graphdistancerespons": 45, "sim": 45, "graphnearestcategoryrequest": 45, "adapt": 45, "10": [45, 51, 69, 72, 75, 77, 102], "top_down_search": 45, "anchor": [45, 69], "page": [45, 46, 51, 52, 69, 71, 72, 76, 77], "respect": [45, 52, 69, 87, 102], "top": [45, 69, 77], "search": [45, 52, 71, 72, 77, 92], "directli": [45, 69], "4": [45, 69, 88, 112], "higher": [45, 102], "3": [45, 51, 68, 69, 72, 73, 77, 84, 88, 112], "gener": [45, 62, 64, 71, 75, 79, 92], "better": 45, "get": [45, 64, 69, 84], "rank": 45, "raw": [45, 51, 52, 84], "score": [45, 51, 52, 60, 68, 69, 72, 73, 74, 75, 77, 79, 91, 102], "between": [45, 51, 60, 64, 68, 69, 72, 76, 87, 88, 92, 102], "entiti": 45, "n": [45, 59, 69, 72, 77, 107], "null": [45, 48], "determin": [45, 46, 71], "k": [45, 60, 92, 102], "custom": [45, 69], "paramet": [45, 60, 68, 72, 73, 74, 75, 76, 77, 82, 84, 85, 88, 91, 95, 102], "singl": [45, 68, 92], "On": 45, "other": [45, 51, 52, 69, 72, 76, 77, 88], "hand": 45, "element": [45, 69, 71], "nearestclusterel": 45, "nearestcategoryel": 45, "nearestcategoryelementwithclust": 45, "graphconceptnearestcategoryrespons": 45, "parent_categori": 45, "valid": [45, 46, 71, 94], "existing_label": 45, "alreadi": [45, 48, 90], "valu": [45, 48, 49, 51, 59, 60, 64, 69, 71, 72, 76, 92, 102], "reflect": 45, "In": [45, 69], "few": 45, "mani": [45, 71], "unset": 45, "while": 45, "mean": [45, 68, 72, 77, 102], "effect": 45, "random": [45, 68, 92, 107], "graphclusternearestcategoryrespons": 45, "graphnearestconceptrespons": 45, "getsublinkstaskrespons": 46, "validated_url": [46, 71], "sublink": [46, 71], "status_msg": 46, "messag": [46, 71, 88], "clean": [46, 69, 83], "doubl": 46, "getsublinksrespons": 46, "remove_head": [46, 71], "remove_long_pattern": [46, 71], "pattern": [46, 71], "extractcontenttaskrespons": 46, "content": [46, 59, 71, 85, 92], "extractcontentrespons": 46, "textfingerprinttaskrespons": 47, "textfingerprintrespons": 47, "en": [47, 48, 79, 91, 92], "fr": [47, 48, 79], "de": 47, "translationtaskrespons": 47, "overli": 47, "unpunctu": [47, 79], "segment": [47, 49, 52, 79, 91, 92], "over": [47, 51, 72, 76, 102], "512": 47, "translationrespons": 47, "textdetectlanguagetaskrespons": 47, "textdetectlanguagerespons": 47, "playlist": [48, 92], "redownload": 48, "variabl": [48, 88], "m3u8": [48, 92], "rather": 48, "like": [48, 91], "mp4": 48, "kaltura": [48, 92], "exampl": [48, 52, 72, 75, 84, 102], "store": [48, 72, 73, 92], "further": 48, "videotokenstatu": 48, "stream": [48, 60, 92], "allow": 48, "retrieveurlresponseinn": 48, "token_statu": 48, "token_s": 48, "uri": 48, "had": 48, "been": 48, "fail": [48, 64], "retrieveurlrespons": 48, "now": [48, 87], "videofingerprinttaskrespons": 48, "videofingerprintrespons": 48, "under": [48, 51, 69], "ani": [48, 49, 51, 52, 72, 75, 76, 102], "circumst": 48, "recalcul": 48, "overrid": 48, "assum": [48, 87, 102], "andthat": 48, "previous": 48, "recreat": 48, "Will": 48, "inact": 48, "extractaudiotaskrespons": 48, "durat": [48, 49, 92], "exact": [48, 60], "extractaudiorespons": 48, "frame": [48, 92], "keep": [48, 51, 69, 82], "timestamp": [48, 49, 87, 92], "slidetokenandtimestamp": 48, "detectslidestaskrespons": 48, "slide_token": 48, "detectslidesrespons": 48, "audiofingerprinttaskrespons": 49, "remove_sil": 49, "begin": [49, 71, 88], "silenc": [49, 91], "approxim": 49, "bitrat": 49, "audiofingerprintrespons": 49, "audiodetectlanguagetaskrespons": 49, "audiodetectlanguagerespons": 49, "transcript": [49, 91], "force_lang": [49, 91], "strict": [49, 91], "tell": 49, "whisper": [49, 91], "automat": [49, 51, 64, 91], "reduc": 49, "6": [49, 88, 90], "5": [49, 51, 69, 72, 74, 76, 88], "silent": 49, "speech": [49, 91], "probabl": 49, "abov": [49, 60, 87, 92, 102], "confid": 49, "predict": 49, "low": [49, 68, 102], "treat": 49, "audiotranscriptiontaskrespons": 49, "transcript_result": 49, "subtitle_result": 49, "subtitl": [49, 91], "audiotranscriptionrespons": 49, "timesstamp": 49, "keyword": [51, 52, 55, 72, 74, 76, 77], "keywordsrequest": [51, 52], "use_nltk": [51, 55, 72, 75], "e": [51, 68, 71, 72, 76, 77, 91, 92], "g": [51, 68, 69, 72, 77, 91], "abstract": 51, "public": 51, "cours": 51, "lectur": 51, "wikifi": [51, 52, 72, 73], "wikifyfromrawtextrequest": [51, 52], "wikifyfromkeywordsrequest": [51, 52], "restrict_to_ontologi": [51, 55, 72, 76], "graph_score_smooth": [51, 55, 72, 76], "ontology_score_smooth": [51, 55, 72, 76], "keywords_score_smooth": [51, 55, 72, 76], "aggregation_coef": [51, 55, 72, 76], "filtering_threshold": [51, 55, 72, 76], "filtering_min_agreement_fract": [51, 55, 72, 76], "refresh_scor": [51, 55, 72, 76], "wikipedia": [51, 52, 69, 72, 77], "quantifi": 51, "follow": [51, 82, 84, 88, 92, 102], "omit": 51, "input": [51, 60, 71, 90, 91, 92], "raw_text": [51, 52, 55], "wikisearch": [51, 72, 76], "For": [51, 60, 69, 102], "elasticsearch": [51, 72, 77], "pair": [51, 69, 75, 88, 102], "sever": [51, 52, 72, 76, 88], "deriv": [51, 69], "take": [51, 69, 72, 76, 102], "account": 51, "vector": [51, 52, 68], "filter": [51, 72, 73, 75, 76], "accord": [51, 52, 68, 71, 102], "rule": 51, "argument": 51, "more": [51, 75, 82, 88], "precis": 51, "control": [51, 72, 76, 102], "It": [51, 52, 72, 75, 77, 84, 102], "either": [51, 72, 77], "appli": [51, 72, 74, 76], "transform": [51, 62, 68, 72, 74, 76], "bump": [51, 72, 74, 76], "avoid": [51, 72, 74, 76, 85], "pronounc": 51, "neg": [51, 72, 74], "exponenti": [51, 72, 74], "shape": [51, 72, 74, 102], "push": [51, 72, 74, 76], "awai": [51, 72, 74, 76], "how": [51, 68, 71, 72, 75, 76, 79], "sum": [51, 52, 68, 72, 76], "normalis": [51, 72, 75, 76, 102], "max": [51, 72, 76], "linearli": [51, 76, 87], "interpol": [51, 76], "those": [51, 60, 69, 76], "approach": [51, 76], "decid": [51, 72, 76], "good": [51, 72, 76], "enough": [51, 62, 72, 76], "perspect": [51, 72, 76], "kept": [51, 72, 76, 102], "iff": [51, 72, 76], "least": [51, 72, 76], "fraction": [51, 72, 76, 77], "wikify_ontology_svg": [51, 55], "wikifyresponseelem": [51, 52], "level": [51, 55, 68, 72, 73], "svg": [51, 72, 73], "subgraph": 51, "induc": [51, 69, 72, 73], "wikify_graph_svg": [51, 55], "concept_score_threshold": [51, 55, 72, 73], "edge_threshold": [51, 55, 72, 73], "min_component_s": [51, 55, 72, 73], "To": 52, "draw": [52, 72], "straight": 52, "line": [52, 60, 68, 85, 91, 102], "point": [52, 68, 71], "nto": 52, "produc": 52, "finit": 52, "continu": 52, "describ": 52, "circl": 52, "center": 52, "radiu": 52, "nthat": 52, "angl": 52, "fall": 52, "interior": 52, "side": 52, "less": 52, "indefinit": 52, "meet": 52, "concept_id": [52, 69, 72, 73, 74, 76, 77], "concept_nam": [52, 68, 72, 73, 76, 77], "search_scor": [52, 72, 73, 76, 77], "levenshtein_scor": [52, 72, 73], "embedding_local_scor": 52, "embedding_global_scor": 52, "graph_scor": [52, 72, 73, 74], "ontology_local_scor": [52, 72, 73, 74], "ontology_global_scor": [52, 72, 73, 74], "embedding_keywords_scor": 52, "graph_keywords_scor": 52, "ontology_keywords_scor": 52, "mixed_scor": [52, 72, 73, 76], "consist": 52, "measur": 52, "degre": 52, "json_schema_extra": 52, "1196": 52, "9447807640350212": 52, "936190393844887": 52, "9806112066572416": 52, "7920787642145825": 52, "995049504950495": 52, "974893873592604": 52, "9821428571428572": 52, "12401488": 52, "triangl": 52, "6047569988500392": 52, "18117340257708767": 52, "5498335395955196": 52, "22692356368077668": 52, "30184919393927595": 52, "4680631523928115": 52, "3889476967863415": 52, "6666666666666666": 52, "18009831669894236": 52, "3392857142857143": 52, "13295107": 52, "transvers": 52, "geometri": 52, "7783132229139607": 52, "8541509524253893": 52, "7899500675092881": 52, "8158838242881319": 52, "079490218003065": 52, "2110192540065071": 52, "6477110513680882": 52, "8333333333333333": 52, "8540145985401459": 52, "7178571428571429": 52, "146689": 52, "earth": 52, "6191743554865394": 52, "3393292344705985": 52, "6058537722364034": 52, "32094309692256273": 52, "04560562055085982": 52, "5850789404910146": 52, "2747973601576835": 52, "0006414535135995178": 52, "18025826114750698": 52, "2222222222222222": 52, "475": 52, "152547": 52, "bisect": 52, "5829791653941659": 52, "6658021950254382": 52, "5916531383849596": 52, "6072448552560294": 52, "3652836360342975": 52, "2470772552749216": 52, "49403585288280044": 52, "6649784001191716": 52, "27142857142857146": 52, "161243": 52, "nine": 52, "5954070757052229": 52, "6252501137210749": 52, "6128662674658956": 52, "6809346631686672": 52, "23567484697484573": 52, "3974121105221985": 52, "5454425715474266": 52, "6234172501117234": 52, "5428571428571429": 52, "165487": 52, "world": 52, "5875702591903744": 52, "32915926499040604": 52, "5557247926738698": 52, "35937866385263295": 52, "018301492693509606": 52, "20854298868986648": 52, "35381073854308764": 52, "3324892000595859": 52, "1780815": 52, "6123892146782264": 52, "40341637127911656": 52, "7313486756137682": 52, "43983570252851467": 52, "6785714285714286": 52, "1896705": 52, "oscul": 52, "6001356168702854": 52, "6095596040570643": 52, "15095693713821154": 52, "44197078056376315": 52, "06785714285714284": 52, "1898401": 52, "arc": 52, "6206023872446591": 52, "45726985451624325": 52, "6214735523605726": 52, "5967180832515523": 52, "37885045617052326": 52, "09530697673156802": 52, "429472346018896": 52, "41496111506273836": 52, "6075750180441352": 52, "1975821": 52, "skew": 52, "6071866898797716": 52, "453132323677798": 52, "5926923831317541": 52, "6342079203068262": 52, "1467272460558672": 52, "4842714203388464": 52, "4997033279190881": 52, "4571726500819306": 52, "201359": 52, "squar": [52, 102], "6094673983855882": 52, "6228894106876862": 52, "1853365490872417": 52, "33646712232710085": 52, "4634098506722587": 52, "2035714285714286": 52, "22634860": 52, "6015345514255728": 52, "44397434138761116": 52, "6289329297461709": 52, "6463107906576082": 52, "5940970321127149": 52, "1325957938789834": 52, "47811753398436485": 52, "250265": 52, "rhumb": 52, "7314235936190492": 52, "5403307788136165": 52, "7146040614704057": 52, "7244902789723203": 52, "10852920758292811": 52, "36085995785542146": 52, "49088968517023296": 52, "5297660279561411": 52, "48877312914546234": 52, "4848520041529702": 52, "7678571428571428": 52, "31482": 52, "tangent": 52, "59976908308104": 52, "4963883113854736": 52, "1724878951919264": 52, "35549687067330726": 52, "3307757": 52, "simson": 52, "578947689005502": 52, "6270069103429565": 52, "013581124397822893": 52, "43210300146756936": 52, "462730": 52, "inscrib": 52, "768343013064605": 52, "7717801666974846": 52, "12482171404042144": 52, "6445516077439113": 52, "6622740540324344": 52, "44285714285714284": 52, "48082": 52, "great": 52, "6151678032679938": 52, "6194506424602977": 52, "5237975686048405": 52, "5752620110628913": 52, "40714285714285714": 52, "524003": 52, "intern": 52, "extern": 52, "9544700262181692": 52, "9547191776223249": 52, "06348267860292894": 52, "6012700464524801": 52, "8358244891138791": 52, "9464285714285714": 52, "5407025": 52, "7428783723631838": 52, "7502904601610197": 52, "006235350315249621": 52, "39303319759855243": 52, "6026876561381135": 52, "3928571428571429": 52, "6220": 52, "6044584589208712": 52, "6247087590356082": 52, "5495989056289238": 52, "6404968907479984": 52, "6107142857142858": 52, "664497": 52, "6220133585096995": 52, "6017217718876411": 52, "40095604092651027": 52, "06793369410635872": 52, "3948184056141364": 52, "76956": 52, "7548885234150651": 52, "8246343320198054": 52, "7571720795352108": 52, "8192570426095808": 52, "3076508249923096": 52, "5768412624599064": 52, "7030698606760027": 52, "8248175182481752": 52, "65": 52, "89246": 52, "curv": 52, "6058837846959582": 52, "6061010985898527": 52, "6010512105924976": 52, "009984282260938813": 52, "4660368744333562": 52, "91111": 52, "trisect": 52, "7222511927302219": 52, "7114737175075206": 52, "42053296186769257": 52, "5472899496445176": 52, "7163539488698042": 52, "6821428571428572": 52, "946975": 52, "8476721575861583": 52, "653131668312657": 52, "9162572314594017": 52, "9426016455778317": 52, "2862599599983249": 52, "7850418748754415": 52, "6514226203690341": 52, "9778406317665507": 52, "wikipag": 52, "global": 52, "local": [52, 92], "levenshtein": 52, "mix": [52, 102], "weight": [52, 69, 72, 76, 102], "wikify_text": 55, "wikify_keyword": 55, "keyword_list": 55, "interfac": [57, 72, 77], "common_util": 58, "make_sure_path_exist": 59, "file_at_the_end": 59, "full_perm": 59, "recurs": [59, 92], "folder": [59, 92], "thu": 59, "doesn": [59, 60], "t": [59, 60, 69, 72, 75, 85, 92], "filenam": [59, 64, 85], "permiss": 59, "chmod": 59, "777": 59, "newli": 59, "file_exist": 59, "file_path": [59, 64, 92], "check": [59, 69, 71], "write_text_fil": 59, "filename_with_path": 59, "write": [59, 92], "write_json_fil": 59, "d": [59, 82, 84], "read_text_fil": 59, "open": 59, "read": [59, 85, 92], "read_json_fil": 59, "format_datetime_for_mysql": 59, "dt": 59, "parse_mysql_datetim": 59, "get_current_datetim": 59, "current": [59, 87, 92], "datetim": [59, 87], "mysql": 59, "invert_dict": 59, "strtobool": 59, "val": 59, "convert": [59, 69, 84], "represent": [59, 60], "truth": 59, "y": [59, 102], "ye": 59, "f": [59, 88], "off": 59, "rais": 59, "valueerror": 59, "anyth": 59, "els": 59, "insensit": 59, "copy_file_within_fold": 59, "folder_nam": 59, "src_file": 59, "dest_fil": 59, "convert_list_to_text": 59, "str_or_list": 59, "convert_text_back_to_list": 59, "return_list": 59, "perceptual_hash_text": 60, "perceptu": [60, 92], "hash": [60, 92], "strong": [60, 84], "min_window_length": 60, "window": 60, "gram": 60, "max_window_length": 60, "maximum": [60, 71, 75, 77, 92, 102], "hash_len": 60, "md5_video_or_audio": 60, "input_filename_with_path": [60, 90, 91, 92], "md5": [60, 62, 79], "perceptual_hash_audio": 60, "max_length": [60, 71], "7200": 60, "decod": [60, 92], "both": [60, 68, 102], "perceptual_hash_imag": 60, "hash_siz": 60, "16": 60, "doe": [60, 69, 85], "compare_decoded_fingerprint": 60, "decoded_1": 60, "decoded_2": 60, "compar": [60, 71, 102], "fuzzi": 60, "ratio": [60, 68, 102], "compare_encoded_fingerprint": 60, "f1": 60, "f2": 60, "decoder_func": 60, "hex_to_hash": 60, "encod": [60, 72, 75, 84], "them": [60, 64, 71, 72, 76], "find_closest_fingerprint_from_list": 60, "target_fp": 60, "fp_list": 60, "token_list": 60, "date_list": 60, "strip_underscor": 60, "candid": 60, "highest": [60, 91], "whose": [60, 69, 102], "lower": 60, "block": [60, 68, 85, 88, 91], "quot": [60, 68, 91], "without": [60, 68, 88, 91, 102], "blank": [60, 68, 91, 102], "unind": [60, 68, 91, 102], "v": [60, 62, 71, 102], "trail": 60, "underscor": 60, "criterion": 60, "find_closest_fingerprint_for_list_from_list": 60, "find_closest_audio_fingerprint_from_list": 60, "find_closest_image_fingerprint_from_list": 60, "find_closest_text_fingerprint_from_list": 60, "md5_text": 60, "embedding_to_json": 62, "embedding_from_json": 62, "generate_embedding_text_token": 62, "get_text_token_count_using_model": 62, "model_token": 62, "embeddingmodel": 62, "get_devic": [62, 79], "load_model": [62, 79], "load_heavi": 62, "sentenc": [62, 75], "model_load": 62, "get_token": 62, "set_token": 62, "get_last_usag": [62, 79, 91], "unload_model": [62, 79, 91], "unload_period": [62, 79, 91], "10800": [62, 79], "unload": 62, "except": 62, "light": 62, "time": [62, 71, 80, 82, 92], "sinc": 62, "last": [62, 88], "heavi": 62, "qualifi": 62, "get_token_count": 62, "get_max_token": 62, "celery_config": 63, "delete_fil": 64, "delet": [64, 84], "create_symlink_between_path": 64, "old_path": 64, "new_path": 64, "symlink": 64, "old": 64, "real": 64, "new": [64, 68, 88, 90, 92], "videodbcachingmanag": 64, "initialize_databas": 64, "init_db": 64, "audiodbcachingmanag": 64, "slidedbcachingmanag": 64, "textdbcachingmanag": 64, "scrapingdbcachingmanag": 64, "get_details_using_origin": 64, "col": [64, 69], "column": [64, 68, 69, 72, 73, 74, 76, 77, 102], "embeddingdbcachingmanag": 64, "videoconfig": 64, "get_root_dir": 64, "get_image_dir": 64, "get_audio_dir": 64, "get_video_dir": 64, "get_transcript_dir": 64, "concat_file_path": 64, "subfold": 64, "concaten": 64, "root": [64, 92], "dir": 64, "generate_filepath": 64, "force_dir": 64, "particular": 64, "create_symlink": 64, "new_filenam": 64, "fingerprintparamet": 64, "load_valu": 64, "get_min_sim_text": 64, "get_min_sim_imag": 64, "get_min_sim_audio": 64, "get_min_sim_video": 64, "get_token_file_statu": 64, "file_manag": 64, "is_fingerprint": 64, "route_task": 65, "kwarg": [65, 69], "option": [65, 68, 69, 71], "kw": 65, "baseconfig": 65, "developmentconfig": 65, "get_set": 65, "create_celeri": 65, "get_celery_task": 65, "asyncresult": 65, "get_task_info": 65, "info": 65, "compute_all_graphs_from_scratch": 68, "data_to_use_dict": 68, "scratch": 68, "datafram": [68, 69, 72, 73, 74, 76, 77, 102], "matrix": [68, 69], "normalize_featur": 68, "l2": [68, 69], "norm": [68, 102], "dens": 68, "get_laplacian": 68, "laplacian": 68, "unnorm": 68, "adjac": [68, 69], "lil": 68, "spars": 68, "sum_laplacian": 68, "simpl": 68, "arithmetic_mean_laplacian": 68, "arithmet": [68, 102], "combine_laplacian": 68, "li": 68, "spec_embed_on_laplacian": 68, "seed": 68, "420": 68, "spectral": 68, "compon": [68, 72, 73], "combine_and_embed_laplacian": 68, "main_graph": 68, "n_dim": 68, "1000": 68, "combination_method": 68, "armean": 68, "dimens": 68, "perform_pca": 68, "n_compon": 68, "random_st": 68, "center_and_scal": 68, "pca": 68, "state": [68, 82], "dimension": 68, "reduct": 68, "precompute_clustering_metr": 68, "affin": [68, 102], "normalize_vector": 68, "perform_constrained_agglom": 68, "cosin": [68, 102], "linkag": 68, "full_comput": 68, "agglom": 68, "link": 68, "cannot": 68, "constraint": 68, "ndarrai": [68, 69], "ml": 68, "cl": 68, "return_model": 68, "well": [68, 88], "label": 68, "distanc": [68, 92, 102], "variance_ratio_ev": 68, "varianc": 68, "also": [68, 88], "known": 68, "calinski": 68, "harabasz": 68, "davies_bouldin_ev": 68, "davi": 68, "bouldin": 68, "cluster_using_embed": 68, "space": [68, 71, 75, 85], "group_clust": 68, "rows_and_col": 68, "precomputed_map": 68, "group": 68, "togeth": [68, 69], "becom": 68, "median": 68, "reassign_outli": 68, "cluster_and_reassign_outli": 68, "assign_to_categories_using_exist": 68, "category_concept": 68, "category_id_to_index": 68, "convert_cluster_labels_to_dict": 68, "cluster_label": 68, "concept_index_to_id": 68, "concept_index_to_nam": 68, "db_results_to_pandas_df": 69, "get_id_dict": 69, "make_adj_undirect": 69, "graph_adj": 69, "undirect": 69, "symmetr": 69, "derive_col_to_col_graph": 69, "orig_adj": 69, "get_col_to_col_dict": 69, "df": [69, 96, 103], "source_col": 69, "target_col": 69, "kei": [69, 77, 91, 102], "return_chosen_indic": 69, "base_list": 69, "remove_invalid_pair": 69, "l_main": 69, "l_secondary_1": 69, "l_secondary_2": 69, "ref_dict": 69, "appear": 69, "word": [69, 75, 92], "elimin": [69, 71], "against": 69, "l_secondari": 69, "secondari": 69, "thei": [69, 72, 75, 92], "create_graph_from_df": 69, "weight_col": 69, "col_dict": 69, "row_dict": 69, "pool_rows_and_col": 69, "make_symmetr": 69, "edg": [69, 71, 72, 73, 102], "turn": 69, "precomput": 69, "adj": 69, "pool": 69, "convert_to_csr_matrix": 69, "csr": 69, "to_ndarray_and_flatten": 69, "adjusted_exp": 69, "x": [69, 102], "overlap": 69, "adjusted_exp_slope_1_point": 69, "compute_averag": 69, "average_and_combin": 69, "s1": [69, 71], "s2": [69, 71], "l1": 69, "skip_empti": 69, "ontologydata": 69, "test_mod": 69, "load_data": 69, "load_ontology_concept_nam": 69, "load_ontology_categori": 69, "load_non_ontology_concept_nam": 69, "load_concept_concept_graphscor": 69, "load_category_categori": 69, "load_category_concept": 69, "load_anchor_page_dict": 69, "tabl": [69, 106], "relat": 69, "compute_category_anchors_using_refer": 69, "compute_symmetric_concept_concept_matrix": 69, "compute_precalculated_similarity_matric": 69, "matric": 69, "get_concept_concept_similar": 69, "concept_1_id": 69, "concept_2_id": 69, "get_concept_cluster_similar": 69, "get_cluster_cluster_similar": 69, "cluster_1_id": 69, "cluster_2_id": 69, "get_concept_category_similar": 69, "get_cluster_category_similar": 69, "get_category_category_similar": 69, "category_1_id": 69, "category_2_id": 69, "get_concept_closest_concept": 69, "get_concept_closest_cluster_of_categori": 69, "term": 69, "get_concept_closest_categori": 69, "adaptive_threshold": 69, "go": 69, "get_cluster_closest_categori": 69, "get_custom_cluster_closest_categori": 69, "get_category_closest_categori": 69, "As": 69, "compos": 69, "crossov": 69, "get_ontology_concept_names_t": 69, "concepts_to_keep": 69, "get_ontology_category_nam": 69, "get_ontology_category_info": 69, "cat_id": 69, "get_non_ontology_concept_nam": 69, "get_concept_concept_graphscore_t": 69, "get_category_to_categori": 69, "get_category_par": 69, "get_category_children": 69, "get_cluster_par": 69, "get_cluster_children": 69, "get_concept_parent_categori": 69, "get_concept_parent_clust": 69, "get_category_cluster_list": 69, "get_category_concept_list": 69, "get_cluster_concept_list": 69, "get_category_concept_t": 69, "get_category_cluster_t": 69, "get_category_anchor_pag": 69, "get_cluster_concept": 69, "get_concept_nam": 69, "get_test_concept_nam": 69, "get_test_category_concept": 69, "get_test_cluster_concept": 69, "get_root_categori": 69, "generate_tree_structur": 69, "generate_category_concept_dict": 69, "compare_str": 71, "string1": 71, "string2": 71, "arrai": 71, "first": [71, 85, 88, 92], "charact": 71, "find_consecutive_run": 71, "min_run": 71, "consecut": [71, 88], "run": [71, 82, 88], "sequenc": [71, 92], "k1": [71, 92], "k2": [71, 92], "find_edge_pattern": 71, "content_stack": 71, "flip_str": 71, "repeat": 71, "webpag": 71, "flip": 71, "footer": 71, "string_circular_shift": 71, "shift": 71, "circular": 71, "find_spac": 71, "everi": [71, 85, 92, 102], "shift_to_max_correl": 71, "correl": 71, "posit": [71, 72, 77], "largest": 71, "intersect": 71, "find_repeated_pattern": 71, "min_length": 71, "1024": 71, "everywher": 71, "within": 71, "substr": 71, "extract_text_from_url": 71, "request_head": 71, "tag_search_sequ": 71, "headless": 71, "browser": 71, "tag": [71, 84], "check_url": 71, "test_url": 71, "access": 71, "fulli": 71, "resolv": 71, "code": [71, 85, 91], "create_base_url_token": 71, "initialize_url": 71, "base_url": 71, "initi": 71, "protocol": 71, "http": 71, "correct": 71, "generate_sublink_token": 71, "base_token": 71, "reconstruct_data_dict": 71, "page_typ": 71, "reconstruct": 71, "precalcul": 71, "initialize_data_dict": 71, "fill": 71, "pagetyp": 71, "vacant": 71, "get_sublink": 71, "later": 71, "parse_page_typ": 71, "pars": [71, 84, 92], "process_all_sublink": 71, "modifi": 71, "conceptsgraph": [72, 73, 74, 76], "load_from_db": [72, 74], "get_ontology_concept": [72, 74], "add_graph_scor": [72, 74], "smooth": [72, 74, 76], "pd": [72, 73, 74, 76, 77, 102], "panda": [72, 73, 74, 76, 77, 87], "includ": [72, 74, 76, 88], "add_ontology_scor": [72, 74], "extract_keyword": [72, 75], "solv": [72, 75, 84], "problem": [72, 75, 84], "strip": [72, 75], "html": [72, 75, 84], "lowercas": [72, 75, 84], "nltk": [72, 75], "rake": [72, 75], "python": [72, 75], "join": [72, 75, 84], "p": [72, 75, 84], "Then": [72, 75], "crowd": [72, 75], "young": [72, 75], "boi": [72, 75], "re": [72, 75], "foolin": [72, 75], "around": [72, 75], "corner": [72, 75], "drunk": [72, 75], "dress": [72, 75], "best": [72, 75], "brown": [72, 75], "baggi": [72, 75], "platform": [72, 75], "sole": [72, 75], "don": [72, 75, 92], "give": [72, 75], "damn": [72, 75], "trumpet": [72, 75], "playin": [72, 75], "band": [72, 75], "ain": [72, 75], "call": [72, 75, 90], "rock": [72, 75], "roll": [72, 75], "keywords_list": [72, 77], "portion": [72, 77], "middl": [72, 77], "third": [72, 77], "searchrank": [72, 76, 77], "uniqu": [72, 76, 77, 102], "fallback": [72, 77], "compute_scor": [72, 76], "gather": [72, 76], "final": [72, 76, 88, 102], "x_score": [72, 76], "draw_ontologi": [72, 73], "neighbourhood": [72, 73], "tmp": [72, 73], "keywords_scor": [72, 73], "visualis": [72, 73, 94], "draw_graph": [72, 73], "below": [72, 73, 75, 87, 92], "out": [72, 73, 75], "connect": [72, 73, 90], "word_token": 75, "separ": 75, "you": [75, 84], "rake_extract": 75, "split_word": 75, "return_scor": 75, "auto": 75, "filter_past_tenses_and_adverb": 75, "unconstrain": 75, "split": 75, "retur": 75, "minim": 75, "ignor": 75, "past": 75, "tens": 75, "participl": 75, "adverb": 75, "compute_levenshtein_scor": 76, "compute_embedding_scor": 76, "compute_keywords_scor": 76, "compute_mixed_scor": 76, "aggregate_result": 76, "coef": 76, "filter_result": 76, "epsilon": [76, 96], "min_agreement_fract": 76, "criteria": 76, "specifi": [76, 102], "search_wikipedia_api": 77, "queri": 77, "search_elasticsearch": 77, "elasticserch": 77, "text_util": 78, "generate_src_tgt_dict": 79, "generate_translation_text_token": 79, "detect_text_languag": 79, "compute_slide_tfidf_scor": 79, "list_of_set": 79, "find_set_cov": 79, "find_best_slide_subset": 79, "slides_and_concept": 79, "prioriti": 79, "translationmodel": 79, "huggingfac": 79, "pysbd": 79, "breadcrumb": 80, "progress_bar": 80, "debug": [81, 85], "color": [81, 85], "time_color": 81, "grai": 81, "report": [81, 88], "outdent": 81, "progressbar": 82, "n_iter": 82, "bar_length": 82, "50": 82, "progress": 82, "bar": 82, "track": [82, 88, 92], "usag": [82, 88], "letter": 82, "b": 82, "c": [82, 84, 102], "pb": 82, "len": 82, "consum": [82, 88], "updat": 82, "25": 82, "00": 82, "75": 82, "100": 82, "print": [82, 84, 85, 87, 88], "iter": 82, "percentag": 82, "overwrit": 82, "ban": 82, "reset": [82, 85, 88], "increment": 82, "counter": 82, "reus": [82, 88], "io": 83, "htmlcleaner": 84, "htmlparser": 84, "shiver": 84, "dark": 84, "br": 84, "rain": 84, "park": 84, "meantim": 84, "feed": [84, 91], "get_data": 84, "handle_starttag": 84, "attr": 84, "handle_endtag": 84, "handle_data": 84, "u2018rain": 84, "u2019": 84, "lt": 84, "evalu": 85, "pref": 85, "x1b": 85, "0m": 85, "black": 85, "30m": 85, "blue": 85, "34m": 85, "cyan": 85, "36m": 85, "green": 85, "32m": 85, "magenta": 85, "35m": 85, "red": 85, "31m": 85, "white": 85, "37m": 85, "yellow": 85, "33m": 85, "cprint": 85, "is_bold": 85, "bold": 85, "pprint": 85, "inlin": 85, "only_first": 85, "pretti": 85, "preced": 85, "ellipsi": 85, "read_json": 85, "save_json": 85, "save": 85, "mkdir": 85, "dirnam": 85, "directori": 85, "date": 86, "stopwatch": 86, "2022": 87, "06": 87, "28": 87, "09": 87, "46": 87, "21": 87, "677968": 87, "rescal": 87, "min_dat": 87, "max_dat": 87, "seri": 87, "rang": [87, 102], "yyyi": 87, "mm": 87, "dd": 87, "add_year": 87, "n_year": 87, "sw": 88, "delta": 88, "284306764602661": 88, "t1": 88, "t2": 88, "yet": 88, "t3": 88, "609307289123535": 88, "849977970123291": 88, "660188913345337": 88, "preprocess": 88, "pre_tim": 88, "task_tim": 88, "postprocess": 88, "post_tim": 88, "total_tim": 88, "5176954220125477": 88, "tick": 88, "partial": 88, "furthermor": 88, "19": 88, "86": 88, "lap": 88, "74": 88, "11": 88, "66": 88, "45": 88, "checkpoint": 88, "finish": 88, "summari": 88, "googleocrmodel": 90, "establish_connect": 90, "lazili": 90, "successfulli": 90, "establish": 90, "perform_ocr": 90, "text_detect": 90, "document_text_detect": 90, "wait_for_ocr_result": 90, "image_object": 90, "dtd": 90, "retri": 90, "wait": 90, "td": 90, "document": [90, 92], "whispertranscriptionmodel": 91, "load_model_whisp": 91, "lazi": [91, 92], "43200": 91, "get_silence_threshold": 91, "detect_audio_segment_lang_whisp": 91, "sampl": [91, 92], "transcribe_audio_whisp": 91, "verbos": 91, "explicitli": 91, "lenient": 91, "affect": 91, "logprob": 91, "generate_random_token": 92, "get_file_s": 92, "retrieve_file_from_generic_url": 92, "output_filename_with_path": 92, "output_token": 92, "wget": 92, "retrieve_file_from_kaltura": 92, "retrieve_file_from_youtub": 92, "youtub": 92, "retrieve_file_from_url": 92, "is_kaltura": 92, "create_filename_using_url_format": 92, "perform_prob": 92, "probe": 92, "ffprobe": 92, "see": 92, "get_available_stream": 92, "perform_slow_audio_prob": 92, "slower": 92, "ffmpeg": 92, "generate_symbolic_token": 92, "symbol": 92, "itself": 92, "detect_audio_dur": 92, "ogg": 92, "input_token": 92, "generate_audio_token": 92, "extract_audio_from_video": 92, "extract_media_seg": 92, "extract_fram": 92, "output_folder_with_path": 92, "output_fold": 92, "generate_frame_sample_indic": 92, "input_folder_with_path": 92, "12": 92, "our": 92, "read_txt_gz_fil": 92, "txt": 92, "gz": 92, "write_txt_gz_fil": 92, "read_json_gz_fil": 92, "perform_tesseract_ocr": 92, "image_path": 92, "tesseract_ocr_or_get_cach": 92, "ocr_path": 92, "langaug": 92, "generate_img_and_ocr_paths_and_perform_tesseract_ocr": 92, "nlpmodel": 92, "load_nlp_model": 92, "nlp": 92, "get_word": 92, "valid_onli": 92, "get_text_word_vector": 92, "get_text_word_vector_using_word": 92, "get_cosine_sim": 92, "frame_ocr_dist": 92, "nlp_model": 92, "frame_hash_similar": 92, "compute_ocr_noise_level": 92, "frame_sample_indic": 92, "compute_ocr_threshold": 92, "distance_list": 92, "default_threshold": 92, "05": [92, 102], "subsequ": 92, "empti": 92, "check_ocr_and_hash_threshold": 92, "k_l": 92, "k_r": 92, "ocr_dist_threshold": 92, "hash_similarity_threshold": 92, "frame_ocr_transit": 92, "transit": 92, "binari": 92, "frame_format": 92, "leftmost": 92, "rightmost": 92, "distinct": 92, "compute_video_ocr_transit": 92, "hash_dist_threshold": 92, "keep_first": 92, "transitori": 92, "get_ocr_colnam": 92, "get_video_token_statu": 92, "get_image_token_statu": 92, "get_audio_token_statu": 92, "invest": 94, "aggregate_recent_past": 95, "check_unit": 95, "compute_fundraisers_unit": 95, "compute_investors_unit": 95, "compute_investors_units_2": 95, "compute_jaccard_index": 95, "concept_configur": 95, "create_investments_graph": 95, "detect_fundraisers_concept": 95, "toy_exampl": 95, "compute_year_coeffici": 96, "recent_past": 96, "rescale_scor": 96, "year": 96, "aggregate_year": 96, "groupby_column": [96, 103], "normalize_scor": 96, "score_column": 96, "01": 96, "show_trend": 97, "unit_id": 97, "unit_concept": 97, "show_matchmaking_list_view": 97, "investors_concepts_jaccard": 97, "investors_concept": 97, "unit_concept_id": 97, "show_matchmaking_chart_view": 97, "unit_investor": 97, "time_window": 97, "pageid": 102, "investorid": 102, "sqrt": 102, "sum_": 102, "o": 102, "henc": 102, "min_ratio": 102, "sourcepageid": 102, "targetpageid": 102, "product": 102, "ball": 102, "loop": 102, "normalise_graph": 102, "add": 102, "revers": 102, "vertex": 102, "associ": 102, "key_x": 102, "key_i": 102, "geometr": 102, "compute_affin": 102, "mix_x": 102, "mix_i": 102, "normalise_befor": 102, "euclidean": 102, "notic": 102, "faster": 102, "inf": 102, "typic": 102, "unus": 102, "u": 102, "equival": 102, "scalar": 102, "tanh": 102, "denot": 102, "get_fr": 103, "db": 103, "get_investors_fr": 103, "fr_id": 103, "get_frs_fundrais": 103, "get_fundraisers_concept": 103, "fundraiser_id": 103, "derive_yearly_data": 103, "date_column": 103, "amount_column": 103, "creation": 106, "build_prefix": 106, "1_old": 108, "2_new": 108, "3_slide": 108}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [53, 0, 0, "-", "celery"], [57, 0, 0, "-", "core"], [93, 0, 0, "-", "definitions"], [94, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_jobs"], [11, 0, 0, "-", "celery_tasks"], [21, 0, 0, "-", "common"], [29, 0, 0, "-", "main"], [30, 0, 0, "-", "routers"], [40, 0, 0, "-", "schemas"], [50, 0, 0, "-", "text"]], "graphai.api.celery_jobs": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "embedding"], [5, 0, 0, "-", "image"], [6, 0, 0, "-", "ontology"], [7, 0, 0, "-", "scraping"], [8, 0, 0, "-", "translation"], [9, 0, 0, "-", "video"], [10, 0, 0, "-", "voice"]], "graphai.api.celery_jobs.common": [[3, 1, 1, "", "direct_lookup_generic_job"]], "graphai.api.celery_jobs.embedding": [[4, 1, 1, "", "embedding_job"], [4, 1, 1, "", "fingerprint_compute_job"], [4, 1, 1, "", "fingerprint_job"], [4, 1, 1, "", "fingerprint_lookup_job"], [4, 1, 1, "", "get_embedding_text_fingerprint_chain_list"]], "graphai.api.celery_jobs.image": [[5, 1, 1, "", "fingerprint_job"], [5, 1, 1, "", "fingerprint_lookup_job"], [5, 1, 1, "", "ocr_job"]], "graphai.api.celery_jobs.ontology": [[6, 1, 1, "", "breakup_cluster_job"], [6, 1, 1, "", "category_children_job"], [6, 1, 1, "", "category_info_job"], [6, 1, 1, "", "category_parent_job"], [6, 1, 1, "", "cluster_children_job"], [6, 1, 1, "", "cluster_nearest_category_job"], [6, 1, 1, "", "cluster_parent_job"], [6, 1, 1, "", "concept_nearest_category_job"], [6, 1, 1, "", "concept_nearest_concept_job"], [6, 1, 1, "", "graph_distance_job"], [6, 1, 1, "", "recompute_clusters_job"], [6, 1, 1, "", "tree_job"]], "graphai.api.celery_jobs.scraping": [[7, 1, 1, "", "extract_content_job"], [7, 1, 1, "", "extract_sublinks_job"], [7, 1, 1, "", "sublink_lookup_job"]], "graphai.api.celery_jobs.translation": [[8, 1, 1, "", "detect_text_language_job"], [8, 1, 1, "", "fingerprint_compute_job"], [8, 1, 1, "", "fingerprint_job"], [8, 1, 1, "", "fingerprint_lookup_job"], [8, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [8, 1, 1, "", "translation_job"]], "graphai.api.celery_jobs.video": [[9, 1, 1, "", "detect_slides_job"], [9, 1, 1, "", "extract_audio_job"], [9, 1, 1, "", "fingerprint_job"], [9, 1, 1, "", "fingerprint_lookup_job"], [9, 1, 1, "", "get_audio_fingerprint_chain_list"], [9, 1, 1, "", "get_file_job"], [9, 1, 1, "", "get_slide_fingerprint_chain_list"], [9, 1, 1, "", "get_video_fingerprint_chain_list"], [9, 1, 1, "", "retrieve_url_job"]], "graphai.api.celery_jobs.voice": [[10, 1, 1, "", "detect_language_job"], [10, 1, 1, "", "fingerprint_job"], [10, 1, 1, "", "fingerprint_lookup_job"], [10, 1, 1, "", "get_audio_language_detection_task_chain"], [10, 1, 1, "", "language_lookup_job"], [10, 1, 1, "", "transcribe_job"]], "graphai.api.celery_tasks": [[12, 0, 0, "-", "common"], [13, 0, 0, "-", "completion"], [14, 0, 0, "-", "embedding"], [15, 0, 0, "-", "image"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "scraping"], [18, 0, 0, "-", "translation"], [19, 0, 0, "-", "video"], [20, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[12, 1, 1, "", "fingerprint_lookup_callback"], [12, 1, 1, "", "fingerprint_lookup_direct"], [12, 1, 1, "", "fingerprint_lookup_parallel"], [12, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [12, 1, 1, "", "format_api_results"], [12, 1, 1, "", "lookup_latest_allowed_date"]], "graphai.api.celery_tasks.embedding": [[14, 1, 1, "", "embed_text"], [14, 1, 1, "", "fingerprint_based_embedding_lookup"], [14, 1, 1, "", "insert_embedding_into_db"], [14, 1, 1, "", "token_based_embedding_lookup"]], "graphai.api.common": [[22, 0, 0, "-", "auth_utils"], [23, 0, 0, "-", "celery_tools"], [24, 0, 0, "-", "embedding"], [25, 0, 0, "-", "log"], [26, 0, 0, "-", "ontology"], [27, 0, 0, "-", "translation"], [28, 0, 0, "-", "video"]], "graphai.api.common.auth_utils": [[22, 2, 1, "", "Token"], [22, 2, 1, "", "TokenData"], [22, 2, 1, "", "User"], [22, 2, 1, "", "UserInDB"], [22, 1, 1, "", "authenticate_user"], [22, 1, 1, "", "generate_random_password_string"], [22, 1, 1, "", "get_password_hash"], [22, 1, 1, "", "get_ratelimit_values"], [22, 1, 1, "", "get_user"], [22, 1, 1, "", "get_user_ratelimit_overrides"], [22, 1, 1, "", "verify_password"]], "graphai.api.common.auth_utils.Token": [[22, 3, 1, "", "access_token"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "token_type"]], "graphai.api.common.auth_utils.TokenData": [[22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "scopes"], [22, 3, 1, "", "username"]], "graphai.api.common.auth_utils.User": [[22, 3, 1, "", "disabled"], [22, 3, 1, "", "email"], [22, 3, 1, "", "full_name"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "scopes"], [22, 3, 1, "", "username"]], "graphai.api.common.auth_utils.UserInDB": [[22, 3, 1, "", "hashed_password"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"]], "graphai.api.common.celery_tools": [[23, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[25, 1, 1, "", "log"]], "graphai.api.main": [[29, 1, 1, "", "lifespan"], [29, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[31, 0, 0, "-", "auth"], [32, 0, 0, "-", "completion"], [33, 0, 0, "-", "embedding"], [34, 0, 0, "-", "image"], [35, 0, 0, "-", "ontology"], [36, 0, 0, "-", "scraping"], [37, 0, 0, "-", "translation"], [38, 0, 0, "-", "video"], [39, 0, 0, "-", "voice"]], "graphai.api.routers.auth": [[31, 1, 1, "", "create_access_token"], [31, 1, 1, "", "extract_username_and_scopes"], [31, 1, 1, "", "get_active_user_dummy"], [31, 1, 1, "", "get_current_active_user"], [31, 1, 1, "", "get_current_user"], [31, 1, 1, "", "get_user_for_rate_limiter"], [31, 1, 1, "", "login_for_access_token"], [31, 1, 1, "", "read_users_me"]], "graphai.api.routers.completion": [[32, 1, 1, "", "choose_best_subset"]], "graphai.api.routers.embedding": [[33, 1, 1, "", "calculate_embedding_text_fingerprint"], [33, 1, 1, "", "calculate_embedding_text_fingerprint_status"], [33, 1, 1, "", "embed_text"], [33, 1, 1, "", "embed_text_status"]], "graphai.api.routers.image": [[34, 1, 1, "", "calculate_slide_fingerprint"], [34, 1, 1, "", "calculate_slide_fingerprint_status"], [34, 1, 1, "", "detect_ocr_language_status"], [34, 1, 1, "", "extract_text"], [34, 1, 1, "", "extract_text_status"]], "graphai.api.routers.ontology": [[35, 1, 1, "", "break_up_cluster"], [35, 1, 1, "", "cat_children"], [35, 1, 1, "", "cat_info"], [35, 1, 1, "", "cat_parent"], [35, 1, 1, "", "cluster_children"], [35, 1, 1, "", "cluster_parent"], [35, 1, 1, "", "compute_graph_cluster_nearest_category"], [35, 1, 1, "", "compute_graph_concept_nearest_category"], [35, 1, 1, "", "compute_graph_distance"], [35, 1, 1, "", "compute_graph_nearest_concept"], [35, 1, 1, "", "recompute_clusters"], [35, 1, 1, "", "recompute_clusters_status"], [35, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[36, 1, 1, "", "extract_page_content"], [36, 1, 1, "", "extract_page_content_status"], [36, 1, 1, "", "extract_sublinks"], [36, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.translation": [[37, 1, 1, "", "calculate_translation_text_fingerprint"], [37, 1, 1, "", "calculate_translation_text_fingerprint_status"], [37, 1, 1, "", "text_detect_language"], [37, 1, 1, "", "text_detect_language_status"], [37, 1, 1, "", "translate"], [37, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[38, 1, 1, "", "calculate_video_fingerprint"], [38, 1, 1, "", "calculate_video_fingerprint_status"], [38, 1, 1, "", "detect_slides"], [38, 1, 1, "", "detect_slides_status"], [38, 1, 1, "", "extract_audio"], [38, 1, 1, "", "extract_audio_status"], [38, 1, 1, "", "get_file"], [38, 1, 1, "", "get_retrieve_file_status"], [38, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[39, 1, 1, "", "calculate_audio_fingerprint"], [39, 1, 1, "", "calculate_audio_fingerprint_status"], [39, 1, 1, "", "detect_language"], [39, 1, 1, "", "detect_language_status"], [39, 1, 1, "", "transcribe"], [39, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[41, 0, 0, "-", "common"], [42, 0, 0, "-", "completion"], [43, 0, 0, "-", "embedding"], [44, 0, 0, "-", "image"], [45, 0, 0, "-", "ontology"], [46, 0, 0, "-", "scraping"], [47, 0, 0, "-", "translation"], [48, 0, 0, "-", "video"], [49, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[41, 2, 1, "", "FileRequest"], [41, 2, 1, "", "TaskIDResponse"], [41, 2, 1, "", "TaskStatusResponse"], [41, 2, 1, "", "TokenStatus"]], "graphai.api.schemas.common.FileRequest": [[41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"], [41, 3, 1, "", "task_id"], [41, 3, 1, "", "task_name"], [41, 3, 1, "", "task_result"], [41, 3, 1, "", "task_status"]], "graphai.api.schemas.common.TokenStatus": [[41, 3, 1, "", "active"], [41, 3, 1, "", "fingerprinted"], [41, 3, 1, "", "model_computed_fields"], [41, 3, 1, "", "model_config"], [41, 3, 1, "", "model_fields"]], "graphai.api.schemas.completion": [[42, 2, 1, "", "SlideConceptsMap"], [42, 2, 1, "", "SlideSubsetRequest"], [42, 2, 1, "", "SlideSubsetResponse"]], "graphai.api.schemas.completion.SlideConceptsMap": [[42, 3, 1, "", "concepts"], [42, 3, 1, "", "model_computed_fields"], [42, 3, 1, "", "model_config"], [42, 3, 1, "", "model_fields"], [42, 3, 1, "", "number"]], "graphai.api.schemas.completion.SlideSubsetRequest": [[42, 3, 1, "", "coverage"], [42, 3, 1, "", "min_freq"], [42, 3, 1, "", "model_computed_fields"], [42, 3, 1, "", "model_config"], [42, 3, 1, "", "model_fields"], [42, 3, 1, "", "slides"]], "graphai.api.schemas.completion.SlideSubsetResponse": [[42, 3, 1, "", "model_computed_fields"], [42, 3, 1, "", "model_config"], [42, 3, 1, "", "model_fields"], [42, 3, 1, "", "subset"]], "graphai.api.schemas.embedding": [[43, 2, 1, "", "EmbeddingFingerprintRequest"], [43, 2, 1, "", "EmbeddingRequest"], [43, 2, 1, "", "EmbeddingRequestBase"], [43, 2, 1, "", "EmbeddingResponse"], [43, 2, 1, "", "EmbeddingTaskResponse"]], "graphai.api.schemas.embedding.EmbeddingFingerprintRequest": [[43, 3, 1, "", "model_computed_fields"], [43, 3, 1, "", "model_config"], [43, 3, 1, "", "model_fields"], [43, 3, 1, "", "text"]], "graphai.api.schemas.embedding.EmbeddingRequest": [[43, 3, 1, "", "model_computed_fields"], [43, 3, 1, "", "model_config"], [43, 3, 1, "", "model_fields"], [43, 3, 1, "", "text"]], "graphai.api.schemas.embedding.EmbeddingRequestBase": [[43, 3, 1, "", "force"], [43, 3, 1, "", "model_computed_fields"], [43, 3, 1, "", "model_config"], [43, 3, 1, "", "model_fields"], [43, 3, 1, "", "model_type"]], "graphai.api.schemas.embedding.EmbeddingResponse": [[43, 3, 1, "", "model_computed_fields"], [43, 3, 1, "", "model_config"], [43, 3, 1, "", "model_fields"], [43, 3, 1, "", "task_result"]], "graphai.api.schemas.embedding.EmbeddingTaskResponse": [[43, 3, 1, "", "device"], [43, 3, 1, "", "fresh"], [43, 3, 1, "", "model_computed_fields"], [43, 3, 1, "", "model_config"], [43, 3, 1, "", "model_fields"], [43, 3, 1, "", "model_type"], [43, 3, 1, "", "result"], [43, 3, 1, "", "successful"], [43, 3, 1, "", "text_too_large"]], "graphai.api.schemas.image": [[44, 2, 1, "", "DetectOCRLanguageResponse"], [44, 2, 1, "", "DetectOCRLanguageTaskResponse"], [44, 2, 1, "", "ExtractTextRequest"], [44, 2, 1, "", "ExtractTextResponse"], [44, 2, 1, "", "ExtractTextTaskResponse"], [44, 2, 1, "", "ImageFingerprintRequest"], [44, 2, 1, "", "ImageFingerprintResponse"], [44, 2, 1, "", "ImageFingerprintTaskResponse"], [44, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[44, 3, 1, "", "fresh"], [44, 3, 1, "", "language"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[44, 3, 1, "", "force"], [44, 3, 1, "", "method"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[44, 3, 1, "", "fresh"], [44, 3, 1, "", "language"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "result"], [44, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[44, 3, 1, "", "force"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[44, 3, 1, "", "closest_token"], [44, 3, 1, "", "closest_token_origin"], [44, 3, 1, "", "fresh"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "result"], [44, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[44, 3, 1, "", "method"], [44, 3, 1, "", "model_computed_fields"], [44, 3, 1, "", "model_config"], [44, 3, 1, "", "model_fields"], [44, 3, 1, "", "text"]], "graphai.api.schemas.ontology": [[45, 2, 1, "", "BreakUpClusterRequest"], [45, 2, 1, "", "BreakUpClustersClusterNumberResponse"], [45, 2, 1, "", "BreakUpClustersResponse"], [45, 2, 1, "", "CategoryChildrenRequest"], [45, 2, 1, "", "CategoryInfoRequest"], [45, 2, 1, "", "CategoryInfoResponse"], [45, 2, 1, "", "CategoryParentResponse"], [45, 2, 1, "", "ClusterInfoRequest"], [45, 2, 1, "", "GraphClusterNearestCategoryRequest"], [45, 2, 1, "", "GraphClusterNearestCategoryResponse"], [45, 2, 1, "", "GraphConceptNearestCategoryRequest"], [45, 2, 1, "", "GraphConceptNearestCategoryResponse"], [45, 2, 1, "", "GraphDistanceRequest"], [45, 2, 1, "", "GraphDistanceResponse"], [45, 2, 1, "", "GraphNearestCategoryRequest"], [45, 2, 1, "", "GraphNearestConceptRequest"], [45, 2, 1, "", "GraphNearestConceptResponse"], [45, 2, 1, "", "NearestCategoryElement"], [45, 2, 1, "", "NearestCategoryElementWithClusters"], [45, 2, 1, "", "NearestClusterElement"], [45, 2, 1, "", "OneConceptResponseElement"], [45, 2, 1, "", "RecomputeClustersRequest"], [45, 2, 1, "", "RecomputeClustersResponse"], [45, 2, 1, "", "RecomputeClustersTaskResponse"], [45, 2, 1, "", "TreeChildrenResponse"], [45, 2, 1, "", "TreeParentResponse"], [45, 2, 1, "", "TreeResponse"], [45, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.BreakUpClusterRequest": [[45, 3, 1, "", "cluster_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse": [[45, 3, 1, "", "clusters"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.BreakUpClustersResponse": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "results"]], "graphai.api.schemas.ontology.CategoryChildrenRequest": [[45, 3, 1, "", "category_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.CategoryInfoRequest": [[45, 3, 1, "", "category_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"]], "graphai.api.schemas.ontology.CategoryInfoResponse": [[45, 3, 1, "", "category_id"], [45, 3, 1, "", "depth"], [45, 3, 1, "", "id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "name"]], "graphai.api.schemas.ontology.CategoryParentResponse": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "parent"]], "graphai.api.schemas.ontology.ClusterInfoRequest": [[45, 3, 1, "", "cluster_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse": [[45, 3, 1, "", "existing_label"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "parent_category"], [45, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "return_clusters"], [45, 3, 1, "", "src"]], "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse": [[45, 3, 1, "", "existing_label"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "parent_category"], [45, 3, 1, "", "scores"], [45, 3, 1, "", "valid"]], "graphai.api.schemas.ontology.GraphDistanceRequest": [[45, 3, 1, "", "avg"], [45, 3, 1, "", "coeffs"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "src"], [45, 3, 1, "", "src_type"], [45, 3, 1, "", "tgt"], [45, 3, 1, "", "tgt_type"]], "graphai.api.schemas.ontology.GraphDistanceResponse": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "sim"]], "graphai.api.schemas.ontology.GraphNearestCategoryRequest": [[45, 3, 1, "", "avg"], [45, 3, 1, "", "coeffs"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "top_down_search"], [45, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptRequest": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "src"], [45, 3, 1, "", "top_n"]], "graphai.api.schemas.ontology.GraphNearestConceptResponse": [[45, 3, 1, "", "closest"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "scores"]], "graphai.api.schemas.ontology.NearestCategoryElement": [[45, 3, 1, "", "category_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "rank"], [45, 3, 1, "", "score"]], "graphai.api.schemas.ontology.NearestCategoryElementWithClusters": [[45, 3, 1, "", "clusters"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"]], "graphai.api.schemas.ontology.NearestClusterElement": [[45, 3, 1, "", "cluster_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "rank"], [45, 3, 1, "", "score"]], "graphai.api.schemas.ontology.OneConceptResponseElement": [[45, 3, 1, "", "id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "name"]], "graphai.api.schemas.ontology.RecomputeClustersRequest": [[45, 3, 1, "", "min_n"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "n_clusters"]], "graphai.api.schemas.ontology.RecomputeClustersResponse": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.RecomputeClustersTaskResponse": [[45, 3, 1, "", "category_assignments"], [45, 3, 1, "", "impurity_count"], [45, 3, 1, "", "impurity_proportion"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "results"], [45, 3, 1, "", "successful"]], "graphai.api.schemas.ontology.TreeChildrenResponse": [[45, 3, 1, "", "child_type"], [45, 3, 1, "", "children"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"]], "graphai.api.schemas.ontology.TreeParentResponse": [[45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponse": [[45, 3, 1, "", "child_to_parent"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"]], "graphai.api.schemas.ontology.TreeResponseElem": [[45, 3, 1, "", "child_id"], [45, 3, 1, "", "model_computed_fields"], [45, 3, 1, "", "model_config"], [45, 3, 1, "", "model_fields"], [45, 3, 1, "", "parent_id"]], "graphai.api.schemas.scraping": [[46, 2, 1, "", "ExtractContentRequest"], [46, 2, 1, "", "ExtractContentResponse"], [46, 2, 1, "", "ExtractContentTaskResponse"], [46, 2, 1, "", "GetSublinksRequest"], [46, 2, 1, "", "GetSublinksResponse"], [46, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"], [46, 3, 1, "", "remove_headers"], [46, 3, 1, "", "remove_long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"], [46, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[46, 3, 1, "", "data"], [46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[46, 3, 1, "", "force"], [46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"], [46, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"], [46, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[46, 3, 1, "", "fresh"], [46, 3, 1, "", "model_computed_fields"], [46, 3, 1, "", "model_config"], [46, 3, 1, "", "model_fields"], [46, 3, 1, "", "status_msg"], [46, 3, 1, "", "sublinks"], [46, 3, 1, "", "successful"], [46, 3, 1, "", "token"], [46, 3, 1, "", "validated_url"]], "graphai.api.schemas.translation": [[47, 2, 1, "", "TextDetectLanguageRequest"], [47, 2, 1, "", "TextDetectLanguageResponse"], [47, 2, 1, "", "TextDetectLanguageTaskResponse"], [47, 2, 1, "", "TextFingerprintResponse"], [47, 2, 1, "", "TextFingerprintTaskResponse"], [47, 2, 1, "", "TranslationRequest"], [47, 2, 1, "", "TranslationResponse"], [47, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[47, 3, 1, "", "language"], [47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[47, 3, 1, "", "fresh"], [47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "result"], [47, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[47, 3, 1, "", "force"], [47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "source"], [47, 3, 1, "", "target"], [47, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[47, 3, 1, "", "device"], [47, 3, 1, "", "fresh"], [47, 3, 1, "", "model_computed_fields"], [47, 3, 1, "", "model_config"], [47, 3, 1, "", "model_fields"], [47, 3, 1, "", "result"], [47, 3, 1, "", "successful"], [47, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[48, 2, 1, "", "DetectSlidesRequest"], [48, 2, 1, "", "DetectSlidesResponse"], [48, 2, 1, "", "DetectSlidesTaskResponse"], [48, 2, 1, "", "ExtractAudioRequest"], [48, 2, 1, "", "ExtractAudioResponse"], [48, 2, 1, "", "ExtractAudioTaskResponse"], [48, 2, 1, "", "RetrieveURLRequest"], [48, 2, 1, "", "RetrieveURLResponse"], [48, 2, 1, "", "RetrieveURLResponseInner"], [48, 2, 1, "", "SlideTokenAndTimeStamp"], [48, 2, 1, "", "VideoFingerprintRequest"], [48, 2, 1, "", "VideoFingerprintResponse"], [48, 2, 1, "", "VideoFingerprintTaskResponse"], [48, 2, 1, "", "VideoTokenStatus"]], "graphai.api.schemas.video.DetectSlidesRequest": [[48, 3, 1, "", "force"], [48, 3, 1, "", "language"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "recalculate_cached"], [48, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[48, 3, 1, "", "fresh"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "slide_tokens"], [48, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[48, 3, 1, "", "force"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "recalculate_cached"], [48, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[48, 3, 1, "", "duration"], [48, 3, 1, "", "fresh"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "successful"], [48, 3, 1, "", "token"], [48, 3, 1, "", "token_status"]], "graphai.api.schemas.video.RetrieveURLRequest": [[48, 3, 1, "", "force"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "playlist"], [48, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[48, 3, 1, "", "fresh"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "successful"], [48, 3, 1, "", "token"], [48, 3, 1, "", "token_size"], [48, 3, 1, "", "token_status"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "timestamp"], [48, 3, 1, "", "token"], [48, 3, 1, "", "token_status"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[48, 3, 1, "", "force"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[48, 3, 1, "", "closest_token"], [48, 3, 1, "", "fresh"], [48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "result"], [48, 3, 1, "", "successful"]], "graphai.api.schemas.video.VideoTokenStatus": [[48, 3, 1, "", "model_computed_fields"], [48, 3, 1, "", "model_config"], [48, 3, 1, "", "model_fields"], [48, 3, 1, "", "streams"]], "graphai.api.schemas.voice": [[49, 2, 1, "", "AudioDetectLanguageRequest"], [49, 2, 1, "", "AudioDetectLanguageResponse"], [49, 2, 1, "", "AudioDetectLanguageTaskResponse"], [49, 2, 1, "", "AudioFingerprintRequest"], [49, 2, 1, "", "AudioFingerprintResponse"], [49, 2, 1, "", "AudioFingerprintTaskResponse"], [49, 2, 1, "", "AudioTranscriptionRequest"], [49, 2, 1, "", "AudioTranscriptionResponse"], [49, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[49, 3, 1, "", "force"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[49, 3, 1, "", "fresh"], [49, 3, 1, "", "language"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[49, 3, 1, "", "force"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[49, 3, 1, "", "closest_token"], [49, 3, 1, "", "closest_token_origin"], [49, 3, 1, "", "duration"], [49, 3, 1, "", "fresh"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "result"], [49, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[49, 3, 1, "", "force"], [49, 3, 1, "", "force_lang"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "strict"], [49, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[49, 3, 1, "", "fresh"], [49, 3, 1, "", "language"], [49, 3, 1, "", "model_computed_fields"], [49, 3, 1, "", "model_config"], [49, 3, 1, "", "model_fields"], [49, 3, 1, "", "subtitle_results"], [49, 3, 1, "", "transcript_results"]], "graphai.api.text": [[51, 0, 0, "-", "router"], [52, 0, 0, "-", "schemas"]], "graphai.api.text.router": [[51, 1, 1, "", "keywords"], [51, 1, 1, "", "wikify"], [51, 1, 1, "", "wikify_graph_svg"], [51, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.text.schemas": [[52, 2, 1, "", "KeywordsRequest"], [52, 2, 1, "", "WikifyFromKeywordsRequest"], [52, 2, 1, "", "WikifyFromRawTextRequest"], [52, 2, 1, "", "WikifyResponseElem"]], "graphai.api.text.schemas.KeywordsRequest": [[52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyFromKeywordsRequest": [[52, 3, 1, "", "keywords"], [52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"]], "graphai.api.text.schemas.WikifyFromRawTextRequest": [[52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "raw_text"]], "graphai.api.text.schemas.WikifyResponseElem": [[52, 3, 1, "", "concept_id"], [52, 3, 1, "", "concept_name"], [52, 3, 1, "", "embedding_global_score"], [52, 3, 1, "", "embedding_keywords_score"], [52, 3, 1, "", "embedding_local_score"], [52, 3, 1, "", "graph_keywords_score"], [52, 3, 1, "", "graph_score"], [52, 3, 1, "", "levenshtein_score"], [52, 3, 1, "", "mixed_score"], [52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "ontology_global_score"], [52, 3, 1, "", "ontology_keywords_score"], [52, 3, 1, "", "ontology_local_score"], [52, 3, 1, "", "search_score"]], "graphai.celery": [[54, 0, 0, "-", "text"]], "graphai.celery.text": [[55, 0, 0, "-", "jobs"], [56, 0, 0, "-", "tasks"]], "graphai.celery.text.jobs": [[55, 1, 1, "", "keywords"], [55, 1, 1, "", "wikify_graph_svg"], [55, 1, 1, "", "wikify_keywords"], [55, 1, 1, "", "wikify_ontology_svg"], [55, 1, 1, "", "wikify_text"]], "graphai.core": [[58, 0, 0, "-", "common"], [61, 0, 0, "-", "embedding"], [63, 0, 0, "-", "interfaces"], [67, 0, 0, "-", "ontology"], [70, 0, 0, "-", "scraping"], [72, 0, 0, "-", "text"], [78, 0, 0, "-", "translation"], [80, 0, 0, "-", "utils"], [89, 0, 0, "-", "video"]], "graphai.core.common": [[59, 0, 0, "-", "common_utils"], [60, 0, 0, "-", "fingerprinting"]], "graphai.core.common.common_utils": [[59, 1, 1, "", "convert_list_to_text"], [59, 1, 1, "", "convert_text_back_to_list"], [59, 1, 1, "", "copy_file_within_folder"], [59, 1, 1, "", "file_exists"], [59, 1, 1, "", "format_datetime_for_mysql"], [59, 1, 1, "", "get_current_datetime"], [59, 1, 1, "", "invert_dict"], [59, 1, 1, "", "make_sure_path_exists"], [59, 1, 1, "", "parse_mysql_datetime"], [59, 1, 1, "", "read_json_file"], [59, 1, 1, "", "read_text_file"], [59, 1, 1, "", "strtobool"], [59, 1, 1, "", "write_json_file"], [59, 1, 1, "", "write_text_file"]], "graphai.core.common.fingerprinting": [[60, 1, 1, "", "compare_decoded_fingerprints"], [60, 1, 1, "", "compare_encoded_fingerprints"], [60, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [60, 1, 1, "", "find_closest_fingerprint_for_list_from_list"], [60, 1, 1, "", "find_closest_fingerprint_from_list"], [60, 1, 1, "", "find_closest_image_fingerprint_from_list"], [60, 1, 1, "", "find_closest_text_fingerprint_from_list"], [60, 1, 1, "", "md5_text"], [60, 1, 1, "", "md5_video_or_audio"], [60, 1, 1, "", "perceptual_hash_audio"], [60, 1, 1, "", "perceptual_hash_image"], [60, 1, 1, "", "perceptual_hash_text"]], "graphai.core.embedding": [[62, 0, 0, "-", "embedding"]], "graphai.core.embedding.embedding": [[62, 2, 1, "", "EmbeddingModels"], [62, 1, 1, "", "embedding_from_json"], [62, 1, 1, "", "embedding_to_json"], [62, 1, 1, "", "generate_embedding_text_token"], [62, 1, 1, "", "get_text_token_count_using_model"]], "graphai.core.embedding.embedding.EmbeddingModels": [[62, 4, 1, "", "embed"], [62, 4, 1, "", "get_device"], [62, 4, 1, "", "get_last_usage"], [62, 4, 1, "", "get_max_tokens"], [62, 4, 1, "", "get_token_count"], [62, 4, 1, "", "get_tokenizer"], [62, 4, 1, "", "load_model"], [62, 4, 1, "", "load_models"], [62, 4, 1, "", "model_loaded"], [62, 4, 1, "", "set_tokenizer"], [62, 4, 1, "", "unload_model"]], "graphai.core.interfaces": [[64, 0, 0, "-", "caching"], [65, 0, 0, "-", "celery_config"], [66, 0, 0, "-", "config"]], "graphai.core.interfaces.caching": [[64, 2, 1, "", "AudioDBCachingManager"], [64, 2, 1, "", "EmbeddingDBCachingManager"], [64, 2, 1, "", "FingerprintParameters"], [64, 2, 1, "", "ScrapingDBCachingManager"], [64, 2, 1, "", "SlideDBCachingManager"], [64, 2, 1, "", "TextDBCachingManager"], [64, 2, 1, "", "VideoConfig"], [64, 2, 1, "", "VideoDBCachingManager"], [64, 1, 1, "", "create_symlink_between_paths"], [64, 1, 1, "", "delete_file"], [64, 1, 1, "", "get_token_file_status"], [64, 1, 1, "", "is_fingerprinted"]], "graphai.core.interfaces.caching.AudioDBCachingManager": [[64, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.EmbeddingDBCachingManager": [[64, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.FingerprintParameters": [[64, 4, 1, "", "get_min_sim_audio"], [64, 4, 1, "", "get_min_sim_image"], [64, 4, 1, "", "get_min_sim_text"], [64, 4, 1, "", "get_min_sim_video"], [64, 4, 1, "", "load_values"]], "graphai.core.interfaces.caching.ScrapingDBCachingManager": [[64, 4, 1, "", "get_details_using_origin"], [64, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.SlideDBCachingManager": [[64, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.TextDBCachingManager": [[64, 4, 1, "", "init_db"]], "graphai.core.interfaces.caching.VideoConfig": [[64, 4, 1, "", "concat_file_path"], [64, 4, 1, "", "create_symlink"], [64, 4, 1, "", "generate_filepath"], [64, 4, 1, "", "get_audio_dir"], [64, 4, 1, "", "get_image_dir"], [64, 4, 1, "", "get_root_dir"], [64, 4, 1, "", "get_transcript_dir"], [64, 4, 1, "", "get_video_dir"]], "graphai.core.interfaces.caching.VideoDBCachingManager": [[64, 4, 1, "", "init_db"]], "graphai.core.interfaces.celery_config": [[65, 2, 1, "", "BaseConfig"], [65, 2, 1, "", "DevelopmentConfig"], [65, 1, 1, "", "create_celery"], [65, 1, 1, "", "get_celery_task"], [65, 1, 1, "", "get_settings"], [65, 1, 1, "", "get_task_info"], [65, 1, 1, "", "route_task"]], "graphai.core.ontology": [[68, 0, 0, "-", "clustering"], [69, 0, 0, "-", "data"]], "graphai.core.ontology.clustering": [[68, 1, 1, "", "arithmetic_mean_laplacians"], [68, 1, 1, "", "assign_to_categories_using_existing"], [68, 1, 1, "", "cluster_and_reassign_outliers"], [68, 1, 1, "", "cluster_using_embedding"], [68, 1, 1, "", "combine_and_embed_laplacian"], [68, 1, 1, "", "combine_laplacians"], [68, 1, 1, "", "compute_all_graphs_from_scratch"], [68, 1, 1, "", "convert_cluster_labels_to_dict"], [68, 1, 1, "", "davies_bouldin_eval"], [68, 1, 1, "", "get_laplacian"], [68, 1, 1, "", "group_clustered"], [68, 1, 1, "", "normalize_features"], [68, 1, 1, "", "perform_PCA"], [68, 1, 1, "", "perform_constrained_agglomerative"], [68, 1, 1, "", "precompute_clustering_metric"], [68, 1, 1, "", "reassign_outliers"], [68, 1, 1, "", "spec_embed_on_laplacian"], [68, 1, 1, "", "sum_laplacians"], [68, 1, 1, "", "variance_ratio_eval"]], "graphai.core.ontology.data": [[69, 2, 1, "", "OntologyData"], [69, 1, 1, "", "adjusted_exp"], [69, 1, 1, "", "adjusted_exp_slope_1_point"], [69, 1, 1, "", "average_and_combine"], [69, 1, 1, "", "compute_average"], [69, 1, 1, "", "convert_to_csr_matrix"], [69, 1, 1, "", "create_graph_from_df"], [69, 1, 1, "", "db_results_to_pandas_df"], [69, 1, 1, "", "derive_col_to_col_graph"], [69, 1, 1, "", "get_col_to_col_dict"], [69, 1, 1, "", "get_id_dict"], [69, 1, 1, "", "make_adj_undirected"], [69, 1, 1, "", "remove_invalid_pairs"], [69, 1, 1, "", "return_chosen_indices"], [69, 1, 1, "", "to_ndarray_and_flatten"]], "graphai.core.ontology.data.OntologyData": [[69, 4, 1, "", "compute_category_anchors_using_references"], [69, 4, 1, "", "compute_precalculated_similarity_matrices"], [69, 4, 1, "", "compute_symmetric_concept_concept_matrix"], [69, 4, 1, "", "generate_category_concept_dict"], [69, 4, 1, "", "generate_tree_structure"], [69, 4, 1, "", "get_category_anchor_pages"], [69, 4, 1, "", "get_category_category_similarity"], [69, 4, 1, "", "get_category_children"], [69, 4, 1, "", "get_category_closest_category"], [69, 4, 1, "", "get_category_cluster_list"], [69, 4, 1, "", "get_category_cluster_table"], [69, 4, 1, "", "get_category_concept_list"], [69, 4, 1, "", "get_category_concept_table"], [69, 4, 1, "", "get_category_parent"], [69, 4, 1, "", "get_category_to_category"], [69, 4, 1, "", "get_cluster_category_similarity"], [69, 4, 1, "", "get_cluster_children"], [69, 4, 1, "", "get_cluster_closest_category"], [69, 4, 1, "", "get_cluster_cluster_similarity"], [69, 4, 1, "", "get_cluster_concept_list"], [69, 4, 1, "", "get_cluster_concepts"], [69, 4, 1, "", "get_cluster_parent"], [69, 4, 1, "", "get_concept_category_similarity"], [69, 4, 1, "", "get_concept_closest_category"], [69, 4, 1, "", "get_concept_closest_cluster_of_category"], [69, 4, 1, "", "get_concept_closest_concept"], [69, 4, 1, "", "get_concept_cluster_similarity"], [69, 4, 1, "", "get_concept_concept_graphscore_table"], [69, 4, 1, "", "get_concept_concept_similarity"], [69, 4, 1, "", "get_concept_name"], [69, 4, 1, "", "get_concept_parent_category"], [69, 4, 1, "", "get_concept_parent_cluster"], [69, 4, 1, "", "get_custom_cluster_closest_category"], [69, 4, 1, "", "get_non_ontology_concept_names"], [69, 4, 1, "", "get_ontology_category_info"], [69, 4, 1, "", "get_ontology_category_names"], [69, 4, 1, "", "get_ontology_concept_names_table"], [69, 4, 1, "", "get_root_category"], [69, 4, 1, "", "get_test_category_concept"], [69, 4, 1, "", "get_test_cluster_concept"], [69, 4, 1, "", "get_test_concept_names"], [69, 4, 1, "", "load_anchor_page_dict"], [69, 4, 1, "", "load_category_category"], [69, 4, 1, "", "load_category_concept"], [69, 4, 1, "", "load_concept_concept_graphscore"], [69, 4, 1, "", "load_data"], [69, 4, 1, "", "load_non_ontology_concept_names"], [69, 4, 1, "", "load_ontology_categories"], [69, 4, 1, "", "load_ontology_concept_names"]], "graphai.core.scraping": [[71, 0, 0, "-", "scraping"]], "graphai.core.scraping.scraping": [[71, 1, 1, "", "check_url"], [71, 1, 1, "", "compare_strings"], [71, 1, 1, "", "create_base_url_token"], [71, 1, 1, "", "extract_text_from_url"], [71, 1, 1, "", "find_consecutive_runs"], [71, 1, 1, "", "find_edge_patterns"], [71, 1, 1, "", "find_repeated_patterns"], [71, 1, 1, "", "find_spaces"], [71, 1, 1, "", "generate_sublink_token"], [71, 1, 1, "", "get_sublinks"], [71, 1, 1, "", "initialize_data_dict"], [71, 1, 1, "", "initialize_url"], [71, 1, 1, "", "parse_page_type"], [71, 1, 1, "", "process_all_sublinks"], [71, 1, 1, "", "reconstruct_data_dict"], [71, 1, 1, "", "remove_headers"], [71, 1, 1, "", "remove_long_patterns"], [71, 1, 1, "", "shift_to_max_correlation"], [71, 1, 1, "", "string_circular_shift"]], "graphai.core.text": [[72, 2, 1, "", "ConceptsGraph"], [72, 1, 1, "", "compute_scores"], [73, 0, 0, "-", "draw"], [72, 1, 1, "", "draw_graph"], [72, 1, 1, "", "draw_ontology"], [72, 1, 1, "", "extract_keywords"], [74, 0, 0, "-", "graph"], [75, 0, 0, "-", "keywords"], [76, 0, 0, "-", "scores"], [77, 0, 0, "-", "wikisearch"]], "graphai.core.text.ConceptsGraph": [[72, 4, 1, "", "add_graph_score"], [72, 4, 1, "", "add_ontology_scores"], [72, 4, 1, "", "get_ontology_concepts"], [72, 4, 1, "", "load_from_db"]], "graphai.core.text.draw": [[73, 1, 1, "", "draw_graph"], [73, 1, 1, "", "draw_ontology"]], "graphai.core.text.graph": [[74, 2, 1, "", "ConceptsGraph"]], "graphai.core.text.graph.ConceptsGraph": [[74, 4, 1, "", "add_graph_score"], [74, 4, 1, "", "add_ontology_scores"], [74, 4, 1, "", "get_ontology_concepts"], [74, 4, 1, "", "load_from_db"]], "graphai.core.text.keywords": [[75, 1, 1, "", "extract_keywords"], [75, 1, 1, "", "rake_extract"], [75, 1, 1, "", "word_tokens"]], "graphai.core.text.scores": [[76, 1, 1, "", "aggregate_results"], [76, 1, 1, "", "compute_embedding_scores"], [76, 1, 1, "", "compute_keywords_scores"], [76, 1, 1, "", "compute_levenshtein_score"], [76, 1, 1, "", "compute_mixed_score"], [76, 1, 1, "", "compute_scores"], [76, 1, 1, "", "filter_results"]], "graphai.core.text.wikisearch": [[77, 1, 1, "", "search_elasticsearch"], [77, 1, 1, "", "search_wikipedia_api"], [77, 1, 1, "", "wikisearch"]], "graphai.core.translation": [[79, 0, 0, "-", "text_utils"]], "graphai.core.translation.text_utils": [[79, 2, 1, "", "TranslationModels"], [79, 1, 1, "", "compute_slide_tfidf_scores"], [79, 1, 1, "", "detect_text_language"], [79, 1, 1, "", "find_best_slide_subset"], [79, 1, 1, "", "find_set_cover"], [79, 1, 1, "", "generate_src_tgt_dict"], [79, 1, 1, "", "generate_translation_text_token"]], "graphai.core.translation.text_utils.TranslationModels": [[79, 4, 1, "", "get_device"], [79, 4, 1, "", "get_last_usage"], [79, 4, 1, "", "load_models"], [79, 4, 1, "", "translate"], [79, 4, 1, "", "unload_model"]], "graphai.core.utils": [[81, 0, 0, "-", "breadcrumb"], [82, 0, 0, "-", "progress_bar"], [83, 0, 0, "-", "text"], [86, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[81, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[81, 4, 1, "", "indent"], [81, 4, 1, "", "log"], [81, 4, 1, "", "outdent"], [81, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[82, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[82, 4, 1, "", "reset"], [82, 4, 1, "", "update"]], "graphai.core.utils.text": [[84, 0, 0, "-", "clean"], [85, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[84, 2, 1, "", "HTMLCleaner"], [84, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[84, 4, 1, "", "get_data"], [84, 4, 1, "", "handle_data"], [84, 4, 1, "", "handle_endtag"], [84, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[85, 2, 1, "", "Colors"], [85, 1, 1, "", "cprint"], [85, 1, 1, "", "log"], [85, 1, 1, "", "mkdir"], [85, 1, 1, "", "pprint"], [85, 1, 1, "", "read_json"], [85, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[85, 3, 1, "", "codes"], [85, 3, 1, "", "pref"], [85, 3, 1, "", "reset"]], "graphai.core.utils.time": [[87, 0, 0, "-", "date"], [88, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[87, 1, 1, "", "add_years"], [87, 1, 1, "", "now"], [87, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[88, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[88, 4, 1, "", "delta"], [88, 4, 1, "", "report"], [88, 4, 1, "", "reset"], [88, 4, 1, "", "tick"], [88, 4, 1, "", "total"]], "graphai.core.video": [[90, 0, 0, "-", "ocr"], [91, 0, 0, "-", "transcribe"], [92, 0, 0, "-", "video"]], "graphai.core.video.ocr": [[90, 2, 1, "", "GoogleOCRModel"]], "graphai.core.video.ocr.GoogleOCRModel": [[90, 4, 1, "", "establish_connection"], [90, 4, 1, "", "perform_ocr"], [90, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.video.transcribe": [[91, 2, 1, "", "WhisperTranscriptionModel"]], "graphai.core.video.transcribe.WhisperTranscriptionModel": [[91, 4, 1, "", "detect_audio_segment_lang_whisper"], [91, 4, 1, "", "get_last_usage"], [91, 4, 1, "", "get_silence_thresholds"], [91, 4, 1, "", "load_model_whisper"], [91, 4, 1, "", "transcribe_audio_whisper"], [91, 4, 1, "", "unload_model"]], "graphai.core.video.video": [[92, 2, 1, "", "NLPModels"], [92, 1, 1, "", "check_ocr_and_hash_thresholds"], [92, 1, 1, "", "compute_ocr_noise_level"], [92, 1, 1, "", "compute_ocr_threshold"], [92, 1, 1, "", "compute_video_ocr_transitions"], [92, 1, 1, "", "create_filename_using_url_format"], [92, 1, 1, "", "detect_audio_duration"], [92, 1, 1, "", "extract_audio_from_video"], [92, 1, 1, "", "extract_frames"], [92, 1, 1, "", "extract_media_segment"], [92, 1, 1, "", "frame_hash_similarity"], [92, 1, 1, "", "frame_ocr_distance"], [92, 1, 1, "", "frame_ocr_transition"], [92, 1, 1, "", "generate_audio_token"], [92, 1, 1, "", "generate_frame_sample_indices"], [92, 1, 1, "", "generate_img_and_ocr_paths_and_perform_tesseract_ocr"], [92, 1, 1, "", "generate_random_token"], [92, 1, 1, "", "generate_symbolic_token"], [92, 1, 1, "", "get_audio_token_status"], [92, 1, 1, "", "get_available_streams"], [92, 1, 1, "", "get_cosine_sim"], [92, 1, 1, "", "get_file_size"], [92, 1, 1, "", "get_image_token_status"], [92, 1, 1, "", "get_ocr_colnames"], [92, 1, 1, "", "get_video_token_status"], [92, 1, 1, "", "perform_probe"], [92, 1, 1, "", "perform_slow_audio_probe"], [92, 1, 1, "", "perform_tesseract_ocr"], [92, 1, 1, "", "read_json_gz_file"], [92, 1, 1, "", "read_txt_gz_file"], [92, 1, 1, "", "retrieve_file_from_generic_url"], [92, 1, 1, "", "retrieve_file_from_kaltura"], [92, 1, 1, "", "retrieve_file_from_url"], [92, 1, 1, "", "retrieve_file_from_youtube"], [92, 1, 1, "", "tesseract_ocr_or_get_cached"], [92, 1, 1, "", "write_txt_gz_file"]], "graphai.core.video.video.NLPModels": [[92, 4, 1, "", "get_text_word_vector"], [92, 4, 1, "", "get_text_word_vector_using_words"], [92, 4, 1, "", "get_words"], [92, 4, 1, "", "load_nlp_models"]], "graphai.pipelines": [[95, 0, 0, "-", "investment"], [108, 0, 0, "-", "validation"], [112, 0, 0, "-", "visualisation"]], "graphai.pipelines.investment": [[96, 0, 0, "-", "aggregate_recent_past"], [97, 0, 0, "-", "check_unit"], [98, 0, 0, "-", "compute_fundraisers_units"], [99, 0, 0, "-", "compute_investors_units"], [100, 0, 0, "-", "compute_investors_units_2"], [101, 0, 0, "-", "compute_jaccard_index"], [102, 0, 0, "-", "concept_configuration"], [103, 0, 0, "-", "create_investments_graph"], [104, 0, 0, "-", "detect_fundraisers_concepts"], [105, 0, 0, "-", "main"], [106, 0, 0, "-", "parameters"], [107, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[96, 1, 1, "", "aggregate_recent_past"], [96, 1, 1, "", "aggregate_years"], [96, 1, 1, "", "compute_year_coefficients"], [96, 1, 1, "", "normalize_scores"], [96, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[97, 1, 1, "", "main"], [97, 1, 1, "", "show_matchmaking_chart_view"], [97, 1, 1, "", "show_matchmaking_list_view"], [97, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[98, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[99, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[100, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[101, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[102, 1, 1, "", "combine"], [102, 1, 1, "", "compute_affinities"], [102, 1, 1, "", "mix"], [102, 1, 1, "", "norm"], [102, 1, 1, "", "normalise"], [102, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[103, 1, 1, "", "create_investments_graph"], [103, 1, 1, "", "derive_yearly_data"], [103, 1, 1, "", "get_frs"], [103, 1, 1, "", "get_frs_fundraisers"], [103, 1, 1, "", "get_fundraisers_concepts"], [103, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[104, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[105, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[106, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[107, 1, 1, "", "base"], [107, 1, 1, "", "complete"], [107, 1, 1, "", "path"], [107, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "packag": [0, 1, 2, 11, 21, 30, 40, 50, 53, 54, 57, 58, 61, 63, 67, 70, 72, 78, 80, 83, 86, 89, 94, 95, 108, 112], "subpackag": [0, 1, 53, 57, 80, 94], "submodul": [0, 1, 2, 11, 21, 30, 40, 50, 54, 58, 61, 63, 67, 70, 72, 78, 80, 83, 86, 89, 95, 108, 112], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], "celery_job": [2, 3, 4, 5, 6, 7, 8, 9, 10], "common": [3, 12, 21, 22, 23, 24, 25, 26, 27, 28, 41, 58, 59, 60], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 59, 60, 62, 64, 65, 66, 68, 69, 71, 73, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116], "embed": [4, 14, 24, 33, 43, 61, 62], "imag": [5, 15, 34, 44], "ontologi": [6, 16, 26, 35, 45, 67, 68, 69], "scrape": [7, 17, 36, 46, 70, 71], "translat": [8, 18, 27, 37, 47, 78, 79], "video": [9, 19, 28, 38, 48, 89, 90, 91, 92], "voic": [10, 20, 39, 49], "celery_task": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "complet": [13, 32, 42], "auth_util": 22, "celery_tool": 23, "log": 25, "main": [29, 105], "router": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51], "auth": 31, "schema": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52], "text": [50, 51, 52, 54, 55, 56, 72, 73, 74, 75, 76, 77, 83, 84, 85], "celeri": [53, 54, 55, 56], "job": 55, "task": 56, "core": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "common_util": 59, "fingerprint": 60, "interfac": [63, 64, 65, 66], "cach": 64, "celery_config": 65, "config": 66, "cluster": 68, "data": 69, "draw": 73, "graph": [74, 113, 114, 115, 116], "keyword": 75, "score": 76, "wikisearch": 77, "text_util": 79, "util": [80, 81, 82, 83, 84, 85, 86, 87, 88], "breadcrumb": 81, "progress_bar": 82, "clean": 84, "io": 85, "time": [86, 87, 88], "date": 87, "stopwatch": 88, "ocr": 90, "transcrib": 91, "definit": 93, "pipelin": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "invest": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "aggregate_recent_past": 96, "check_unit": 97, "compute_fundraisers_unit": 98, "compute_investors_unit": 99, "compute_investors_units_2": 100, "compute_jaccard_index": 101, "concept_configur": 102, "create_investments_graph": 103, "detect_fundraisers_concept": 104, "paramet": 106, "toy_exampl": 107, "valid": [108, 109, 110, 111], "1_old": 109, "2_new": 110, "3_slide": 111, "visualis": [112, 113, 114, 115, 116], "startup": [113, 114, 115, 116], "2": 114, "3": 115, "4": 116}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [53, "subpackages"], [57, "subpackages"], [80, "subpackages"], [94, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [11, "submodules"], [21, "submodules"], [30, "submodules"], [40, "submodules"], [50, "submodules"], [54, "submodules"], [58, "submodules"], [61, "submodules"], [63, "submodules"], [67, "submodules"], [70, "submodules"], [72, "submodules"], [78, "submodules"], [80, "submodules"], [83, "submodules"], [86, "submodules"], [89, "submodules"], [95, "submodules"], [108, "submodules"], [112, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_jobs package": [[2, "module-graphai.api.celery_jobs"]], "graphai.api.celery_jobs.common module": [[3, "module-graphai.api.celery_jobs.common"]], "graphai.api.celery_jobs.embedding module": [[4, "module-graphai.api.celery_jobs.embedding"]], "graphai.api.celery_jobs.image module": [[5, "module-graphai.api.celery_jobs.image"]], "graphai.api.celery_jobs.ontology module": [[6, "module-graphai.api.celery_jobs.ontology"]], "graphai.api.celery_jobs.scraping module": [[7, "module-graphai.api.celery_jobs.scraping"]], "graphai.api.celery_jobs.translation module": [[8, "module-graphai.api.celery_jobs.translation"]], "graphai.api.celery_jobs.video module": [[9, "module-graphai.api.celery_jobs.video"]], "graphai.api.celery_jobs.voice module": [[10, "module-graphai.api.celery_jobs.voice"]], "graphai.api.celery_tasks package": [[11, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[12, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.completion module": [[13, "module-graphai.api.celery_tasks.completion"]], "graphai.api.celery_tasks.embedding module": [[14, "module-graphai.api.celery_tasks.embedding"]], "graphai.api.celery_tasks.image module": [[15, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[16, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[17, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.translation module": [[18, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[19, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[20, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[21, "module-graphai.api.common"]], "graphai.api.common.auth_utils module": [[22, "module-graphai.api.common.auth_utils"]], "graphai.api.common.celery_tools module": [[23, "module-graphai.api.common.celery_tools"]], "graphai.api.common.embedding module": [[24, "module-graphai.api.common.embedding"]], "graphai.api.common.log module": [[25, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[26, "module-graphai.api.common.ontology"]], "graphai.api.common.translation module": [[27, "module-graphai.api.common.translation"]], "graphai.api.common.video module": [[28, "module-graphai.api.common.video"]], "graphai.api.main module": [[29, "module-graphai.api.main"]], "graphai.api.routers package": [[30, "module-graphai.api.routers"]], "graphai.api.routers.auth module": [[31, "module-graphai.api.routers.auth"]], "graphai.api.routers.completion module": [[32, "module-graphai.api.routers.completion"]], "graphai.api.routers.embedding module": [[33, "module-graphai.api.routers.embedding"]], "graphai.api.routers.image module": [[34, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[35, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[36, "module-graphai.api.routers.scraping"]], "graphai.api.routers.translation module": [[37, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[38, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[39, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[40, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[41, "module-graphai.api.schemas.common"]], "graphai.api.schemas.completion module": [[42, "module-graphai.api.schemas.completion"]], "graphai.api.schemas.embedding module": [[43, "module-graphai.api.schemas.embedding"]], "graphai.api.schemas.image module": [[44, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[45, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[46, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.translation module": [[47, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[48, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[49, "module-graphai.api.schemas.voice"]], "graphai.api.text package": [[50, "module-graphai.api.text"]], "graphai.api.text.router module": [[51, "module-graphai.api.text.router"]], "graphai.api.text.schemas module": [[52, "module-graphai.api.text.schemas"]], "graphai.celery package": [[53, "module-graphai.celery"]], "graphai.celery.text package": [[54, "module-graphai.celery.text"]], "graphai.celery.text.jobs module": [[55, "module-graphai.celery.text.jobs"]], "graphai.celery.text.tasks module": [[56, "module-graphai.celery.text.tasks"]], "graphai.core package": [[57, "module-graphai.core"]], "graphai.core.common package": [[58, "module-graphai.core.common"]], "graphai.core.common.common_utils module": [[59, "module-graphai.core.common.common_utils"]], "graphai.core.common.fingerprinting module": [[60, "module-graphai.core.common.fingerprinting"]], "graphai.core.embedding package": [[61, "module-graphai.core.embedding"]], "graphai.core.embedding.embedding module": [[62, "module-graphai.core.embedding.embedding"]], "graphai.core.interfaces package": [[63, "module-graphai.core.interfaces"]], "graphai.core.interfaces.caching module": [[64, "module-graphai.core.interfaces.caching"]], "graphai.core.interfaces.celery_config module": [[65, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.config module": [[66, "module-graphai.core.interfaces.config"]], "graphai.core.ontology package": [[67, "module-graphai.core.ontology"]], "graphai.core.ontology.clustering module": [[68, "module-graphai.core.ontology.clustering"]], "graphai.core.ontology.data module": [[69, "module-graphai.core.ontology.data"]], "graphai.core.scraping package": [[70, "module-graphai.core.scraping"]], "graphai.core.scraping.scraping module": [[71, "module-graphai.core.scraping.scraping"]], "graphai.core.text package": [[72, "module-graphai.core.text"]], "graphai.core.text.draw module": [[73, "module-graphai.core.text.draw"]], "graphai.core.text.graph module": [[74, "module-graphai.core.text.graph"]], "graphai.core.text.keywords module": [[75, "module-graphai.core.text.keywords"]], "graphai.core.text.scores module": [[76, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch module": [[77, "module-graphai.core.text.wikisearch"]], "graphai.core.translation package": [[78, "module-graphai.core.translation"]], "graphai.core.translation.text_utils module": [[79, "module-graphai.core.translation.text_utils"]], "graphai.core.utils package": [[80, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[81, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[82, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[83, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[84, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[85, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[86, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[87, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[88, "module-graphai.core.utils.time.stopwatch"]], "graphai.core.video package": [[89, "module-graphai.core.video"]], "graphai.core.video.ocr module": [[90, "module-graphai.core.video.ocr"]], "graphai.core.video.transcribe module": [[91, "module-graphai.core.video.transcribe"]], "graphai.core.video.video module": [[92, "module-graphai.core.video.video"]], "graphai.definitions module": [[93, "module-graphai.definitions"]], "graphai.pipelines package": [[94, "module-graphai.pipelines"]], "graphai.pipelines.investment package": [[95, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[96, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[97, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[98, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[99, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[100, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[101, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[102, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[103, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[104, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[105, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[106, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[107, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[108, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[109, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[110, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[111, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[112, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[113, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[114, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[115, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[116, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_jobs"], [3, "module-graphai.api.celery_jobs.common"], [4, "module-graphai.api.celery_jobs.embedding"], [5, "module-graphai.api.celery_jobs.image"], [6, "module-graphai.api.celery_jobs.ontology"], [7, "module-graphai.api.celery_jobs.scraping"], [8, "module-graphai.api.celery_jobs.translation"], [9, "module-graphai.api.celery_jobs.video"], [10, "module-graphai.api.celery_jobs.voice"], [11, "module-graphai.api.celery_tasks"], [12, "module-graphai.api.celery_tasks.common"], [13, "module-graphai.api.celery_tasks.completion"], [14, "module-graphai.api.celery_tasks.embedding"], [15, "module-graphai.api.celery_tasks.image"], [16, "module-graphai.api.celery_tasks.ontology"], [17, "module-graphai.api.celery_tasks.scraping"], [18, "module-graphai.api.celery_tasks.translation"], [19, "module-graphai.api.celery_tasks.video"], [20, "module-graphai.api.celery_tasks.voice"], [21, "module-graphai.api.common"], [22, "module-graphai.api.common.auth_utils"], [23, "module-graphai.api.common.celery_tools"], [24, "module-graphai.api.common.embedding"], [25, "module-graphai.api.common.log"], [26, "module-graphai.api.common.ontology"], [27, "module-graphai.api.common.translation"], [28, "module-graphai.api.common.video"], [29, "module-graphai.api.main"], [30, "module-graphai.api.routers"], [31, "module-graphai.api.routers.auth"], [32, "module-graphai.api.routers.completion"], [33, "module-graphai.api.routers.embedding"], [34, "module-graphai.api.routers.image"], [35, "module-graphai.api.routers.ontology"], [36, "module-graphai.api.routers.scraping"], [37, "module-graphai.api.routers.translation"], [38, "module-graphai.api.routers.video"], [39, "module-graphai.api.routers.voice"], [40, "module-graphai.api.schemas"], [41, "module-graphai.api.schemas.common"], [42, "module-graphai.api.schemas.completion"], [43, "module-graphai.api.schemas.embedding"], [44, "module-graphai.api.schemas.image"], [45, "module-graphai.api.schemas.ontology"], [46, "module-graphai.api.schemas.scraping"], [47, "module-graphai.api.schemas.translation"], [48, "module-graphai.api.schemas.video"], [49, "module-graphai.api.schemas.voice"], [50, "module-graphai.api.text"], [51, "module-graphai.api.text.router"], [52, "module-graphai.api.text.schemas"], [53, "module-graphai.celery"], [54, "module-graphai.celery.text"], [55, "module-graphai.celery.text.jobs"], [56, "module-graphai.celery.text.tasks"], [57, "module-graphai.core"], [58, "module-graphai.core.common"], [59, "module-graphai.core.common.common_utils"], [60, "module-graphai.core.common.fingerprinting"], [61, "module-graphai.core.embedding"], [62, "module-graphai.core.embedding.embedding"], [63, "module-graphai.core.interfaces"], [64, "module-graphai.core.interfaces.caching"], [65, "module-graphai.core.interfaces.celery_config"], [66, "module-graphai.core.interfaces.config"], [67, "module-graphai.core.ontology"], [68, "module-graphai.core.ontology.clustering"], [69, "module-graphai.core.ontology.data"], [70, "module-graphai.core.scraping"], [71, "module-graphai.core.scraping.scraping"], [72, "module-graphai.core.text"], [73, "module-graphai.core.text.draw"], [74, "module-graphai.core.text.graph"], [75, "module-graphai.core.text.keywords"], [76, "module-graphai.core.text.scores"], [77, "module-graphai.core.text.wikisearch"], [78, "module-graphai.core.translation"], [79, "module-graphai.core.translation.text_utils"], [80, "module-graphai.core.utils"], [81, "module-graphai.core.utils.breadcrumb"], [82, "module-graphai.core.utils.progress_bar"], [83, "module-graphai.core.utils.text"], [84, "module-graphai.core.utils.text.clean"], [85, "module-graphai.core.utils.text.io"], [86, "module-graphai.core.utils.time"], [87, "module-graphai.core.utils.time.date"], [88, "module-graphai.core.utils.time.stopwatch"], [89, "module-graphai.core.video"], [90, "module-graphai.core.video.ocr"], [91, "module-graphai.core.video.transcribe"], [92, "module-graphai.core.video.video"], [93, "module-graphai.definitions"], [94, "module-graphai.pipelines"], [95, "module-graphai.pipelines.investment"], [96, "module-graphai.pipelines.investment.aggregate_recent_past"], [97, "module-graphai.pipelines.investment.check_unit"], [98, "module-graphai.pipelines.investment.compute_fundraisers_units"], [99, "module-graphai.pipelines.investment.compute_investors_units"], [100, "module-graphai.pipelines.investment.compute_investors_units_2"], [101, "module-graphai.pipelines.investment.compute_jaccard_index"], [102, "module-graphai.pipelines.investment.concept_configuration"], [103, "module-graphai.pipelines.investment.create_investments_graph"], [104, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [105, "module-graphai.pipelines.investment.main"], [106, "module-graphai.pipelines.investment.parameters"], [107, "module-graphai.pipelines.investment.toy_example"], [108, "module-graphai.pipelines.validation"], [112, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_jobs": [[2, "module-graphai.api.celery_jobs"]], "direct_lookup_generic_job() (in module graphai.api.celery_jobs.common)": [[3, "graphai.api.celery_jobs.common.direct_lookup_generic_job"]], "graphai.api.celery_jobs.common": [[3, "module-graphai.api.celery_jobs.common"]], "embedding_job() (in module graphai.api.celery_jobs.embedding)": [[4, "graphai.api.celery_jobs.embedding.embedding_job"]], "fingerprint_compute_job() (in module graphai.api.celery_jobs.embedding)": [[4, "graphai.api.celery_jobs.embedding.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.embedding)": [[4, "graphai.api.celery_jobs.embedding.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.embedding)": [[4, "graphai.api.celery_jobs.embedding.fingerprint_lookup_job"]], "get_embedding_text_fingerprint_chain_list() (in module graphai.api.celery_jobs.embedding)": [[4, "graphai.api.celery_jobs.embedding.get_embedding_text_fingerprint_chain_list"]], "graphai.api.celery_jobs.embedding": [[4, "module-graphai.api.celery_jobs.embedding"]], "fingerprint_job() (in module graphai.api.celery_jobs.image)": [[5, "graphai.api.celery_jobs.image.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.image)": [[5, "graphai.api.celery_jobs.image.fingerprint_lookup_job"]], "graphai.api.celery_jobs.image": [[5, "module-graphai.api.celery_jobs.image"]], "ocr_job() (in module graphai.api.celery_jobs.image)": [[5, "graphai.api.celery_jobs.image.ocr_job"]], "breakup_cluster_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.breakup_cluster_job"]], "category_children_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.category_children_job"]], "category_info_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.category_info_job"]], "category_parent_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.category_parent_job"]], "cluster_children_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.cluster_children_job"]], "cluster_nearest_category_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.cluster_nearest_category_job"]], "cluster_parent_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.cluster_parent_job"]], "concept_nearest_category_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.concept_nearest_category_job"]], "concept_nearest_concept_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.concept_nearest_concept_job"]], "graph_distance_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.graph_distance_job"]], "graphai.api.celery_jobs.ontology": [[6, "module-graphai.api.celery_jobs.ontology"]], "recompute_clusters_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.recompute_clusters_job"]], "tree_job() (in module graphai.api.celery_jobs.ontology)": [[6, "graphai.api.celery_jobs.ontology.tree_job"]], "extract_content_job() (in module graphai.api.celery_jobs.scraping)": [[7, "graphai.api.celery_jobs.scraping.extract_content_job"]], "extract_sublinks_job() (in module graphai.api.celery_jobs.scraping)": [[7, "graphai.api.celery_jobs.scraping.extract_sublinks_job"]], "graphai.api.celery_jobs.scraping": [[7, "module-graphai.api.celery_jobs.scraping"]], "sublink_lookup_job() (in module graphai.api.celery_jobs.scraping)": [[7, "graphai.api.celery_jobs.scraping.sublink_lookup_job"]], "detect_text_language_job() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.detect_text_language_job"]], "fingerprint_compute_job() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.fingerprint_compute_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.fingerprint_lookup_job"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.celery_jobs.translation": [[8, "module-graphai.api.celery_jobs.translation"]], "translation_job() (in module graphai.api.celery_jobs.translation)": [[8, "graphai.api.celery_jobs.translation.translation_job"]], "detect_slides_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.detect_slides_job"]], "extract_audio_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.extract_audio_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.fingerprint_lookup_job"]], "get_audio_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.get_audio_fingerprint_chain_list"]], "get_file_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.get_file_job"]], "get_slide_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.get_slide_fingerprint_chain_list"]], "get_video_fingerprint_chain_list() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.get_video_fingerprint_chain_list"]], "graphai.api.celery_jobs.video": [[9, "module-graphai.api.celery_jobs.video"]], "retrieve_url_job() (in module graphai.api.celery_jobs.video)": [[9, "graphai.api.celery_jobs.video.retrieve_url_job"]], "detect_language_job() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.detect_language_job"]], "fingerprint_job() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.fingerprint_job"]], "fingerprint_lookup_job() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.fingerprint_lookup_job"]], "get_audio_language_detection_task_chain() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.get_audio_language_detection_task_chain"]], "graphai.api.celery_jobs.voice": [[10, "module-graphai.api.celery_jobs.voice"]], "language_lookup_job() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.language_lookup_job"]], "transcribe_job() (in module graphai.api.celery_jobs.voice)": [[10, "graphai.api.celery_jobs.voice.transcribe_job"]], "graphai.api.celery_tasks": [[11, "module-graphai.api.celery_tasks"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[12, "module-graphai.api.celery_tasks.common"]], "lookup_latest_allowed_date() (in module graphai.api.celery_tasks.common)": [[12, "graphai.api.celery_tasks.common.lookup_latest_allowed_date"]], "graphai.api.celery_tasks.completion": [[13, "module-graphai.api.celery_tasks.completion"]], "embed_text() (in module graphai.api.celery_tasks.embedding)": [[14, "graphai.api.celery_tasks.embedding.embed_text"]], "fingerprint_based_embedding_lookup() (in module graphai.api.celery_tasks.embedding)": [[14, "graphai.api.celery_tasks.embedding.fingerprint_based_embedding_lookup"]], "graphai.api.celery_tasks.embedding": [[14, "module-graphai.api.celery_tasks.embedding"]], "insert_embedding_into_db() (in module graphai.api.celery_tasks.embedding)": [[14, "graphai.api.celery_tasks.embedding.insert_embedding_into_db"]], "token_based_embedding_lookup() (in module graphai.api.celery_tasks.embedding)": [[14, "graphai.api.celery_tasks.embedding.token_based_embedding_lookup"]], "graphai.api.celery_tasks.image": [[15, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[16, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[17, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.translation": [[18, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[19, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[20, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[21, "module-graphai.api.common"]], "token (class in graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.Token"]], "tokendata (class in graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.TokenData"]], "user (class in graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.User"]], "userindb (class in graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.UserInDB"]], "access_token (graphai.api.common.auth_utils.token attribute)": [[22, "graphai.api.common.auth_utils.Token.access_token"]], "authenticate_user() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.authenticate_user"]], "disabled (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.disabled"]], "email (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.email"]], "full_name (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.full_name"]], "generate_random_password_string() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.generate_random_password_string"]], "get_password_hash() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.get_password_hash"]], "get_ratelimit_values() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.get_ratelimit_values"]], "get_user() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.get_user"]], "get_user_ratelimit_overrides() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.get_user_ratelimit_overrides"]], "graphai.api.common.auth_utils": [[22, "module-graphai.api.common.auth_utils"]], "hashed_password (graphai.api.common.auth_utils.userindb attribute)": [[22, "graphai.api.common.auth_utils.UserInDB.hashed_password"]], "model_computed_fields (graphai.api.common.auth_utils.token attribute)": [[22, "graphai.api.common.auth_utils.Token.model_computed_fields"]], "model_computed_fields (graphai.api.common.auth_utils.tokendata attribute)": [[22, "graphai.api.common.auth_utils.TokenData.model_computed_fields"]], "model_computed_fields (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.model_computed_fields"]], "model_computed_fields (graphai.api.common.auth_utils.userindb attribute)": [[22, "graphai.api.common.auth_utils.UserInDB.model_computed_fields"]], "model_config (graphai.api.common.auth_utils.token attribute)": [[22, "graphai.api.common.auth_utils.Token.model_config"]], "model_config (graphai.api.common.auth_utils.tokendata attribute)": [[22, "graphai.api.common.auth_utils.TokenData.model_config"]], "model_config (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.model_config"]], "model_config (graphai.api.common.auth_utils.userindb attribute)": [[22, "graphai.api.common.auth_utils.UserInDB.model_config"]], "model_fields (graphai.api.common.auth_utils.token attribute)": [[22, "graphai.api.common.auth_utils.Token.model_fields"]], "model_fields (graphai.api.common.auth_utils.tokendata attribute)": [[22, "graphai.api.common.auth_utils.TokenData.model_fields"]], "model_fields (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.model_fields"]], "model_fields (graphai.api.common.auth_utils.userindb attribute)": [[22, "graphai.api.common.auth_utils.UserInDB.model_fields"]], "scopes (graphai.api.common.auth_utils.tokendata attribute)": [[22, "graphai.api.common.auth_utils.TokenData.scopes"]], "scopes (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.scopes"]], "token_type (graphai.api.common.auth_utils.token attribute)": [[22, "graphai.api.common.auth_utils.Token.token_type"]], "username (graphai.api.common.auth_utils.tokendata attribute)": [[22, "graphai.api.common.auth_utils.TokenData.username"]], "username (graphai.api.common.auth_utils.user attribute)": [[22, "graphai.api.common.auth_utils.User.username"]], "verify_password() (in module graphai.api.common.auth_utils)": [[22, "graphai.api.common.auth_utils.verify_password"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[23, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[23, "module-graphai.api.common.celery_tools"]], "graphai.api.common.embedding": [[24, "module-graphai.api.common.embedding"]], "graphai.api.common.log": [[25, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[25, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[26, "module-graphai.api.common.ontology"]], "graphai.api.common.translation": [[27, "module-graphai.api.common.translation"]], "graphai.api.common.video": [[28, "module-graphai.api.common.video"]], "graphai.api.main": [[29, "module-graphai.api.main"]], "lifespan() (in module graphai.api.main)": [[29, "graphai.api.main.lifespan"]], "redirect_docs() (in module graphai.api.main)": [[29, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[30, "module-graphai.api.routers"]], "create_access_token() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.create_access_token"]], "extract_username_and_scopes() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.extract_username_and_scopes"]], "get_active_user_dummy() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.get_active_user_dummy"]], "get_current_active_user() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.get_current_active_user"]], "get_current_user() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.get_current_user"]], "get_user_for_rate_limiter() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.get_user_for_rate_limiter"]], "graphai.api.routers.auth": [[31, "module-graphai.api.routers.auth"]], "login_for_access_token() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.login_for_access_token"]], "read_users_me() (in module graphai.api.routers.auth)": [[31, "graphai.api.routers.auth.read_users_me"]], "choose_best_subset() (in module graphai.api.routers.completion)": [[32, "graphai.api.routers.completion.choose_best_subset"]], "graphai.api.routers.completion": [[32, "module-graphai.api.routers.completion"]], "calculate_embedding_text_fingerprint() (in module graphai.api.routers.embedding)": [[33, "graphai.api.routers.embedding.calculate_embedding_text_fingerprint"]], "calculate_embedding_text_fingerprint_status() (in module graphai.api.routers.embedding)": [[33, "graphai.api.routers.embedding.calculate_embedding_text_fingerprint_status"]], "embed_text() (in module graphai.api.routers.embedding)": [[33, "graphai.api.routers.embedding.embed_text"]], "embed_text_status() (in module graphai.api.routers.embedding)": [[33, "graphai.api.routers.embedding.embed_text_status"]], "graphai.api.routers.embedding": [[33, "module-graphai.api.routers.embedding"]], "calculate_slide_fingerprint() (in module graphai.api.routers.image)": [[34, "graphai.api.routers.image.calculate_slide_fingerprint"]], "calculate_slide_fingerprint_status() (in module graphai.api.routers.image)": [[34, "graphai.api.routers.image.calculate_slide_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[34, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[34, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[34, "graphai.api.routers.image.extract_text_status"]], "graphai.api.routers.image": [[34, "module-graphai.api.routers.image"]], "break_up_cluster() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.break_up_cluster"]], "cat_children() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.cat_children"]], "cat_info() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.cat_info"]], "cat_parent() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.cat_parent"]], "cluster_children() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.cluster_children"]], "cluster_parent() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.cluster_parent"]], "compute_graph_cluster_nearest_category() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.compute_graph_cluster_nearest_category"]], "compute_graph_concept_nearest_category() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.compute_graph_concept_nearest_category"]], "compute_graph_distance() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.compute_graph_distance"]], "compute_graph_nearest_concept() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.compute_graph_nearest_concept"]], "graphai.api.routers.ontology": [[35, "module-graphai.api.routers.ontology"]], "recompute_clusters() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.recompute_clusters"]], "recompute_clusters_status() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.recompute_clusters_status"]], "tree() (in module graphai.api.routers.ontology)": [[35, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[36, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[36, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[36, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[36, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[36, "module-graphai.api.routers.scraping"]], "calculate_translation_text_fingerprint() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.calculate_translation_text_fingerprint"]], "calculate_translation_text_fingerprint_status() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.calculate_translation_text_fingerprint_status"]], "graphai.api.routers.translation": [[37, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[37, "graphai.api.routers.translation.translate_status"]], "calculate_video_fingerprint() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.calculate_video_fingerprint"]], "calculate_video_fingerprint_status() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.calculate_video_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.get_retrieve_file_status"]], "graphai.api.routers.video": [[38, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[38, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.detect_language_status"]], "graphai.api.routers.voice": [[39, "module-graphai.api.routers.voice"]], "transcribe() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[39, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[40, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[41, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[41, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[41, "graphai.api.schemas.common.TaskStatusResponse"]], "tokenstatus (class in graphai.api.schemas.common)": [[41, "graphai.api.schemas.common.TokenStatus"]], "active (graphai.api.schemas.common.tokenstatus attribute)": [[41, "graphai.api.schemas.common.TokenStatus.active"]], "fingerprinted (graphai.api.schemas.common.tokenstatus attribute)": [[41, "graphai.api.schemas.common.TokenStatus.fingerprinted"]], "graphai.api.schemas.common": [[41, "module-graphai.api.schemas.common"]], "model_computed_fields (graphai.api.schemas.common.filerequest attribute)": [[41, "graphai.api.schemas.common.FileRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.common.taskidresponse attribute)": [[41, "graphai.api.schemas.common.TaskIDResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.common.tokenstatus attribute)": [[41, "graphai.api.schemas.common.TokenStatus.model_computed_fields"]], "model_config (graphai.api.schemas.common.filerequest attribute)": [[41, "graphai.api.schemas.common.FileRequest.model_config"]], "model_config (graphai.api.schemas.common.taskidresponse attribute)": [[41, "graphai.api.schemas.common.TaskIDResponse.model_config"]], "model_config (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.model_config"]], "model_config (graphai.api.schemas.common.tokenstatus attribute)": [[41, "graphai.api.schemas.common.TokenStatus.model_config"]], "model_fields (graphai.api.schemas.common.filerequest attribute)": [[41, "graphai.api.schemas.common.FileRequest.model_fields"]], "model_fields (graphai.api.schemas.common.taskidresponse attribute)": [[41, "graphai.api.schemas.common.TaskIDResponse.model_fields"]], "model_fields (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.model_fields"]], "model_fields (graphai.api.schemas.common.tokenstatus attribute)": [[41, "graphai.api.schemas.common.TokenStatus.model_fields"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[41, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[41, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[41, "graphai.api.schemas.common.FileRequest.token"]], "slideconceptsmap (class in graphai.api.schemas.completion)": [[42, "graphai.api.schemas.completion.SlideConceptsMap"]], "slidesubsetrequest (class in graphai.api.schemas.completion)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest"]], "slidesubsetresponse (class in graphai.api.schemas.completion)": [[42, "graphai.api.schemas.completion.SlideSubsetResponse"]], "concepts (graphai.api.schemas.completion.slideconceptsmap attribute)": [[42, "graphai.api.schemas.completion.SlideConceptsMap.concepts"]], "coverage (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.coverage"]], "graphai.api.schemas.completion": [[42, "module-graphai.api.schemas.completion"]], "min_freq (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.min_freq"]], "model_computed_fields (graphai.api.schemas.completion.slideconceptsmap attribute)": [[42, "graphai.api.schemas.completion.SlideConceptsMap.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetResponse.model_computed_fields"]], "model_config (graphai.api.schemas.completion.slideconceptsmap attribute)": [[42, "graphai.api.schemas.completion.SlideConceptsMap.model_config"]], "model_config (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.model_config"]], "model_config (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetResponse.model_config"]], "model_fields (graphai.api.schemas.completion.slideconceptsmap attribute)": [[42, "graphai.api.schemas.completion.SlideConceptsMap.model_fields"]], "model_fields (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.model_fields"]], "model_fields (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetResponse.model_fields"]], "number (graphai.api.schemas.completion.slideconceptsmap attribute)": [[42, "graphai.api.schemas.completion.SlideConceptsMap.number"]], "slides (graphai.api.schemas.completion.slidesubsetrequest attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetRequest.slides"]], "subset (graphai.api.schemas.completion.slidesubsetresponse attribute)": [[42, "graphai.api.schemas.completion.SlideSubsetResponse.subset"]], "embeddingfingerprintrequest (class in graphai.api.schemas.embedding)": [[43, "graphai.api.schemas.embedding.EmbeddingFingerprintRequest"]], "embeddingrequest (class in graphai.api.schemas.embedding)": [[43, "graphai.api.schemas.embedding.EmbeddingRequest"]], "embeddingrequestbase (class in graphai.api.schemas.embedding)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase"]], "embeddingresponse (class in graphai.api.schemas.embedding)": [[43, "graphai.api.schemas.embedding.EmbeddingResponse"]], "embeddingtaskresponse (class in graphai.api.schemas.embedding)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse"]], "device (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.device"]], "force (graphai.api.schemas.embedding.embeddingrequestbase attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase.force"]], "fresh (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.fresh"]], "graphai.api.schemas.embedding": [[43, "module-graphai.api.schemas.embedding"]], "model_computed_fields (graphai.api.schemas.embedding.embeddingfingerprintrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingFingerprintRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.embedding.embeddingrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.embedding.embeddingrequestbase attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.embedding.embeddingresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.model_computed_fields"]], "model_config (graphai.api.schemas.embedding.embeddingfingerprintrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingFingerprintRequest.model_config"]], "model_config (graphai.api.schemas.embedding.embeddingrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequest.model_config"]], "model_config (graphai.api.schemas.embedding.embeddingrequestbase attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase.model_config"]], "model_config (graphai.api.schemas.embedding.embeddingresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingResponse.model_config"]], "model_config (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.model_config"]], "model_fields (graphai.api.schemas.embedding.embeddingfingerprintrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingFingerprintRequest.model_fields"]], "model_fields (graphai.api.schemas.embedding.embeddingrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequest.model_fields"]], "model_fields (graphai.api.schemas.embedding.embeddingrequestbase attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase.model_fields"]], "model_fields (graphai.api.schemas.embedding.embeddingresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingResponse.model_fields"]], "model_fields (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.model_fields"]], "model_type (graphai.api.schemas.embedding.embeddingrequestbase attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequestBase.model_type"]], "model_type (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.model_type"]], "result (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.result"]], "successful (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.successful"]], "task_result (graphai.api.schemas.embedding.embeddingresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingResponse.task_result"]], "text (graphai.api.schemas.embedding.embeddingfingerprintrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingFingerprintRequest.text"]], "text (graphai.api.schemas.embedding.embeddingrequest attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingRequest.text"]], "text_too_large (graphai.api.schemas.embedding.embeddingtaskresponse attribute)": [[43, "graphai.api.schemas.embedding.EmbeddingTaskResponse.text_too_large"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[44, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[44, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[44, "graphai.api.schemas.image.IndividualOCRResult.method"]], "model_computed_fields (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.extracttextresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.image.individualocrresult attribute)": [[44, "graphai.api.schemas.image.IndividualOCRResult.model_computed_fields"]], "model_config (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageResponse.model_config"]], "model_config (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.model_config"]], "model_config (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.model_config"]], "model_config (graphai.api.schemas.image.extracttextresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextResponse.model_config"]], "model_config (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.model_config"]], "model_config (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest.model_config"]], "model_config (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintResponse.model_config"]], "model_config (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.model_config"]], "model_config (graphai.api.schemas.image.individualocrresult attribute)": [[44, "graphai.api.schemas.image.IndividualOCRResult.model_config"]], "model_fields (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageResponse.model_fields"]], "model_fields (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.model_fields"]], "model_fields (graphai.api.schemas.image.extracttextresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextResponse.model_fields"]], "model_fields (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest.model_fields"]], "model_fields (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintResponse.model_fields"]], "model_fields (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.image.individualocrresult attribute)": [[44, "graphai.api.schemas.image.IndividualOCRResult.model_fields"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[44, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[44, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[44, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[44, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[44, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "breakupclusterrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest"]], "breakupclustersclusternumberresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse"]], "breakupclustersresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.BreakUpClustersResponse"]], "categorychildrenrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest"]], "categoryinforequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.CategoryInfoRequest"]], "categoryinforesponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse"]], "categoryparentresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.CategoryParentResponse"]], "clusterinforequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.ClusterInfoRequest"]], "graphclusternearestcategoryrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest"]], "graphclusternearestcategoryresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse"]], "graphconceptnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest"]], "graphconceptnearestcategoryresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse"]], "graphdistancerequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest"]], "graphdistanceresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphDistanceResponse"]], "graphnearestcategoryrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest"]], "graphnearestconceptrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest"]], "graphnearestconceptresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse"]], "nearestcategoryelement (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement"]], "nearestcategoryelementwithclusters (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters"]], "nearestclusterelement (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.NearestClusterElement"]], "oneconceptresponseelement (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement"]], "recomputeclustersrequest (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest"]], "recomputeclustersresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.RecomputeClustersResponse"]], "recomputeclusterstaskresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse"]], "treechildrenresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse"]], "treeparentresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.TreeParentResponse"]], "treeresponse (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[45, "graphai.api.schemas.ontology.TreeResponseElem"]], "avg (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.avg"]], "avg (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.avg"]], "category_assignments (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.category_assignments"]], "category_id (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoRequest.category_id"]], "category_id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.category_id"]], "category_id (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.category_id"]], "child_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[45, "graphai.api.schemas.ontology.TreeResponseElem.child_id"]], "child_to_parent (graphai.api.schemas.ontology.treeresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeResponse.child_to_parent"]], "child_type (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse.child_type"]], "children (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse.children"]], "closest (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse.closest"]], "cluster_id (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.clusterinforequest attribute)": [[45, "graphai.api.schemas.ontology.ClusterInfoRequest.cluster_id"]], "cluster_id (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.cluster_id"]], "clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.clusters"]], "clusters (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.clusters"]], "coeffs (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.coeffs"]], "coeffs (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.coeffs"]], "depth (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.depth"]], "existing_label (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.existing_label"]], "existing_label (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.existing_label"]], "graphai.api.schemas.ontology": [[45, "module-graphai.api.schemas.ontology"]], "id (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.id"]], "id (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement.id"]], "impurity_count (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_count"]], "impurity_proportion (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.impurity_proportion"]], "min_n (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest.min_n"]], "model_computed_fields (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.categoryinforequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryParentResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.clusterinforequest attribute)": [[45, "graphai.api.schemas.ontology.ClusterInfoRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.treeparentresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeParentResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.treeresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.ontology.treeresponseelem attribute)": [[45, "graphai.api.schemas.ontology.TreeResponseElem.model_computed_fields"]], "model_config (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest.model_config"]], "model_config (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.model_config"]], "model_config (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersResponse.model_config"]], "model_config (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest.model_config"]], "model_config (graphai.api.schemas.ontology.categoryinforequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoRequest.model_config"]], "model_config (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.model_config"]], "model_config (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryParentResponse.model_config"]], "model_config (graphai.api.schemas.ontology.clusterinforequest attribute)": [[45, "graphai.api.schemas.ontology.ClusterInfoRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.model_config"]], "model_config (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.model_config"]], "model_config (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceResponse.model_config"]], "model_config (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest.model_config"]], "model_config (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse.model_config"]], "model_config (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.model_config"]], "model_config (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.model_config"]], "model_config (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.model_config"]], "model_config (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement.model_config"]], "model_config (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest.model_config"]], "model_config (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersResponse.model_config"]], "model_config (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.model_config"]], "model_config (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse.model_config"]], "model_config (graphai.api.schemas.ontology.treeparentresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeParentResponse.model_config"]], "model_config (graphai.api.schemas.ontology.treeresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeResponse.model_config"]], "model_config (graphai.api.schemas.ontology.treeresponseelem attribute)": [[45, "graphai.api.schemas.ontology.TreeResponseElem.model_config"]], "model_fields (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.categoryinforequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryParentResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.clusterinforequest attribute)": [[45, "graphai.api.schemas.ontology.ClusterInfoRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.model_fields"]], "model_fields (graphai.api.schemas.ontology.nearestcategoryelementwithclusters attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElementWithClusters.model_fields"]], "model_fields (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.model_fields"]], "model_fields (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement.model_fields"]], "model_fields (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest.model_fields"]], "model_fields (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.treechildrenresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeChildrenResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.treeparentresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeParentResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.treeresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeResponse.model_fields"]], "model_fields (graphai.api.schemas.ontology.treeresponseelem attribute)": [[45, "graphai.api.schemas.ontology.TreeResponseElem.model_fields"]], "n_clusters (graphai.api.schemas.ontology.breakupclusterrequest attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClusterRequest.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.breakupclustersclusternumberresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersClusterNumberResponse.n_clusters"]], "n_clusters (graphai.api.schemas.ontology.recomputeclustersrequest attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersRequest.n_clusters"]], "name (graphai.api.schemas.ontology.categoryinforesponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryInfoResponse.name"]], "name (graphai.api.schemas.ontology.oneconceptresponseelement attribute)": [[45, "graphai.api.schemas.ontology.OneConceptResponseElement.name"]], "parent (graphai.api.schemas.ontology.categoryparentresponse attribute)": [[45, "graphai.api.schemas.ontology.CategoryParentResponse.parent"]], "parent_category (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.parent_category"]], "parent_category (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.parent_category"]], "parent_id (graphai.api.schemas.ontology.treeresponseelem attribute)": [[45, "graphai.api.schemas.ontology.TreeResponseElem.parent_id"]], "rank (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.rank"]], "rank (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.rank"]], "results (graphai.api.schemas.ontology.breakupclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.BreakUpClustersResponse.results"]], "results (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.results"]], "return_clusters (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.return_clusters"]], "score (graphai.api.schemas.ontology.nearestcategoryelement attribute)": [[45, "graphai.api.schemas.ontology.NearestCategoryElement.score"]], "score (graphai.api.schemas.ontology.nearestclusterelement attribute)": [[45, "graphai.api.schemas.ontology.NearestClusterElement.score"]], "scores (graphai.api.schemas.ontology.graphclusternearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.scores"]], "scores (graphai.api.schemas.ontology.graphnearestconceptresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptResponse.scores"]], "sim (graphai.api.schemas.ontology.graphdistanceresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceResponse.sim"]], "src (graphai.api.schemas.ontology.graphclusternearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphClusterNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphconceptnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryRequest.src"]], "src (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.src"]], "src (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest.src"]], "src_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.src_type"]], "successful (graphai.api.schemas.ontology.recomputeclusterstaskresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersTaskResponse.successful"]], "task_result (graphai.api.schemas.ontology.recomputeclustersresponse attribute)": [[45, "graphai.api.schemas.ontology.RecomputeClustersResponse.task_result"]], "task_result (graphai.api.schemas.ontology.treeparentresponse attribute)": [[45, "graphai.api.schemas.ontology.TreeParentResponse.task_result"]], "tgt (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt"]], "tgt_type (graphai.api.schemas.ontology.categorychildrenrequest attribute)": [[45, "graphai.api.schemas.ontology.CategoryChildrenRequest.tgt_type"]], "tgt_type (graphai.api.schemas.ontology.graphdistancerequest attribute)": [[45, "graphai.api.schemas.ontology.GraphDistanceRequest.tgt_type"]], "top_down_search (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_down_search"]], "top_n (graphai.api.schemas.ontology.graphnearestcategoryrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestCategoryRequest.top_n"]], "top_n (graphai.api.schemas.ontology.graphnearestconceptrequest attribute)": [[45, "graphai.api.schemas.ontology.GraphNearestConceptRequest.top_n"]], "valid (graphai.api.schemas.ontology.graphconceptnearestcategoryresponse attribute)": [[45, "graphai.api.schemas.ontology.GraphConceptNearestCategoryResponse.valid"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[46, "module-graphai.api.schemas.scraping"]], "model_computed_fields (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.model_computed_fields"]], "model_config (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest.model_config"]], "model_config (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentResponse.model_config"]], "model_config (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentTaskResponse.model_config"]], "model_config (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest.model_config"]], "model_config (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksResponse.model_config"]], "model_config (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.model_config"]], "model_fields (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest.model_fields"]], "model_fields (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentResponse.model_fields"]], "model_fields (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest.model_fields"]], "model_fields (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksResponse.model_fields"]], "model_fields (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.model_fields"]], "remove_headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest.remove_headers"]], "remove_long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentRequest.remove_long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[46, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[46, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse"]], "device (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.device"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[47, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "model_computed_fields (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.translationresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.model_computed_fields"]], "model_config (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageRequest.model_config"]], "model_config (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageResponse.model_config"]], "model_config (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.model_config"]], "model_config (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintResponse.model_config"]], "model_config (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.model_config"]], "model_config (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.model_config"]], "model_config (graphai.api.schemas.translation.translationresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationResponse.model_config"]], "model_config (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.model_config"]], "model_fields (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageRequest.model_fields"]], "model_fields (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageResponse.model_fields"]], "model_fields (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintResponse.model_fields"]], "model_fields (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.model_fields"]], "model_fields (graphai.api.schemas.translation.translationresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationResponse.model_fields"]], "model_fields (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.model_fields"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[47, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[47, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[47, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[47, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "videotokenstatus (class in graphai.api.schemas.video)": [[48, "graphai.api.schemas.video.VideoTokenStatus"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[48, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "model_computed_fields (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.detectslidesresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.extractaudioresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.retrieveurlresponse attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.videofingerprintrequest attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.videofingerprintresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.video.videotokenstatus attribute)": [[48, "graphai.api.schemas.video.VideoTokenStatus.model_computed_fields"]], "model_config (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.model_config"]], "model_config (graphai.api.schemas.video.detectslidesresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesResponse.model_config"]], "model_config (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.model_config"]], "model_config (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.model_config"]], "model_config (graphai.api.schemas.video.extractaudioresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioResponse.model_config"]], "model_config (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.model_config"]], "model_config (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.model_config"]], "model_config (graphai.api.schemas.video.retrieveurlresponse attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponse.model_config"]], "model_config (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.model_config"]], "model_config (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.model_config"]], "model_config (graphai.api.schemas.video.videofingerprintrequest attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest.model_config"]], "model_config (graphai.api.schemas.video.videofingerprintresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintResponse.model_config"]], "model_config (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.model_config"]], "model_config (graphai.api.schemas.video.videotokenstatus attribute)": [[48, "graphai.api.schemas.video.VideoTokenStatus.model_config"]], "model_fields (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.model_fields"]], "model_fields (graphai.api.schemas.video.detectslidesresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesResponse.model_fields"]], "model_fields (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.model_fields"]], "model_fields (graphai.api.schemas.video.extractaudioresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioResponse.model_fields"]], "model_fields (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.model_fields"]], "model_fields (graphai.api.schemas.video.retrieveurlresponse attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponse.model_fields"]], "model_fields (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.model_fields"]], "model_fields (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.model_fields"]], "model_fields (graphai.api.schemas.video.videofingerprintrequest attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest.model_fields"]], "model_fields (graphai.api.schemas.video.videofingerprintresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintResponse.model_fields"]], "model_fields (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.video.videotokenstatus attribute)": [[48, "graphai.api.schemas.video.VideoTokenStatus.model_fields"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "recalculate_cached (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.recalculate_cached"]], "recalculate_cached (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.recalculate_cached"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "streams (graphai.api.schemas.video.videotokenstatus attribute)": [[48, "graphai.api.schemas.video.VideoTokenStatus.streams"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[48, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[48, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[48, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[48, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "token_size (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.token_size"]], "token_status (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[48, "graphai.api.schemas.video.ExtractAudioTaskResponse.token_status"]], "token_status (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[48, "graphai.api.schemas.video.RetrieveURLResponseInner.token_status"]], "token_status (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[48, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token_status"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[48, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[49, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "model_computed_fields (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionResponse.model_computed_fields"]], "model_computed_fields (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.model_computed_fields"]], "model_config (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest.model_config"]], "model_config (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageResponse.model_config"]], "model_config (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.model_config"]], "model_config (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest.model_config"]], "model_config (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintResponse.model_config"]], "model_config (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.model_config"]], "model_config (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.model_config"]], "model_config (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionResponse.model_config"]], "model_config (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.model_config"]], "model_fields (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest.model_fields"]], "model_fields (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageResponse.model_fields"]], "model_fields (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest.model_fields"]], "model_fields (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintResponse.model_fields"]], "model_fields (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.model_fields"]], "model_fields (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.model_fields"]], "model_fields (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionResponse.model_fields"]], "model_fields (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.model_fields"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "strict (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.strict"]], "subtitle_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_results"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[49, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[49, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_results (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[49, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_results"]], "graphai.api.text": [[50, "module-graphai.api.text"]], "graphai.api.text.router": [[51, "module-graphai.api.text.router"]], "keywords() (in module graphai.api.text.router)": [[51, "graphai.api.text.router.keywords"]], "wikify() (in module graphai.api.text.router)": [[51, "graphai.api.text.router.wikify"]], "wikify_graph_svg() (in module graphai.api.text.router)": [[51, "graphai.api.text.router.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.text.router)": [[51, "graphai.api.text.router.wikify_ontology_svg"]], "keywordsrequest (class in graphai.api.text.schemas)": [[52, "graphai.api.text.schemas.KeywordsRequest"]], "wikifyfromkeywordsrequest (class in graphai.api.text.schemas)": [[52, "graphai.api.text.schemas.WikifyFromKeywordsRequest"]], "wikifyfromrawtextrequest (class in graphai.api.text.schemas)": [[52, "graphai.api.text.schemas.WikifyFromRawTextRequest"]], "wikifyresponseelem (class in graphai.api.text.schemas)": [[52, "graphai.api.text.schemas.WikifyResponseElem"]], "concept_id (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.concept_id"]], "concept_name (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.concept_name"]], "embedding_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.embedding_global_score"]], "embedding_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.embedding_keywords_score"]], "embedding_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.embedding_local_score"]], "graph_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.graph_keywords_score"]], "graph_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.graph_score"]], "graphai.api.text.schemas": [[52, "module-graphai.api.text.schemas"]], "keywords (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromKeywordsRequest.keywords"]], "levenshtein_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.levenshtein_score"]], "mixed_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.mixed_score"]], "model_computed_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[52, "graphai.api.text.schemas.KeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_computed_fields"]], "model_computed_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.model_computed_fields"]], "model_config (graphai.api.text.schemas.keywordsrequest attribute)": [[52, "graphai.api.text.schemas.KeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_config"]], "model_config (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.model_config"]], "model_fields (graphai.api.text.schemas.keywordsrequest attribute)": [[52, "graphai.api.text.schemas.KeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromkeywordsrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromKeywordsRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromRawTextRequest.model_fields"]], "model_fields (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.model_fields"]], "ontology_global_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.ontology_global_score"]], "ontology_keywords_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.ontology_keywords_score"]], "ontology_local_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.ontology_local_score"]], "raw_text (graphai.api.text.schemas.keywordsrequest attribute)": [[52, "graphai.api.text.schemas.KeywordsRequest.raw_text"]], "raw_text (graphai.api.text.schemas.wikifyfromrawtextrequest attribute)": [[52, "graphai.api.text.schemas.WikifyFromRawTextRequest.raw_text"]], "search_score (graphai.api.text.schemas.wikifyresponseelem attribute)": [[52, "graphai.api.text.schemas.WikifyResponseElem.search_score"]], "graphai.celery": [[53, "module-graphai.celery"]], "graphai.celery.text": [[54, "module-graphai.celery.text"]], "graphai.celery.text.jobs": [[55, "module-graphai.celery.text.jobs"]], "keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.keywords"]], "wikify_graph_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_graph_svg"]], "wikify_keywords() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_keywords"]], "wikify_ontology_svg() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_ontology_svg"]], "wikify_text() (in module graphai.celery.text.jobs)": [[55, "graphai.celery.text.jobs.wikify_text"]], "graphai.celery.text.tasks": [[56, "module-graphai.celery.text.tasks"]], "graphai.core": [[57, "module-graphai.core"]], "graphai.core.common": [[58, "module-graphai.core.common"]], "convert_list_to_text() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.convert_list_to_text"]], "convert_text_back_to_list() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.convert_text_back_to_list"]], "copy_file_within_folder() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.copy_file_within_folder"]], "file_exists() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.file_exists"]], "format_datetime_for_mysql() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.format_datetime_for_mysql"]], "get_current_datetime() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.get_current_datetime"]], "graphai.core.common.common_utils": [[59, "module-graphai.core.common.common_utils"]], "invert_dict() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.invert_dict"]], "make_sure_path_exists() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.make_sure_path_exists"]], "parse_mysql_datetime() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.parse_mysql_datetime"]], "read_json_file() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.read_json_file"]], "read_text_file() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.read_text_file"]], "strtobool() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.strtobool"]], "write_json_file() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.write_json_file"]], "write_text_file() (in module graphai.core.common.common_utils)": [[59, "graphai.core.common.common_utils.write_text_file"]], "compare_decoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.compare_encoded_fingerprints"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_for_list_from_list() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.find_closest_fingerprint_for_list_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.find_closest_image_fingerprint_from_list"]], "find_closest_text_fingerprint_from_list() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.find_closest_text_fingerprint_from_list"]], "graphai.core.common.fingerprinting": [[60, "module-graphai.core.common.fingerprinting"]], "md5_text() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.fingerprinting)": [[60, "graphai.core.common.fingerprinting.perceptual_hash_text"]], "graphai.core.embedding": [[61, "module-graphai.core.embedding"]], "embeddingmodels (class in graphai.core.embedding.embedding)": [[62, "graphai.core.embedding.embedding.EmbeddingModels"]], "embed() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.embed"]], "embedding_from_json() (in module graphai.core.embedding.embedding)": [[62, "graphai.core.embedding.embedding.embedding_from_json"]], "embedding_to_json() (in module graphai.core.embedding.embedding)": [[62, "graphai.core.embedding.embedding.embedding_to_json"]], "generate_embedding_text_token() (in module graphai.core.embedding.embedding)": [[62, "graphai.core.embedding.embedding.generate_embedding_text_token"]], "get_device() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.get_device"]], "get_last_usage() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.get_last_usage"]], "get_max_tokens() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.get_max_tokens"]], "get_text_token_count_using_model() (in module graphai.core.embedding.embedding)": [[62, "graphai.core.embedding.embedding.get_text_token_count_using_model"]], "get_token_count() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.get_token_count"]], "get_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.get_tokenizer"]], "graphai.core.embedding.embedding": [[62, "module-graphai.core.embedding.embedding"]], "load_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.load_model"]], "load_models() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.load_models"]], "model_loaded() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.model_loaded"]], "set_tokenizer() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.set_tokenizer"]], "unload_model() (graphai.core.embedding.embedding.embeddingmodels method)": [[62, "graphai.core.embedding.embedding.EmbeddingModels.unload_model"]], "graphai.core.interfaces": [[63, "module-graphai.core.interfaces"]], "audiodbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.AudioDBCachingManager"]], "embeddingdbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.EmbeddingDBCachingManager"]], "fingerprintparameters (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.FingerprintParameters"]], "scrapingdbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.ScrapingDBCachingManager"]], "slidedbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.SlideDBCachingManager"]], "textdbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.VideoDBCachingManager"]], "concat_file_path() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.create_symlink_between_paths"]], "delete_file() (in module graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.delete_file"]], "generate_filepath() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.generate_filepath"]], "get_audio_dir() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.get_audio_dir"]], "get_details_using_origin() (graphai.core.interfaces.caching.scrapingdbcachingmanager method)": [[64, "graphai.core.interfaces.caching.ScrapingDBCachingManager.get_details_using_origin"]], "get_image_dir() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.get_image_dir"]], "get_min_sim_audio() (graphai.core.interfaces.caching.fingerprintparameters method)": [[64, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.interfaces.caching.fingerprintparameters method)": [[64, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.interfaces.caching.fingerprintparameters method)": [[64, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.interfaces.caching.fingerprintparameters method)": [[64, "graphai.core.interfaces.caching.FingerprintParameters.get_min_sim_video"]], "get_root_dir() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.get_root_dir"]], "get_token_file_status() (in module graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.get_token_file_status"]], "get_transcript_dir() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.interfaces.caching.videoconfig method)": [[64, "graphai.core.interfaces.caching.VideoConfig.get_video_dir"]], "graphai.core.interfaces.caching": [[64, "module-graphai.core.interfaces.caching"]], "init_db() (graphai.core.interfaces.caching.audiodbcachingmanager method)": [[64, "graphai.core.interfaces.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.embeddingdbcachingmanager method)": [[64, "graphai.core.interfaces.caching.EmbeddingDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.scrapingdbcachingmanager method)": [[64, "graphai.core.interfaces.caching.ScrapingDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.slidedbcachingmanager method)": [[64, "graphai.core.interfaces.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.textdbcachingmanager method)": [[64, "graphai.core.interfaces.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.interfaces.caching.videodbcachingmanager method)": [[64, "graphai.core.interfaces.caching.VideoDBCachingManager.init_db"]], "is_fingerprinted() (in module graphai.core.interfaces.caching)": [[64, "graphai.core.interfaces.caching.is_fingerprinted"]], "load_values() (graphai.core.interfaces.caching.fingerprintparameters method)": [[64, "graphai.core.interfaces.caching.FingerprintParameters.load_values"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[65, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[65, "graphai.core.interfaces.celery_config.route_task"]], "graphai.core.interfaces.config": [[66, "module-graphai.core.interfaces.config"]], "graphai.core.ontology": [[67, "module-graphai.core.ontology"]], "arithmetic_mean_laplacians() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.arithmetic_mean_laplacians"]], "assign_to_categories_using_existing() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.assign_to_categories_using_existing"]], "cluster_and_reassign_outliers() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.cluster_and_reassign_outliers"]], "cluster_using_embedding() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.cluster_using_embedding"]], "combine_and_embed_laplacian() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.combine_and_embed_laplacian"]], "combine_laplacians() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.combine_laplacians"]], "compute_all_graphs_from_scratch() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.compute_all_graphs_from_scratch"]], "convert_cluster_labels_to_dict() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.convert_cluster_labels_to_dict"]], "davies_bouldin_eval() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.davies_bouldin_eval"]], "get_laplacian() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.get_laplacian"]], "graphai.core.ontology.clustering": [[68, "module-graphai.core.ontology.clustering"]], "group_clustered() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.group_clustered"]], "normalize_features() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.normalize_features"]], "perform_pca() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.perform_PCA"]], "perform_constrained_agglomerative() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.perform_constrained_agglomerative"]], "precompute_clustering_metric() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.precompute_clustering_metric"]], "reassign_outliers() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.reassign_outliers"]], "spec_embed_on_laplacian() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.spec_embed_on_laplacian"]], "sum_laplacians() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.sum_laplacians"]], "variance_ratio_eval() (in module graphai.core.ontology.clustering)": [[68, "graphai.core.ontology.clustering.variance_ratio_eval"]], "ontologydata (class in graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.OntologyData"]], "adjusted_exp() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.adjusted_exp"]], "adjusted_exp_slope_1_point() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.adjusted_exp_slope_1_point"]], "average_and_combine() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.average_and_combine"]], "compute_average() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.compute_average"]], "compute_category_anchors_using_references() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.compute_category_anchors_using_references"]], "compute_precalculated_similarity_matrices() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.compute_precalculated_similarity_matrices"]], "compute_symmetric_concept_concept_matrix() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.compute_symmetric_concept_concept_matrix"]], "convert_to_csr_matrix() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.convert_to_csr_matrix"]], "create_graph_from_df() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.create_graph_from_df"]], "db_results_to_pandas_df() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.db_results_to_pandas_df"]], "derive_col_to_col_graph() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.derive_col_to_col_graph"]], "generate_category_concept_dict() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.generate_category_concept_dict"]], "generate_tree_structure() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.generate_tree_structure"]], "get_category_anchor_pages() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_anchor_pages"]], "get_category_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_category_similarity"]], "get_category_children() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_children"]], "get_category_closest_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_closest_category"]], "get_category_cluster_list() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_cluster_list"]], "get_category_cluster_table() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_cluster_table"]], "get_category_concept_list() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_concept_list"]], "get_category_concept_table() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_concept_table"]], "get_category_parent() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_parent"]], "get_category_to_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_category_to_category"]], "get_cluster_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_category_similarity"]], "get_cluster_children() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_children"]], "get_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_closest_category"]], "get_cluster_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_cluster_similarity"]], "get_cluster_concept_list() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_concept_list"]], "get_cluster_concepts() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_concepts"]], "get_cluster_parent() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_cluster_parent"]], "get_col_to_col_dict() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.get_col_to_col_dict"]], "get_concept_category_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_category_similarity"]], "get_concept_closest_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_closest_category"]], "get_concept_closest_cluster_of_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_closest_cluster_of_category"]], "get_concept_closest_concept() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_closest_concept"]], "get_concept_cluster_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_cluster_similarity"]], "get_concept_concept_graphscore_table() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_concept_graphscore_table"]], "get_concept_concept_similarity() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_concept_similarity"]], "get_concept_name() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_name"]], "get_concept_parent_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_parent_category"]], "get_concept_parent_cluster() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_concept_parent_cluster"]], "get_custom_cluster_closest_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_custom_cluster_closest_category"]], "get_id_dict() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.get_id_dict"]], "get_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_non_ontology_concept_names"]], "get_ontology_category_info() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_ontology_category_info"]], "get_ontology_category_names() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_ontology_category_names"]], "get_ontology_concept_names_table() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_ontology_concept_names_table"]], "get_root_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_root_category"]], "get_test_category_concept() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_test_category_concept"]], "get_test_cluster_concept() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_test_cluster_concept"]], "get_test_concept_names() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.get_test_concept_names"]], "graphai.core.ontology.data": [[69, "module-graphai.core.ontology.data"]], "load_anchor_page_dict() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_anchor_page_dict"]], "load_category_category() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_category_category"]], "load_category_concept() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_category_concept"]], "load_concept_concept_graphscore() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_concept_concept_graphscore"]], "load_data() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_data"]], "load_non_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_non_ontology_concept_names"]], "load_ontology_categories() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_ontology_categories"]], "load_ontology_concept_names() (graphai.core.ontology.data.ontologydata method)": [[69, "graphai.core.ontology.data.OntologyData.load_ontology_concept_names"]], "make_adj_undirected() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.make_adj_undirected"]], "remove_invalid_pairs() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.remove_invalid_pairs"]], "return_chosen_indices() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.return_chosen_indices"]], "to_ndarray_and_flatten() (in module graphai.core.ontology.data)": [[69, "graphai.core.ontology.data.to_ndarray_and_flatten"]], "graphai.core.scraping": [[70, "module-graphai.core.scraping"]], "check_url() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.check_url"]], "compare_strings() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.find_spaces"]], "generate_sublink_token() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.generate_sublink_token"]], "get_sublinks() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.get_sublinks"]], "graphai.core.scraping.scraping": [[71, "module-graphai.core.scraping.scraping"]], "initialize_data_dict() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.initialize_data_dict"]], "initialize_url() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.process_all_sublinks"]], "reconstruct_data_dict() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.reconstruct_data_dict"]], "remove_headers() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.scraping.scraping)": [[71, "graphai.core.scraping.scraping.string_circular_shift"]], "conceptsgraph (class in graphai.core.text)": [[72, "graphai.core.text.ConceptsGraph"]], "add_graph_score() (graphai.core.text.conceptsgraph method)": [[72, "graphai.core.text.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.conceptsgraph method)": [[72, "graphai.core.text.ConceptsGraph.add_ontology_scores"]], "compute_scores() (in module graphai.core.text)": [[72, "graphai.core.text.compute_scores"]], "draw_graph() (in module graphai.core.text)": [[72, "graphai.core.text.draw_graph"]], "draw_ontology() (in module graphai.core.text)": [[72, "graphai.core.text.draw_ontology"]], "extract_keywords() (in module graphai.core.text)": [[72, "graphai.core.text.extract_keywords"]], "get_ontology_concepts() (graphai.core.text.conceptsgraph method)": [[72, "graphai.core.text.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text": [[72, "module-graphai.core.text"]], "load_from_db() (graphai.core.text.conceptsgraph method)": [[72, "graphai.core.text.ConceptsGraph.load_from_db"]], "wikisearch() (in module graphai.core.text)": [[72, "graphai.core.text.wikisearch"]], "draw_graph() (in module graphai.core.text.draw)": [[73, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[73, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[73, "module-graphai.core.text.draw"]], "conceptsgraph (class in graphai.core.text.graph)": [[74, "graphai.core.text.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.text.graph.conceptsgraph method)": [[74, "graphai.core.text.graph.ConceptsGraph.add_graph_score"]], "add_ontology_scores() (graphai.core.text.graph.conceptsgraph method)": [[74, "graphai.core.text.graph.ConceptsGraph.add_ontology_scores"]], "get_ontology_concepts() (graphai.core.text.graph.conceptsgraph method)": [[74, "graphai.core.text.graph.ConceptsGraph.get_ontology_concepts"]], "graphai.core.text.graph": [[74, "module-graphai.core.text.graph"]], "load_from_db() (graphai.core.text.graph.conceptsgraph method)": [[74, "graphai.core.text.graph.ConceptsGraph.load_from_db"]], "extract_keywords() (in module graphai.core.text.keywords)": [[75, "graphai.core.text.keywords.extract_keywords"]], "graphai.core.text.keywords": [[75, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[75, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[75, "graphai.core.text.keywords.word_tokens"]], "aggregate_results() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.aggregate_results"]], "compute_embedding_scores() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.compute_embedding_scores"]], "compute_keywords_scores() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.compute_keywords_scores"]], "compute_levenshtein_score() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.compute_levenshtein_score"]], "compute_mixed_score() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.compute_mixed_score"]], "compute_scores() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.compute_scores"]], "filter_results() (in module graphai.core.text.scores)": [[76, "graphai.core.text.scores.filter_results"]], "graphai.core.text.scores": [[76, "module-graphai.core.text.scores"]], "graphai.core.text.wikisearch": [[77, "module-graphai.core.text.wikisearch"]], "search_elasticsearch() (in module graphai.core.text.wikisearch)": [[77, "graphai.core.text.wikisearch.search_elasticsearch"]], "search_wikipedia_api() (in module graphai.core.text.wikisearch)": [[77, "graphai.core.text.wikisearch.search_wikipedia_api"]], "wikisearch() (in module graphai.core.text.wikisearch)": [[77, "graphai.core.text.wikisearch.wikisearch"]], "graphai.core.translation": [[78, "module-graphai.core.translation"]], "translationmodels (class in graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.TranslationModels"]], "compute_slide_tfidf_scores() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.compute_slide_tfidf_scores"]], "detect_text_language() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.detect_text_language"]], "find_best_slide_subset() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.find_best_slide_subset"]], "find_set_cover() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.find_set_cover"]], "generate_src_tgt_dict() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.generate_src_tgt_dict"]], "generate_translation_text_token() (in module graphai.core.translation.text_utils)": [[79, "graphai.core.translation.text_utils.generate_translation_text_token"]], "get_device() (graphai.core.translation.text_utils.translationmodels method)": [[79, "graphai.core.translation.text_utils.TranslationModels.get_device"]], "get_last_usage() (graphai.core.translation.text_utils.translationmodels method)": [[79, "graphai.core.translation.text_utils.TranslationModels.get_last_usage"]], "graphai.core.translation.text_utils": [[79, "module-graphai.core.translation.text_utils"]], "load_models() (graphai.core.translation.text_utils.translationmodels method)": [[79, "graphai.core.translation.text_utils.TranslationModels.load_models"]], "translate() (graphai.core.translation.text_utils.translationmodels method)": [[79, "graphai.core.translation.text_utils.TranslationModels.translate"]], "unload_model() (graphai.core.translation.text_utils.translationmodels method)": [[79, "graphai.core.translation.text_utils.TranslationModels.unload_model"]], "graphai.core.utils": [[80, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[81, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[81, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[81, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[81, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[81, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[81, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[82, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[82, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[82, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[82, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[83, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[84, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[84, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[84, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[84, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[84, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[84, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[84, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[85, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[85, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[85, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[85, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[85, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[86, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[87, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[87, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[87, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[87, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[88, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[88, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.core.video": [[89, "module-graphai.core.video"]], "googleocrmodel (class in graphai.core.video.ocr)": [[90, "graphai.core.video.ocr.GoogleOCRModel"]], "establish_connection() (graphai.core.video.ocr.googleocrmodel method)": [[90, "graphai.core.video.ocr.GoogleOCRModel.establish_connection"]], "graphai.core.video.ocr": [[90, "module-graphai.core.video.ocr"]], "perform_ocr() (graphai.core.video.ocr.googleocrmodel method)": [[90, "graphai.core.video.ocr.GoogleOCRModel.perform_ocr"]], "wait_for_ocr_results() (graphai.core.video.ocr.googleocrmodel method)": [[90, "graphai.core.video.ocr.GoogleOCRModel.wait_for_ocr_results"]], "whispertranscriptionmodel (class in graphai.core.video.transcribe)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel"]], "detect_audio_segment_lang_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "get_last_usage() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.get_last_usage"]], "get_silence_thresholds() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.get_silence_thresholds"]], "graphai.core.video.transcribe": [[91, "module-graphai.core.video.transcribe"]], "load_model_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.load_model_whisper"]], "transcribe_audio_whisper() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.transcribe_audio_whisper"]], "unload_model() (graphai.core.video.transcribe.whispertranscriptionmodel method)": [[91, "graphai.core.video.transcribe.WhisperTranscriptionModel.unload_model"]], "nlpmodels (class in graphai.core.video.video)": [[92, "graphai.core.video.video.NLPModels"]], "check_ocr_and_hash_thresholds() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.check_ocr_and_hash_thresholds"]], "compute_ocr_noise_level() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.compute_video_ocr_transitions"]], "create_filename_using_url_format() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.create_filename_using_url_format"]], "detect_audio_duration() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.detect_audio_duration"]], "extract_audio_from_video() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.extract_frames"]], "extract_media_segment() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.extract_media_segment"]], "frame_hash_similarity() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.frame_ocr_transition"]], "generate_audio_token() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.generate_audio_token"]], "generate_frame_sample_indices() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.generate_frame_sample_indices"]], "generate_img_and_ocr_paths_and_perform_tesseract_ocr() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.generate_img_and_ocr_paths_and_perform_tesseract_ocr"]], "generate_random_token() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.generate_random_token"]], "generate_symbolic_token() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.generate_symbolic_token"]], "get_audio_token_status() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_audio_token_status"]], "get_available_streams() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_available_streams"]], "get_cosine_sim() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_cosine_sim"]], "get_file_size() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_file_size"]], "get_image_token_status() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_image_token_status"]], "get_ocr_colnames() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_ocr_colnames"]], "get_text_word_vector() (graphai.core.video.video.nlpmodels method)": [[92, "graphai.core.video.video.NLPModels.get_text_word_vector"]], "get_text_word_vector_using_words() (graphai.core.video.video.nlpmodels method)": [[92, "graphai.core.video.video.NLPModels.get_text_word_vector_using_words"]], "get_video_token_status() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.get_video_token_status"]], "get_words() (graphai.core.video.video.nlpmodels method)": [[92, "graphai.core.video.video.NLPModels.get_words"]], "graphai.core.video.video": [[92, "module-graphai.core.video.video"]], "load_nlp_models() (graphai.core.video.video.nlpmodels method)": [[92, "graphai.core.video.video.NLPModels.load_nlp_models"]], "perform_probe() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.perform_probe"]], "perform_slow_audio_probe() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.perform_slow_audio_probe"]], "perform_tesseract_ocr() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.perform_tesseract_ocr"]], "read_json_gz_file() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.read_json_gz_file"]], "read_txt_gz_file() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.read_txt_gz_file"]], "retrieve_file_from_generic_url() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.retrieve_file_from_generic_url"]], "retrieve_file_from_kaltura() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.retrieve_file_from_url"]], "retrieve_file_from_youtube() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.retrieve_file_from_youtube"]], "tesseract_ocr_or_get_cached() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.tesseract_ocr_or_get_cached"]], "write_txt_gz_file() (in module graphai.core.video.video)": [[92, "graphai.core.video.video.write_txt_gz_file"]], "graphai.definitions": [[93, "module-graphai.definitions"]], "graphai.pipelines": [[94, "module-graphai.pipelines"]], "graphai.pipelines.investment": [[95, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[96, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[96, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[96, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[96, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[96, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[96, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[97, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[97, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[97, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[97, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[97, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[98, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[98, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[99, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[99, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[100, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[100, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[101, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[101, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[102, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[102, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[103, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[103, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[104, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[104, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[105, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[105, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[106, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[106, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[107, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[107, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[107, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[107, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[107, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[108, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[112, "module-graphai.pipelines.visualisation"]]}})