Search.setIndex({"docnames": ["graphai", "graphai.api", "graphai.api.celery_tasks", "graphai.api.celery_tasks.common", "graphai.api.celery_tasks.image", "graphai.api.celery_tasks.ontology", "graphai.api.celery_tasks.scraping", "graphai.api.celery_tasks.summarization", "graphai.api.celery_tasks.text", "graphai.api.celery_tasks.translation", "graphai.api.celery_tasks.video", "graphai.api.celery_tasks.voice", "graphai.api.common", "graphai.api.common.celery_tools", "graphai.api.common.graph", "graphai.api.common.log", "graphai.api.common.ontology", "graphai.api.common.video", "graphai.api.main", "graphai.api.routers", "graphai.api.routers.image", "graphai.api.routers.ontology", "graphai.api.routers.scraping", "graphai.api.routers.summarization", "graphai.api.routers.text", "graphai.api.routers.translation", "graphai.api.routers.video", "graphai.api.routers.voice", "graphai.api.schemas", "graphai.api.schemas.common", "graphai.api.schemas.image", "graphai.api.schemas.ontology", "graphai.api.schemas.scraping", "graphai.api.schemas.summarization", "graphai.api.schemas.text", "graphai.api.schemas.translation", "graphai.api.schemas.video", "graphai.api.schemas.voice", "graphai.core", "graphai.core.common", "graphai.core.common.caching", "graphai.core.common.graph", "graphai.core.common.ontology", "graphai.core.common.scraping", "graphai.core.common.video", "graphai.core.interfaces", "graphai.core.interfaces.celery_config", "graphai.core.interfaces.db", "graphai.core.interfaces.es", "graphai.core.interfaces.wp", "graphai.core.text", "graphai.core.text.draw", "graphai.core.text.keywords", "graphai.core.utils", "graphai.core.utils.breadcrumb", "graphai.core.utils.progress_bar", "graphai.core.utils.text", "graphai.core.utils.text.clean", "graphai.core.utils.text.io", "graphai.core.utils.time", "graphai.core.utils.time.date", "graphai.core.utils.time.stopwatch", "graphai.definitions", "graphai.pipelines", "graphai.pipelines.elasticsearch", "graphai.pipelines.elasticsearch.create_index", "graphai.pipelines.elasticsearch.populate_index", "graphai.pipelines.investment", "graphai.pipelines.investment.aggregate_recent_past", "graphai.pipelines.investment.check_unit", "graphai.pipelines.investment.compute_fundraisers_units", "graphai.pipelines.investment.compute_investors_units", "graphai.pipelines.investment.compute_investors_units_2", "graphai.pipelines.investment.compute_jaccard_index", "graphai.pipelines.investment.concept_configuration", "graphai.pipelines.investment.create_investments_graph", "graphai.pipelines.investment.detect_fundraisers_concepts", "graphai.pipelines.investment.main", "graphai.pipelines.investment.parameters", "graphai.pipelines.investment.toy_example", "graphai.pipelines.validation", "graphai.pipelines.validation.1_old", "graphai.pipelines.validation.2_new", "graphai.pipelines.validation.3_slides", "graphai.pipelines.visualisation", "graphai.pipelines.visualisation.startups-graph", "graphai.pipelines.visualisation.startups-graph-2", "graphai.pipelines.visualisation.startups-graph-3", "graphai.pipelines.visualisation.startups-graph-4"], "filenames": ["graphai.rst", "graphai.api.rst", "graphai.api.celery_tasks.rst", "graphai.api.celery_tasks.common.rst", "graphai.api.celery_tasks.image.rst", "graphai.api.celery_tasks.ontology.rst", "graphai.api.celery_tasks.scraping.rst", "graphai.api.celery_tasks.summarization.rst", "graphai.api.celery_tasks.text.rst", "graphai.api.celery_tasks.translation.rst", "graphai.api.celery_tasks.video.rst", "graphai.api.celery_tasks.voice.rst", "graphai.api.common.rst", "graphai.api.common.celery_tools.rst", "graphai.api.common.graph.rst", "graphai.api.common.log.rst", "graphai.api.common.ontology.rst", "graphai.api.common.video.rst", "graphai.api.main.rst", "graphai.api.routers.rst", "graphai.api.routers.image.rst", "graphai.api.routers.ontology.rst", "graphai.api.routers.scraping.rst", "graphai.api.routers.summarization.rst", "graphai.api.routers.text.rst", "graphai.api.routers.translation.rst", "graphai.api.routers.video.rst", "graphai.api.routers.voice.rst", "graphai.api.schemas.rst", "graphai.api.schemas.common.rst", "graphai.api.schemas.image.rst", "graphai.api.schemas.ontology.rst", "graphai.api.schemas.scraping.rst", "graphai.api.schemas.summarization.rst", "graphai.api.schemas.text.rst", "graphai.api.schemas.translation.rst", "graphai.api.schemas.video.rst", "graphai.api.schemas.voice.rst", "graphai.core.rst", "graphai.core.common.rst", "graphai.core.common.caching.rst", "graphai.core.common.graph.rst", "graphai.core.common.ontology.rst", "graphai.core.common.scraping.rst", "graphai.core.common.video.rst", "graphai.core.interfaces.rst", "graphai.core.interfaces.celery_config.rst", "graphai.core.interfaces.db.rst", "graphai.core.interfaces.es.rst", "graphai.core.interfaces.wp.rst", "graphai.core.text.rst", "graphai.core.text.draw.rst", "graphai.core.text.keywords.rst", "graphai.core.utils.rst", "graphai.core.utils.breadcrumb.rst", "graphai.core.utils.progress_bar.rst", "graphai.core.utils.text.rst", "graphai.core.utils.text.clean.rst", "graphai.core.utils.text.io.rst", "graphai.core.utils.time.rst", "graphai.core.utils.time.date.rst", "graphai.core.utils.time.stopwatch.rst", "graphai.definitions.rst", "graphai.pipelines.rst", "graphai.pipelines.elasticsearch.rst", "graphai.pipelines.elasticsearch.create_index.rst", "graphai.pipelines.elasticsearch.populate_index.rst", "graphai.pipelines.investment.rst", "graphai.pipelines.investment.aggregate_recent_past.rst", "graphai.pipelines.investment.check_unit.rst", "graphai.pipelines.investment.compute_fundraisers_units.rst", "graphai.pipelines.investment.compute_investors_units.rst", "graphai.pipelines.investment.compute_investors_units_2.rst", "graphai.pipelines.investment.compute_jaccard_index.rst", "graphai.pipelines.investment.concept_configuration.rst", "graphai.pipelines.investment.create_investments_graph.rst", "graphai.pipelines.investment.detect_fundraisers_concepts.rst", "graphai.pipelines.investment.main.rst", "graphai.pipelines.investment.parameters.rst", "graphai.pipelines.investment.toy_example.rst", "graphai.pipelines.validation.rst", "graphai.pipelines.validation.1_old.rst", "graphai.pipelines.validation.2_new.rst", "graphai.pipelines.validation.3_slides.rst", "graphai.pipelines.visualisation.rst", "graphai.pipelines.visualisation.startups-graph.rst", "graphai.pipelines.visualisation.startups-graph-2.rst", "graphai.pipelines.visualisation.startups-graph-3.rst", "graphai.pipelines.visualisation.startups-graph-4.rst"], "titles": ["graphai package", "graphai.api package", "graphai.api.celery_tasks package", "graphai.api.celery_tasks.common module", "graphai.api.celery_tasks.image module", "graphai.api.celery_tasks.ontology module", "graphai.api.celery_tasks.scraping module", "graphai.api.celery_tasks.summarization module", "graphai.api.celery_tasks.text module", "graphai.api.celery_tasks.translation module", "graphai.api.celery_tasks.video module", "graphai.api.celery_tasks.voice module", "graphai.api.common package", "graphai.api.common.celery_tools module", "graphai.api.common.graph module", "graphai.api.common.log module", "graphai.api.common.ontology module", "graphai.api.common.video module", "graphai.api.main module", "graphai.api.routers package", "graphai.api.routers.image module", "graphai.api.routers.ontology module", "graphai.api.routers.scraping module", "graphai.api.routers.summarization module", "graphai.api.routers.text module", "graphai.api.routers.translation module", "graphai.api.routers.video module", "graphai.api.routers.voice module", "graphai.api.schemas package", "graphai.api.schemas.common module", "graphai.api.schemas.image module", "graphai.api.schemas.ontology module", "graphai.api.schemas.scraping module", "graphai.api.schemas.summarization module", "graphai.api.schemas.text module", "graphai.api.schemas.translation module", "graphai.api.schemas.video module", "graphai.api.schemas.voice module", "graphai.core package", "graphai.core.common package", "graphai.core.common.caching module", "graphai.core.common.graph module", "graphai.core.common.ontology module", "graphai.core.common.scraping module", "graphai.core.common.video module", "graphai.core.interfaces package", "graphai.core.interfaces.celery_config module", "graphai.core.interfaces.db module", "graphai.core.interfaces.es module", "graphai.core.interfaces.wp module", "graphai.core.text package", "graphai.core.text.draw module", "graphai.core.text.keywords module", "graphai.core.utils package", "graphai.core.utils.breadcrumb module", "graphai.core.utils.progress_bar module", "graphai.core.utils.text package", "graphai.core.utils.text.clean module", "graphai.core.utils.text.io module", "graphai.core.utils.time package", "graphai.core.utils.time.date module", "graphai.core.utils.time.stopwatch module", "graphai.definitions module", "graphai.pipelines package", "graphai.pipelines.elasticsearch package", "graphai.pipelines.elasticsearch.create_index module", "graphai.pipelines.elasticsearch.populate_index module", "graphai.pipelines.investment package", "graphai.pipelines.investment.aggregate_recent_past module", "graphai.pipelines.investment.check_unit module", "graphai.pipelines.investment.compute_fundraisers_units module", "graphai.pipelines.investment.compute_investors_units module", "graphai.pipelines.investment.compute_investors_units_2 module", "graphai.pipelines.investment.compute_jaccard_index module", "graphai.pipelines.investment.concept_configuration module", "graphai.pipelines.investment.create_investments_graph module", "graphai.pipelines.investment.detect_fundraisers_concepts module", "graphai.pipelines.investment.main module", "graphai.pipelines.investment.parameters module", "graphai.pipelines.investment.toy_example module", "graphai.pipelines.validation package", "graphai.pipelines.validation.1_old module", "graphai.pipelines.validation.2_new module", "graphai.pipelines.validation.3_slides module", "graphai.pipelines.visualisation package", "graphai.pipelines.visualisation.startups-graph module", "graphai.pipelines.visualisation.startups-graph-2 module", "graphai.pipelines.visualisation.startups-graph-3 module", "graphai.pipelines.visualisation.startups-graph-4 module"], "terms": {"The": [0, 3, 40, 41, 43, 44, 51, 55, 61, 74], "contain": [0, 3, 34, 40, 43, 44, 46, 52, 66, 74], "tool": 0, "servic": 0, "enhanc": 0, "epfl": 0, "graph": [0, 12, 24, 34, 39, 51, 66, 74, 84], "project": 0, "ai": 0, "base": [0, 8, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 54, 55, 57, 58, 61, 74, 79], "util": [0, 38], "api": [0, 44, 49], "core": 0, "pipelin": 0, "definit": [0, 47, 74], "modul": [0, 1, 2, 12, 19, 28, 39, 45, 50, 53, 56, 59, 64, 67, 80, 84], "celery_task": 1, "common": [1, 2, 28, 38], "router": 1, "schema": [1, 47, 66], "main": [1, 67, 69], "imag": [2, 3, 19, 28, 44], "ontologi": [2, 12, 19, 24, 28, 29, 39, 51], "scrape": [2, 19, 28, 39], "summar": [2, 19, 28, 44], "text": [2, 3, 19, 23, 25, 28, 30, 33, 35, 38, 43, 44, 48, 49, 53], "translat": [2, 3, 19, 28, 44, 52], "video": [2, 3, 12, 19, 28, 39], "voic": [2, 19, 28], "format_api_result": 3, "id": [3, 34, 40, 41, 43, 46], "name": [3, 40, 44, 46, 58, 66], "statu": [3, 43, 46], "result": [3, 8, 24, 30, 33, 34, 35, 36, 37, 40, 41, 42, 44, 46, 48, 49, 51, 74], "format": [3, 44, 48, 60, 66], "come": [3, 66], "from": [3, 24, 40, 41, 42, 43, 44, 51, 52, 57, 66, 74], "celeri": [3, 46, 51], "output": [3, 29, 31, 44], "param": [3, 40, 43, 44, 46, 68, 70, 71, 72, 73, 75, 76], "task": [3, 46, 51, 55, 61], "return": [3, 8, 24, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 57, 58, 60, 61, 74], "appropri": 3, "dictionari": [3, 40, 43, 44, 48, 58], "compute_text_fingerprint_common": 3, "db_manag": 3, "token": [3, 20, 23, 25, 26, 27, 29, 30, 32, 36, 37, 40, 43, 44, 52], "forc": [3, 20, 23, 25, 26, 27, 30, 32, 33, 35, 36, 37, 40], "fals": [3, 15, 20, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 37, 40, 43, 44, 47, 52, 58, 61, 74], "fingerprint_lookup_retrieve_from_db": 3, "equality_condit": [3, 40], "none": [3, 15, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 40, 43, 44, 46, 47, 48, 54, 55, 58, 74, 75], "retriev": [3, 24, 40, 43, 44, 48, 61], "number": [3, 8, 40, 41, 43, 44, 48, 49, 55, 58, 74], "cach": [3, 39, 44], "row": [3, 40, 74], "relev": [3, 24, 34], "fingerprint": [3, 44], "lookup": 3, "dict": [3, 32, 33, 36, 40, 41, 43, 44, 48, 51, 58], "comput": [3, 8, 41, 42, 44, 74], "dbcachingmanagerbas": [3, 40], "object": [3, 29, 31, 34, 40, 41, 42, 44, 46, 47, 48, 49, 51, 54, 55, 58, 60, 61], "equal": [3, 40, 43], "condit": [3, 40, 47], "count": [3, 40, 44], "onli": [3, 24, 40, 44, 58, 66, 74], "us": [3, 8, 40, 43, 44, 48, 52, 57, 61, 66, 74], "unexpect": [3, 44, 74], "indent": [3, 44, 54, 58], "where": [3, 40, 44, 74], "need": [3, 40, 61], "done": [3, 24], "among": [3, 24], "same": [3, 43, 44, 74], "sourc": [3, 35, 41, 44], "target": [3, 35, 41, 44], "lang": [3, 44], "origin": [3, 40, 41, 42, 43, 44], "plu": [3, 41, 42, 44], "fingerprint_lookup_parallel": 3, "input_dict": 3, "i": [3, 8, 24, 40, 41, 43, 44, 51, 52, 55, 57, 61, 74], "n_total": 3, "min_similar": [3, 20, 23, 25, 26, 27, 44], "data_typ": 3, "audio": [3, 44], "perform": [3, 43, 44, 48, 49, 74], "parallel": 3, "previou": [3, 55, 61], "step": [3, 44], "index": [3, 43, 44, 48, 66, 74], "thi": [3, 8, 24, 44, 55, 66, 74], "total": [3, 15, 55, 61], "minimum": [3, 43, 44], "similar": [3, 40, 44, 74], "threshold": [3, 8, 27, 37, 44, 51, 52], "two": [3, 8, 40, 41, 43, 44], "consid": [3, 44], "match": [3, 40, 43, 44, 48], "type": [3, 8, 40, 41, 42, 43, 44, 48, 49, 51, 52, 57, 58], "data": [3, 20, 22, 23, 24, 25, 26, 27, 32, 43, 58, 66], "can": [3, 24, 40, 44, 61, 66], "mode": 3, "detail": [3, 40, 44], "closest": [3, 40, 44], "which": [3, 34, 40, 43, 44, 51, 52, 74], "fingerprint_lookup_direct": 3, "fp_result": 3, "fingerprint_lookup_callback": 3, "results_list": 3, "handl": 3, "collect": 3, "aggreg": [3, 8, 24], "databas": [3, 47], "insert": [3, 40], "list": [3, 24, 30, 31, 32, 34, 40, 41, 43, 44, 51, 52, 74], "aggregate_result": 8, "coef": 8, "0": [8, 24, 34, 37, 40, 41, 42, 43, 44, 51, 58, 60, 61, 68, 74], "5": [8, 24, 34, 42, 61], "panda": [8, 41, 42, 48, 49, 51, 60], "datafram": [8, 41, 42, 48, 49, 51, 74], "intermedi": [8, 41, 42], "wikifi": [8, 24, 34, 41, 42, 51], "uniqu": [8, 48, 49, 74], "keyword": [8, 23, 24, 34, 41, 42, 48, 49, 50], "pageid": [8, 34, 41, 42, 48, 49, 51, 74], "final": [8, 40, 61, 74], "Then": [8, 52], "mixedscor": [8, 34, 51], "everi": [8, 43, 44, 58, 74], "page": [8, 24, 34, 41, 43], "convex": 8, "combin": [8, 74], "other": [8, 24, 61], "score": [8, 24, 34, 41, 42, 44, 51, 52, 74], "paramet": [8, 41, 42, 44, 48, 49, 51, 52, 55, 57, 58, 61, 67, 74], "pd": [8, 41, 42, 48, 49, 74], "A": [8, 40, 41, 42, 44, 48, 49, 51, 52], "column": [8, 40, 41, 42, 47, 48, 49, 51, 74], "pagetitl": [8, 34, 41, 42, 48, 49, 51], "searchscor": [8, 34, 41, 42, 48, 49, 51], "levenshteinscor": [8, 34, 41, 42, 51], "graphscor": [8, 34, 41, 51], "ontologylocalscor": [8, 34, 42, 51], "ontologyglobalscor": [8, 34, 42, 51], "keywordsscor": [8, 34, 51], "float": [8, 24, 34, 36, 37, 41, 51, 52, 61, 74], "1": [8, 24, 34, 40, 41, 43, 44, 60, 61, 74], "control": [8, 74], "how": [8, 43, 44, 51, 52], "ar": [8, 24, 43, 44, 51, 52, 60, 74], "valu": [8, 40, 43, 44, 47, 74], "take": [8, 24, 74], "sum": 8, "over": [8, 74], "normalis": [8, 74], "max": [8, 41], "default": [8, 41, 42, 43, 44, 46, 51, 52, 61], "ani": [8, 52, 66, 74], "between": [8, 40, 44, 60, 61, 74], "linearli": [8, 60], "interpol": 8, "those": [8, 44], "approach": 8, "filter_result": 8, "epsilon": [8, 68], "min_vot": 8, "filter": [8, 24, 48, 51, 52], "depend": 8, "some": [8, 24, 55, 61, 74], "criteria": 8, "specifi": [8, 74], "all": [8, 40, 41, 43, 44, 48, 52, 61, 66, 74], "decid": 8, "whether": [8, 40, 41, 42, 43, 44, 51, 52, 61, 74], "good": 8, "enough": 8, "least": 8, "amount": 8, "int": [8, 24, 31, 34, 36, 41, 48, 49, 51, 55, 58], "exclud": [8, 40], "kept": [8, 74], "iff": 8, "celery_tool": 12, "log": [12, 54, 58], "get_n_celery_work": 13, "msg": [15, 54, 58, 61], "second": [15, 40, 43, 44, 61], "length": [15, 43, 44], "64": 15, "async": [18, 20, 21, 22, 23, 24, 25, 26, 27], "init": 18, "redirect_doc": 18, "get_slide_fingerprint_chain_list": 20, "n_job": [20, 23, 25, 26, 27], "8": [20, 23, 25, 26, 27, 44], "ignore_fp_result": [20, 23, 25, 26, 27], "results_to_return": [20, 23, 25, 26, 27], "calculate_fingerprint": [20, 23, 25, 26], "imagefingerprintrequest": [20, 30], "calculate_fingerprint_statu": [20, 23, 25, 26], "task_id": [20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 46], "extract_text": 20, "extracttextrequest": [20, 30], "extract_text_statu": 20, "detect_ocr_language_statu": 20, "ontology_tree_response_handl": 21, "id_and_result": 21, "tree": [21, 29, 31, 44], "parent": 21, "category_id": [21, 42], "children": 21, "extract_sublink": 22, "getsublinksrequest": [22, 32], "extract_sublinks_statu": 22, "extract_page_cont": 22, "extractcontentrequest": [22, 32], "extract_page_content_statu": 22, "get_summary_text_fingerprint_chain_list": 23, "text_typ": [23, 33, 44], "summary_typ": [23, 33, 44], "len_class": [23, 33, 44], "tone": [23, 33, 44], "get_summary_task_chain": 23, "true": [23, 24, 36, 40, 41, 42, 43, 44, 52, 54, 58, 61, 74], "skip_token": 23, "summaryfingerprintrequest": [23, 33], "summarizationrequest": [23, 33], "create_titl": 23, "translate_statu": [23, 25], "keywordsrequest": [24, 34], "use_nltk": [24, 52], "bool": [24, 30, 32, 33, 35, 36, 37, 41, 42, 48, 51, 52, 58, 74], "process": [24, 43], "raw": [24, 34, 52, 57], "e": [24, 43, 44, 45], "g": [24, 44], "an": [24, 40, 44, 58, 66], "abstract": [24, 40], "public": [24, 33], "cours": [24, 33, 44], "descript": 24, "lectur": [24, 33, 44], "slide": [24, 44], "wikifyrequest": [24, 34], "method": [24, 30, 44, 74], "str": [24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 48, 49, 52, 57, 58, 61, 74], "restrict_to_ontologi": 24, "graph_score_smooth": 24, "ontology_score_smooth": 24, "keywords_score_smooth": 24, "normalisation_coef": 24, "filtering_threshold": 24, "filtering_min_vot": 24, "refresh_scor": 24, "concept": [24, 33, 51, 66, 69, 74], "wikipedia": [24, 34, 49], "each": [24, 34, 41, 43, 44, 55, 61, 74], "set": [24, 34, 44, 46, 48, 49, 51, 74], "quantifi": 24, "follow": [24, 44, 48, 55, 57, 61, 74], "extract": [24, 34, 43, 44, 52], "automat": [24, 40, 44], "omit": 24, "keyword_list": 24, "provid": [24, 41, 42, 43, 44, 46], "input": [24, 43, 44], "instead": [24, 40], "raw_text": [24, 34], "wikisearch": [24, 48, 49], "For": [24, 74], "10": [24, 48, 49, 52, 74], "through": [24, 44], "request": [24, 40, 43], "elasticsearch": [24, 48, 63], "pair": [24, 41, 52, 61, 74], "sever": [24, 34, 61], "deriv": 24, "account": 24, "accord": [24, 43, 74], "rule": 24, "keep": [24, 55], "most": [24, 40, 44], "wikify_ontology_svg": 24, "wikifyresponseelem": [24, 34], "level": [24, 51], "2": [24, 44, 61, 74, 84], "svg": [24, 51], "file": [24, 40, 44, 51, 58], "repres": [24, 29, 31, 34, 52, 55, 61], "subgraph": 24, "induc": [24, 51], "wikify_graph_svg": 24, "concept_score_threshold": [24, 51], "3": [24, 51, 57, 61, 84], "edge_threshold": [24, 51], "min_component_s": [24, 51], "priority_test_text": 24, "get_translation_text_fingerprint_chain_list": 25, "src": [25, 44], "tgt": [25, 44], "textfingerprintrequest": [25, 35], "translationrequest": [25, 35], "text_detect_languag": 25, "textdetectlanguagerequest": [25, 35], "text_detect_language_statu": 25, "get_video_fingerprint_chain_list": 26, "retrieve_fil": 26, "retrieveurlrequest": [26, 36], "get_retrieve_file_statu": 26, "videofingerprintrequest": [26, 36], "get_fil": 26, "filerequest": [26, 29], "extract_audio": 26, "extractaudiorequest": [26, 36], "extract_audio_statu": 26, "detect_slid": 26, "detectslidesrequest": [26, 36], "detect_slides_statu": 26, "get_audio_fingerprint_chain_list": 27, "remove_sil": [27, 37], "calculate_audio_fingerprint": 27, "audiofingerprintrequest": [27, 37], "calculate_audio_fingerprint_statu": 27, "transcrib": [27, 44], "audiotranscriptionrequest": [27, 37], "transcribe_statu": 27, "detect_languag": 27, "audiodetectlanguagerequest": [27, 37], "priority_test": 27, "detect_language_statu": 27, "class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 57, 58, 61], "taskidrespons": 29, "basemodel": [29, 30, 31, 32, 33, 34, 35, 36, 37], "endpoint": [29, 31], "taskstatusrespons": [29, 30, 31, 32, 33, 35, 36, 37], "task_nam": [29, 30, 31, 32, 33, 35, 36, 37], "task_statu": [29, 30, 31, 32, 33, 35, 36, 37], "task_result": [29, 30, 31, 32, 33, 35, 36, 37, 46], "jsonwrappervalu": 29, "abc": [29, 40], "imagefingerprinttaskrespons": 30, "fresh": [30, 32, 33, 35, 36, 37], "closest_token": [30, 33, 35, 36, 37], "closest_token_origin": [30, 37], "success": [30, 32, 33, 35, 36, 37, 44], "imagefingerprintrespons": 30, "liter": [30, 33, 35, 36], "googl": [30, 44], "tesseract": [30, 44], "individualocrresult": 30, "extracttexttaskrespons": 30, "languag": [30, 35, 36, 37, 44], "extracttextrespons": 30, "detectocrlanguagetaskrespons": 30, "detectocrlanguagerespons": 30, "treeresponseelem": 31, "childcategoryid": 31, "parentcategoryid": 31, "treerespons": 31, "url": [32, 36, 43, 44, 57], "getsublinkstaskrespons": 32, "validated_url": [32, 43], "sublink": [32, 43], "status_msg": 32, "getsublinksrespons": 32, "header": [32, 43], "long_pattern": 32, "extractcontenttaskrespons": 32, "extractcontentrespons": 32, "titl": [33, 44, 48], "summari": [33, 44, 61], "person": 33, "unit": 33, "mooc": 33, "vshort": [33, 44], "short": [33, 44], "normal": [33, 44, 52, 57], "info": [33, 44, 46], "promo": [33, 44], "summaryfingerprinttaskrespons": 33, "summaryfingerprintrespons": 33, "use_keyword": 33, "summarizationtaskrespons": 33, "text_too_larg": [33, 35], "summarizationrespons": 33, "inform": [34, 44, 48], "anchor": 34, "defin": [34, 74, 78], "search": [34, 43, 44, 48, 49], "space": [34, 43, 52, 58], "It": [34, 52, 57, 74], "consist": [34, 44], "measur": 34, "degre": 34, "respect": [34, 60, 74], "config": 34, "schema_extra": 34, "exampl": [34, 41, 52, 57, 74], "1196": [34, 41], "angl": 34, "8055555555555556": 34, "44735199351890065": 34, "9058463104630012": 34, "152547": 34, "bisect": 34, "3333333333333333": 34, "16661245633224378": 34, "22717425120724127": 34, "6666666666666667": 34, "609271523178808": 34, "44715741719086977": 34, "23972889": 34, "distance_from_a_point_to_a_lin": 34, "16666666666666669": 34, "2134432477817427": 34, "003590346636521923": 34, "21885521885521886": 34, "19791666666666666": 34, "19828593689131283": 34, "17781458572659029": 34, "946975": [34, 41], "line_": 34, "geometri": 34, "33567080901262164": 34, "8232323232323234": 34, "7916666666666666": 34, "7855473315153876": 34, "7886663359580247": 34, "22634860": 34, "line_seg": 34, "5555555555555556": 34, "3582111602475977": 34, "42461810549112244": 34, "43097643097643096": 34, "75": [34, 55], "6026490066225165": 34, "5277457623305826": 34, "2175469": 34, "non": [34, 40, 48], "line": [34, 44, 58, 74], "sight_propag": 34, "19444444444444448": 34, "39019342923035233": 34, "01572170017309725": 34, "21212121212121213": 34, "11647727272727273": 34, "5087650954421504": 34, "2950855110143057": 34, "133496": 34, "parallelogram": 34, "3055555555555556": 34, "13627674782665528": 34, "14484503981375635": 34, "4288185842201275": 34, "76944": 34, "perpendicular": 34, "19444444444444445": 34, "039652736888335365": 34, "15017752515904018": 34, "25": [34, 55], "2584729255940787": 34, "19421461143444865": 34, "25278": 34, "quadrilater": 34, "02777777777777779": 34, "15367913840285474": 34, "12360559235107477": 34, "36363636363636365": 34, "3307362680171406": 34, "21973432050168798": 34, "76956": 34, "right_angl": 34, "4166666666666667": 34, "4451948682556247": 34, "12678424818870415": 34, "42424242424242425": 34, "4107908063887807": 34, "3996645939435453": 34, "94102": 34, "solid_angl": 34, "3888888888888889": 34, "6912823774628103": 34, "08695255651117278": 34, "196969696969697": 34, "15909090909090912": 34, "7415270744059212": 34, "4580780578246384": 34, "31482": 34, "tangent": 34, "4722222222222222": 34, "29631455223594527": 34, "3573397570845174": 34, "6414141414141414": 34, "59375": 34, "48284225283305426": 34, "30654": 34, "triangl": 34, "5717479784842091": 34, "2535403349997643": 34, "47723102055958355": 34, "en": [35, 36, 44], "fr": [35, 36, 44], "de": 35, "textfingerprinttaskrespons": 35, "textfingerprintrespons": 35, "translationtaskrespons": 35, "translationrespons": 35, "textdetectlanguagetaskrespons": 35, "textdetectlanguagerespons": 35, "playlist": [36, 44], "retrieveurlresponseinn": 36, "retrieveurlrespons": 36, "videofingerprinttaskrespons": 36, "videofingerprintrespons": 36, "force_non_self": 36, "extractaudiotaskrespons": 36, "durat": [36, 37, 44], "extractaudiorespons": 36, "slidetokenandtimestamp": 36, "timestamp": [36, 44, 60], "detectslidestaskrespons": 36, "slide_token": 36, "detectslidesrespons": 36, "audiofingerprinttaskrespons": 37, "fp_nosil": 37, "audiofingerprintrespons": 37, "audiodetectlanguagetaskrespons": 37, "audiodetectlanguagerespons": 37, "force_lang": [37, 44], "audiotranscriptiontaskrespons": 37, "transcript_result": 37, "subtitle_result": 37, "json": [37, 44, 58], "audiotranscriptionrespons": 37, "interfac": 38, "make_sure_path_exist": 40, "path": [40, 41, 44, 79], "file_at_the_end": 40, "full_perm": 40, "recurs": [40, 44], "creat": [40, 44, 46, 48, 58, 61], "folder": [40, 44], "exist": [40, 44, 58], "thu": 40, "doesn": [40, 44], "t": [40, 41, 44, 52, 58], "filenam": [40, 44, 58], "end": [40, 43, 44, 66, 74], "file_exist": 40, "file_path": 40, "check": [40, 43], "given": [40, 43, 44, 46, 48, 49, 51, 52, 57, 58, 60, 74], "otherwis": [40, 44, 52, 74], "delete_fil": 40, "delet": [40, 48, 57], "full": [40, 44], "create_symlink_between_path": 40, "old_path": 40, "new_path": 40, "symlink": 40, "old": 40, "real": 40, "new": [40, 44, 61], "surround_with_charact": 40, "": [40, 41, 43, 44, 57], "c": [40, 55, 57, 74], "surround": 40, "string": [40, 43, 44, 52], "charact": [40, 43], "escape_single_quot": 40, "escap": 40, "singl": [40, 44], "quot": [40, 44], "sql": 40, "queri": [40, 47, 48, 49], "add_where_or_and": 40, "prepar": 40, "ad": 40, "alreadi": [40, 44], "have": [40, 74], "one": [40, 44, 52, 55, 61, 74], "AND": 40, "doe": [40, 44, 58], "add_equality_condit": 40, "gener": [40, 44, 52], "would": 40, "form": 40, "kei": [40, 41, 44, 74], "add_non_null_condit": 40, "col": 40, "null": 40, "cannot": 40, "turn": 40, "NOT": 40, "cache_t": 40, "most_similar_t": 40, "init_db": 40, "delete_cache_row": 40, "id_token": 40, "tabl": [40, 78], "insert_or_update_detail": 40, "values_to_insert": 40, "updat": [40, 55], "identifi": [40, 44], "map": [40, 43, 48, 60], "update_details_if_exist": 40, "get_detail": 40, "using_most_similar": 40, "get": [40, 57], "resolv": [40, 43], "chain": 40, "own": 40, "If": [40, 44, 52, 58, 74], "itself": [40, 44], "get_origin": 40, "applic": 40, "get_details_using_origin": 40, "origin_token": 40, "get_all_detail": 40, "start": [40, 43, 44], "limit": [40, 48, 49], "exclude_token": 40, "allow_nul": 40, "earliest_d": 40, "latest_d": 40, "possibli": 40, "constraint": [40, 44], "offset": 40, "claus": [40, 48], "allow": 40, "earliest": 40, "date": [40, 59, 66], "latest": 40, "colnam": 40, "get_cache_count": 40, "non_null_col": 40, "enforc": 40, "satisfi": [40, 44], "insert_or_update_closest_match": 40, "get_closest_match": 40, "get_all_closest_match": 40, "videodbcachingmanag": 40, "audiodbcachingmanag": 40, "slidedbcachingmanag": 40, "textdbcachingmanag": 40, "summarydbcachingmanag": 40, "videoconfig": 40, "get_root_dir": 40, "get_image_dir": 40, "get_audio_dir": 40, "get_video_dir": 40, "get_transcript_dir": 40, "concat_file_path": 40, "subfold": 40, "concaten": 40, "root": [40, 44], "dir": 40, "should": [40, 48, 58, 66], "generate_filepath": 40, "force_dir": 40, "its": [40, 43, 44, 74], "particular": 40, "create_symlink": 40, "new_filenam": 40, "conceptsgraph": [41, 51], "fetch_from_db": [41, 42], "old_compute_scor": 41, "source_page_id": 41, "target_page_id": 41, "possibl": [41, 52], "displaystyl": 41, "frac": 41, "ln": 41, "rebound": 41, "out": [41, 51, 52], "min": 41, "element": [41, 43], "ha": [41, 74], "cg": 41, "compute_scor": 41, "6220": 41, "18973446": 41, "9417": 41, "5193576613841849": 41, "4740698357575134": 41, "3591100561928845": 41, "5343247664351338": 41, "530184349205493": 41, "40043881227279876": 41, "add_graph_scor": 41, "smooth": [41, 42], "includ": [41, 42, 61], "appli": [41, 42], "transform": [41, 42], "bump": 41, "avoid": [41, 58], "neg": 41, "exponenti": 41, "shape": [41, 74], "get_concept_categori": 42, "page_id": 42, "get_predefined_tre": 42, "get_category_par": 42, "get_category_children": 42, "add_concepts_categori": 42, "add_categories_categori": 42, "filter_concept": 42, "add_ontology_scor": 42, "push": 42, "awai": 42, "compare_str": 43, "string1": 43, "string2": 43, "compar": [43, 44, 74], "arrai": 43, "first": [43, 44, 58, 61], "indic": [43, 44, 48], "find_consecutive_run": 43, "v": [43, 44, 47, 74], "min_run": 43, "32": 43, "find": [43, 44, 47], "consecut": [43, 61], "run": [43, 55, 61, 66], "sequenc": [43, 44], "40": [43, 44], "time": [43, 44, 53, 55], "tupl": [43, 52, 74], "k1": [43, 44], "k2": [43, 44], "find_edge_pattern": 43, "content_stack": 43, "flip_str": 43, "repeat": 43, "pattern": 43, "edg": [43, 51, 74], "begin": [43, 44, 61], "content": [43, 44, 58], "webpag": 43, "flip": 43, "footer": 43, "string_circular_shift": 43, "shift": 43, "circular": 43, "mani": [43, 44, 51], "find_spac": 43, "point": [43, 66], "shift_to_max_correl": 43, "s1": 43, "s2": 43, "maximum": [43, 44, 48, 49, 52, 74], "correl": 43, "posit": 43, "them": [43, 44], "largest": 43, "optim": 43, "intersect": 43, "find_repeated_pattern": 43, "min_length": 43, "1024": 43, "everywher": 43, "within": 43, "substr": 43, "extract_text_from_url": 43, "request_head": 43, "max_length": [43, 44], "tag_search_sequ": 43, "headless": 43, "browser": 43, "tag": [43, 57], "check_url": 43, "test_url": 43, "access": 43, "fulli": 43, "so": [43, 44, 66], "valid": [43, 63], "messag": [43, 61], "code": [43, 44, 58], "create_base_url_token": 43, "initialize_url": 43, "base_url": 43, "initi": 43, "determin": 43, "protocol": 43, "http": 43, "correct": 43, "get_sublink": 43, "fill": 43, "later": 43, "parse_page_typ": 43, "pars": [43, 44, 57], "predefin": 43, "process_all_sublink": 43, "modifi": 43, "remove_head": 43, "remov": [43, 44], "elimin": 43, "remove_long_pattern": 43, "long": [43, 44], "write_text_fil": 44, "filename_with_path": 44, "write": 44, "textual": 44, "write_json_fil": 44, "d": [44, 55, 57], "read_text_fil": 44, "open": 44, "read": [44, 58], "read_json_fil": 44, "md5_text": 44, "md5": 44, "hash": 44, "generate_random_token": 44, "random": [44, 79], "current": [44, 60], "format_datetime_for_mysql": 44, "dt": 44, "get_current_datetim": 44, "datetim": [44, 60], "mysql": 44, "generate_src_tgt_dict": 44, "generate_translation_text_token": 44, "retrieve_file_from_url": 44, "output_filename_with_path": 44, "output_token": 44, "wget": 44, "store": [44, 51], "local": 44, "retrieve_file_from_kaltura": 44, "m3u8": 44, "kaltura": 44, "perform_prob": 44, "input_filename_with_path": 44, "probe": 44, "ffprobe": 44, "see": 44, "document": [44, 48], "generate_symbolic_token": 44, "symbol": 44, "md5_video_or_audio": 44, "stream": 44, "detect_audio_format_and_dur": 44, "input_token": 44, "detect": [44, 66], "track": [44, 55, 61], "ogg": 44, "extract_audio_from_video": 44, "extract_media_seg": 44, "segment": 44, "find_beginning_and_ending_sil": 44, "distance_from_end_tol": 44, "01": [44, 68], "noise_thresh": 44, "0001": 44, "silenc": 44, "toler": 44, "distanc": [44, 74], "nois": 44, "remove_silence_doublesid": 44, "without": [44, 61, 74], "unsuccess": 44, "perceptual_hash_audio": 44, "7200": 44, "perceptu": 44, "represent": 44, "decod": 44, "both": [44, 74], "perceptual_hash_imag": 44, "hash_siz": 44, "16": 44, "size": [44, 51], "perceptual_hash_text": 44, "strong": [44, 57], "min_window_length": 44, "window": 44, "k": [44, 74], "gram": 44, "max_window_length": 44, "hash_len": 44, "compare_decoded_fingerprint": 44, "decoded_1": 44, "decoded_2": 44, "fuzzi": 44, "ratio": [44, 74], "compare_encoded_fingerprint": 44, "f1": 44, "f2": 44, "decoder_func": 44, "function": [44, 61, 74], "decode_fingerprint": 44, "encod": [44, 57], "exact": 44, "find_closest_fingerprint_from_list": 44, "target_fp": 44, "fp_list": 44, "token_list": 44, "date_list": 44, "candid": 44, "highest": 44, "whose": [44, 74], "abov": [44, 60, 74], "correspond": 44, "lower": 44, "than": [44, 52, 74], "block": [44, 58, 61], "blank": [44, 74], "unind": [44, 74], "differ": [44, 61, 74], "three": 44, "criterion": 44, "find_closest_audio_fingerprint_from_list": 44, "find_closest_image_fingerprint_from_list": 44, "extract_fram": 44, "output_folder_with_path": 44, "output_fold": 44, "frame": 44, "generate_frame_sample_indic": 44, "input_folder_with_path": 44, "12": 44, "we": 44, "don": [44, 52], "our": 44, "calcul": 44, "read_txt_gz_fil": 44, "fp": 44, "txt": 44, "gz": 44, "write_txt_gz_fil": 44, "read_json_gz_fil": 44, "perform_tesseract_ocr": 44, "image_path": 44, "ocr": 44, "tesseract_ocr_or_get_cach": 44, "ocr_path": 44, "langaug": 44, "frame_ocr_dist": 44, "nlp_model": 44, "nlp": 44, "model": 44, "frame_hash_similar": 44, "compute_ocr_noise_level": 44, "frame_sample_indic": 44, "sampl": 44, "below": [44, 51, 52, 60], "compute_ocr_threshold": 44, "distance_list": 44, "default_threshold": 44, "subsequ": 44, "empti": 44, "check_ocr_and_hash_threshold": 44, "k_l": 44, "k_r": 44, "ocr_dist_threshold": 44, "hash_similarity_threshold": 44, "frame_ocr_transit": 44, "transit": 44, "binari": 44, "thei": [44, 52], "frame_format": 44, "leftmost": 44, "rightmost": 44, "distinct": 44, "found": 44, "compute_video_ocr_transit": 44, "hash_dist_threshold": 44, "keep_first": 44, "transitori": 44, "detect_text_languag": 44, "count_tokens_for_openai": 44, "cl100k_base": 44, "openai": 44, "force_dict_to_text": 44, "generate_summary_text_token": 44, "generate_summary_type_dict": 44, "whispertranscriptionmodel": 44, "load_model_whisp": 44, "lazi": 44, "load": 44, "whisper": 44, "memori": 44, "model_typ": 44, "doc": [44, 48, 66], "detect_audio_segment_lang_whisp": 44, "30": 44, "transcribe_audio_whisp": 44, "verbos": 44, "explicitli": 44, "feed": [44, 57], "transcript": 44, "like": 44, "subtitl": 44, "nlpmodel": 44, "get_nlp_model": 44, "googleocrmodel": 44, "establish_connect": 44, "lazili": 44, "connect": [44, 51], "successfulli": 44, "establish": 44, "perform_ocr": 44, "text_detect": 44, "document_text_detect": 44, "wait_for_ocr_result": 44, "image_object": 44, "dtd": 44, "retri": 44, "6": [44, 61], "make": 44, "call": [44, 52], "wait": 44, "td": 44, "case": [44, 58], "failur": 44, "translationmodel": 44, "load_model": 44, "huggingfac": 44, "pysbd": 44, "unpunctu": 44, "too": [44, 61], "flag": 44, "fingerprintparamet": 44, "load_valu": 44, "fail": 44, "get_min_sim_text": 44, "get_min_sim_imag": 44, "get_min_sim_audio": 44, "get_min_sim_video": 44, "chatgptsummar": 44, "ensur": 44, "boolean": [44, 61], "wa": 44, "generate_summari": 44, "text_or_dict": 44, "max_normal_len": 44, "100": [44, 55], "max_short_len": 44, "synthes": 44, "produc": 44, "either": 44, "sentenc": [44, 52], "market": 44, "approxim": 44, "word": [44, 52], "were": 44, "celery_config": 45, "db": [45, 75], "wp": 45, "route_task": 46, "arg": 46, "kwarg": 46, "option": 46, "kw": 46, "baseconfig": 46, "developmentconfig": 46, "get_set": 46, "create_celeri": 46, "app": 46, "get_celery_task": 46, "asyncresult": 46, "get_task_info": 46, "quote_valu": 47, "commun": [47, 48, 49], "epflgraph": [47, 48], "execute_queri": 47, "execut": [47, 55, 61], "custom": 47, "build_conditions_list": 47, "table_nam": 47, "field": [47, 48], "print_queri": 47, "find_or_split": 47, "filter_field": 47, "filter_id": 47, "drop_tabl": 47, "create_t": 47, "insert_datafram": 47, "df": [47, 68, 75], "drop_create_insert_t": 47, "check_if_table_exist": 47, "es_bool": 48, "must": 48, "must_not": 48, "build": 48, "argument": 48, "es_match": 48, "boost": 48, "oper": 48, "es_multi_match": 48, "minimum_should_match": 48, "multi_match": 48, "es_dis_max": 48, "dis_max": 48, "instanc": 48, "searchrank": [48, 49], "search_mediawiki": 48, "mediawiki": [48, 66], "structur": 48, "search_mediawiki_no_rescor": 48, "skip": [48, 58], "rescor": 48, "part": 48, "search_mediawiki_no_plain": 48, "restrict": 48, "plain": 48, "search_mediawiki_restrict_4": 48, "head": 48, "opening_text": 48, "search_mediawiki_restrict_2": 48, "about": [48, 52], "respons": 48, "index_doc": [48, 66], "create_index": [48, 64], "delete_index": 48, "refresh": 48, "draw": 50, "draw_ontologi": 51, "neighbourhood": 51, "tmp": 51, "serialis": 51, "orient": 51, "record": 51, "go": 51, "up": 51, "succeed": 51, "draw_graph": 51, "compon": 51, "word_token": 52, "separ": 52, "you": [52, 57], "rake_extract": 52, "split_word": 52, "return_scor": 52, "auto": 52, "filter_past_tenses_and_adverb": 52, "unconstrain": 52, "python": 52, "rake": 52, "nltk": 52, "more": [52, 55, 61], "split": 52, "retur": 52, "minim": 52, "ignor": 52, "past": 52, "tens": 52, "participl": 52, "adverb": 52, "join": [52, 57], "crowd": 52, "young": 52, "boi": 52, "re": 52, "foolin": 52, "around": 52, "corner": 52, "drunk": 52, "dress": 52, "best": 52, "brown": 52, "baggi": 52, "platform": 52, "sole": 52, "give": 52, "damn": 52, "trumpet": 52, "playin": 52, "band": 52, "ain": 52, "what": 52, "rock": 52, "roll": 52, "get_keyword": 52, "p": [52, 57], "breadcrumb": 53, "progress_bar": 53, "debug": [54, 58], "color": [54, 58], "time_color": 54, "grai": 54, "report": [54, 61], "outdent": 54, "progressbar": 55, "n_iter": 55, "bar_length": 55, "50": 55, "progress": 55, "bar": 55, "usag": [55, 61], "letter": 55, "b": 55, "pb": 55, "len": 55, "consum": [55, 61], "00": 55, "print": [55, 57, 58, 60, 61], "iter": 55, "percentag": 55, "complet": [55, 61, 79], "overwrit": 55, "state": 55, "ban": 55, "reset": [55, 58, 61], "increment": 55, "counter": 55, "reus": [55, 61], "clean": 56, "io": 56, "htmlcleaner": 57, "htmlparser": 57, "html": 57, "shiver": 57, "dark": 57, "br": 57, "rain": 57, "park": 57, "meantim": 57, "get_data": 57, "handle_starttag": 57, "attr": 57, "handle_endtag": 57, "handle_data": 57, "solv": 57, "problem": 57, "email": 57, "convert": 57, "lowercas": 57, "u2018rain": 57, "u2019": 57, "lt": 57, "evalu": 58, "pref": 58, "x1b": 58, "0m": 58, "black": 58, "30m": 58, "blue": 58, "34m": 58, "cyan": 58, "36m": 58, "green": 58, "32m": 58, "magenta": 58, "35m": 58, "red": 58, "31m": 58, "white": 58, "37m": 58, "yellow": 58, "33m": 58, "cprint": 58, "is_bold": 58, "bold": 58, "pprint": 58, "inlin": 58, "only_first": 58, "pretti": 58, "preced": 58, "ellipsi": 58, "big": 58, "read_json": 58, "save_json": 58, "save": 58, "mkdir": 58, "dirnam": 58, "directori": 58, "stopwatch": 59, "now": 60, "2022": 60, "06": 60, "28": 60, "09": 60, "46": 60, "21": 60, "677968": 60, "rescal": 60, "min_dat": 60, "max_dat": 60, "seri": 60, "rang": [60, 74], "assum": [60, 74], "yyyi": 60, "mm": 60, "dd": 60, "add_year": 60, "n_year": 60, "sw": 61, "delta": 61, "4": [61, 84], "284306764602661": 61, "variabl": 61, "well": 61, "t1": 61, "t2": 61, "yet": 61, "t3": 61, "609307289123535": 61, "849977970123291": 61, "660188913345337": 61, "also": 61, "preprocess": 61, "pre_tim": 61, "task_tim": 61, "postprocess": 61, "post_tim": 61, "total_tim": 61, "f": 61, "proport": 61, "5176954220125477": 61, "tick": 61, "replac": [61, 74], "partial": 61, "furthermor": 61, "19": 61, "86": 61, "lap": 61, "74": 61, "11": 61, "66": 61, "45": 61, "checkpoint": 61, "finish": 61, "last": 61, "befor": [61, 74], "invest": 63, "visualis": 63, "populate_index": 64, "script": 66, "popul": 66, "aitor_concepts_": 66, "directli": 66, "campus_analyt": 66, "after": 66, "creation": [66, 78], "said": 66, "could": 66, "veri": 66, "aggregate_recent_past": 67, "check_unit": 67, "compute_fundraisers_unit": 67, "compute_investors_unit": 67, "compute_investors_units_2": 67, "compute_jaccard_index": 67, "concept_configur": 67, "create_investments_graph": 67, "detect_fundraisers_concept": 67, "toy_exampl": 67, "compute_year_coeffici": 68, "recent_past": 68, "rescale_scor": 68, "year": 68, "aggregate_year": 68, "groupby_column": [68, 75], "normalize_scor": 68, "score_column": 68, "show_trend": 69, "unit_id": 69, "unit_concept": 69, "show_matchmaking_list_view": 69, "investors_concepts_jaccard": 69, "investors_concept": 69, "unit_concept_id": 69, "show_matchmaking_chart_view": 69, "unit_investor": 69, "time_window": 69, "norm": 74, "x": 74, "configur": 74, "investorid": 74, "sqrt": 74, "sum_": 74, "o": 74, "divid": 74, "henc": 74, "mix": 74, "min_ratio": 74, "05": 74, "sourcepageid": 74, "targetpageid": 74, "weight": 74, "arithmet": 74, "mean": 74, "product": 74, "ball": 74, "loop": 74, "normalise_graph": 74, "add": 74, "miss": 74, "revers": 74, "averag": 74, "vertex": 74, "direct": 74, "y": 74, "associ": 74, "key_x": 74, "key_i": 74, "geometr": 74, "compute_affin": 74, "mix_x": 74, "mix_i": 74, "normalise_befor": 74, "cosin": 74, "affin": 74, "requir": 74, "recommend": 74, "low": 74, "euclidean": 74, "notic": 74, "faster": 74, "coeffici": 74, "inf": 74, "typic": 74, "higher": 74, "assign": 74, "unus": 74, "u": 74, "squar": 74, "equival": 74, "scalar": 74, "tanh": 74, "denot": 74, "get_fr": 75, "get_investors_fr": 75, "fr_id": 75, "get_frs_fundrais": 75, "get_fundraisers_concept": 75, "fundraiser_id": 75, "derive_yearly_data": 75, "date_column": 75, "amount_column": 75, "build_prefix": 78, "n": 79, "1_old": 80, "2_new": 80, "3_slide": 80, "startup": 84}, "objects": {"": [[0, 0, 0, "-", "graphai"]], "graphai": [[1, 0, 0, "-", "api"], [38, 0, 0, "-", "core"], [62, 0, 0, "-", "definitions"], [63, 0, 0, "-", "pipelines"]], "graphai.api": [[2, 0, 0, "-", "celery_tasks"], [12, 0, 0, "-", "common"], [18, 0, 0, "-", "main"], [19, 0, 0, "-", "routers"], [28, 0, 0, "-", "schemas"]], "graphai.api.celery_tasks": [[3, 0, 0, "-", "common"], [4, 0, 0, "-", "image"], [5, 0, 0, "-", "ontology"], [6, 0, 0, "-", "scraping"], [7, 0, 0, "-", "summarization"], [8, 0, 0, "-", "text"], [9, 0, 0, "-", "translation"], [10, 0, 0, "-", "video"], [11, 0, 0, "-", "voice"]], "graphai.api.celery_tasks.common": [[3, 1, 1, "", "compute_text_fingerprint_common"], [3, 1, 1, "", "fingerprint_lookup_callback"], [3, 1, 1, "", "fingerprint_lookup_direct"], [3, 1, 1, "", "fingerprint_lookup_parallel"], [3, 1, 1, "", "fingerprint_lookup_retrieve_from_db"], [3, 1, 1, "", "format_api_results"]], "graphai.api.celery_tasks.text": [[8, 1, 1, "", "aggregate_results"], [8, 1, 1, "", "filter_results"]], "graphai.api.common": [[13, 0, 0, "-", "celery_tools"], [14, 0, 0, "-", "graph"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "ontology"], [17, 0, 0, "-", "video"]], "graphai.api.common.celery_tools": [[13, 1, 1, "", "get_n_celery_workers"]], "graphai.api.common.log": [[15, 1, 1, "", "log"]], "graphai.api.main": [[18, 1, 1, "", "init"], [18, 1, 1, "", "redirect_docs"]], "graphai.api.routers": [[20, 0, 0, "-", "image"], [21, 0, 0, "-", "ontology"], [22, 0, 0, "-", "scraping"], [23, 0, 0, "-", "summarization"], [24, 0, 0, "-", "text"], [25, 0, 0, "-", "translation"], [26, 0, 0, "-", "video"], [27, 0, 0, "-", "voice"]], "graphai.api.routers.image": [[20, 1, 1, "", "calculate_fingerprint"], [20, 1, 1, "", "calculate_fingerprint_status"], [20, 1, 1, "", "detect_ocr_language_status"], [20, 1, 1, "", "extract_text"], [20, 1, 1, "", "extract_text_status"], [20, 1, 1, "", "get_slide_fingerprint_chain_list"]], "graphai.api.routers.ontology": [[21, 1, 1, "", "children"], [21, 1, 1, "", "ontology_tree_response_handler"], [21, 1, 1, "", "parent"], [21, 1, 1, "", "tree"]], "graphai.api.routers.scraping": [[22, 1, 1, "", "extract_page_content"], [22, 1, 1, "", "extract_page_content_status"], [22, 1, 1, "", "extract_sublinks"], [22, 1, 1, "", "extract_sublinks_status"]], "graphai.api.routers.summarization": [[23, 1, 1, "", "calculate_fingerprint"], [23, 1, 1, "", "calculate_fingerprint_status"], [23, 1, 1, "", "create_title"], [23, 1, 1, "", "get_summary_task_chain"], [23, 1, 1, "", "get_summary_text_fingerprint_chain_list"], [23, 1, 1, "", "summarize"], [23, 1, 1, "", "translate_status"]], "graphai.api.routers.text": [[24, 1, 1, "", "keywords"], [24, 1, 1, "", "priority_test_text"], [24, 1, 1, "", "wikify"], [24, 1, 1, "", "wikify_graph_svg"], [24, 1, 1, "", "wikify_ontology_svg"]], "graphai.api.routers.translation": [[25, 1, 1, "", "calculate_fingerprint"], [25, 1, 1, "", "calculate_fingerprint_status"], [25, 1, 1, "", "get_translation_text_fingerprint_chain_list"], [25, 1, 1, "", "text_detect_language"], [25, 1, 1, "", "text_detect_language_status"], [25, 1, 1, "", "translate"], [25, 1, 1, "", "translate_status"]], "graphai.api.routers.video": [[26, 1, 1, "", "calculate_fingerprint"], [26, 1, 1, "", "calculate_fingerprint_status"], [26, 1, 1, "", "detect_slides"], [26, 1, 1, "", "detect_slides_status"], [26, 1, 1, "", "extract_audio"], [26, 1, 1, "", "extract_audio_status"], [26, 1, 1, "", "get_file"], [26, 1, 1, "", "get_retrieve_file_status"], [26, 1, 1, "", "get_video_fingerprint_chain_list"], [26, 1, 1, "", "retrieve_file"]], "graphai.api.routers.voice": [[27, 1, 1, "", "calculate_audio_fingerprint"], [27, 1, 1, "", "calculate_audio_fingerprint_status"], [27, 1, 1, "", "detect_language"], [27, 1, 1, "", "detect_language_status"], [27, 1, 1, "", "get_audio_fingerprint_chain_list"], [27, 1, 1, "", "priority_test"], [27, 1, 1, "", "transcribe"], [27, 1, 1, "", "transcribe_status"]], "graphai.api.schemas": [[29, 0, 0, "-", "common"], [30, 0, 0, "-", "image"], [31, 0, 0, "-", "ontology"], [32, 0, 0, "-", "scraping"], [33, 0, 0, "-", "summarization"], [34, 0, 0, "-", "text"], [35, 0, 0, "-", "translation"], [36, 0, 0, "-", "video"], [37, 0, 0, "-", "voice"]], "graphai.api.schemas.common": [[29, 2, 1, "", "FileRequest"], [29, 2, 1, "", "TaskIDResponse"], [29, 2, 1, "", "TaskStatusResponse"]], "graphai.api.schemas.common.FileRequest": [[29, 3, 1, "", "token"]], "graphai.api.schemas.common.TaskIDResponse": [[29, 3, 1, "", "task_id"]], "graphai.api.schemas.common.TaskStatusResponse": [[29, 3, 1, "", "task_id"], [29, 3, 1, "", "task_name"], [29, 3, 1, "", "task_result"], [29, 3, 1, "", "task_status"]], "graphai.api.schemas.image": [[30, 2, 1, "", "DetectOCRLanguageResponse"], [30, 2, 1, "", "DetectOCRLanguageTaskResponse"], [30, 2, 1, "", "ExtractTextRequest"], [30, 2, 1, "", "ExtractTextResponse"], [30, 2, 1, "", "ExtractTextTaskResponse"], [30, 2, 1, "", "ImageFingerprintRequest"], [30, 2, 1, "", "ImageFingerprintResponse"], [30, 2, 1, "", "ImageFingerprintTaskResponse"], [30, 2, 1, "", "IndividualOCRResult"]], "graphai.api.schemas.image.DetectOCRLanguageResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.image.DetectOCRLanguageTaskResponse": [[30, 3, 1, "", "fresh"], [30, 3, 1, "", "language"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.image.ExtractTextRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "method"], [30, 3, 1, "", "token"]], "graphai.api.schemas.image.ExtractTextResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ExtractTextTaskResponse": [[30, 3, 1, "", "fresh"], [30, 3, 1, "", "language"], [30, 3, 1, "", "result"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.image.ImageFingerprintRequest": [[30, 3, 1, "", "force"], [30, 3, 1, "", "token"]], "graphai.api.schemas.image.ImageFingerprintResponse": [[30, 3, 1, "", "task_result"]], "graphai.api.schemas.image.ImageFingerprintTaskResponse": [[30, 3, 1, "", "closest_token"], [30, 3, 1, "", "closest_token_origin"], [30, 3, 1, "", "fresh"], [30, 3, 1, "", "result"], [30, 3, 1, "", "successful"]], "graphai.api.schemas.image.IndividualOCRResult": [[30, 3, 1, "", "method"], [30, 3, 1, "", "text"], [30, 3, 1, "", "token"]], "graphai.api.schemas.ontology": [[31, 2, 1, "", "TreeResponse"], [31, 2, 1, "", "TreeResponseElem"]], "graphai.api.schemas.ontology.TreeResponse": [[31, 3, 1, "", "task_result"]], "graphai.api.schemas.ontology.TreeResponseElem": [[31, 3, 1, "", "ChildCategoryID"], [31, 3, 1, "", "ParentCategoryID"]], "graphai.api.schemas.scraping": [[32, 2, 1, "", "ExtractContentRequest"], [32, 2, 1, "", "ExtractContentResponse"], [32, 2, 1, "", "ExtractContentTaskResponse"], [32, 2, 1, "", "GetSublinksRequest"], [32, 2, 1, "", "GetSublinksResponse"], [32, 2, 1, "", "GetSublinksTaskResponse"]], "graphai.api.schemas.scraping.ExtractContentRequest": [[32, 3, 1, "", "headers"], [32, 3, 1, "", "long_patterns"]], "graphai.api.schemas.scraping.ExtractContentResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.ExtractContentTaskResponse": [[32, 3, 1, "", "data"]], "graphai.api.schemas.scraping.GetSublinksRequest": [[32, 3, 1, "", "force"], [32, 3, 1, "", "url"]], "graphai.api.schemas.scraping.GetSublinksResponse": [[32, 3, 1, "", "task_result"]], "graphai.api.schemas.scraping.GetSublinksTaskResponse": [[32, 3, 1, "", "fresh"], [32, 3, 1, "", "status_msg"], [32, 3, 1, "", "sublinks"], [32, 3, 1, "", "successful"], [32, 3, 1, "", "token"], [32, 3, 1, "", "validated_url"]], "graphai.api.schemas.summarization": [[33, 2, 1, "", "SummarizationRequest"], [33, 2, 1, "", "SummarizationResponse"], [33, 2, 1, "", "SummarizationTaskResponse"], [33, 2, 1, "", "SummaryFingerprintRequest"], [33, 2, 1, "", "SummaryFingerprintResponse"], [33, 2, 1, "", "SummaryFingerprintTaskResponse"]], "graphai.api.schemas.summarization.SummarizationRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "len_class"], [33, 3, 1, "", "text"], [33, 3, 1, "", "text_type"], [33, 3, 1, "", "tone"], [33, 3, 1, "", "use_keywords"]], "graphai.api.schemas.summarization.SummarizationResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.SummarizationTaskResponse": [[33, 3, 1, "", "fresh"], [33, 3, 1, "", "successful"], [33, 3, 1, "", "summary"], [33, 3, 1, "", "summary_type"], [33, 3, 1, "", "text_too_large"]], "graphai.api.schemas.summarization.SummaryFingerprintRequest": [[33, 3, 1, "", "force"], [33, 3, 1, "", "len_class"], [33, 3, 1, "", "summary_type"], [33, 3, 1, "", "text"], [33, 3, 1, "", "text_type"], [33, 3, 1, "", "tone"]], "graphai.api.schemas.summarization.SummaryFingerprintResponse": [[33, 3, 1, "", "task_result"]], "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse": [[33, 3, 1, "", "closest_token"], [33, 3, 1, "", "fresh"], [33, 3, 1, "", "result"], [33, 3, 1, "", "successful"]], "graphai.api.schemas.text": [[34, 2, 1, "", "KeywordsRequest"], [34, 2, 1, "", "WikifyRequest"], [34, 2, 1, "", "WikifyResponseElem"]], "graphai.api.schemas.text.KeywordsRequest": [[34, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyRequest": [[34, 3, 1, "", "raw_text"]], "graphai.api.schemas.text.WikifyResponseElem": [[34, 2, 1, "", "Config"], [34, 3, 1, "", "GraphScore"], [34, 3, 1, "", "KeywordsScore"], [34, 3, 1, "", "LevenshteinScore"], [34, 3, 1, "", "MixedScore"], [34, 3, 1, "", "OntologyGlobalScore"], [34, 3, 1, "", "OntologyLocalScore"], [34, 3, 1, "", "PageID"], [34, 3, 1, "", "PageTitle"], [34, 3, 1, "", "SearchScore"]], "graphai.api.schemas.text.WikifyResponseElem.Config": [[34, 3, 1, "", "schema_extra"]], "graphai.api.schemas.translation": [[35, 2, 1, "", "TextDetectLanguageRequest"], [35, 2, 1, "", "TextDetectLanguageResponse"], [35, 2, 1, "", "TextDetectLanguageTaskResponse"], [35, 2, 1, "", "TextFingerprintRequest"], [35, 2, 1, "", "TextFingerprintResponse"], [35, 2, 1, "", "TextFingerprintTaskResponse"], [35, 2, 1, "", "TranslationRequest"], [35, 2, 1, "", "TranslationResponse"], [35, 2, 1, "", "TranslationTaskResponse"]], "graphai.api.schemas.translation.TextDetectLanguageRequest": [[35, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextDetectLanguageResponse": [[35, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextDetectLanguageTaskResponse": [[35, 3, 1, "", "language"], [35, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TextFingerprintRequest": [[35, 3, 1, "", "force"], [35, 3, 1, "", "source"], [35, 3, 1, "", "target"], [35, 3, 1, "", "text"]], "graphai.api.schemas.translation.TextFingerprintResponse": [[35, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TextFingerprintTaskResponse": [[35, 3, 1, "", "closest_token"], [35, 3, 1, "", "fresh"], [35, 3, 1, "", "result"], [35, 3, 1, "", "successful"]], "graphai.api.schemas.translation.TranslationRequest": [[35, 3, 1, "", "force"], [35, 3, 1, "", "source"], [35, 3, 1, "", "target"], [35, 3, 1, "", "text"]], "graphai.api.schemas.translation.TranslationResponse": [[35, 3, 1, "", "task_result"]], "graphai.api.schemas.translation.TranslationTaskResponse": [[35, 3, 1, "", "fresh"], [35, 3, 1, "", "result"], [35, 3, 1, "", "successful"], [35, 3, 1, "", "text_too_large"]], "graphai.api.schemas.video": [[36, 2, 1, "", "DetectSlidesRequest"], [36, 2, 1, "", "DetectSlidesResponse"], [36, 2, 1, "", "DetectSlidesTaskResponse"], [36, 2, 1, "", "ExtractAudioRequest"], [36, 2, 1, "", "ExtractAudioResponse"], [36, 2, 1, "", "ExtractAudioTaskResponse"], [36, 2, 1, "", "RetrieveURLRequest"], [36, 2, 1, "", "RetrieveURLResponse"], [36, 2, 1, "", "RetrieveURLResponseInner"], [36, 2, 1, "", "SlideTokenAndTimeStamp"], [36, 2, 1, "", "VideoFingerprintRequest"], [36, 2, 1, "", "VideoFingerprintResponse"], [36, 2, 1, "", "VideoFingerprintTaskResponse"]], "graphai.api.schemas.video.DetectSlidesRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "force_non_self"], [36, 3, 1, "", "language"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.DetectSlidesResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.video.DetectSlidesTaskResponse": [[36, 3, 1, "", "fresh"], [36, 3, 1, "", "slide_tokens"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.video.ExtractAudioRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "force_non_self"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.ExtractAudioResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.video.ExtractAudioTaskResponse": [[36, 3, 1, "", "duration"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "successful"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.RetrieveURLRequest": [[36, 3, 1, "", "playlist"], [36, 3, 1, "", "url"]], "graphai.api.schemas.video.RetrieveURLResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.video.RetrieveURLResponseInner": [[36, 3, 1, "", "fresh"], [36, 3, 1, "", "successful"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.SlideTokenAndTimeStamp": [[36, 3, 1, "", "timestamp"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintRequest": [[36, 3, 1, "", "force"], [36, 3, 1, "", "token"]], "graphai.api.schemas.video.VideoFingerprintResponse": [[36, 3, 1, "", "task_result"]], "graphai.api.schemas.video.VideoFingerprintTaskResponse": [[36, 3, 1, "", "closest_token"], [36, 3, 1, "", "fresh"], [36, 3, 1, "", "result"], [36, 3, 1, "", "successful"]], "graphai.api.schemas.voice": [[37, 2, 1, "", "AudioDetectLanguageRequest"], [37, 2, 1, "", "AudioDetectLanguageResponse"], [37, 2, 1, "", "AudioDetectLanguageTaskResponse"], [37, 2, 1, "", "AudioFingerprintRequest"], [37, 2, 1, "", "AudioFingerprintResponse"], [37, 2, 1, "", "AudioFingerprintTaskResponse"], [37, 2, 1, "", "AudioTranscriptionRequest"], [37, 2, 1, "", "AudioTranscriptionResponse"], [37, 2, 1, "", "AudioTranscriptionTaskResponse"]], "graphai.api.schemas.voice.AudioDetectLanguageRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioDetectLanguageResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "language"]], "graphai.api.schemas.voice.AudioFingerprintRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "remove_silence"], [37, 3, 1, "", "threshold"], [37, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioFingerprintResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioFingerprintTaskResponse": [[37, 3, 1, "", "closest_token"], [37, 3, 1, "", "closest_token_origin"], [37, 3, 1, "", "duration"], [37, 3, 1, "", "fp_nosilence"], [37, 3, 1, "", "fresh"], [37, 3, 1, "", "result"], [37, 3, 1, "", "successful"]], "graphai.api.schemas.voice.AudioTranscriptionRequest": [[37, 3, 1, "", "force"], [37, 3, 1, "", "force_lang"], [37, 3, 1, "", "token"]], "graphai.api.schemas.voice.AudioTranscriptionResponse": [[37, 3, 1, "", "task_result"]], "graphai.api.schemas.voice.AudioTranscriptionTaskResponse": [[37, 3, 1, "", "fresh"], [37, 3, 1, "", "language"], [37, 3, 1, "", "subtitle_result"], [37, 3, 1, "", "transcript_result"]], "graphai.core": [[39, 0, 0, "-", "common"], [45, 0, 0, "-", "interfaces"], [50, 0, 0, "-", "text"], [53, 0, 0, "-", "utils"]], "graphai.core.common": [[40, 0, 0, "-", "caching"], [41, 0, 0, "-", "graph"], [42, 0, 0, "-", "ontology"], [43, 0, 0, "-", "scraping"], [44, 0, 0, "-", "video"]], "graphai.core.common.caching": [[40, 2, 1, "", "AudioDBCachingManager"], [40, 2, 1, "", "DBCachingManagerBase"], [40, 2, 1, "", "SlideDBCachingManager"], [40, 2, 1, "", "SummaryDBCachingManager"], [40, 2, 1, "", "TextDBCachingManager"], [40, 2, 1, "", "VideoConfig"], [40, 2, 1, "", "VideoDBCachingManager"], [40, 1, 1, "", "add_equality_conditions"], [40, 1, 1, "", "add_non_null_conditions"], [40, 1, 1, "", "add_where_or_and"], [40, 1, 1, "", "create_symlink_between_paths"], [40, 1, 1, "", "delete_file"], [40, 1, 1, "", "escape_single_quotes"], [40, 1, 1, "", "file_exists"], [40, 1, 1, "", "make_sure_path_exists"], [40, 1, 1, "", "surround_with_character"]], "graphai.core.common.caching.AudioDBCachingManager": [[40, 4, 1, "", "init_db"]], "graphai.core.common.caching.DBCachingManagerBase": [[40, 4, 1, "", "delete_cache_rows"], [40, 4, 1, "", "get_all_closest_matches"], [40, 4, 1, "", "get_all_details"], [40, 4, 1, "", "get_cache_count"], [40, 4, 1, "", "get_closest_match"], [40, 4, 1, "", "get_details"], [40, 4, 1, "", "get_details_using_origin"], [40, 4, 1, "", "get_origin"], [40, 4, 1, "", "init_db"], [40, 4, 1, "", "insert_or_update_closest_match"], [40, 4, 1, "", "insert_or_update_details"], [40, 4, 1, "", "update_details_if_exists"]], "graphai.core.common.caching.SlideDBCachingManager": [[40, 4, 1, "", "init_db"]], "graphai.core.common.caching.SummaryDBCachingManager": [[40, 4, 1, "", "init_db"]], "graphai.core.common.caching.TextDBCachingManager": [[40, 4, 1, "", "init_db"]], "graphai.core.common.caching.VideoConfig": [[40, 4, 1, "", "concat_file_path"], [40, 4, 1, "", "create_symlink"], [40, 4, 1, "", "generate_filepath"], [40, 4, 1, "", "get_audio_dir"], [40, 4, 1, "", "get_image_dir"], [40, 4, 1, "", "get_root_dir"], [40, 4, 1, "", "get_transcript_dir"], [40, 4, 1, "", "get_video_dir"]], "graphai.core.common.caching.VideoDBCachingManager": [[40, 4, 1, "", "init_db"]], "graphai.core.common.graph": [[41, 2, 1, "", "ConceptsGraph"]], "graphai.core.common.graph.ConceptsGraph": [[41, 4, 1, "", "add_graph_score"], [41, 4, 1, "", "fetch_from_db"], [41, 4, 1, "", "old_compute_scores"]], "graphai.core.common.ontology": [[42, 2, 1, "", "Ontology"]], "graphai.core.common.ontology.Ontology": [[42, 4, 1, "", "add_categories_category"], [42, 4, 1, "", "add_concepts_category"], [42, 4, 1, "", "add_ontology_scores"], [42, 4, 1, "", "fetch_from_db"], [42, 4, 1, "", "filter_concepts"], [42, 4, 1, "", "get_category_children"], [42, 4, 1, "", "get_category_parent"], [42, 4, 1, "", "get_concept_category"], [42, 4, 1, "", "get_predefined_tree"]], "graphai.core.common.scraping": [[43, 1, 1, "", "check_url"], [43, 1, 1, "", "compare_strings"], [43, 1, 1, "", "create_base_url_token"], [43, 1, 1, "", "extract_text_from_url"], [43, 1, 1, "", "find_consecutive_runs"], [43, 1, 1, "", "find_edge_patterns"], [43, 1, 1, "", "find_repeated_patterns"], [43, 1, 1, "", "find_spaces"], [43, 1, 1, "", "get_sublinks"], [43, 1, 1, "", "initialize_url"], [43, 1, 1, "", "parse_page_type"], [43, 1, 1, "", "process_all_sublinks"], [43, 1, 1, "", "remove_headers"], [43, 1, 1, "", "remove_long_patterns"], [43, 1, 1, "", "shift_to_max_correlation"], [43, 1, 1, "", "string_circular_shift"]], "graphai.core.common.video": [[44, 2, 1, "", "ChatGPTSummarizer"], [44, 2, 1, "", "FingerprintParameters"], [44, 2, 1, "", "GoogleOCRModel"], [44, 2, 1, "", "NLPModels"], [44, 2, 1, "", "TranslationModels"], [44, 2, 1, "", "WhisperTranscriptionModel"], [44, 1, 1, "", "check_ocr_and_hash_thresholds"], [44, 1, 1, "", "compare_decoded_fingerprints"], [44, 1, 1, "", "compare_encoded_fingerprints"], [44, 1, 1, "", "compute_ocr_noise_level"], [44, 1, 1, "", "compute_ocr_threshold"], [44, 1, 1, "", "compute_video_ocr_transitions"], [44, 1, 1, "", "count_tokens_for_openai"], [44, 1, 1, "", "detect_audio_format_and_duration"], [44, 1, 1, "", "detect_text_language"], [44, 1, 1, "", "extract_audio_from_video"], [44, 1, 1, "", "extract_frames"], [44, 1, 1, "", "extract_media_segment"], [44, 1, 1, "", "find_beginning_and_ending_silences"], [44, 1, 1, "", "find_closest_audio_fingerprint_from_list"], [44, 1, 1, "", "find_closest_fingerprint_from_list"], [44, 1, 1, "", "find_closest_image_fingerprint_from_list"], [44, 1, 1, "", "force_dict_to_text"], [44, 1, 1, "", "format_datetime_for_mysql"], [44, 1, 1, "", "frame_hash_similarity"], [44, 1, 1, "", "frame_ocr_distance"], [44, 1, 1, "", "frame_ocr_transition"], [44, 1, 1, "", "generate_frame_sample_indices"], [44, 1, 1, "", "generate_random_token"], [44, 1, 1, "", "generate_src_tgt_dict"], [44, 1, 1, "", "generate_summary_text_token"], [44, 1, 1, "", "generate_summary_type_dict"], [44, 1, 1, "", "generate_symbolic_token"], [44, 1, 1, "", "generate_translation_text_token"], [44, 1, 1, "", "get_current_datetime"], [44, 1, 1, "", "md5_text"], [44, 1, 1, "", "md5_video_or_audio"], [44, 1, 1, "", "perceptual_hash_audio"], [44, 1, 1, "", "perceptual_hash_image"], [44, 1, 1, "", "perceptual_hash_text"], [44, 1, 1, "", "perform_probe"], [44, 1, 1, "", "perform_tesseract_ocr"], [44, 1, 1, "", "read_json_file"], [44, 1, 1, "", "read_json_gz_file"], [44, 1, 1, "", "read_text_file"], [44, 1, 1, "", "read_txt_gz_file"], [44, 1, 1, "", "remove_silence_doublesided"], [44, 1, 1, "", "retrieve_file_from_kaltura"], [44, 1, 1, "", "retrieve_file_from_url"], [44, 1, 1, "", "tesseract_ocr_or_get_cached"], [44, 1, 1, "", "write_json_file"], [44, 1, 1, "", "write_text_file"], [44, 1, 1, "", "write_txt_gz_file"]], "graphai.core.common.video.ChatGPTSummarizer": [[44, 4, 1, "", "establish_connection"], [44, 4, 1, "", "generate_summary"]], "graphai.core.common.video.FingerprintParameters": [[44, 4, 1, "", "get_min_sim_audio"], [44, 4, 1, "", "get_min_sim_image"], [44, 4, 1, "", "get_min_sim_text"], [44, 4, 1, "", "get_min_sim_video"], [44, 4, 1, "", "load_values"]], "graphai.core.common.video.GoogleOCRModel": [[44, 4, 1, "", "establish_connection"], [44, 4, 1, "", "perform_ocr"], [44, 4, 1, "", "wait_for_ocr_results"]], "graphai.core.common.video.NLPModels": [[44, 4, 1, "", "get_nlp_models"]], "graphai.core.common.video.TranslationModels": [[44, 4, 1, "", "load_models"], [44, 4, 1, "", "translate"]], "graphai.core.common.video.WhisperTranscriptionModel": [[44, 4, 1, "", "detect_audio_segment_lang_whisper"], [44, 4, 1, "", "load_model_whisper"], [44, 4, 1, "", "transcribe_audio_whisper"]], "graphai.core.interfaces": [[46, 0, 0, "-", "celery_config"], [47, 0, 0, "-", "db"], [48, 0, 0, "-", "es"], [49, 0, 0, "-", "wp"]], "graphai.core.interfaces.celery_config": [[46, 2, 1, "", "BaseConfig"], [46, 2, 1, "", "DevelopmentConfig"], [46, 1, 1, "", "create_celery"], [46, 1, 1, "", "get_celery_task"], [46, 1, 1, "", "get_settings"], [46, 1, 1, "", "get_task_info"], [46, 1, 1, "", "route_task"]], "graphai.core.interfaces.db": [[47, 2, 1, "", "DB"], [47, 1, 1, "", "quote_value"]], "graphai.core.interfaces.db.DB": [[47, 4, 1, "", "build_conditions_list"], [47, 4, 1, "", "check_if_table_exists"], [47, 4, 1, "", "create_table"], [47, 4, 1, "", "drop_create_insert_table"], [47, 4, 1, "", "drop_table"], [47, 4, 1, "", "execute_query"], [47, 4, 1, "", "find"], [47, 4, 1, "", "find_or_split"], [47, 4, 1, "", "insert_dataframe"]], "graphai.core.interfaces.es": [[48, 2, 1, "", "ES"], [48, 1, 1, "", "es_bool"], [48, 1, 1, "", "es_dis_max"], [48, 1, 1, "", "es_match"], [48, 1, 1, "", "es_multi_match"]], "graphai.core.interfaces.es.ES": [[48, 4, 1, "", "create_index"], [48, 4, 1, "", "delete_index"], [48, 4, 1, "", "index_doc"], [48, 4, 1, "", "indices"], [48, 4, 1, "", "refresh"], [48, 4, 1, "", "search"], [48, 4, 1, "", "search_mediawiki"], [48, 4, 1, "", "search_mediawiki_no_plain"], [48, 4, 1, "", "search_mediawiki_no_rescore"], [48, 4, 1, "", "search_mediawiki_restrict_2"], [48, 4, 1, "", "search_mediawiki_restrict_4"]], "graphai.core.interfaces.wp": [[49, 2, 1, "", "WP"]], "graphai.core.interfaces.wp.WP": [[49, 4, 1, "", "search"]], "graphai.core.text": [[51, 0, 0, "-", "draw"], [52, 0, 0, "-", "keywords"]], "graphai.core.text.draw": [[51, 1, 1, "", "draw_graph"], [51, 1, 1, "", "draw_ontology"]], "graphai.core.text.keywords": [[52, 1, 1, "", "get_keywords"], [52, 1, 1, "", "rake_extract"], [52, 1, 1, "", "word_tokens"]], "graphai.core.utils": [[54, 0, 0, "-", "breadcrumb"], [55, 0, 0, "-", "progress_bar"], [56, 0, 0, "-", "text"], [59, 0, 0, "-", "time"]], "graphai.core.utils.breadcrumb": [[54, 2, 1, "", "Breadcrumb"]], "graphai.core.utils.breadcrumb.Breadcrumb": [[54, 4, 1, "", "indent"], [54, 4, 1, "", "log"], [54, 4, 1, "", "outdent"], [54, 4, 1, "", "report"]], "graphai.core.utils.progress_bar": [[55, 2, 1, "", "ProgressBar"]], "graphai.core.utils.progress_bar.ProgressBar": [[55, 4, 1, "", "reset"], [55, 4, 1, "", "update"]], "graphai.core.utils.text": [[57, 0, 0, "-", "clean"], [58, 0, 0, "-", "io"]], "graphai.core.utils.text.clean": [[57, 2, 1, "", "HTMLCleaner"], [57, 1, 1, "", "normalize"]], "graphai.core.utils.text.clean.HTMLCleaner": [[57, 4, 1, "", "get_data"], [57, 4, 1, "", "handle_data"], [57, 4, 1, "", "handle_endtag"], [57, 4, 1, "", "handle_starttag"]], "graphai.core.utils.text.io": [[58, 2, 1, "", "Colors"], [58, 1, 1, "", "cprint"], [58, 1, 1, "", "log"], [58, 1, 1, "", "mkdir"], [58, 1, 1, "", "pprint"], [58, 1, 1, "", "read_json"], [58, 1, 1, "", "save_json"]], "graphai.core.utils.text.io.Colors": [[58, 3, 1, "", "codes"], [58, 3, 1, "", "pref"], [58, 3, 1, "", "reset"]], "graphai.core.utils.time": [[60, 0, 0, "-", "date"], [61, 0, 0, "-", "stopwatch"]], "graphai.core.utils.time.date": [[60, 1, 1, "", "add_years"], [60, 1, 1, "", "now"], [60, 1, 1, "", "rescale"]], "graphai.core.utils.time.stopwatch": [[61, 2, 1, "", "Stopwatch"]], "graphai.core.utils.time.stopwatch.Stopwatch": [[61, 4, 1, "", "delta"], [61, 4, 1, "", "report"], [61, 4, 1, "", "reset"], [61, 4, 1, "", "tick"], [61, 4, 1, "", "total"]], "graphai.pipelines": [[64, 0, 0, "-", "elasticsearch"], [67, 0, 0, "-", "investment"], [80, 0, 0, "-", "validation"], [84, 0, 0, "-", "visualisation"]], "graphai.pipelines.elasticsearch": [[66, 0, 0, "-", "populate_index"]], "graphai.pipelines.elasticsearch.populate_index": [[66, 1, 1, "", "index_doc"]], "graphai.pipelines.investment": [[68, 0, 0, "-", "aggregate_recent_past"], [69, 0, 0, "-", "check_unit"], [70, 0, 0, "-", "compute_fundraisers_units"], [71, 0, 0, "-", "compute_investors_units"], [72, 0, 0, "-", "compute_investors_units_2"], [73, 0, 0, "-", "compute_jaccard_index"], [74, 0, 0, "-", "concept_configuration"], [75, 0, 0, "-", "create_investments_graph"], [76, 0, 0, "-", "detect_fundraisers_concepts"], [77, 0, 0, "-", "main"], [78, 0, 0, "-", "parameters"], [79, 0, 0, "-", "toy_example"]], "graphai.pipelines.investment.aggregate_recent_past": [[68, 1, 1, "", "aggregate_recent_past"], [68, 1, 1, "", "aggregate_years"], [68, 1, 1, "", "compute_year_coefficients"], [68, 1, 1, "", "normalize_scores"], [68, 1, 1, "", "rescale_scores"]], "graphai.pipelines.investment.check_unit": [[69, 1, 1, "", "main"], [69, 1, 1, "", "show_matchmaking_chart_view"], [69, 1, 1, "", "show_matchmaking_list_view"], [69, 1, 1, "", "show_trends"]], "graphai.pipelines.investment.compute_fundraisers_units": [[70, 1, 1, "", "compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units": [[71, 1, 1, "", "compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2": [[72, 1, 1, "", "compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index": [[73, 1, 1, "", "compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration": [[74, 1, 1, "", "combine"], [74, 1, 1, "", "compute_affinities"], [74, 1, 1, "", "mix"], [74, 1, 1, "", "norm"], [74, 1, 1, "", "normalise"], [74, 1, 1, "", "normalise_graph"]], "graphai.pipelines.investment.create_investments_graph": [[75, 1, 1, "", "create_investments_graph"], [75, 1, 1, "", "derive_yearly_data"], [75, 1, 1, "", "get_frs"], [75, 1, 1, "", "get_frs_fundraisers"], [75, 1, 1, "", "get_fundraisers_concepts"], [75, 1, 1, "", "get_investors_frs"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[76, 1, 1, "", "detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[77, 1, 1, "", "main"]], "graphai.pipelines.investment.parameters": [[78, 1, 1, "", "build_prefix"]], "graphai.pipelines.investment.toy_example": [[79, 1, 1, "", "base"], [79, 1, 1, "", "complete"], [79, 1, 1, "", "path"], [79, 1, 1, "", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"graphai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "packag": [0, 1, 2, 12, 19, 28, 38, 39, 45, 50, 53, 56, 59, 63, 64, 67, 80, 84], "subpackag": [0, 1, 38, 53, 63], "submodul": [0, 1, 2, 12, 19, 28, 39, 45, 50, 53, 56, 59, 64, 67, 80, 84], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "celery_task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "common": [3, 12, 13, 14, 15, 16, 17, 29, 39, 40, 41, 42, 43, 44], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88], "imag": [4, 20, 30], "ontologi": [5, 16, 21, 31, 42], "scrape": [6, 22, 32, 43], "summar": [7, 23, 33], "text": [8, 24, 34, 50, 51, 52, 56, 57, 58], "translat": [9, 25, 35], "video": [10, 17, 26, 36, 44], "voic": [11, 27, 37], "celery_tool": 13, "graph": [14, 41, 85, 86, 87, 88], "log": 15, "main": [18, 77], "router": [19, 20, 21, 22, 23, 24, 25, 26, 27], "schema": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "core": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "cach": 40, "interfac": [45, 46, 47, 48, 49], "celery_config": 46, "db": 47, "e": 48, "wp": 49, "draw": 51, "keyword": 52, "util": [53, 54, 55, 56, 57, 58, 59, 60, 61], "breadcrumb": 54, "progress_bar": 55, "clean": 57, "io": 58, "time": [59, 60, 61], "date": 60, "stopwatch": 61, "definit": 62, "pipelin": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "elasticsearch": [64, 65, 66], "create_index": 65, "populate_index": 66, "invest": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "aggregate_recent_past": 68, "check_unit": 69, "compute_fundraisers_unit": 70, "compute_investors_unit": 71, "compute_investors_units_2": 72, "compute_jaccard_index": 73, "concept_configur": 74, "create_investments_graph": 75, "detect_fundraisers_concept": 76, "paramet": 78, "toy_exampl": 79, "valid": [80, 81, 82, 83], "1_old": 81, "2_new": 82, "3_slide": 83, "visualis": [84, 85, 86, 87, 88], "startup": [85, 86, 87, 88], "2": 86, "3": 87, "4": 88}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"graphai package": [[0, "module-graphai"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [38, "subpackages"], [53, "subpackages"], [63, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [12, "submodules"], [19, "submodules"], [28, "submodules"], [39, "submodules"], [45, "submodules"], [50, "submodules"], [53, "submodules"], [56, "submodules"], [59, "submodules"], [64, "submodules"], [67, "submodules"], [80, "submodules"], [84, "submodules"]], "graphai.api package": [[1, "module-graphai.api"]], "graphai.api.celery_tasks package": [[2, "module-graphai.api.celery_tasks"]], "graphai.api.celery_tasks.common module": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image module": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology module": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping module": [[6, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.summarization module": [[7, "module-graphai.api.celery_tasks.summarization"]], "graphai.api.celery_tasks.text module": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation module": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video module": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice module": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common package": [[12, "module-graphai.api.common"]], "graphai.api.common.celery_tools module": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph module": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log module": [[15, "module-graphai.api.common.log"]], "graphai.api.common.ontology module": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.video module": [[17, "module-graphai.api.common.video"]], "graphai.api.main module": [[18, "module-graphai.api.main"]], "graphai.api.routers package": [[19, "module-graphai.api.routers"]], "graphai.api.routers.image module": [[20, "module-graphai.api.routers.image"]], "graphai.api.routers.ontology module": [[21, "module-graphai.api.routers.ontology"]], "graphai.api.routers.scraping module": [[22, "module-graphai.api.routers.scraping"]], "graphai.api.routers.summarization module": [[23, "module-graphai.api.routers.summarization"]], "graphai.api.routers.text module": [[24, "module-graphai.api.routers.text"]], "graphai.api.routers.translation module": [[25, "module-graphai.api.routers.translation"]], "graphai.api.routers.video module": [[26, "module-graphai.api.routers.video"]], "graphai.api.routers.voice module": [[27, "module-graphai.api.routers.voice"]], "graphai.api.schemas package": [[28, "module-graphai.api.schemas"]], "graphai.api.schemas.common module": [[29, "module-graphai.api.schemas.common"]], "graphai.api.schemas.image module": [[30, "module-graphai.api.schemas.image"]], "graphai.api.schemas.ontology module": [[31, "module-graphai.api.schemas.ontology"]], "graphai.api.schemas.scraping module": [[32, "module-graphai.api.schemas.scraping"]], "graphai.api.schemas.summarization module": [[33, "module-graphai.api.schemas.summarization"]], "graphai.api.schemas.text module": [[34, "module-graphai.api.schemas.text"]], "graphai.api.schemas.translation module": [[35, "module-graphai.api.schemas.translation"]], "graphai.api.schemas.video module": [[36, "module-graphai.api.schemas.video"]], "graphai.api.schemas.voice module": [[37, "module-graphai.api.schemas.voice"]], "graphai.core package": [[38, "module-graphai.core"]], "graphai.core.common package": [[39, "module-graphai.core.common"]], "graphai.core.common.caching module": [[40, "module-graphai.core.common.caching"]], "graphai.core.common.graph module": [[41, "module-graphai.core.common.graph"]], "graphai.core.common.ontology module": [[42, "module-graphai.core.common.ontology"]], "graphai.core.common.scraping module": [[43, "module-graphai.core.common.scraping"]], "graphai.core.common.video module": [[44, "module-graphai.core.common.video"]], "graphai.core.interfaces package": [[45, "module-graphai.core.interfaces"]], "graphai.core.interfaces.celery_config module": [[46, "module-graphai.core.interfaces.celery_config"]], "graphai.core.interfaces.db module": [[47, "module-graphai.core.interfaces.db"]], "graphai.core.interfaces.es module": [[48, "module-graphai.core.interfaces.es"]], "graphai.core.interfaces.wp module": [[49, "module-graphai.core.interfaces.wp"]], "graphai.core.text package": [[50, "module-graphai.core.text"]], "graphai.core.text.draw module": [[51, "module-graphai.core.text.draw"]], "graphai.core.text.keywords module": [[52, "module-graphai.core.text.keywords"]], "graphai.core.utils package": [[53, "module-graphai.core.utils"]], "graphai.core.utils.breadcrumb module": [[54, "module-graphai.core.utils.breadcrumb"]], "graphai.core.utils.progress_bar module": [[55, "module-graphai.core.utils.progress_bar"]], "graphai.core.utils.text package": [[56, "module-graphai.core.utils.text"]], "graphai.core.utils.text.clean module": [[57, "module-graphai.core.utils.text.clean"]], "graphai.core.utils.text.io module": [[58, "module-graphai.core.utils.text.io"]], "graphai.core.utils.time package": [[59, "module-graphai.core.utils.time"]], "graphai.core.utils.time.date module": [[60, "module-graphai.core.utils.time.date"]], "graphai.core.utils.time.stopwatch module": [[61, "module-graphai.core.utils.time.stopwatch"]], "graphai.definitions module": [[62, "module-graphai.definitions"]], "graphai.pipelines package": [[63, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch package": [[64, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.create_index module": [[65, "graphai-pipelines-elasticsearch-create-index-module"]], "graphai.pipelines.elasticsearch.populate_index module": [[66, "module-graphai.pipelines.elasticsearch.populate_index"]], "graphai.pipelines.investment package": [[67, "module-graphai.pipelines.investment"]], "graphai.pipelines.investment.aggregate_recent_past module": [[68, "module-graphai.pipelines.investment.aggregate_recent_past"]], "graphai.pipelines.investment.check_unit module": [[69, "module-graphai.pipelines.investment.check_unit"]], "graphai.pipelines.investment.compute_fundraisers_units module": [[70, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_investors_units module": [[71, "module-graphai.pipelines.investment.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units_2 module": [[72, "module-graphai.pipelines.investment.compute_investors_units_2"]], "graphai.pipelines.investment.compute_jaccard_index module": [[73, "module-graphai.pipelines.investment.compute_jaccard_index"]], "graphai.pipelines.investment.concept_configuration module": [[74, "module-graphai.pipelines.investment.concept_configuration"]], "graphai.pipelines.investment.create_investments_graph module": [[75, "module-graphai.pipelines.investment.create_investments_graph"]], "graphai.pipelines.investment.detect_fundraisers_concepts module": [[76, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main module": [[77, "module-graphai.pipelines.investment.main"]], "graphai.pipelines.investment.parameters module": [[78, "module-graphai.pipelines.investment.parameters"]], "graphai.pipelines.investment.toy_example module": [[79, "module-graphai.pipelines.investment.toy_example"]], "graphai.pipelines.validation package": [[80, "module-graphai.pipelines.validation"]], "graphai.pipelines.validation.1_old module": [[81, "graphai-pipelines-validation-1-old-module"]], "graphai.pipelines.validation.2_new module": [[82, "graphai-pipelines-validation-2-new-module"]], "graphai.pipelines.validation.3_slides module": [[83, "graphai-pipelines-validation-3-slides-module"]], "graphai.pipelines.visualisation package": [[84, "module-graphai.pipelines.visualisation"]], "graphai.pipelines.visualisation.startups-graph module": [[85, "graphai-pipelines-visualisation-startups-graph-module"]], "graphai.pipelines.visualisation.startups-graph-2 module": [[86, "graphai-pipelines-visualisation-startups-graph-2-module"]], "graphai.pipelines.visualisation.startups-graph-3 module": [[87, "graphai-pipelines-visualisation-startups-graph-3-module"]], "graphai.pipelines.visualisation.startups-graph-4 module": [[88, "graphai-pipelines-visualisation-startups-graph-4-module"]]}, "indexentries": {"graphai": [[0, "module-graphai"]], "module": [[0, "module-graphai"], [1, "module-graphai.api"], [2, "module-graphai.api.celery_tasks"], [3, "module-graphai.api.celery_tasks.common"], [4, "module-graphai.api.celery_tasks.image"], [5, "module-graphai.api.celery_tasks.ontology"], [6, "module-graphai.api.celery_tasks.scraping"], [7, "module-graphai.api.celery_tasks.summarization"], [8, "module-graphai.api.celery_tasks.text"], [9, "module-graphai.api.celery_tasks.translation"], [10, "module-graphai.api.celery_tasks.video"], [11, "module-graphai.api.celery_tasks.voice"], [12, "module-graphai.api.common"], [13, "module-graphai.api.common.celery_tools"], [14, "module-graphai.api.common.graph"], [15, "module-graphai.api.common.log"], [16, "module-graphai.api.common.ontology"], [17, "module-graphai.api.common.video"], [18, "module-graphai.api.main"], [19, "module-graphai.api.routers"], [20, "module-graphai.api.routers.image"], [21, "module-graphai.api.routers.ontology"], [22, "module-graphai.api.routers.scraping"], [23, "module-graphai.api.routers.summarization"], [24, "module-graphai.api.routers.text"], [25, "module-graphai.api.routers.translation"], [26, "module-graphai.api.routers.video"], [27, "module-graphai.api.routers.voice"], [28, "module-graphai.api.schemas"], [29, "module-graphai.api.schemas.common"], [30, "module-graphai.api.schemas.image"], [31, "module-graphai.api.schemas.ontology"], [32, "module-graphai.api.schemas.scraping"], [33, "module-graphai.api.schemas.summarization"], [34, "module-graphai.api.schemas.text"], [35, "module-graphai.api.schemas.translation"], [36, "module-graphai.api.schemas.video"], [37, "module-graphai.api.schemas.voice"], [38, "module-graphai.core"], [39, "module-graphai.core.common"], [40, "module-graphai.core.common.caching"], [41, "module-graphai.core.common.graph"], [42, "module-graphai.core.common.ontology"], [43, "module-graphai.core.common.scraping"], [44, "module-graphai.core.common.video"], [45, "module-graphai.core.interfaces"], [46, "module-graphai.core.interfaces.celery_config"], [47, "module-graphai.core.interfaces.db"], [48, "module-graphai.core.interfaces.es"], [49, "module-graphai.core.interfaces.wp"], [50, "module-graphai.core.text"], [51, "module-graphai.core.text.draw"], [52, "module-graphai.core.text.keywords"], [53, "module-graphai.core.utils"], [54, "module-graphai.core.utils.breadcrumb"], [55, "module-graphai.core.utils.progress_bar"], [56, "module-graphai.core.utils.text"], [57, "module-graphai.core.utils.text.clean"], [58, "module-graphai.core.utils.text.io"], [59, "module-graphai.core.utils.time"], [60, "module-graphai.core.utils.time.date"], [61, "module-graphai.core.utils.time.stopwatch"], [62, "module-graphai.definitions"], [63, "module-graphai.pipelines"], [64, "module-graphai.pipelines.elasticsearch"], [66, "module-graphai.pipelines.elasticsearch.populate_index"], [67, "module-graphai.pipelines.investment"], [68, "module-graphai.pipelines.investment.aggregate_recent_past"], [69, "module-graphai.pipelines.investment.check_unit"], [70, "module-graphai.pipelines.investment.compute_fundraisers_units"], [71, "module-graphai.pipelines.investment.compute_investors_units"], [72, "module-graphai.pipelines.investment.compute_investors_units_2"], [73, "module-graphai.pipelines.investment.compute_jaccard_index"], [74, "module-graphai.pipelines.investment.concept_configuration"], [75, "module-graphai.pipelines.investment.create_investments_graph"], [76, "module-graphai.pipelines.investment.detect_fundraisers_concepts"], [77, "module-graphai.pipelines.investment.main"], [78, "module-graphai.pipelines.investment.parameters"], [79, "module-graphai.pipelines.investment.toy_example"], [80, "module-graphai.pipelines.validation"], [84, "module-graphai.pipelines.visualisation"]], "graphai.api": [[1, "module-graphai.api"]], "graphai.api.celery_tasks": [[2, "module-graphai.api.celery_tasks"]], "compute_text_fingerprint_common() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.compute_text_fingerprint_common"]], "fingerprint_lookup_callback() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_callback"]], "fingerprint_lookup_direct() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_direct"]], "fingerprint_lookup_parallel() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_parallel"]], "fingerprint_lookup_retrieve_from_db() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.fingerprint_lookup_retrieve_from_db"]], "format_api_results() (in module graphai.api.celery_tasks.common)": [[3, "graphai.api.celery_tasks.common.format_api_results"]], "graphai.api.celery_tasks.common": [[3, "module-graphai.api.celery_tasks.common"]], "graphai.api.celery_tasks.image": [[4, "module-graphai.api.celery_tasks.image"]], "graphai.api.celery_tasks.ontology": [[5, "module-graphai.api.celery_tasks.ontology"]], "graphai.api.celery_tasks.scraping": [[6, "module-graphai.api.celery_tasks.scraping"]], "graphai.api.celery_tasks.summarization": [[7, "module-graphai.api.celery_tasks.summarization"]], "aggregate_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.aggregate_results"]], "filter_results() (in module graphai.api.celery_tasks.text)": [[8, "graphai.api.celery_tasks.text.filter_results"]], "graphai.api.celery_tasks.text": [[8, "module-graphai.api.celery_tasks.text"]], "graphai.api.celery_tasks.translation": [[9, "module-graphai.api.celery_tasks.translation"]], "graphai.api.celery_tasks.video": [[10, "module-graphai.api.celery_tasks.video"]], "graphai.api.celery_tasks.voice": [[11, "module-graphai.api.celery_tasks.voice"]], "graphai.api.common": [[12, "module-graphai.api.common"]], "get_n_celery_workers() (in module graphai.api.common.celery_tools)": [[13, "graphai.api.common.celery_tools.get_n_celery_workers"]], "graphai.api.common.celery_tools": [[13, "module-graphai.api.common.celery_tools"]], "graphai.api.common.graph": [[14, "module-graphai.api.common.graph"]], "graphai.api.common.log": [[15, "module-graphai.api.common.log"]], "log() (in module graphai.api.common.log)": [[15, "graphai.api.common.log.log"]], "graphai.api.common.ontology": [[16, "module-graphai.api.common.ontology"]], "graphai.api.common.video": [[17, "module-graphai.api.common.video"]], "graphai.api.main": [[18, "module-graphai.api.main"]], "init() (in module graphai.api.main)": [[18, "graphai.api.main.init"]], "redirect_docs() (in module graphai.api.main)": [[18, "graphai.api.main.redirect_docs"]], "graphai.api.routers": [[19, "module-graphai.api.routers"]], "calculate_fingerprint() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.calculate_fingerprint_status"]], "detect_ocr_language_status() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.detect_ocr_language_status"]], "extract_text() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.extract_text"]], "extract_text_status() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.extract_text_status"]], "get_slide_fingerprint_chain_list() (in module graphai.api.routers.image)": [[20, "graphai.api.routers.image.get_slide_fingerprint_chain_list"]], "graphai.api.routers.image": [[20, "module-graphai.api.routers.image"]], "children() (in module graphai.api.routers.ontology)": [[21, "graphai.api.routers.ontology.children"]], "graphai.api.routers.ontology": [[21, "module-graphai.api.routers.ontology"]], "ontology_tree_response_handler() (in module graphai.api.routers.ontology)": [[21, "graphai.api.routers.ontology.ontology_tree_response_handler"]], "parent() (in module graphai.api.routers.ontology)": [[21, "graphai.api.routers.ontology.parent"]], "tree() (in module graphai.api.routers.ontology)": [[21, "graphai.api.routers.ontology.tree"]], "extract_page_content() (in module graphai.api.routers.scraping)": [[22, "graphai.api.routers.scraping.extract_page_content"]], "extract_page_content_status() (in module graphai.api.routers.scraping)": [[22, "graphai.api.routers.scraping.extract_page_content_status"]], "extract_sublinks() (in module graphai.api.routers.scraping)": [[22, "graphai.api.routers.scraping.extract_sublinks"]], "extract_sublinks_status() (in module graphai.api.routers.scraping)": [[22, "graphai.api.routers.scraping.extract_sublinks_status"]], "graphai.api.routers.scraping": [[22, "module-graphai.api.routers.scraping"]], "calculate_fingerprint() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.calculate_fingerprint_status"]], "create_title() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.create_title"]], "get_summary_task_chain() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.get_summary_task_chain"]], "get_summary_text_fingerprint_chain_list() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.get_summary_text_fingerprint_chain_list"]], "graphai.api.routers.summarization": [[23, "module-graphai.api.routers.summarization"]], "summarize() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.summarize"]], "translate_status() (in module graphai.api.routers.summarization)": [[23, "graphai.api.routers.summarization.translate_status"]], "graphai.api.routers.text": [[24, "module-graphai.api.routers.text"]], "keywords() (in module graphai.api.routers.text)": [[24, "graphai.api.routers.text.keywords"]], "priority_test_text() (in module graphai.api.routers.text)": [[24, "graphai.api.routers.text.priority_test_text"]], "wikify() (in module graphai.api.routers.text)": [[24, "graphai.api.routers.text.wikify"]], "wikify_graph_svg() (in module graphai.api.routers.text)": [[24, "graphai.api.routers.text.wikify_graph_svg"]], "wikify_ontology_svg() (in module graphai.api.routers.text)": [[24, "graphai.api.routers.text.wikify_ontology_svg"]], "calculate_fingerprint() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.calculate_fingerprint_status"]], "get_translation_text_fingerprint_chain_list() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.get_translation_text_fingerprint_chain_list"]], "graphai.api.routers.translation": [[25, "module-graphai.api.routers.translation"]], "text_detect_language() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.text_detect_language"]], "text_detect_language_status() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.text_detect_language_status"]], "translate() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.translate"]], "translate_status() (in module graphai.api.routers.translation)": [[25, "graphai.api.routers.translation.translate_status"]], "calculate_fingerprint() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.calculate_fingerprint"]], "calculate_fingerprint_status() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.calculate_fingerprint_status"]], "detect_slides() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.detect_slides"]], "detect_slides_status() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.detect_slides_status"]], "extract_audio() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.extract_audio"]], "extract_audio_status() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.extract_audio_status"]], "get_file() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.get_file"]], "get_retrieve_file_status() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.get_retrieve_file_status"]], "get_video_fingerprint_chain_list() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.get_video_fingerprint_chain_list"]], "graphai.api.routers.video": [[26, "module-graphai.api.routers.video"]], "retrieve_file() (in module graphai.api.routers.video)": [[26, "graphai.api.routers.video.retrieve_file"]], "calculate_audio_fingerprint() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.calculate_audio_fingerprint"]], "calculate_audio_fingerprint_status() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.calculate_audio_fingerprint_status"]], "detect_language() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.detect_language"]], "detect_language_status() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.detect_language_status"]], "get_audio_fingerprint_chain_list() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.get_audio_fingerprint_chain_list"]], "graphai.api.routers.voice": [[27, "module-graphai.api.routers.voice"]], "priority_test() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.priority_test"]], "transcribe() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.transcribe"]], "transcribe_status() (in module graphai.api.routers.voice)": [[27, "graphai.api.routers.voice.transcribe_status"]], "graphai.api.schemas": [[28, "module-graphai.api.schemas"]], "filerequest (class in graphai.api.schemas.common)": [[29, "graphai.api.schemas.common.FileRequest"]], "taskidresponse (class in graphai.api.schemas.common)": [[29, "graphai.api.schemas.common.TaskIDResponse"]], "taskstatusresponse (class in graphai.api.schemas.common)": [[29, "graphai.api.schemas.common.TaskStatusResponse"]], "graphai.api.schemas.common": [[29, "module-graphai.api.schemas.common"]], "task_id (graphai.api.schemas.common.taskidresponse attribute)": [[29, "graphai.api.schemas.common.TaskIDResponse.task_id"]], "task_id (graphai.api.schemas.common.taskstatusresponse attribute)": [[29, "graphai.api.schemas.common.TaskStatusResponse.task_id"]], "task_name (graphai.api.schemas.common.taskstatusresponse attribute)": [[29, "graphai.api.schemas.common.TaskStatusResponse.task_name"]], "task_result (graphai.api.schemas.common.taskstatusresponse attribute)": [[29, "graphai.api.schemas.common.TaskStatusResponse.task_result"]], "task_status (graphai.api.schemas.common.taskstatusresponse attribute)": [[29, "graphai.api.schemas.common.TaskStatusResponse.task_status"]], "token (graphai.api.schemas.common.filerequest attribute)": [[29, "graphai.api.schemas.common.FileRequest.token"]], "detectocrlanguageresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.DetectOCRLanguageResponse"]], "detectocrlanguagetaskresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse"]], "extracttextrequest (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ExtractTextRequest"]], "extracttextresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ExtractTextResponse"]], "extracttexttaskresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ExtractTextTaskResponse"]], "imagefingerprintrequest (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ImageFingerprintRequest"]], "imagefingerprintresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ImageFingerprintResponse"]], "imagefingerprinttaskresponse (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse"]], "individualocrresult (class in graphai.api.schemas.image)": [[30, "graphai.api.schemas.image.IndividualOCRResult"]], "closest_token (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse.closest_token_origin"]], "force (graphai.api.schemas.image.extracttextrequest attribute)": [[30, "graphai.api.schemas.image.ExtractTextRequest.force"]], "force (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintRequest.force"]], "fresh (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[30, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[30, "graphai.api.schemas.image.ExtractTextTaskResponse.fresh"]], "fresh (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse.fresh"]], "graphai.api.schemas.image": [[30, "module-graphai.api.schemas.image"]], "language (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[30, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.language"]], "language (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[30, "graphai.api.schemas.image.ExtractTextTaskResponse.language"]], "method (graphai.api.schemas.image.extracttextrequest attribute)": [[30, "graphai.api.schemas.image.ExtractTextRequest.method"]], "method (graphai.api.schemas.image.individualocrresult attribute)": [[30, "graphai.api.schemas.image.IndividualOCRResult.method"]], "result (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[30, "graphai.api.schemas.image.ExtractTextTaskResponse.result"]], "result (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.image.detectocrlanguagetaskresponse attribute)": [[30, "graphai.api.schemas.image.DetectOCRLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.image.extracttexttaskresponse attribute)": [[30, "graphai.api.schemas.image.ExtractTextTaskResponse.successful"]], "successful (graphai.api.schemas.image.imagefingerprinttaskresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.image.detectocrlanguageresponse attribute)": [[30, "graphai.api.schemas.image.DetectOCRLanguageResponse.task_result"]], "task_result (graphai.api.schemas.image.extracttextresponse attribute)": [[30, "graphai.api.schemas.image.ExtractTextResponse.task_result"]], "task_result (graphai.api.schemas.image.imagefingerprintresponse attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintResponse.task_result"]], "text (graphai.api.schemas.image.individualocrresult attribute)": [[30, "graphai.api.schemas.image.IndividualOCRResult.text"]], "token (graphai.api.schemas.image.extracttextrequest attribute)": [[30, "graphai.api.schemas.image.ExtractTextRequest.token"]], "token (graphai.api.schemas.image.imagefingerprintrequest attribute)": [[30, "graphai.api.schemas.image.ImageFingerprintRequest.token"]], "token (graphai.api.schemas.image.individualocrresult attribute)": [[30, "graphai.api.schemas.image.IndividualOCRResult.token"]], "childcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[31, "graphai.api.schemas.ontology.TreeResponseElem.ChildCategoryID"]], "parentcategoryid (graphai.api.schemas.ontology.treeresponseelem attribute)": [[31, "graphai.api.schemas.ontology.TreeResponseElem.ParentCategoryID"]], "treeresponse (class in graphai.api.schemas.ontology)": [[31, "graphai.api.schemas.ontology.TreeResponse"]], "treeresponseelem (class in graphai.api.schemas.ontology)": [[31, "graphai.api.schemas.ontology.TreeResponseElem"]], "graphai.api.schemas.ontology": [[31, "module-graphai.api.schemas.ontology"]], "task_result (graphai.api.schemas.ontology.treeresponse attribute)": [[31, "graphai.api.schemas.ontology.TreeResponse.task_result"]], "extractcontentrequest (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.ExtractContentRequest"]], "extractcontentresponse (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.ExtractContentResponse"]], "extractcontenttaskresponse (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.ExtractContentTaskResponse"]], "getsublinksrequest (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.GetSublinksRequest"]], "getsublinksresponse (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.GetSublinksResponse"]], "getsublinkstaskresponse (class in graphai.api.schemas.scraping)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse"]], "data (graphai.api.schemas.scraping.extractcontenttaskresponse attribute)": [[32, "graphai.api.schemas.scraping.ExtractContentTaskResponse.data"]], "force (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksRequest.force"]], "fresh (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.fresh"]], "graphai.api.schemas.scraping": [[32, "module-graphai.api.schemas.scraping"]], "headers (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[32, "graphai.api.schemas.scraping.ExtractContentRequest.headers"]], "long_patterns (graphai.api.schemas.scraping.extractcontentrequest attribute)": [[32, "graphai.api.schemas.scraping.ExtractContentRequest.long_patterns"]], "status_msg (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.status_msg"]], "sublinks (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.sublinks"]], "successful (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.successful"]], "task_result (graphai.api.schemas.scraping.extractcontentresponse attribute)": [[32, "graphai.api.schemas.scraping.ExtractContentResponse.task_result"]], "task_result (graphai.api.schemas.scraping.getsublinksresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksResponse.task_result"]], "token (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.token"]], "url (graphai.api.schemas.scraping.getsublinksrequest attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksRequest.url"]], "validated_url (graphai.api.schemas.scraping.getsublinkstaskresponse attribute)": [[32, "graphai.api.schemas.scraping.GetSublinksTaskResponse.validated_url"]], "summarizationrequest (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummarizationRequest"]], "summarizationresponse (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummarizationResponse"]], "summarizationtaskresponse (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse"]], "summaryfingerprintrequest (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest"]], "summaryfingerprintresponse (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintResponse"]], "summaryfingerprinttaskresponse (class in graphai.api.schemas.summarization)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.force"]], "force (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.force"]], "fresh (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse.fresh"]], "fresh (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.fresh"]], "graphai.api.schemas.summarization": [[33, "module-graphai.api.schemas.summarization"]], "len_class (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.len_class"]], "len_class (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.len_class"]], "result (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.result"]], "successful (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse.successful"]], "successful (graphai.api.schemas.summarization.summaryfingerprinttaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintTaskResponse.successful"]], "summary (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse.summary"]], "summary_type (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse.summary_type"]], "summary_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.summary_type"]], "task_result (graphai.api.schemas.summarization.summarizationresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationResponse.task_result"]], "task_result (graphai.api.schemas.summarization.summaryfingerprintresponse attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintResponse.task_result"]], "text (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.text"]], "text (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text"]], "text_too_large (graphai.api.schemas.summarization.summarizationtaskresponse attribute)": [[33, "graphai.api.schemas.summarization.SummarizationTaskResponse.text_too_large"]], "text_type (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.text_type"]], "text_type (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.text_type"]], "tone (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.tone"]], "tone (graphai.api.schemas.summarization.summaryfingerprintrequest attribute)": [[33, "graphai.api.schemas.summarization.SummaryFingerprintRequest.tone"]], "use_keywords (graphai.api.schemas.summarization.summarizationrequest attribute)": [[33, "graphai.api.schemas.summarization.SummarizationRequest.use_keywords"]], "graphscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.GraphScore"]], "keywordsrequest (class in graphai.api.schemas.text)": [[34, "graphai.api.schemas.text.KeywordsRequest"]], "keywordsscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.KeywordsScore"]], "levenshteinscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.LevenshteinScore"]], "mixedscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.MixedScore"]], "ontologyglobalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.OntologyGlobalScore"]], "ontologylocalscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.OntologyLocalScore"]], "pageid (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.PageID"]], "pagetitle (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.PageTitle"]], "searchscore (graphai.api.schemas.text.wikifyresponseelem attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.SearchScore"]], "wikifyrequest (class in graphai.api.schemas.text)": [[34, "graphai.api.schemas.text.WikifyRequest"]], "wikifyresponseelem (class in graphai.api.schemas.text)": [[34, "graphai.api.schemas.text.WikifyResponseElem"]], "wikifyresponseelem.config (class in graphai.api.schemas.text)": [[34, "graphai.api.schemas.text.WikifyResponseElem.Config"]], "graphai.api.schemas.text": [[34, "module-graphai.api.schemas.text"]], "raw_text (graphai.api.schemas.text.keywordsrequest attribute)": [[34, "graphai.api.schemas.text.KeywordsRequest.raw_text"]], "raw_text (graphai.api.schemas.text.wikifyrequest attribute)": [[34, "graphai.api.schemas.text.WikifyRequest.raw_text"]], "schema_extra (graphai.api.schemas.text.wikifyresponseelem.config attribute)": [[34, "graphai.api.schemas.text.WikifyResponseElem.Config.schema_extra"]], "textdetectlanguagerequest (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextDetectLanguageRequest"]], "textdetectlanguageresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextDetectLanguageResponse"]], "textdetectlanguagetaskresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse"]], "textfingerprintrequest (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextFingerprintRequest"]], "textfingerprintresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextFingerprintResponse"]], "textfingerprinttaskresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TextFingerprintTaskResponse"]], "translationrequest (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TranslationRequest"]], "translationresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TranslationResponse"]], "translationtaskresponse (class in graphai.api.schemas.translation)": [[35, "graphai.api.schemas.translation.TranslationTaskResponse"]], "closest_token (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintTaskResponse.closest_token"]], "force (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintRequest.force"]], "force (graphai.api.schemas.translation.translationrequest attribute)": [[35, "graphai.api.schemas.translation.TranslationRequest.force"]], "fresh (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.translation.translationtaskresponse attribute)": [[35, "graphai.api.schemas.translation.TranslationTaskResponse.fresh"]], "graphai.api.schemas.translation": [[35, "module-graphai.api.schemas.translation"]], "language (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.language"]], "result (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintTaskResponse.result"]], "result (graphai.api.schemas.translation.translationtaskresponse attribute)": [[35, "graphai.api.schemas.translation.TranslationTaskResponse.result"]], "source (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintRequest.source"]], "source (graphai.api.schemas.translation.translationrequest attribute)": [[35, "graphai.api.schemas.translation.TranslationRequest.source"]], "successful (graphai.api.schemas.translation.textdetectlanguagetaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextDetectLanguageTaskResponse.successful"]], "successful (graphai.api.schemas.translation.textfingerprinttaskresponse attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintTaskResponse.successful"]], "successful (graphai.api.schemas.translation.translationtaskresponse attribute)": [[35, "graphai.api.schemas.translation.TranslationTaskResponse.successful"]], "target (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintRequest.target"]], "target (graphai.api.schemas.translation.translationrequest attribute)": [[35, "graphai.api.schemas.translation.TranslationRequest.target"]], "task_result (graphai.api.schemas.translation.textdetectlanguageresponse attribute)": [[35, "graphai.api.schemas.translation.TextDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.translation.textfingerprintresponse attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.translation.translationresponse attribute)": [[35, "graphai.api.schemas.translation.TranslationResponse.task_result"]], "text (graphai.api.schemas.translation.textdetectlanguagerequest attribute)": [[35, "graphai.api.schemas.translation.TextDetectLanguageRequest.text"]], "text (graphai.api.schemas.translation.textfingerprintrequest attribute)": [[35, "graphai.api.schemas.translation.TextFingerprintRequest.text"]], "text (graphai.api.schemas.translation.translationrequest attribute)": [[35, "graphai.api.schemas.translation.TranslationRequest.text"]], "text_too_large (graphai.api.schemas.translation.translationtaskresponse attribute)": [[35, "graphai.api.schemas.translation.TranslationTaskResponse.text_too_large"]], "detectslidesrequest (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.DetectSlidesRequest"]], "detectslidesresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.DetectSlidesResponse"]], "detectslidestaskresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.DetectSlidesTaskResponse"]], "extractaudiorequest (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.ExtractAudioRequest"]], "extractaudioresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.ExtractAudioResponse"]], "extractaudiotaskresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.ExtractAudioTaskResponse"]], "retrieveurlrequest (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.RetrieveURLRequest"]], "retrieveurlresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.RetrieveURLResponse"]], "retrieveurlresponseinner (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.RetrieveURLResponseInner"]], "slidetokenandtimestamp (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.SlideTokenAndTimeStamp"]], "videofingerprintrequest (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.VideoFingerprintRequest"]], "videofingerprintresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.VideoFingerprintResponse"]], "videofingerprinttaskresponse (class in graphai.api.schemas.video)": [[36, "graphai.api.schemas.video.VideoFingerprintTaskResponse"]], "closest_token (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintTaskResponse.closest_token"]], "duration (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[36, "graphai.api.schemas.video.ExtractAudioTaskResponse.duration"]], "force (graphai.api.schemas.video.detectslidesrequest attribute)": [[36, "graphai.api.schemas.video.DetectSlidesRequest.force"]], "force (graphai.api.schemas.video.extractaudiorequest attribute)": [[36, "graphai.api.schemas.video.ExtractAudioRequest.force"]], "force (graphai.api.schemas.video.videofingerprintrequest attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintRequest.force"]], "force_non_self (graphai.api.schemas.video.detectslidesrequest attribute)": [[36, "graphai.api.schemas.video.DetectSlidesRequest.force_non_self"]], "force_non_self (graphai.api.schemas.video.extractaudiorequest attribute)": [[36, "graphai.api.schemas.video.ExtractAudioRequest.force_non_self"]], "fresh (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[36, "graphai.api.schemas.video.DetectSlidesTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[36, "graphai.api.schemas.video.ExtractAudioTaskResponse.fresh"]], "fresh (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[36, "graphai.api.schemas.video.RetrieveURLResponseInner.fresh"]], "fresh (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintTaskResponse.fresh"]], "graphai.api.schemas.video": [[36, "module-graphai.api.schemas.video"]], "language (graphai.api.schemas.video.detectslidesrequest attribute)": [[36, "graphai.api.schemas.video.DetectSlidesRequest.language"]], "playlist (graphai.api.schemas.video.retrieveurlrequest attribute)": [[36, "graphai.api.schemas.video.RetrieveURLRequest.playlist"]], "result (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintTaskResponse.result"]], "slide_tokens (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[36, "graphai.api.schemas.video.DetectSlidesTaskResponse.slide_tokens"]], "successful (graphai.api.schemas.video.detectslidestaskresponse attribute)": [[36, "graphai.api.schemas.video.DetectSlidesTaskResponse.successful"]], "successful (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[36, "graphai.api.schemas.video.ExtractAudioTaskResponse.successful"]], "successful (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[36, "graphai.api.schemas.video.RetrieveURLResponseInner.successful"]], "successful (graphai.api.schemas.video.videofingerprinttaskresponse attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.video.detectslidesresponse attribute)": [[36, "graphai.api.schemas.video.DetectSlidesResponse.task_result"]], "task_result (graphai.api.schemas.video.extractaudioresponse attribute)": [[36, "graphai.api.schemas.video.ExtractAudioResponse.task_result"]], "task_result (graphai.api.schemas.video.retrieveurlresponse attribute)": [[36, "graphai.api.schemas.video.RetrieveURLResponse.task_result"]], "task_result (graphai.api.schemas.video.videofingerprintresponse attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintResponse.task_result"]], "timestamp (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[36, "graphai.api.schemas.video.SlideTokenAndTimeStamp.timestamp"]], "token (graphai.api.schemas.video.detectslidesrequest attribute)": [[36, "graphai.api.schemas.video.DetectSlidesRequest.token"]], "token (graphai.api.schemas.video.extractaudiorequest attribute)": [[36, "graphai.api.schemas.video.ExtractAudioRequest.token"]], "token (graphai.api.schemas.video.extractaudiotaskresponse attribute)": [[36, "graphai.api.schemas.video.ExtractAudioTaskResponse.token"]], "token (graphai.api.schemas.video.retrieveurlresponseinner attribute)": [[36, "graphai.api.schemas.video.RetrieveURLResponseInner.token"]], "token (graphai.api.schemas.video.slidetokenandtimestamp attribute)": [[36, "graphai.api.schemas.video.SlideTokenAndTimeStamp.token"]], "token (graphai.api.schemas.video.videofingerprintrequest attribute)": [[36, "graphai.api.schemas.video.VideoFingerprintRequest.token"]], "url (graphai.api.schemas.video.retrieveurlrequest attribute)": [[36, "graphai.api.schemas.video.RetrieveURLRequest.url"]], "audiodetectlanguagerequest (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageRequest"]], "audiodetectlanguageresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageResponse"]], "audiodetectlanguagetaskresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse"]], "audiofingerprintrequest (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioFingerprintRequest"]], "audiofingerprintresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioFingerprintResponse"]], "audiofingerprinttaskresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse"]], "audiotranscriptionrequest (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioTranscriptionRequest"]], "audiotranscriptionresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioTranscriptionResponse"]], "audiotranscriptiontaskresponse (class in graphai.api.schemas.voice)": [[37, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse"]], "closest_token (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token"]], "closest_token_origin (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.closest_token_origin"]], "duration (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.duration"]], "force (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageRequest.force"]], "force (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintRequest.force"]], "force (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionRequest.force"]], "force_lang (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionRequest.force_lang"]], "fp_nosilence (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fp_nosilence"]], "fresh (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.fresh"]], "fresh (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.fresh"]], "graphai.api.schemas.voice": [[37, "module-graphai.api.schemas.voice"]], "language (graphai.api.schemas.voice.audiodetectlanguagetaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageTaskResponse.language"]], "language (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.language"]], "remove_silence (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintRequest.remove_silence"]], "result (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.result"]], "subtitle_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.subtitle_result"]], "successful (graphai.api.schemas.voice.audiofingerprinttaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintTaskResponse.successful"]], "task_result (graphai.api.schemas.voice.audiodetectlanguageresponse attribute)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiofingerprintresponse attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintResponse.task_result"]], "task_result (graphai.api.schemas.voice.audiotranscriptionresponse attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionResponse.task_result"]], "threshold (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintRequest.threshold"]], "token (graphai.api.schemas.voice.audiodetectlanguagerequest attribute)": [[37, "graphai.api.schemas.voice.AudioDetectLanguageRequest.token"]], "token (graphai.api.schemas.voice.audiofingerprintrequest attribute)": [[37, "graphai.api.schemas.voice.AudioFingerprintRequest.token"]], "token (graphai.api.schemas.voice.audiotranscriptionrequest attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionRequest.token"]], "transcript_result (graphai.api.schemas.voice.audiotranscriptiontaskresponse attribute)": [[37, "graphai.api.schemas.voice.AudioTranscriptionTaskResponse.transcript_result"]], "graphai.core": [[38, "module-graphai.core"]], "graphai.core.common": [[39, "module-graphai.core.common"]], "audiodbcachingmanager (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.AudioDBCachingManager"]], "dbcachingmanagerbase (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.DBCachingManagerBase"]], "slidedbcachingmanager (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.SlideDBCachingManager"]], "summarydbcachingmanager (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.SummaryDBCachingManager"]], "textdbcachingmanager (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.TextDBCachingManager"]], "videoconfig (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.VideoConfig"]], "videodbcachingmanager (class in graphai.core.common.caching)": [[40, "graphai.core.common.caching.VideoDBCachingManager"]], "add_equality_conditions() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.add_equality_conditions"]], "add_non_null_conditions() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.add_non_null_conditions"]], "add_where_or_and() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.add_where_or_and"]], "concat_file_path() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.concat_file_path"]], "create_symlink() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.create_symlink"]], "create_symlink_between_paths() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.create_symlink_between_paths"]], "delete_cache_rows() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.delete_cache_rows"]], "delete_file() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.delete_file"]], "escape_single_quotes() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.escape_single_quotes"]], "file_exists() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.file_exists"]], "generate_filepath() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.generate_filepath"]], "get_all_closest_matches() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_all_closest_matches"]], "get_all_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_all_details"]], "get_audio_dir() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.get_audio_dir"]], "get_cache_count() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_cache_count"]], "get_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_closest_match"]], "get_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_details"]], "get_details_using_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_details_using_origin"]], "get_image_dir() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.get_image_dir"]], "get_origin() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.get_origin"]], "get_root_dir() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.get_root_dir"]], "get_transcript_dir() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.get_transcript_dir"]], "get_video_dir() (graphai.core.common.caching.videoconfig method)": [[40, "graphai.core.common.caching.VideoConfig.get_video_dir"]], "graphai.core.common.caching": [[40, "module-graphai.core.common.caching"]], "init_db() (graphai.core.common.caching.audiodbcachingmanager method)": [[40, "graphai.core.common.caching.AudioDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.init_db"]], "init_db() (graphai.core.common.caching.slidedbcachingmanager method)": [[40, "graphai.core.common.caching.SlideDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.summarydbcachingmanager method)": [[40, "graphai.core.common.caching.SummaryDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.textdbcachingmanager method)": [[40, "graphai.core.common.caching.TextDBCachingManager.init_db"]], "init_db() (graphai.core.common.caching.videodbcachingmanager method)": [[40, "graphai.core.common.caching.VideoDBCachingManager.init_db"]], "insert_or_update_closest_match() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_closest_match"]], "insert_or_update_details() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.insert_or_update_details"]], "make_sure_path_exists() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.make_sure_path_exists"]], "surround_with_character() (in module graphai.core.common.caching)": [[40, "graphai.core.common.caching.surround_with_character"]], "update_details_if_exists() (graphai.core.common.caching.dbcachingmanagerbase method)": [[40, "graphai.core.common.caching.DBCachingManagerBase.update_details_if_exists"]], "conceptsgraph (class in graphai.core.common.graph)": [[41, "graphai.core.common.graph.ConceptsGraph"]], "add_graph_score() (graphai.core.common.graph.conceptsgraph method)": [[41, "graphai.core.common.graph.ConceptsGraph.add_graph_score"]], "fetch_from_db() (graphai.core.common.graph.conceptsgraph method)": [[41, "graphai.core.common.graph.ConceptsGraph.fetch_from_db"]], "graphai.core.common.graph": [[41, "module-graphai.core.common.graph"]], "old_compute_scores() (graphai.core.common.graph.conceptsgraph method)": [[41, "graphai.core.common.graph.ConceptsGraph.old_compute_scores"]], "ontology (class in graphai.core.common.ontology)": [[42, "graphai.core.common.ontology.Ontology"]], "add_categories_category() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.add_categories_category"]], "add_concepts_category() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.add_concepts_category"]], "add_ontology_scores() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.add_ontology_scores"]], "fetch_from_db() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.fetch_from_db"]], "filter_concepts() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.filter_concepts"]], "get_category_children() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.get_category_children"]], "get_category_parent() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.get_category_parent"]], "get_concept_category() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.get_concept_category"]], "get_predefined_tree() (graphai.core.common.ontology.ontology method)": [[42, "graphai.core.common.ontology.Ontology.get_predefined_tree"]], "graphai.core.common.ontology": [[42, "module-graphai.core.common.ontology"]], "check_url() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.check_url"]], "compare_strings() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.compare_strings"]], "create_base_url_token() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.create_base_url_token"]], "extract_text_from_url() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.extract_text_from_url"]], "find_consecutive_runs() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.find_consecutive_runs"]], "find_edge_patterns() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.find_edge_patterns"]], "find_repeated_patterns() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.find_repeated_patterns"]], "find_spaces() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.find_spaces"]], "get_sublinks() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.get_sublinks"]], "graphai.core.common.scraping": [[43, "module-graphai.core.common.scraping"]], "initialize_url() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.initialize_url"]], "parse_page_type() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.parse_page_type"]], "process_all_sublinks() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.process_all_sublinks"]], "remove_headers() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.remove_headers"]], "remove_long_patterns() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.remove_long_patterns"]], "shift_to_max_correlation() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.shift_to_max_correlation"]], "string_circular_shift() (in module graphai.core.common.scraping)": [[43, "graphai.core.common.scraping.string_circular_shift"]], "chatgptsummarizer (class in graphai.core.common.video)": [[44, "graphai.core.common.video.ChatGPTSummarizer"]], "fingerprintparameters (class in graphai.core.common.video)": [[44, "graphai.core.common.video.FingerprintParameters"]], "googleocrmodel (class in graphai.core.common.video)": [[44, "graphai.core.common.video.GoogleOCRModel"]], "nlpmodels (class in graphai.core.common.video)": [[44, "graphai.core.common.video.NLPModels"]], "translationmodels (class in graphai.core.common.video)": [[44, "graphai.core.common.video.TranslationModels"]], "whispertranscriptionmodel (class in graphai.core.common.video)": [[44, "graphai.core.common.video.WhisperTranscriptionModel"]], "check_ocr_and_hash_thresholds() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.check_ocr_and_hash_thresholds"]], "compare_decoded_fingerprints() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.compare_decoded_fingerprints"]], "compare_encoded_fingerprints() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.compare_encoded_fingerprints"]], "compute_ocr_noise_level() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.compute_ocr_noise_level"]], "compute_ocr_threshold() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.compute_ocr_threshold"]], "compute_video_ocr_transitions() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.compute_video_ocr_transitions"]], "count_tokens_for_openai() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.count_tokens_for_openai"]], "detect_audio_format_and_duration() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.detect_audio_format_and_duration"]], "detect_audio_segment_lang_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[44, "graphai.core.common.video.WhisperTranscriptionModel.detect_audio_segment_lang_whisper"]], "detect_text_language() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.detect_text_language"]], "establish_connection() (graphai.core.common.video.chatgptsummarizer method)": [[44, "graphai.core.common.video.ChatGPTSummarizer.establish_connection"]], "establish_connection() (graphai.core.common.video.googleocrmodel method)": [[44, "graphai.core.common.video.GoogleOCRModel.establish_connection"]], "extract_audio_from_video() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.extract_audio_from_video"]], "extract_frames() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.extract_frames"]], "extract_media_segment() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.extract_media_segment"]], "find_beginning_and_ending_silences() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.find_beginning_and_ending_silences"]], "find_closest_audio_fingerprint_from_list() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.find_closest_audio_fingerprint_from_list"]], "find_closest_fingerprint_from_list() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.find_closest_fingerprint_from_list"]], "find_closest_image_fingerprint_from_list() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.find_closest_image_fingerprint_from_list"]], "force_dict_to_text() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.force_dict_to_text"]], "format_datetime_for_mysql() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.format_datetime_for_mysql"]], "frame_hash_similarity() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.frame_hash_similarity"]], "frame_ocr_distance() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.frame_ocr_distance"]], "frame_ocr_transition() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.frame_ocr_transition"]], "generate_frame_sample_indices() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_frame_sample_indices"]], "generate_random_token() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_random_token"]], "generate_src_tgt_dict() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_src_tgt_dict"]], "generate_summary() (graphai.core.common.video.chatgptsummarizer method)": [[44, "graphai.core.common.video.ChatGPTSummarizer.generate_summary"]], "generate_summary_text_token() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_summary_text_token"]], "generate_summary_type_dict() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_summary_type_dict"]], "generate_symbolic_token() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_symbolic_token"]], "generate_translation_text_token() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.generate_translation_text_token"]], "get_current_datetime() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.get_current_datetime"]], "get_min_sim_audio() (graphai.core.common.video.fingerprintparameters method)": [[44, "graphai.core.common.video.FingerprintParameters.get_min_sim_audio"]], "get_min_sim_image() (graphai.core.common.video.fingerprintparameters method)": [[44, "graphai.core.common.video.FingerprintParameters.get_min_sim_image"]], "get_min_sim_text() (graphai.core.common.video.fingerprintparameters method)": [[44, "graphai.core.common.video.FingerprintParameters.get_min_sim_text"]], "get_min_sim_video() (graphai.core.common.video.fingerprintparameters method)": [[44, "graphai.core.common.video.FingerprintParameters.get_min_sim_video"]], "get_nlp_models() (graphai.core.common.video.nlpmodels method)": [[44, "graphai.core.common.video.NLPModels.get_nlp_models"]], "graphai.core.common.video": [[44, "module-graphai.core.common.video"]], "load_model_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[44, "graphai.core.common.video.WhisperTranscriptionModel.load_model_whisper"]], "load_models() (graphai.core.common.video.translationmodels method)": [[44, "graphai.core.common.video.TranslationModels.load_models"]], "load_values() (graphai.core.common.video.fingerprintparameters method)": [[44, "graphai.core.common.video.FingerprintParameters.load_values"]], "md5_text() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.md5_text"]], "md5_video_or_audio() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.md5_video_or_audio"]], "perceptual_hash_audio() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.perceptual_hash_audio"]], "perceptual_hash_image() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.perceptual_hash_image"]], "perceptual_hash_text() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.perceptual_hash_text"]], "perform_ocr() (graphai.core.common.video.googleocrmodel method)": [[44, "graphai.core.common.video.GoogleOCRModel.perform_ocr"]], "perform_probe() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.perform_probe"]], "perform_tesseract_ocr() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.perform_tesseract_ocr"]], "read_json_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.read_json_file"]], "read_json_gz_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.read_json_gz_file"]], "read_text_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.read_text_file"]], "read_txt_gz_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.read_txt_gz_file"]], "remove_silence_doublesided() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.remove_silence_doublesided"]], "retrieve_file_from_kaltura() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.retrieve_file_from_kaltura"]], "retrieve_file_from_url() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.retrieve_file_from_url"]], "tesseract_ocr_or_get_cached() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.tesseract_ocr_or_get_cached"]], "transcribe_audio_whisper() (graphai.core.common.video.whispertranscriptionmodel method)": [[44, "graphai.core.common.video.WhisperTranscriptionModel.transcribe_audio_whisper"]], "translate() (graphai.core.common.video.translationmodels method)": [[44, "graphai.core.common.video.TranslationModels.translate"]], "wait_for_ocr_results() (graphai.core.common.video.googleocrmodel method)": [[44, "graphai.core.common.video.GoogleOCRModel.wait_for_ocr_results"]], "write_json_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.write_json_file"]], "write_text_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.write_text_file"]], "write_txt_gz_file() (in module graphai.core.common.video)": [[44, "graphai.core.common.video.write_txt_gz_file"]], "graphai.core.interfaces": [[45, "module-graphai.core.interfaces"]], "baseconfig (class in graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.BaseConfig"]], "developmentconfig (class in graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.DevelopmentConfig"]], "create_celery() (in module graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.create_celery"]], "get_celery_task() (in module graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.get_celery_task"]], "get_settings() (in module graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.get_settings"]], "get_task_info() (in module graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.get_task_info"]], "graphai.core.interfaces.celery_config": [[46, "module-graphai.core.interfaces.celery_config"]], "route_task() (in module graphai.core.interfaces.celery_config)": [[46, "graphai.core.interfaces.celery_config.route_task"]], "db (class in graphai.core.interfaces.db)": [[47, "graphai.core.interfaces.db.DB"]], "build_conditions_list() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.build_conditions_list"]], "check_if_table_exists() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.check_if_table_exists"]], "create_table() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.create_table"]], "drop_create_insert_table() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.drop_create_insert_table"]], "drop_table() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.drop_table"]], "execute_query() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.execute_query"]], "find() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.find"]], "find_or_split() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.find_or_split"]], "graphai.core.interfaces.db": [[47, "module-graphai.core.interfaces.db"]], "insert_dataframe() (graphai.core.interfaces.db.db method)": [[47, "graphai.core.interfaces.db.DB.insert_dataframe"]], "quote_value() (in module graphai.core.interfaces.db)": [[47, "graphai.core.interfaces.db.quote_value"]], "es (class in graphai.core.interfaces.es)": [[48, "graphai.core.interfaces.es.ES"]], "create_index() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.create_index"]], "delete_index() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.delete_index"]], "es_bool() (in module graphai.core.interfaces.es)": [[48, "graphai.core.interfaces.es.es_bool"]], "es_dis_max() (in module graphai.core.interfaces.es)": [[48, "graphai.core.interfaces.es.es_dis_max"]], "es_match() (in module graphai.core.interfaces.es)": [[48, "graphai.core.interfaces.es.es_match"]], "es_multi_match() (in module graphai.core.interfaces.es)": [[48, "graphai.core.interfaces.es.es_multi_match"]], "graphai.core.interfaces.es": [[48, "module-graphai.core.interfaces.es"]], "index_doc() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.index_doc"]], "indices() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.indices"]], "refresh() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.refresh"]], "search() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search"]], "search_mediawiki() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search_mediawiki"]], "search_mediawiki_no_plain() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search_mediawiki_no_plain"]], "search_mediawiki_no_rescore() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search_mediawiki_no_rescore"]], "search_mediawiki_restrict_2() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_2"]], "search_mediawiki_restrict_4() (graphai.core.interfaces.es.es method)": [[48, "graphai.core.interfaces.es.ES.search_mediawiki_restrict_4"]], "wp (class in graphai.core.interfaces.wp)": [[49, "graphai.core.interfaces.wp.WP"]], "graphai.core.interfaces.wp": [[49, "module-graphai.core.interfaces.wp"]], "search() (graphai.core.interfaces.wp.wp method)": [[49, "graphai.core.interfaces.wp.WP.search"]], "graphai.core.text": [[50, "module-graphai.core.text"]], "draw_graph() (in module graphai.core.text.draw)": [[51, "graphai.core.text.draw.draw_graph"]], "draw_ontology() (in module graphai.core.text.draw)": [[51, "graphai.core.text.draw.draw_ontology"]], "graphai.core.text.draw": [[51, "module-graphai.core.text.draw"]], "get_keywords() (in module graphai.core.text.keywords)": [[52, "graphai.core.text.keywords.get_keywords"]], "graphai.core.text.keywords": [[52, "module-graphai.core.text.keywords"]], "rake_extract() (in module graphai.core.text.keywords)": [[52, "graphai.core.text.keywords.rake_extract"]], "word_tokens() (in module graphai.core.text.keywords)": [[52, "graphai.core.text.keywords.word_tokens"]], "graphai.core.utils": [[53, "module-graphai.core.utils"]], "breadcrumb (class in graphai.core.utils.breadcrumb)": [[54, "graphai.core.utils.breadcrumb.Breadcrumb"]], "graphai.core.utils.breadcrumb": [[54, "module-graphai.core.utils.breadcrumb"]], "indent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[54, "graphai.core.utils.breadcrumb.Breadcrumb.indent"]], "log() (graphai.core.utils.breadcrumb.breadcrumb method)": [[54, "graphai.core.utils.breadcrumb.Breadcrumb.log"]], "outdent() (graphai.core.utils.breadcrumb.breadcrumb method)": [[54, "graphai.core.utils.breadcrumb.Breadcrumb.outdent"]], "report() (graphai.core.utils.breadcrumb.breadcrumb method)": [[54, "graphai.core.utils.breadcrumb.Breadcrumb.report"]], "progressbar (class in graphai.core.utils.progress_bar)": [[55, "graphai.core.utils.progress_bar.ProgressBar"]], "graphai.core.utils.progress_bar": [[55, "module-graphai.core.utils.progress_bar"]], "reset() (graphai.core.utils.progress_bar.progressbar method)": [[55, "graphai.core.utils.progress_bar.ProgressBar.reset"]], "update() (graphai.core.utils.progress_bar.progressbar method)": [[55, "graphai.core.utils.progress_bar.ProgressBar.update"]], "graphai.core.utils.text": [[56, "module-graphai.core.utils.text"]], "htmlcleaner (class in graphai.core.utils.text.clean)": [[57, "graphai.core.utils.text.clean.HTMLCleaner"]], "get_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[57, "graphai.core.utils.text.clean.HTMLCleaner.get_data"]], "graphai.core.utils.text.clean": [[57, "module-graphai.core.utils.text.clean"]], "handle_data() (graphai.core.utils.text.clean.htmlcleaner method)": [[57, "graphai.core.utils.text.clean.HTMLCleaner.handle_data"]], "handle_endtag() (graphai.core.utils.text.clean.htmlcleaner method)": [[57, "graphai.core.utils.text.clean.HTMLCleaner.handle_endtag"]], "handle_starttag() (graphai.core.utils.text.clean.htmlcleaner method)": [[57, "graphai.core.utils.text.clean.HTMLCleaner.handle_starttag"]], "normalize() (in module graphai.core.utils.text.clean)": [[57, "graphai.core.utils.text.clean.normalize"]], "colors (class in graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.Colors"]], "codes (graphai.core.utils.text.io.colors attribute)": [[58, "graphai.core.utils.text.io.Colors.codes"]], "cprint() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.cprint"]], "graphai.core.utils.text.io": [[58, "module-graphai.core.utils.text.io"]], "log() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.log"]], "mkdir() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.mkdir"]], "pprint() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.pprint"]], "pref (graphai.core.utils.text.io.colors attribute)": [[58, "graphai.core.utils.text.io.Colors.pref"]], "read_json() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.read_json"]], "reset (graphai.core.utils.text.io.colors attribute)": [[58, "graphai.core.utils.text.io.Colors.reset"]], "save_json() (in module graphai.core.utils.text.io)": [[58, "graphai.core.utils.text.io.save_json"]], "graphai.core.utils.time": [[59, "module-graphai.core.utils.time"]], "add_years() (in module graphai.core.utils.time.date)": [[60, "graphai.core.utils.time.date.add_years"]], "graphai.core.utils.time.date": [[60, "module-graphai.core.utils.time.date"]], "now() (in module graphai.core.utils.time.date)": [[60, "graphai.core.utils.time.date.now"]], "rescale() (in module graphai.core.utils.time.date)": [[60, "graphai.core.utils.time.date.rescale"]], "stopwatch (class in graphai.core.utils.time.stopwatch)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch"]], "delta() (graphai.core.utils.time.stopwatch.stopwatch method)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch.delta"]], "graphai.core.utils.time.stopwatch": [[61, "module-graphai.core.utils.time.stopwatch"]], "report() (graphai.core.utils.time.stopwatch.stopwatch method)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch.report"]], "reset() (graphai.core.utils.time.stopwatch.stopwatch method)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch.reset"]], "tick() (graphai.core.utils.time.stopwatch.stopwatch method)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch.tick"]], "total() (graphai.core.utils.time.stopwatch.stopwatch method)": [[61, "graphai.core.utils.time.stopwatch.Stopwatch.total"]], "graphai.definitions": [[62, "module-graphai.definitions"]], "graphai.pipelines": [[63, "module-graphai.pipelines"]], "graphai.pipelines.elasticsearch": [[64, "module-graphai.pipelines.elasticsearch"]], "graphai.pipelines.elasticsearch.populate_index": [[66, "module-graphai.pipelines.elasticsearch.populate_index"]], "index_doc() (in module graphai.pipelines.elasticsearch.populate_index)": [[66, "graphai.pipelines.elasticsearch.populate_index.index_doc"]], "graphai.pipelines.investment": [[67, "module-graphai.pipelines.investment"]], "aggregate_recent_past() (in module graphai.pipelines.investment.aggregate_recent_past)": [[68, "graphai.pipelines.investment.aggregate_recent_past.aggregate_recent_past"]], "aggregate_years() (in module graphai.pipelines.investment.aggregate_recent_past)": [[68, "graphai.pipelines.investment.aggregate_recent_past.aggregate_years"]], "compute_year_coefficients() (in module graphai.pipelines.investment.aggregate_recent_past)": [[68, "graphai.pipelines.investment.aggregate_recent_past.compute_year_coefficients"]], "graphai.pipelines.investment.aggregate_recent_past": [[68, "module-graphai.pipelines.investment.aggregate_recent_past"]], "normalize_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[68, "graphai.pipelines.investment.aggregate_recent_past.normalize_scores"]], "rescale_scores() (in module graphai.pipelines.investment.aggregate_recent_past)": [[68, "graphai.pipelines.investment.aggregate_recent_past.rescale_scores"]], "graphai.pipelines.investment.check_unit": [[69, "module-graphai.pipelines.investment.check_unit"]], "main() (in module graphai.pipelines.investment.check_unit)": [[69, "graphai.pipelines.investment.check_unit.main"]], "show_matchmaking_chart_view() (in module graphai.pipelines.investment.check_unit)": [[69, "graphai.pipelines.investment.check_unit.show_matchmaking_chart_view"]], "show_matchmaking_list_view() (in module graphai.pipelines.investment.check_unit)": [[69, "graphai.pipelines.investment.check_unit.show_matchmaking_list_view"]], "show_trends() (in module graphai.pipelines.investment.check_unit)": [[69, "graphai.pipelines.investment.check_unit.show_trends"]], "compute_fundraisers_units() (in module graphai.pipelines.investment.compute_fundraisers_units)": [[70, "graphai.pipelines.investment.compute_fundraisers_units.compute_fundraisers_units"]], "graphai.pipelines.investment.compute_fundraisers_units": [[70, "module-graphai.pipelines.investment.compute_fundraisers_units"]], "compute_investors_units() (in module graphai.pipelines.investment.compute_investors_units)": [[71, "graphai.pipelines.investment.compute_investors_units.compute_investors_units"]], "graphai.pipelines.investment.compute_investors_units": [[71, "module-graphai.pipelines.investment.compute_investors_units"]], "compute_investors_units_2() (in module graphai.pipelines.investment.compute_investors_units_2)": [[72, "graphai.pipelines.investment.compute_investors_units_2.compute_investors_units_2"]], "graphai.pipelines.investment.compute_investors_units_2": [[72, "module-graphai.pipelines.investment.compute_investors_units_2"]], "compute_jaccard_index() (in module graphai.pipelines.investment.compute_jaccard_index)": [[73, "graphai.pipelines.investment.compute_jaccard_index.compute_jaccard_index"]], "graphai.pipelines.investment.compute_jaccard_index": [[73, "module-graphai.pipelines.investment.compute_jaccard_index"]], "combine() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.combine"]], "compute_affinities() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.compute_affinities"]], "graphai.pipelines.investment.concept_configuration": [[74, "module-graphai.pipelines.investment.concept_configuration"]], "mix() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.mix"]], "norm() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.norm"]], "normalise() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.normalise"]], "normalise_graph() (in module graphai.pipelines.investment.concept_configuration)": [[74, "graphai.pipelines.investment.concept_configuration.normalise_graph"]], "create_investments_graph() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.create_investments_graph"]], "derive_yearly_data() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.derive_yearly_data"]], "get_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.get_frs"]], "get_frs_fundraisers() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.get_frs_fundraisers"]], "get_fundraisers_concepts() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.get_fundraisers_concepts"]], "get_investors_frs() (in module graphai.pipelines.investment.create_investments_graph)": [[75, "graphai.pipelines.investment.create_investments_graph.get_investors_frs"]], "graphai.pipelines.investment.create_investments_graph": [[75, "module-graphai.pipelines.investment.create_investments_graph"]], "detect_fundraisers_concepts() (in module graphai.pipelines.investment.detect_fundraisers_concepts)": [[76, "graphai.pipelines.investment.detect_fundraisers_concepts.detect_fundraisers_concepts"]], "graphai.pipelines.investment.detect_fundraisers_concepts": [[76, "module-graphai.pipelines.investment.detect_fundraisers_concepts"]], "graphai.pipelines.investment.main": [[77, "module-graphai.pipelines.investment.main"]], "main() (in module graphai.pipelines.investment.main)": [[77, "graphai.pipelines.investment.main.main"]], "build_prefix() (in module graphai.pipelines.investment.parameters)": [[78, "graphai.pipelines.investment.parameters.build_prefix"]], "graphai.pipelines.investment.parameters": [[78, "module-graphai.pipelines.investment.parameters"]], "base() (in module graphai.pipelines.investment.toy_example)": [[79, "graphai.pipelines.investment.toy_example.base"]], "complete() (in module graphai.pipelines.investment.toy_example)": [[79, "graphai.pipelines.investment.toy_example.complete"]], "graphai.pipelines.investment.toy_example": [[79, "module-graphai.pipelines.investment.toy_example"]], "path() (in module graphai.pipelines.investment.toy_example)": [[79, "graphai.pipelines.investment.toy_example.path"]], "random() (in module graphai.pipelines.investment.toy_example)": [[79, "graphai.pipelines.investment.toy_example.random"]], "graphai.pipelines.validation": [[80, "module-graphai.pipelines.validation"]], "graphai.pipelines.visualisation": [[84, "module-graphai.pipelines.visualisation"]]}})